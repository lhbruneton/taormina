var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCard.html",[0,0.139,1,3.056]],["body/interfaces/ActionCard.html",[0,0.274,1,5.701,2,0.987,3,0.153,4,0.153,5,0.153,6,1.955,7,4.012,8,2.256,9,2.194,10,2.889,11,2.266,12,4.338,13,0.319,14,0.577,15,1.924,16,1.924,17,6.321,18,1.239,19,0.528,20,0.012,21,5.001,22,0.424,23,3.453,24,4.158,25,4.012,26,4.74,27,4.427,28,5.058,29,0.275,30,1.612,31,4.139,32,2.654,33,5.058,34,1.713,35,1.713,36,1.769,37,1.828,38,2.439,39,2.439,40,2.915,41,2.915,42,4.427,43,3.734,44,1.258,45,1.185,46,3.453,47,0.009,48,0.009]],["title/components/ActionsComponent.html",[49,1.614,50,2.014]],["body/components/ActionsComponent.html",[3,0.064,4,0.064,5,0.064,9,1.676,10,2.208,13,0.133,16,1.039,19,0.156,20,0.012,22,0.327,29,0.077,31,1.875,44,1.816,47,0.005,48,0.005,49,1.663,50,2.387,51,1.791,52,1.156,53,1.156,54,1.156,55,1.156,56,3.136,57,1.843,58,1.156,59,3.885,60,3.713,61,1.715,62,1.875,63,4.305,64,1.875,65,3.414,66,1.275,67,4.951,68,4.951,69,4.951,70,4.333,71,4.951,72,4.951,73,4.951,74,4.951,75,4.951,76,4.951,77,4.951,78,4.951,79,4.951,80,4.951,81,4.951,82,3.926,83,4.951,84,4.951,85,4.333,86,4.951,87,1.12,88,1.541,89,2.853,90,2.613,91,3.005,92,2.613,93,3.005,94,2.763,95,3.178,96,2.763,97,3.178,98,3.15,99,3.178,100,2.123,101,2.106,102,0.629,103,0.424,104,2.259,105,2.106,106,2.796,107,2.919,108,2.106,109,2.106,110,4.629,111,2.106,112,2.106,113,2.106,114,2.106,115,2.106,116,2.106,117,2.106,118,2.106,119,2.106,120,2.106,121,2.106,122,2.106,123,2.106,124,2.106,125,2.106,126,2.106,127,2.106,128,0.398,129,1.278,130,1.438,131,1.352,132,1.438,133,1.278,134,0.318,135,1.438,136,1.541,137,2.33,138,2.33,139,2.33,140,2.498,141,2.259,142,1.214,143,2.33,144,0.649,145,0.814,146,1.058,147,2.33,148,0.842,149,0.976,150,0.411,151,2.414,152,2.988,153,3.414,154,2.072,155,3.414,156,2.106,157,1.843,158,5.099,159,5.099,160,5.825,161,3.977,162,5.825,163,2.106,164,3.414,165,1.843,166,3.414,167,2.106,168,2.106,169,2.106,170,2.106,171,1.843,172,1.843,173,1.843,174,2.106,175,4.951,176,4.101,177,1.789,178,5.352,179,2.556,180,3.414,181,4.675,182,6.784,183,7.075,184,7.075,185,7.075,186,4.675,187,5.067,188,2.498,189,5.099,190,1.715,191,2.988,192,5.067,193,2.988,194,2.707,195,2.988,196,3.414,197,1.967,198,3.414,199,3.414,200,2.33,201,1.541,202,1.352,203,1.67,204,1.438,205,1.541,206,1.156,207,1.791,208,1.715,209,1.156,210,2.719,211,1.156,212,1.156,213,1.015,214,1.156,215,1.015,216,1.156,217,1.015,218,1.156,219,1.015,220,1.156,221,1.015,222,1.156,223,1.015,224,1.156,225,1.015,226,1.156,227,1.015,228,1.156,229,1.058,230,0.736,231,1.156,232,1.156]],["title/modules/ActionsModule.html",[233,1.862,234,2.851]],["body/modules/ActionsModule.html",[3,0.178,4,0.178,5,0.178,20,0.012,22,0.43,29,0.215,47,0.01,48,0.01,50,4.159,56,2.352,128,1.112,150,1.147,234,5.715,235,2.352,236,2.948,237,5.147,238,5.147,239,5.147,240,3.173,241,2.622,242,2.352,243,5.881,244,3.734,245,3.576,246,3.173,247,3.297,248,2.622,249,5.881,250,2.622]],["title/interfaces/AgglomerationCard.html",[0,0.139,251,2.851]],["body/interfaces/AgglomerationCard.html",[0,0.258,2,0.75,3,0.117,4,0.117,5,0.117,6,1.487,8,1.716,10,2.404,11,1.886,12,3.778,13,0.243,14,0.48,15,1.917,18,1.165,19,0.603,20,0.012,22,0.434,23,2.627,29,0.282,30,1.549,32,2.019,34,2.405,35,2.108,36,1.346,37,1.39,38,1.855,39,1.855,40,2.218,41,3.888,43,3.108,44,1.678,45,0.901,46,2.627,47,0.007,48,0.007,103,1.357,137,4.605,138,2.627,148,3.024,176,3.461,251,5.266,252,3.052,253,4.67,254,5.387,255,5.387,256,3.877,257,5.633,258,3.705,259,3.461,260,2.815,261,3.945,262,3.368,263,3.681,264,3.368,265,3.945,266,3.368,267,3.848,268,2.627,269,2.627,270,2.815,271,3.848,272,6.746,273,3.052,274,4.936,275,4.936,276,3.368,277,3.267,278,4.719,279,4.243,280,5.392,281,4.25,282,3.368,283,2.335,284,4.719,285,3.368,286,3.368,287,5.392,288,3.368,289,3.368,290,3.848,291,3.368,292,3.368,293,3.368]],["title/injectables/AgglomerationPilesCardsEffects.html",[294,0.978,295,3.312]],["body/injectables/AgglomerationPilesCardsEffects.html",[3,0.103,4,0.103,5,0.103,9,1.673,13,0.215,14,0.44,15,1.193,16,0.822,19,0.252,20,0.012,22,0.435,29,0.124,44,1.859,45,1.157,47,0.007,48,0.007,61,3.552,87,1.621,94,4.097,100,1.739,102,1.017,103,0.685,128,0.644,134,1.023,146,1.711,148,2.327,149,1.578,150,0.664,151,2.048,176,4.537,177,1.786,179,1.786,230,2.819,277,2.593,294,1.157,295,3.919,296,1.316,297,1.281,298,4.35,299,4.113,300,1.963,301,2.41,302,2.594,303,5.091,304,1.963,305,5.817,306,2.846,307,3.405,308,1.849,309,1.634,310,4.203,311,4.074,312,4.942,313,3.919,314,5.091,315,3.405,316,4.942,317,3.531,318,2.999,319,2.999,320,2.999,321,2.999,322,2.999,323,2.999,324,2.999,325,2.999,326,2.999,327,3.919,328,2.999,329,2.999,330,2.537,331,2.999,332,3.919,333,3.405,334,3.353,335,4.325,336,4.325,337,4.942,338,2.695,339,4.942,340,4.325,341,5.586,342,5.062,343,2.593,344,3.919,345,4.942,346,4.325,347,3.616,348,3.919,349,4.325,350,4.325,351,3.919,352,4.325,353,3.405,354,1.711,355,0.847,356,1.963,357,2.98,358,2.98,359,2.491,360,2.491,361,0.956,362,1.191,363,2.98,364,1.642,365,2.98,366,1.787]],["title/interfaces/AgglomerationPilesCardsEntity.html",[0,0.139,130,2.851]],["body/interfaces/AgglomerationPilesCardsEntity.html",[0,0.228,2,0.901,3,0.14,4,0.14,5,0.14,8,2.06,13,0.292,14,0.544,15,1.914,18,1.26,19,0.506,20,0.012,22,0.384,29,0.25,30,1.883,44,1.149,45,1.602,47,0.008,48,0.008,94,3.92,130,4.969,134,0.697,144,1.881,145,1.785,147,4.67,230,2.135,251,4.67,257,3.663,282,4.043,288,4.043,292,4.043,297,0.873,298,2.965,299,2.803,314,4.043,367,2.803,368,3.706,369,3.467,370,4.991,371,4.043,372,4.843,373,5.345,374,4.843,375,2.227,376,2.537,377,3.997,378,2.424,379,2.537,380,7.279,381,6.107,382,6.841,383,6.841,384,6.841,385,6.841,386,6.841,387,6.107,388,6.107]],["title/injectables/AgglomerationPilesCardsFacade.html",[95,2.681,294,0.978]],["body/injectables/AgglomerationPilesCardsFacade.html",[3,0.106,4,0.106,5,0.106,9,1.707,13,0.221,14,0.449,15,1.217,16,1.426,18,1.078,19,0.437,20,0.012,22,0.401,29,0.128,47,0.007,48,0.007,66,1.884,87,1.654,95,3.237,100,2.147,102,1.765,103,1.189,106,2.336,107,3.011,128,0.662,134,1.203,144,1.078,150,0.683,151,1.451,176,3.793,190,2.534,230,2.976,294,1.181,296,1.353,297,1.506,298,5.112,299,4.833,301,2.679,302,2.883,306,3.182,308,2.268,309,2.004,335,3.064,338,1.622,355,0.871,360,2.562,361,0.983,363,3.064,364,1.688,365,3.064,366,1.837,370,3.237,372,4.687,373,3.064,374,2.777,375,1.688,389,2.125,390,5.91,391,5.91,392,5.91,393,5.91,394,2.067,395,5.91,396,5.043,397,5.043,398,2.018,399,3.064,400,3.064,401,2.906,402,2.906,403,2.646,404,2.646,405,2.906,406,2.906,407,3.064,408,5.043,409,2.777,410,5.043,411,3.064,412,4.113,413,5.043,414,2.562,415,6.246,416,5.043,417,3.501,418,5.043,419,3.064,420,5.043,421,2.39,422,5.043,423,3.064,424,2.906,425,2.906,426,1.602,427,2.769,428,2.906,429,2.906,430,2.906,431,2.906,432,2.906,433,5.043,434,3.501,435,4.414,436,3.501,437,3.501,438,2.777]],["title/interfaces/AgglomerationPilesCardsPartialState.html",[0,0.139,439,3.312]],["body/interfaces/AgglomerationPilesCardsPartialState.html",[0,0.198,2,0.861,3,0.134,4,0.134,5,0.134,11,1.544,13,0.279,14,0.596,15,1.614,18,0.895,19,0.326,20,0.012,22,0.402,29,0.28,30,1.778,34,1.495,35,1.495,36,1.544,37,1.595,45,1.388,47,0.008,48,0.008,94,4.293,130,3.014,134,0.667,176,3.804,230,2.5,297,0.835,298,2.834,299,2.68,313,3.502,327,3.502,330,2.345,332,3.502,348,3.502,351,3.502,355,1.098,360,3.231,361,1.24,362,1.544,394,2.5,426,2.706,438,3.502,439,4.7,440,1.897,441,6.526,442,5.913,443,2.642,444,2.642,445,2.642,446,1.897,447,2.455,448,2.982,449,3.188,450,2.29,451,3.188,452,1.829,453,2.317,454,2.425,455,3.864,456,5.187,457,3.864,458,2.046,459,2.046,460,2.129,461,3.188,462,3.864,463,3.864,464,3.864,465,5.187,466,2.546,467,3.864,468,3.864]],["title/interfaces/AgglomerationPilesCardsState.html",[0,0.139,442,3.312]],["body/interfaces/AgglomerationPilesCardsState.html",[0,0.192,2,0.823,3,0.128,4,0.128,5,0.128,11,2.01,13,0.267,14,0.582,15,1.578,18,1.144,19,0.519,20,0.012,22,0.394,29,0.277,30,1.746,34,1.43,35,1.43,36,1.476,37,1.526,45,1.346,47,0.008,48,0.008,94,4.196,103,1.412,130,2.882,134,0.638,176,3.69,230,2.454,297,0.798,298,2.71,299,2.562,313,3.348,327,3.348,330,2.302,332,3.348,348,3.348,351,3.348,355,1.05,360,3.089,361,1.186,362,1.476,394,2.711,426,2.693,438,3.348,439,3.348,440,1.814,441,5.032,442,5.566,443,2.564,444,2.564,445,2.915,446,1.814,447,2.382,448,3.378,449,3.457,450,2.927,451,3.457,452,1.749,453,2.215,454,2.319,455,3.695,456,5.032,457,3.695,458,1.956,459,1.956,460,2.036,461,3.13,462,3.695,463,3.695,464,3.695,465,5.032,466,2.47,467,3.695,468,3.695]],["title/components/AppComponent.html",[49,1.614,213,2.014]],["body/components/AppComponent.html",[3,0.147,4,0.191,5,0.147,13,0.306,16,1.69,19,0.358,20,0.012,22,0.354,29,0.177,35,1.639,47,0.009,48,0.009,49,2.705,50,2.335,51,3.305,52,2.659,53,2.659,54,2.659,55,2.659,58,2.659,59,4.616,60,4.41,62,3.459,64,3.459,66,2.353,87,1.588,98,4.608,99,4.758,100,1.716,102,1.446,103,0.974,104,3.305,106,1.75,107,2.519,128,0.916,135,3.306,136,3.543,150,0.944,179,2.276,206,2.659,207,3.305,208,3.165,209,2.659,210,4.071,211,2.659,212,2.659,213,3.574,214,2.659,215,2.335,216,2.659,217,2.335,218,2.659,219,2.335,220,2.659,221,2.335,222,2.659,223,2.335,224,2.659,225,2.335,226,2.659,227,2.335,228,2.659,229,2.433,230,1.693,231,2.659,232,2.659,277,3.305,346,4.238,469,5.552,470,4.842,471,5.513,472,7,473,6.298,474,7.413,475,4.842,476,4.842,477,4.842,478,2.791,479,4.842,480,4.842]],["title/modules/AppModule.html",[233,1.862,481,3.056]],["body/modules/AppModule.html",[3,0.147,4,0.147,5,0.147,20,0.012,22,0.466,29,0.177,47,0.009,48,0.009,104,3.305,128,0.916,133,2.939,134,0.731,135,3.306,150,0.944,213,4.052,235,1.937,236,2.61,240,2.808,241,2.159,242,1.937,244,3.305,246,2.808,250,2.808,354,2.433,355,1.567,466,2.706,469,3.84,481,6.182,482,4.238,483,4.238,484,4.238,485,4.238,486,6.095,487,5.378,488,5.378,489,4.842,490,6.298,491,6.298,492,5.513,493,3.84,494,6.298,495,4.842,496,4.238,497,4.238,498,4.842,499,4.842,500,4.842,501,4.842,502,4.842,503,4.842,504,6.298,505,4.842,506,4.842,507,4.842,508,4.842,509,4.842,510,4.238]],["title/components/BoardComponent.html",[49,1.614,215,2.014]],["body/components/BoardComponent.html",[3,0.144,4,0.144,5,0.144,13,0.301,14,0.555,16,1.504,20,0.012,22,0.35,29,0.174,47,0.008,48,0.008,49,2.683,50,2.296,51,3.269,52,2.615,53,2.615,54,2.615,55,2.615,56,3.058,58,2.615,59,4.605,60,4.4,62,3.422,64,3.422,100,2.007,128,0.9,144,1.467,150,0.929,179,2.251,206,2.615,207,3.269,208,3.131,209,2.615,210,4.045,211,2.615,212,2.615,213,2.296,214,2.615,215,3.552,216,2.615,217,2.296,218,2.615,219,2.296,220,2.615,221,2.296,222,2.615,223,2.296,224,2.615,225,2.296,226,2.615,227,2.296,228,2.615,229,2.393,230,1.665,231,2.615,232,2.615,308,2.341,309,2.069,375,2.296,511,4.762,512,6.231,513,6.944,514,6.231,515,6.864,516,6.864,517,7.842,518,7.842,519,4.762,520,4.762,521,4.762,522,4.762]],["title/modules/BoardModule.html",[233,1.862,523,2.851]],["body/modules/BoardModule.html",[3,0.15,4,0.15,5,0.15,20,0.012,22,0.464,29,0.181,47,0.009,48,0.009,56,1.985,128,0.938,150,0.968,215,4.067,234,5.414,235,1.985,236,2.651,240,2.853,241,2.213,242,1.985,244,3.358,245,3.216,246,2.853,247,2.965,248,2.213,250,2.853,523,5.896,524,4.343,525,4.343,526,4.343,527,4.343,528,5.414,529,5.414,530,5.414,531,5.414,532,5.414,533,4.962,534,4.962,535,4.962,536,4.962,537,4.962,538,4.962,539,4.962,540,4.962]],["title/interfaces/CanPrint.html",[0,0.139,263,2.851]],["body/interfaces/CanPrint.html",[0,0.203,2,1.187,3,0.184,4,0.184,5,0.184,6,2.807,13,0.384,18,1.097,20,0.012,29,0.265,32,3.194,34,2.061,35,2.061,36,2.129,37,2.199,38,2.935,39,2.935,40,3.508,41,4.187,43,3.508,44,1.514,47,0.01,48,0.01,66,2.714,100,1.658,106,2.199,263,5.301,273,6.378,541,4.827,542,6.087,543,5.327,544,6.087]],["title/components/CardBackComponent.html",[49,1.614,217,2.014]],["body/components/CardBackComponent.html",[3,0.107,4,0.107,5,0.107,13,0.222,14,0.45,16,1.221,18,0.894,19,0.544,20,0.012,22,0.284,29,0.128,47,0.007,48,0.007,49,2.289,50,1.695,51,2.654,52,1.931,53,1.931,54,1.931,55,1.931,58,1.931,59,4.377,60,4.182,62,2.777,64,2.777,100,1.947,128,0.665,144,1.083,150,0.686,178,4.422,179,2.85,200,3.452,202,3.246,204,2.4,206,1.931,207,2.654,208,2.541,209,1.931,210,3.557,211,1.931,212,1.931,213,1.695,214,1.931,215,1.695,216,1.931,217,3.123,218,1.931,219,1.695,220,1.931,221,1.695,222,1.931,223,1.695,224,1.931,225,1.695,226,1.931,227,1.695,228,1.931,229,1.767,230,1.229,231,1.931,232,1.931,253,3.733,258,1.931,277,1.845,308,1.607,309,1.42,450,1.954,545,5.027,546,5.388,547,6.426,548,3.515,549,5.184,550,5.923,551,5.057,552,4.165,553,5.668,554,3.7,555,6.478,556,5.184,557,4.426,558,5.184,559,3.077,560,3.515,561,3.515,562,3.515,563,5.184,564,3.515,565,3.515,566,3.515,567,4.74,568,4.426,569,2.572,570,3.515,571,2.788,572,6.255,573,5.669,574,5.669,575,4.426,576,3.515,577,5.976,578,4.426,579,4.011,580,4.011,581,4.011,582,4.426,583,2.788,584,5.184,585,5.669,586,4.426,587,5.669,588,5.669,589,3.077,590,3.077,591,5.184,592,4.426,593,4.426,594,2.788,595,3.077,596,3.077,597,3.077,598,3.077,599,3.077,600,3.077,601,4.426,602,4.426,603,5.137,604,4.426,605,4.426,606,4.426,607,5.057,608,3.077,609,3.077,610,3.515,611,3.515,612,3.515,613,3.515,614,5.057,615,3.515,616,3.077,617,3.077,618,3.077,619,3.515,620,5.057,621,3.515]],["title/modules/CardBackModule.html",[233,1.862,622,2.851]],["body/modules/CardBackModule.html",[3,0.177,4,0.177,5,0.177,20,0.012,22,0.428,29,0.213,47,0.01,48,0.01,128,1.102,150,1.137,179,2.106,217,4.154,235,2.331,236,2.932,240,3.156,241,2.599,242,2.331,244,3.714,245,3.556,246,3.156,247,3.279,248,2.599,250,2.599,545,3.979,546,4.264,547,5.613,622,5.705,623,5.101,624,5.101,625,5.101,626,5.828,627,5.828]],["title/components/CardFrontComponent.html",[49,1.614,219,2.014]],["body/components/CardFrontComponent.html",[3,0.111,4,0.111,5,0.111,13,0.329,14,0.464,16,1.257,18,0.997,19,0.536,20,0.012,22,0.293,29,0.134,47,0.007,48,0.007,49,2.342,50,1.767,51,2.733,52,2.012,53,2.012,54,2.012,55,2.012,58,2.012,59,4.411,60,4.214,62,2.861,64,2.861,100,1.9,128,0.693,144,1.129,150,0.715,178,4.506,179,2.874,200,3.556,202,3.343,206,2.012,207,2.733,208,2.618,209,2.012,210,3.625,211,2.012,212,2.012,213,1.767,214,2.012,215,1.767,216,2.012,217,1.767,218,2.012,219,3.183,220,2.012,221,1.767,222,2.012,223,1.767,224,2.012,225,1.767,226,2.012,227,1.767,228,2.012,229,1.841,230,1.281,231,2.012,232,2.012,253,3.002,277,1.923,281,2.501,308,1.164,309,1.029,450,2.013,545,4.947,546,5.302,553,5.747,554,3.811,556,5.305,557,4.559,558,5.305,563,5.305,567,4.83,568,4.559,569,2.681,572,6.342,573,6.524,574,6.103,575,3.207,577,5.53,578,3.207,579,4.131,580,4.131,581,2.906,582,4.559,583,2.906,584,5.305,585,5.777,586,4.559,587,5.305,588,5.305,589,3.207,590,3.207,591,5.305,592,3.207,593,4.559,594,2.906,595,3.207,596,3.207,597,3.207,598,3.207,599,3.207,600,3.207,601,4.559,602,4.559,603,5.235,604,4.559,605,4.559,606,4.559,608,3.207,609,3.207,616,4.559,617,3.207,618,3.207,628,6.369,629,3.664,630,6.061,631,6.061,632,5.209,633,6.061,634,3.664,635,3.664,636,3.664,637,3.664,638,3.664,639,5.209,640,3.343,641,3.664,642,3.664,643,5.209,644,5.209,645,3.664]],["title/modules/CardFrontModule.html",[233,1.862,646,2.851]],["body/modules/CardFrontModule.html",[3,0.177,4,0.177,5,0.177,20,0.012,22,0.428,29,0.213,47,0.01,48,0.01,128,1.102,150,1.137,179,2.106,219,4.154,235,2.331,236,2.932,240,3.156,241,2.599,242,2.331,244,3.714,245,3.556,246,3.156,247,3.279,248,2.599,250,2.599,545,3.979,546,4.264,628,5.613,646,5.705,647,5.101,648,5.101,649,5.101,650,5.828,651,5.828]],["title/interfaces/Chainable.html",[0,0.139,652,3.056]],["body/interfaces/Chainable.html",[0,0.174,2,1.016,3,0.158,4,0.158,5,0.158,13,0.329,16,1.258,18,1.213,19,0.385,20,0.012,34,1.764,35,1.764,36,1.822,37,1.883,38,2.512,39,2.512,47,0.009,48,0.009,66,2.466,100,1.419,102,1.556,103,1.328,106,1.883,107,2.641,208,2.618,469,5.236,652,4.83,653,6.602,654,4.56,655,6.343,656,5.778,657,6.881,658,4.56,659,6.343,660,4.56,661,4.56,662,4.56,663,3.557,664,3.557,665,4.56,666,6.881,667,4.56,668,4.56,669,4.56,670,4.56,671,4.56,672,5.778,673,4.83,674,6.343,675,4.56,676,4.56,677,4.56,678,4.56,679,4.56,680,4.56,681,4.56]],["title/interfaces/Chainable-1.html",[0,0.116,279,2.008,652,2.55]],["body/interfaces/Chainable-1.html",[0,0.174,2,1.016,3,0.158,4,0.158,5,0.158,13,0.329,16,1.258,18,1.213,19,0.385,20,0.012,34,1.764,35,1.764,36,1.822,37,1.883,38,2.512,39,2.512,47,0.009,48,0.009,66,2.466,100,1.419,102,1.556,103,1.328,106,1.883,107,2.641,179,2.385,208,2.618,652,4.83,654,4.56,655,6.343,656,5.778,657,6.881,658,4.56,659,6.343,660,4.56,661,4.56,662,4.56,663,3.557,664,3.557,665,4.56,666,6.881,667,4.56,668,4.56,669,4.56,670,4.56,671,4.56,672,5.778,673,4.83,674,6.343,675,4.56,676,4.56,677,4.56,678,4.56,679,4.56,680,4.56,681,4.56,682,6.602]],["title/modules/DataAccessGameModule.html",[233,1.862,487,2.851]],["body/modules/DataAccessGameModule.html",[3,0.109,4,0.109,5,0.109,20,0.012,22,0.481,29,0.132,47,0.007,48,0.007,89,4.155,91,4.375,93,4.375,95,4.627,97,4.627,128,0.682,134,0.778,150,0.704,177,3.005,230,2.801,235,1.443,236,2.135,240,2.297,241,1.609,242,1.443,246,2.297,247,2.387,248,1.609,250,1.609,295,2.861,297,0.682,299,3.647,354,1.813,355,0.898,364,3.578,487,5.721,496,3.158,497,3.158,510,4.509,683,3.158,684,3.158,685,4.922,686,4.627,687,4.922,688,3.608,689,3.158,690,2.861,691,6.01,692,3.647,693,7.421,694,7.421,695,3.608,696,2.861,697,6.01,698,3.647,699,3.608,700,2.861,701,6.01,702,3.647,703,3.608,704,6.01,705,3.608,706,2.861,707,3.608,708,3.608,709,3.608,710,3.608,711,2.861,712,6.01,713,3.857,714,3.608,715,2.861,716,6.01,717,3.857,718,3.608,719,2.861,720,6.01,721,3.647,722,3.608,723,3.608,724,3.608,725,3.608,726,7.421,727,3.608,728,3.608,729,3.608,730,3.608,731,3.608,732,3.608,733,3.608,734,3.608,735,3.608,736,3.608,737,3.608,738,3.608,739,3.608,740,3.608,741,3.608,742,3.608,743,3.608,744,3.608,745,3.608,746,3.608,747,3.608]],["title/interfaces/DevelopmentCard.html",[0,0.139,748,2.681]],["body/interfaces/DevelopmentCard.html",[0,0.251,2,0.68,3,0.106,4,0.106,5,0.106,6,1.347,8,1.555,10,2.242,11,1.758,12,3.579,13,0.22,14,0.448,15,1.901,16,1.953,18,1.189,19,0.617,20,0.012,22,0.401,23,2.381,24,3.227,25,2.766,29,0.268,30,1.828,32,1.83,34,1.181,35,1.181,36,1.219,37,1.26,38,1.681,39,1.681,40,2.01,41,3.719,43,2.898,44,1.605,45,1.177,46,2.381,47,0.007,48,0.007,103,1.628,139,2.381,141,3.386,148,2.938,187,3.987,254,5.69,255,5.215,258,4.501,261,3.679,262,3.052,265,3.679,266,3.052,269,2.381,270,2.552,277,2.638,278,3.052,279,3.398,286,3.052,343,1.83,450,3.043,748,4.827,749,2.766,750,6.238,751,6.238,752,6.454,753,6.238,754,6.238,755,6.238,756,5.988,757,3.987,758,3.487,759,3.987,760,3.987,761,3.487,762,3.487,763,6.454,764,3.052,765,4.401,766,3.487,767,3.487,768,3.487,769,3.487,770,3.487,771,3.052,772,3.487,773,3.052,774,3.052,775,5.161,776,3.487,777,3.487,778,3.052,779,4.401,780,3.487,781,3.487,782,3.487,783,3.052]],["title/components/DiceComponent.html",[49,1.614,221,2.014]],["body/components/DiceComponent.html",[3,0.111,4,0.111,5,0.111,13,0.232,14,0.465,16,1.596,19,0.386,20,0.012,22,0.408,29,0.134,36,1.827,44,1.645,47,0.007,48,0.007,49,2.347,50,1.774,51,2.742,52,2.021,53,2.021,54,2.021,55,2.021,56,3.103,58,2.021,59,4.414,60,4.218,62,2.869,64,2.869,66,1.952,87,1.207,88,2.692,89,3.812,98,4.445,99,4.245,100,2.078,102,1.56,103,1.051,104,3.188,106,2.622,107,2.645,110,4.472,128,0.696,133,2.233,134,0.556,135,2.512,136,2.692,142,2.121,144,1.133,145,1.422,146,1.849,148,2.09,149,1.705,150,0.718,151,1.525,152,3.22,154,3.687,179,1.888,200,3.567,201,2.692,202,2.362,203,2.918,204,2.512,205,2.692,206,2.021,207,2.742,208,2.625,209,2.021,210,3.632,211,2.021,212,2.021,213,1.774,214,2.021,215,1.774,216,2.021,217,1.774,218,2.021,219,1.774,220,2.021,221,3.189,222,2.021,223,1.774,224,2.021,225,1.774,226,2.021,227,1.774,228,2.021,229,1.849,230,1.287,231,2.021,232,2.021,308,1.169,309,2.142,343,2.742,478,2.121,640,3.353,784,3.679,785,5.225,786,6.075,787,5.225,788,7.256,789,6.613,790,6.613,791,6.613,792,6.613,793,4.573,794,6.613,795,5.225,796,3.679,797,3.679,798,3.679,799,3.679,800,4.573,801,4.014,802,3.679,803,3.679,804,2.362,805,2.692,806,3.679,807,3.679,808,3.679,809,3.679,810,3.679,811,3.679,812,5.788,813,3.171]],["title/modules/DiceModule.html",[233,1.862,528,2.851]],["body/modules/DiceModule.html",[3,0.176,4,0.176,5,0.176,20,0.012,22,0.445,29,0.212,47,0.01,48,0.01,56,2.321,128,1.097,150,1.132,221,4.152,235,2.321,236,2.924,240,3.147,241,2.587,242,2.321,244,3.704,245,3.547,246,3.147,247,3.27,248,2.587,250,2.587,528,5.699,814,5.078,815,5.078,816,5.078,817,5.802,818,5.802,819,6.177,820,4.601]],["title/injectables/DiscardPileCardsEffects.html",[294,0.978,690,3.312]],["body/injectables/DiscardPileCardsEffects.html",[3,0.12,4,0.12,5,0.12,9,1.86,13,0.25,14,0.489,16,0.954,19,0.292,20,0.012,22,0.428,29,0.144,44,1.847,47,0.007,48,0.007,61,3.731,87,1.296,100,1.859,102,1.18,103,0.795,128,0.747,134,1.083,148,2.869,149,1.832,150,0.771,177,2.941,179,1.985,294,1.287,296,1.527,297,1.356,300,2.278,301,2.617,302,2.816,304,2.278,308,2.007,309,1.774,310,4.39,311,4.279,317,3.833,318,3.335,319,3.335,320,3.335,321,3.335,322,3.335,323,3.335,324,3.335,325,3.335,326,3.335,328,3.335,329,3.335,330,2.435,331,3.335,334,2.278,354,1.986,356,2.278,361,1.11,362,1.382,376,2.171,377,2.171,378,2.074,478,2.278,690,4.358,692,4.353,821,4.604,822,6.316,823,3.953,824,5.495,825,5.495,826,4.358,827,4.358,828,5.495,829,5.495,830,4.358,831,3.46,832,5.495,833,4.358,834,4.66,835,3.135,836,5.495,837,4.358,838,4.358,839,3.46,840,2.892,841,4.02,842,3.46]],["title/interfaces/DiscardPileCardsEntity.html",[0,0.139,843,3.056]],["body/interfaces/DiscardPileCardsEntity.html",[0,0.234,2,1.117,3,0.173,4,0.173,5,0.173,8,2.553,13,0.361,14,0.624,15,2.01,18,1.298,19,0.559,20,0.012,29,0.256,30,1.424,47,0.01,48,0.01,134,0.865,177,2.53,297,1.083,367,3.475,368,3.475,369,3.666,379,3.144,692,3.475,821,3.675,834,3.909,842,5.011,843,5.533,844,4.99]],["title/injectables/DiscardPileCardsFacade.html",[294,0.978,685,2.851]],["body/injectables/DiscardPileCardsFacade.html",[3,0.117,4,0.117,5,0.117,9,1.833,13,0.244,14,0.482,15,0.934,16,1.307,18,0.584,19,0.526,20,0.012,22,0.415,29,0.141,31,2.974,32,2.841,47,0.007,48,0.007,66,2.023,87,1.776,100,2.105,102,1.617,103,1.089,106,2.256,107,2.95,128,0.732,134,1.185,141,2.841,144,1.192,145,1.496,150,0.755,151,1.604,177,3.061,179,1.956,190,2.721,294,1.268,296,1.496,297,1.484,301,2.802,302,3.016,306,3.289,308,2.149,309,1.9,338,1.794,355,0.963,361,1.087,364,1.866,366,2.031,389,2.349,394,2.184,398,2.231,401,3.121,402,3.121,403,2.841,404,2.841,405,3.121,406,3.121,412,4.453,424,3.121,425,3.121,426,1.721,427,2.974,428,3.121,429,3.121,430,3.121,431,3.121,432,3.121,435,2.642,559,4.739,685,3.696,692,4.764,821,5.039,840,2.832,841,4.569,845,6.245,846,6.245,847,6.245,848,5.415,849,3.871,850,5.415,851,3.871,852,3.871,853,3.871,854,5.415,855,3.388,856,5.415,857,3.07,858,5.415,859,3.07,860,5.415,861,3.871,862,3.871,863,3.871,864,3.871,865,3.871,866,3.871]],["title/interfaces/DiscardPileCardsPartialState.html",[0,0.139,867,3.312]],["body/interfaces/DiscardPileCardsPartialState.html",[0,0.203,2,0.893,3,0.139,4,0.139,5,0.139,11,1.601,13,0.289,14,0.607,18,0.917,19,0.338,20,0.012,22,0.408,29,0.283,30,1.804,34,1.55,35,1.55,36,1.601,37,1.654,45,1.072,47,0.008,48,0.008,134,0.691,177,2.621,297,0.866,330,2.379,355,1.139,361,1.286,362,1.601,394,2.536,426,2.677,440,1.967,443,2.707,444,2.707,445,2.707,446,1.967,447,2.515,448,2.041,449,3.234,450,2.346,451,3.234,452,1.897,453,2.402,454,2.514,458,2.121,459,2.121,460,2.207,461,3.234,466,2.608,692,2.779,821,2.939,830,3.631,833,3.631,834,4.65,837,3.631,838,3.631,840,3.35,841,4.442,843,3.35,867,4.815,868,6.606,869,5.985,870,4.007,871,5.313,872,4.007,873,4.007,874,4.007,875,4.007,876,5.313,877,4.007,878,4.007,879,4.007]],["title/interfaces/DiscardPileCardsState.html",[0,0.139,869,3.312]],["body/interfaces/DiscardPileCardsState.html",[0,0.197,2,0.852,3,0.132,4,0.132,5,0.132,11,2.058,13,0.276,14,0.593,18,1.156,19,0.526,20,0.012,22,0.4,29,0.28,30,1.771,34,1.48,35,1.48,36,1.528,37,1.579,45,1.024,47,0.008,48,0.008,103,1.432,134,0.66,177,2.572,297,0.826,330,2.335,355,1.087,361,1.228,362,1.528,394,2.735,426,2.661,440,1.878,443,2.624,444,2.624,445,2.967,446,1.878,447,2.439,448,3.175,449,3.488,450,2.958,451,3.488,452,1.811,453,2.294,454,2.4,458,2.025,459,2.025,460,2.107,461,3.175,466,2.529,692,2.653,821,2.805,830,3.466,833,3.466,834,4.543,837,3.466,838,3.466,840,3.198,841,4.306,843,3.198,867,3.466,868,5.151,869,5.646,870,3.826,871,5.151,872,3.826,873,3.826,874,3.826,875,3.826,876,5.151,877,3.826,878,3.826,879,3.826]],["title/interfaces/Domain.html",[0,0.139,186,3.056]],["body/interfaces/Domain.html",[0,0.253,2,1.119,3,0.174,4,0.174,5,0.174,6,2.217,8,2.559,11,2.452,13,0.362,14,0.624,15,2.011,18,1.191,19,0.518,20,0.012,22,0.394,29,0.256,30,1.428,47,0.01,48,0.01,186,5.539,197,4.04,253,4.741,256,4.063,259,4.859,260,4.199,268,3.917,379,3.151,880,5.738,881,5.738]],["title/components/DomainComponent.html",[49,1.614,223,2.014]],["body/components/DomainComponent.html",[3,0.06,4,0.06,5,0.06,13,0.124,14,0.288,16,1.83,18,1.266,19,0.555,20,0.012,22,0.35,29,0.072,44,1.757,45,1.458,47,0.004,48,0.004,49,1.587,50,0.949,51,1.695,52,2.256,53,1.08,54,1.08,55,1.08,56,3.194,58,1.08,59,3.81,60,3.641,62,1.774,64,1.774,66,1.206,87,1.059,90,1.96,91,2.885,98,3.006,99,3.052,100,2.167,102,2.222,103,1.497,104,1.032,106,2.689,107,2.489,110,4.289,128,0.372,129,1.194,133,1.194,134,0.297,135,1.343,136,1.439,137,3.852,138,3.852,139,3.852,140,4.128,141,2.961,143,3.852,144,1.265,145,0.76,146,0.989,148,0.787,149,0.912,150,0.384,151,1.338,158,1.722,179,1.167,181,2.363,186,3.841,194,2.561,197,1.134,201,1.439,202,1.263,204,1.343,205,1.439,206,1.08,207,1.695,208,1.623,209,1.08,210,2.611,211,1.08,212,1.08,213,0.949,214,1.08,215,0.949,216,1.08,217,0.949,218,1.08,219,0.949,220,1.08,221,0.949,222,1.08,223,2.292,224,1.08,225,0.949,226,1.08,227,0.949,228,1.08,229,0.989,230,0.688,231,1.08,232,1.08,251,2.804,308,1.978,309,1.748,338,2.884,369,1.832,371,1.722,375,0.949,453,1.695,554,2.363,567,2.363,569,1.439,571,2.561,577,1.56,579,1.56,580,1.56,581,1.56,748,2.637,882,1.967,883,4.108,884,3.229,885,4.938,886,4.938,887,3.229,888,3.229,889,3.229,890,2.827,891,4.754,892,3.229,893,3.229,894,3.229,895,3.229,896,3.229,897,3.229,898,3.229,899,2.561,900,3.229,901,2.561,902,2.827,903,2.561,904,4.897,905,1.967,906,3.229,907,1.967,908,3.229,909,1.967,910,3.229,911,1.967,912,3.229,913,1.967,914,2.827,915,1.967,916,1.967,917,1.967,918,1.967,919,3.229,920,1.967,921,2.804,922,1.967,923,1.967,924,3.229,925,1.967,926,3.229,927,1.967,928,3.229,929,1.967,930,3.229,931,1.967,932,2.827,933,1.967,934,3.584,935,3.229,936,1.967,937,2.827,938,1.967,939,2.827,940,1.967,941,2.827,942,1.967,943,1.967,944,1.967,945,1.967,946,1.967,947,1.967,948,1.967,949,1.967,950,1.56,951,1.56,952,1.439,953,3.595,954,1.967,955,1.967,956,1.967,957,3.229,958,1.967,959,3.229,960,3.229,961,1.967,962,1.967,963,1.967,964,1.967,965,2.827,966,3.229,967,3.229,968,1.967,969,1.967,970,1.967,971,3.229,972,1.967,973,1.722,974,1.722,975,1.967,976,1.967,977,1.967,978,1.967,979,1.967,980,1.967,981,1.967,982,1.967,983,3.229,984,3.229,985,3.229,986,7.174,987,2.827,988,4.754,989,3.229,990,2.827,991,4.754,992,2.827,993,3.229,994,3.229,995,2.827,996,6.224,997,6.224,998,3.229,999,2.827,1000,2.827,1001,2.827,1002,3.229,1003,2.827,1004,4.754,1005,1.967]],["title/modules/DomainModule.html",[233,1.862,529,2.851]],["body/modules/DomainModule.html",[3,0.172,4,0.172,5,0.172,20,0.012,22,0.441,29,0.207,47,0.009,48,0.009,56,2.27,128,1.073,150,1.107,179,2.051,223,4.14,235,2.27,236,2.885,240,3.105,241,2.531,242,2.27,244,3.654,245,3.499,246,3.105,247,3.227,248,2.531,250,3.105,529,5.773,1006,4.968,1007,4.968,1008,4.968,1009,4.968,1010,5.266,1011,5.676,1012,5.676,1013,4.968]],["title/injectables/DomainsCardsEffects.html",[294,0.978,696,3.312]],["body/injectables/DomainsCardsEffects.html",[3,0.032,4,0.032,5,0.032,9,0.646,13,0.067,14,0.17,15,1.624,16,0.624,18,0.475,19,0.267,20,0.012,22,0.322,29,0.039,30,1.934,34,1.748,35,1.748,36,1.806,37,1.866,38,2.25,39,2.25,44,1.903,45,0.848,47,0.003,48,0.003,61,2.02,66,0.712,82,2.052,87,0.626,90,2.649,100,1.675,102,0.773,103,0.52,106,0.689,110,1.491,128,0.202,129,2.649,134,0.946,144,0.588,145,0.412,146,0.536,147,1.302,148,2.149,149,0.494,150,0.208,151,2.226,161,2.149,178,2.149,179,0.385,181,1.396,189,0.934,192,3.462,193,4.519,194,4.408,195,5.577,197,1.814,258,0.586,274,1.396,275,1.396,277,3.489,279,2.976,281,1.302,283,3.569,294,0.447,296,0.412,297,1.184,300,0.615,301,1.072,302,1.154,304,0.615,306,1.404,308,1.82,309,1.609,310,4,311,3.962,317,1.57,318,1.158,319,1.158,320,1.158,321,1.158,322,1.158,323,1.158,324,1.158,325,1.158,326,1.158,328,1.158,329,2.44,330,2.424,331,1.158,334,0.615,336,4.084,338,1.677,341,3.821,342,5.337,343,3.489,344,4.875,347,3.194,349,5.89,350,4.084,352,4.084,354,0.536,355,0.265,356,0.615,357,0.934,358,0.934,359,0.78,361,0.3,362,0.373,364,0.514,366,0.56,369,1.946,375,0.514,376,0.586,377,1.421,378,0.56,403,1.001,404,1.652,571,3.188,663,3.185,664,3.185,696,1.513,698,3.802,774,0.934,844,2.44,899,2.052,901,2.052,903,2.052,904,2.149,921,1.766,951,0.846,999,5.38,1000,4.519,1001,3.518,1003,1.669,1014,4.021,1015,2.587,1016,2.587,1017,2.587,1018,2.052,1019,2.587,1020,2.587,1021,2.264,1022,1.907,1023,2.587,1024,2.587,1025,1.067,1026,1.907,1027,1.067,1028,1.067,1029,1.067,1030,1.907,1031,4.315,1032,5.163,1033,1.907,1034,1.907,1035,3.148,1036,3.148,1037,3.148,1038,3.148,1039,4.02,1040,1.907,1041,6.147,1042,1.907,1043,4.664,1044,3.148,1045,6.472,1046,5.013,1047,5.337,1048,5.163,1049,1.067,1050,1.907,1051,2.149,1052,2.149,1053,2.264,1054,1.907,1055,1.067,1056,1.907,1057,3.148,1058,1.907,1059,1.907,1060,4.365,1061,1.669,1062,1.907,1063,1.907,1064,1.907,1065,1.907,1066,1.907,1067,1.907,1068,1.907,1069,1.907,1070,1.907,1071,3.148,1072,3.148,1073,1.907,1074,3.148,1075,1.907,1076,4.084,1077,1.907,1078,1.907,1079,1.907,1080,1.907,1081,1.907,1082,1.907,1083,4.02,1084,1.907,1085,5.163,1086,3.148,1087,3.148,1088,1.907,1089,4.666,1090,1.067,1091,1.907,1092,4.02,1093,1.907,1094,1.907,1095,4.875,1096,3.518,1097,3.518,1098,4.666,1099,1.067,1100,1.907,1101,1.907,1102,4.666,1103,4.666,1104,3.148,1105,3.148,1106,4.666,1107,4.666,1108,1.907,1109,4.666,1110,1.907,1111,3.148,1112,1.907,1113,3.148,1114,1.907,1115,1.067,1116,1.907,1117,2.264,1118,1.907,1119,3.148,1120,1.907,1121,1.907,1122,1.907,1123,1.067,1124,1.907,1125,1.513,1126,2.264,1127,1.067,1128,1.907,1129,1.907,1130,1.907,1131,1.067,1132,1.907,1133,1.907,1134,1.669,1135,1.067,1136,1.907,1137,1.907,1138,1.907,1139,1.907,1140,1.907,1141,1.067,1142,1.907,1143,2.303,1144,1.067,1145,1.067,1146,1.907,1147,1.669,1148,1.067,1149,1.067,1150,0.78,1151,0.934,1152,0.934,1153,1.067,1154,1.067,1155,2.587,1156,1.907,1157,1.907,1158,1.396,1159,1.396,1160,1.396,1161,1.396,1162,1.067]],["title/interfaces/DomainsCardsEntity.html",[0,0.139,129,2.535]],["body/interfaces/DomainsCardsEntity.html",[0,0.182,2,0.591,3,0.092,4,0.092,5,0.092,8,1.352,10,1.352,13,0.191,14,0.404,15,1.697,18,1.168,19,0.534,20,0.012,22,0.306,29,0.199,30,1.353,34,1.536,35,1.027,44,0.754,45,1.832,47,0.006,48,0.006,90,2.754,103,0.913,129,3.921,134,0.458,137,4.798,138,4.411,139,5.045,143,5.34,144,1.398,145,1.172,197,1.748,258,3.314,274,3.32,275,3.32,279,4.959,281,5.282,283,4.977,284,2.654,297,0.573,367,1.84,368,2.754,369,3.024,375,1.462,376,1.665,377,4.651,378,1.591,379,1.665,515,7.019,516,7.019,698,1.84,844,4.115,904,4.629,1014,1.946,1046,5.935,1047,5.86,1051,4.629,1052,4.629,1053,7.413,1076,5.935,1126,2.654,1163,5.124,1164,5.124,1165,4.537,1166,4.537,1167,4.537,1168,4.537,1169,4.537,1170,4.537,1171,4.537,1172,4.537,1173,4.537,1174,4.537,1175,4.537,1176,4.537,1177,4.537,1178,4.537,1179,4.537,1180,4.537,1181,4.537,1182,4.537,1183,3.598,1184,3.598,1185,4.537]],["title/injectables/DomainsCardsFacade.html",[91,2.535,294,0.978]],["body/injectables/DomainsCardsFacade.html",[3,0.064,4,0.064,5,0.064,9,1.154,13,0.133,14,0.303,15,1.405,16,1.838,18,1.273,19,0.572,20,0.012,22,0.344,29,0.077,44,1.641,45,0.492,47,0.005,48,0.005,66,1.273,70,4.327,82,3.921,87,1.117,91,2.068,100,2.204,102,2.274,103,1.532,106,2.876,107,3.267,110,4.426,128,0.397,134,1.226,144,0.647,145,0.812,146,1.056,150,0.41,151,0.87,190,1.712,197,2.477,258,3.196,294,0.798,296,0.812,297,1.535,301,2.048,302,2.204,306,2.595,308,1.366,309,1.526,338,0.973,355,0.523,361,0.59,364,1.013,366,1.102,369,2.423,389,1.275,394,1.503,398,1.211,399,1.839,401,1.964,402,1.964,403,1.788,404,1.788,405,1.964,406,1.964,407,1.839,409,1.666,411,1.839,412,3.354,415,4.756,419,1.839,424,1.964,425,1.964,426,1.083,427,1.871,428,1.964,429,1.964,430,1.964,431,1.964,432,1.964,435,4.184,640,1.348,698,4.927,844,3.874,899,2.702,901,2.702,902,2.982,903,2.702,904,4.734,932,2.982,934,4.908,937,2.982,939,2.982,941,2.982,952,3.617,1014,5.211,1018,2.702,1021,4.327,1051,3.375,1052,3.375,1061,2.982,1150,1.537,1151,1.839,1152,1.839,1163,4.861,1186,4.298,1187,4.298,1188,4.944,1189,4.298,1190,3.407,1191,3.407,1192,3.407,1193,3.407,1194,3.407,1195,3.407,1196,4.298,1197,3.407,1198,3.407,1199,4.327,1200,4.298,1201,3.407,1202,4.944,1203,2.101,1204,2.101,1205,2.101,1206,2.101,1207,3.407,1208,2.101,1209,3.407,1210,2.101,1211,3.407,1212,2.101,1213,3.407,1214,2.101,1215,3.407,1216,2.101,1217,3.407,1218,2.101,1219,2.101,1220,2.101,1221,3.407,1222,2.101,1223,2.101,1224,3.407,1225,2.101,1226,3.407,1227,3.617,1228,2.101,1229,1.839,1230,2.101,1231,2.101,1232,3.407,1233,2.101,1234,2.101,1235,2.101,1236,2.101,1237,2.101,1238,3.407,1239,2.101,1240,3.407,1241,1.666,1242,1.839,1243,2.101,1244,2.101,1245,2.101,1246,2.101,1247,2.101,1248,2.101,1249,2.101,1250,2.101,1251,2.101,1252,2.101,1253,2.101,1254,2.101,1255,2.101,1256,2.101,1257,2.101,1258,2.101,1259,2.101,1260,2.101,1261,2.101,1262,2.101,1263,2.101,1264,2.101,1265,2.101,1266,2.101,1267,2.101]],["title/interfaces/DomainsCardsPartialState.html",[0,0.139,1268,3.312]],["body/interfaces/DomainsCardsPartialState.html",[0,0.176,2,0.728,3,0.113,4,0.113,5,0.113,11,1.305,13,0.236,14,0.47,15,1.606,18,0.797,19,0.276,20,0.012,22,0.374,29,0.266,30,1.937,44,1.313,45,1.645,47,0.007,48,0.007,90,3.716,129,2.265,134,0.564,161,2.548,197,3.042,277,1.958,297,0.706,330,2.303,343,1.958,355,0.928,361,1.048,362,1.305,394,2.327,426,2.715,440,1.603,443,2.353,444,2.353,445,2.353,446,1.603,447,2.187,448,2.73,449,2.968,450,2.039,451,2.968,452,1.546,461,2.968,466,2.267,698,2.265,1014,2.395,1043,2.96,1051,3.603,1052,3.603,1095,2.96,1125,2.96,1143,2.731,1150,2.731,1158,2.731,1159,2.731,1160,2.731,1161,2.731,1268,4.185,1269,6.146,1270,5.569,1271,5.825,1272,3.266,1273,4.619,1274,3.266,1275,3.266,1276,3.266,1277,3.266,1278,3.266,1279,4.619,1280,3.266,1281,3.266,1282,3.266,1283,3.266,1284,3.266,1285,3.266,1286,3.266,1287,3.266,1288,5.359,1289,3.266,1290,5.825,1291,3.266,1292,3.266,1293,3.266,1294,3.266,1295,5.825,1296,3.266,1297,5.825,1298,3.266,1299,4.619,1300,3.266,1301,3.266,1302,4.619,1303,3.266,1304,3.266,1305,2.731,1306,3.266,1307,3.266,1308,3.266,1309,3.266,1310,3.266,1311,3.266]],["title/interfaces/DomainsCardsState.html",[0,0.139,1270,3.312]],["body/interfaces/DomainsCardsState.html",[0,0.172,2,0.703,3,0.109,4,0.109,5,0.109,11,1.8,13,0.227,14,0.458,15,1.581,18,1.088,19,0.484,20,0.012,22,0.368,29,0.263,30,1.921,44,1.28,45,1.623,47,0.007,48,0.007,90,3.645,103,1.035,129,2.187,134,0.544,161,2.46,197,2.967,277,1.891,297,0.681,330,2.272,343,1.891,355,0.896,361,1.012,362,1.26,394,2.594,426,2.706,440,1.548,443,2.295,444,2.295,445,2.678,446,1.548,447,2.133,448,2.678,449,3.308,450,2.784,451,3.308,452,1.493,461,2.921,466,2.211,698,2.187,1014,2.313,1043,2.857,1051,3.514,1052,3.514,1095,2.857,1125,2.857,1143,2.636,1150,2.636,1158,2.636,1159,2.636,1160,2.636,1161,2.636,1268,2.857,1269,4.505,1270,5.195,1271,6.492,1272,3.153,1273,4.505,1274,3.153,1275,3.153,1276,3.153,1277,3.153,1278,3.153,1279,4.505,1280,3.153,1281,3.153,1282,3.153,1283,3.153,1284,3.153,1285,3.153,1286,3.153,1287,3.153,1288,5.256,1289,3.153,1290,5.734,1291,3.153,1292,3.153,1293,3.153,1294,3.153,1295,5.734,1296,3.153,1297,5.734,1298,3.153,1299,4.505,1300,3.153,1301,3.153,1302,4.505,1303,3.153,1304,3.153,1305,2.636,1306,3.153,1307,3.153,1308,3.153,1309,3.153,1310,3.153,1311,3.153]],["title/interfaces/EventCard.html",[0,0.139,1312,3.056]],["body/interfaces/EventCard.html",[0,0.274,2,0.987,3,0.153,4,0.153,5,0.153,6,1.955,8,2.256,10,2.889,11,2.266,12,4.338,13,0.319,14,0.577,15,1.924,16,1.924,17,6.321,18,1.239,19,0.528,20,0.012,22,0.424,23,3.453,24,4.158,25,4.012,26,4.74,27,4.427,29,0.275,30,1.612,32,2.654,34,1.713,35,1.713,36,1.769,37,1.828,38,2.439,39,2.439,40,2.915,41,2.915,43,3.734,44,1.258,45,1.185,46,3.453,47,0.009,48,0.009,748,3.247,813,3.932,1312,5.514,1313,4.012,1314,6.179,1315,5.058,1316,7.537,1317,5.058,1318,4.427]],["title/injectables/EventsPileCardsEffects.html",[294,0.978,700,3.312]],["body/injectables/EventsPileCardsEffects.html",[3,0.12,4,0.12,5,0.12,9,1.86,13,0.25,14,0.489,16,0.954,19,0.292,20,0.012,22,0.436,29,0.144,44,1.847,47,0.007,48,0.007,61,3.731,87,1.802,100,1.859,102,1.18,103,0.795,128,0.747,134,1.083,148,2.869,149,1.832,150,0.771,151,2.277,177,2.963,294,1.287,296,1.527,297,1.356,300,2.278,301,2.617,302,2.816,304,2.278,306,3.044,308,2.007,309,1.774,310,4.39,311,4.279,317,3.833,318,3.335,319,3.335,320,3.335,321,3.335,322,3.335,323,3.335,324,3.335,325,3.335,326,3.335,328,3.335,329,3.335,330,2.435,331,3.335,334,2.278,354,1.986,355,0.983,356,2.278,361,1.11,362,1.382,364,1.906,700,4.358,702,4.353,831,3.46,835,3.135,839,3.46,1319,4.604,1320,6.316,1321,6.316,1322,3.953,1323,5.495,1324,4.358,1325,4.766,1326,6.278,1327,5.495,1328,4.358,1329,5.495,1330,5.495,1331,4.358,1332,2.892,1333,4.621,1334,3.46]],["title/interfaces/EventsPileCardsEntity.html",[0,0.139,1335,2.681]],["body/interfaces/EventsPileCardsEntity.html",[0,0.243,2,1.024,3,0.159,4,0.159,5,0.159,8,2.342,13,0.332,14,0.591,15,1.973,18,1.249,19,0.49,20,0.012,22,0.409,29,0.266,30,1.961,44,1.307,47,0.009,48,0.009,134,0.793,144,1.618,177,2.398,283,3.188,291,4.597,297,0.993,367,3.188,368,4.027,369,3.644,375,2.532,376,2.884,377,2.884,378,2.756,379,2.884,552,3.188,702,3.188,1305,4.855,1319,3.371,1325,4.259,1326,4.597,1335,4.905,1336,4.165,1337,4.165,1338,3.843,1339,5.252,1340,6.635,1341,4.597,1342,5.252,1343,5.252,1344,5.252,1345,4.597,1346,5.252]],["title/injectables/EventsPileCardsFacade.html",[294,0.978,686,2.681]],["body/injectables/EventsPileCardsFacade.html",[3,0.12,4,0.12,5,0.12,9,1.862,13,0.25,14,0.49,16,0.956,19,0.293,20,0.012,22,0.403,29,0.145,47,0.007,48,0.007,66,2.055,87,1.804,100,2.149,102,1.182,103,0.796,106,2.593,107,3.195,128,0.749,134,1.206,150,0.772,151,1.64,177,3.084,190,2.764,294,1.288,296,1.53,297,1.51,301,2.83,302,3.046,303,5.978,306,3.312,308,2.009,309,1.775,338,1.834,355,0.985,361,1.112,364,1.909,366,2.077,389,2.403,394,2.21,398,2.282,400,3.465,401,3.17,402,3.17,403,2.886,404,2.886,405,3.17,406,3.17,412,4.281,414,2.897,421,2.703,424,3.17,425,3.17,426,1.748,427,3.021,428,3.17,429,3.17,430,3.17,431,3.17,432,3.17,686,3.531,702,4.849,1241,3.14,1319,5.128,1332,2.897,1333,4.625,1334,3.465,1347,6.321,1348,6.321,1349,6.83,1350,6.83,1351,3.14,1352,2.897,1353,3.465,1354,5.5,1355,3.465,1356,5.5,1357,3.465,1358,5.5,1359,3.959,1360,3.959,1361,3.959,1362,3.959,1363,3.959,1364,3.959]],["title/interfaces/EventsPileCardsPartialState.html",[0,0.139,1365,3.312]],["body/interfaces/EventsPileCardsPartialState.html",[0,0.193,2,0.83,3,0.129,4,0.129,5,0.129,11,1.488,13,0.269,14,0.585,18,0.991,19,0.315,20,0.012,22,0.396,29,0.277,30,1.832,34,1.441,35,1.441,36,1.488,37,1.538,44,1.438,45,1.649,47,0.008,48,0.008,134,0.643,177,2.545,297,0.805,330,2.31,355,1.059,361,1.195,362,1.488,394,2.463,426,2.695,440,1.829,443,2.578,444,2.578,445,2.578,446,1.829,447,2.395,448,3.283,449,3.14,450,2.234,451,3.14,452,1.764,453,2.234,454,2.338,458,1.972,459,1.972,460,2.052,461,3.14,466,2.484,702,2.583,1319,2.732,1324,3.376,1325,4.52,1328,3.376,1331,3.376,1332,3.114,1333,4.23,1335,2.732,1365,4.585,1366,6.445,1367,5.84,1368,3.726,1369,5.06,1370,3.726,1371,3.726,1372,3.726,1373,3.726,1374,5.746,1375,3.726,1376,3.726,1377,3.726,1378,3.726,1379,3.726,1380,3.726,1381,5.746,1382,5.06,1383,3.726]],["title/interfaces/EventsPileCardsState.html",[0,0.139,1367,3.312]],["body/interfaces/EventsPileCardsState.html",[0,0.187,2,0.795,3,0.124,4,0.124,5,0.124,11,1.963,13,0.257,14,0.572,18,1.16,19,0.511,20,0.012,22,0.389,29,0.274,30,1.804,34,1.38,35,1.38,36,1.426,37,1.473,44,1.396,45,1.62,47,0.008,48,0.008,103,1.391,134,0.616,177,2.499,297,0.771,330,2.268,355,1.014,361,1.145,362,1.426,394,2.686,426,2.682,440,1.751,443,2.503,444,2.503,445,2.862,446,1.751,447,2.326,448,3.489,449,3.425,450,2.897,451,3.425,452,1.689,453,2.139,454,2.239,458,1.889,459,1.889,460,1.966,461,3.084,466,2.411,702,2.474,1319,2.617,1324,3.233,1325,4.439,1328,3.233,1331,3.233,1332,2.983,1333,4.107,1335,2.617,1365,3.233,1366,4.913,1367,5.485,1368,3.568,1369,4.913,1370,3.568,1371,3.568,1372,3.568,1373,3.568,1374,5.619,1375,3.568,1376,3.568,1377,3.568,1378,3.568,1379,3.568,1380,3.568,1381,5.619,1382,4.913,1383,3.568]],["title/modules/FeatureEngineModule.html",[233,1.862,1384,3.312]],["body/modules/FeatureEngineModule.html",[3,0.193,4,0.193,5,0.193,20,0.012,22,0.42,29,0.233,47,0.01,48,0.01,56,2.554,128,1.207,150,1.245,235,2.554,246,3.332,247,3.463,248,2.847,250,2.847,1384,5.927,1385,6.385,1386,6.385]],["title/modules/FeatureGameModule.html",[233,1.862,488,2.851]],["body/modules/FeatureGameModule.html",[3,0.178,4,0.178,5,0.178,20,0.012,22,0.43,29,0.215,47,0.01,48,0.01,56,2.352,128,1.112,150,1.147,235,2.352,236,2.948,240,3.173,241,2.622,242,2.352,245,3.576,246,3.173,247,3.297,248,2.622,250,3.173,488,5.715,523,5.888,689,5.147,1387,5.147,1388,5.881,1389,5.147,1390,5.881,1391,5.881]],["title/injectables/GameEffects.html",[294,0.978,706,3.312]],["body/injectables/GameEffects.html",[3,0.113,4,0.113,5,0.113,13,0.236,14,0.47,16,0.902,19,0.276,20,0.012,22,0.43,29,0.136,34,1.789,35,1.789,36,1.847,37,1.909,38,2.547,39,2.547,44,1.657,45,1.888,47,0.007,48,0.007,61,3.665,87,1.733,100,1.814,102,1.116,103,0.752,128,0.707,134,1.061,144,1.151,148,2.451,149,1.732,150,0.729,151,2.189,294,1.237,296,1.444,297,1.328,304,2.154,306,2.97,308,1.947,309,2.336,310,4.321,311,4.204,334,2.154,354,1.878,355,0.93,458,3.086,569,2.735,594,5.282,663,3.606,664,3.606,706,4.19,1031,5.363,1147,4.624,1392,3.271,1393,4.859,1394,6.127,1395,6.127,1396,6.127,1397,3.737,1398,5.283,1399,6.127,1400,5.283,1401,5.283,1402,3.737,1403,5.283,1404,5.363,1405,6.66,1406,6.66,1407,6.66,1408,6.66,1409,6.66,1410,3.737,1411,5.283,1412,5.283,1413,5.336,1414,5.363,1415,6.66,1416,5.283,1417,3.737,1418,2.735,1419,2.735,1420,2.551,1421,3.271,1422,3.271,1423,3.271]],["title/injectables/GameFacade.html",[89,2.407,294,0.978]],["body/injectables/GameFacade.html",[3,0.106,4,0.106,5,0.106,9,2.488,13,0.22,14,0.448,16,1.652,19,0.506,20,0.012,21,4.145,22,0.401,29,0.128,45,1.382,47,0.007,48,0.007,66,1.88,87,1.145,89,2.901,100,2.22,102,2.044,103,1.377,106,2.718,107,3.279,128,0.66,134,1.238,142,3.722,144,1.076,145,1.349,150,0.681,154,4.154,190,2.529,256,3.245,294,1.179,296,1.349,297,1.55,301,2.676,306,3.179,308,2.266,309,2.113,338,1.618,355,0.869,398,2.013,401,2.901,402,2.901,403,2.641,404,2.641,405,2.901,406,2.901,412,2.901,424,2.901,425,2.901,426,1.599,427,2.764,428,2.901,429,2.901,430,2.901,431,2.901,432,2.901,478,2.013,793,4.405,800,4.405,801,3.919,1393,5.121,1413,4.317,1418,2.555,1419,2.555,1420,2.384,1421,3.056,1422,3.056,1423,3.056,1424,3.492,1425,4.68,1426,5.008,1427,4.68,1428,5.033,1429,4.405,1430,4.405,1431,6.458,1432,6.458,1433,5.033,1434,3.492,1435,5.033,1436,3.492,1437,3.492,1438,4.405,1439,3.492,1440,4.405,1441,3.492,1442,3.492,1443,3.492,1444,3.492,1445,5.033,1446,5.033,1447,3.492,1448,5.033,1449,3.492,1450,5.033,1451,3.492,1452,5.033,1453,3.492,1454,5.033,1455,3.492,1456,3.492,1457,3.492,1458,3.492,1459,3.492,1460,3.492,1461,3.492,1462,3.492,1463,3.492]],["title/interfaces/GamePartialState.html",[0,0.139,1420,2.851]],["body/interfaces/GamePartialState.html",[0,0.207,2,0.92,3,0.143,4,0.143,5,0.143,9,2.485,13,0.298,14,0.552,19,0.349,20,0.012,21,3.975,22,0.389,29,0.278,30,1.72,45,1.894,47,0.008,48,0.008,104,2.476,134,0.713,142,3.57,144,1.454,145,1.824,154,4.455,256,3.112,297,0.892,309,2.197,355,1.174,426,2.661,447,2.566,452,1.955,801,4.196,804,3.975,805,3.453,1413,5.058,1418,3.453,1419,3.453,1420,4.228,1425,5.483,1426,5.371,1427,5.483,1464,4.131,1465,6.671,1466,6.045,1467,6.051,1468,4.131,1469,4.131,1470,4.131,1471,4.131,1472,4.131,1473,4.131,1474,4.131,1475,4.131,1476,4.131]],["title/injectables/GameRulesService.html",[99,2.681,294,0.978]],["body/injectables/GameRulesService.html",[3,0.049,4,0.049,5,0.049,9,1.42,10,1.219,13,0.102,14,0.244,15,1.313,16,1.232,18,1.142,19,0.501,20,0.012,22,0.287,29,0.059,30,1.484,31,1.502,44,1.169,45,1.793,47,0.004,48,0.004,56,3.004,66,1.021,85,3.672,87,0.897,88,1.179,89,2.418,90,2.161,91,2.546,92,2.161,93,2.546,94,2.286,95,2.693,96,2.286,97,2.693,99,1.755,100,2.03,102,1.524,103,1.027,104,1.869,106,2.297,107,2.902,110,2.052,128,0.305,133,0.978,134,0.243,137,1.867,138,1.1,139,2.864,140,1.179,141,1.869,142,0.929,143,1.867,144,0.842,145,0.623,146,0.81,147,2.431,148,2.47,149,0.747,150,0.314,151,2.372,154,0.978,157,1.411,159,1.411,161,4.448,165,3.117,171,1.411,172,2.393,173,3.117,177,1.287,178,4.073,179,2.713,187,1.278,190,0.81,191,5.404,258,1.956,277,3.845,279,2.942,283,1.66,294,0.64,296,0.623,301,1.738,308,1.962,309,1.905,330,2.137,342,4.897,343,3.766,344,3.725,347,3.981,359,1.179,369,2.094,370,3.674,372,1.278,374,2.169,375,0.777,403,2.201,404,2.201,471,1.411,549,1.411,640,2.693,673,2.606,685,2.864,686,2.693,687,2.864,773,4.467,804,1.035,805,1.179,813,2.161,834,2.431,904,2.431,952,1.179,953,3.672,965,5.01,973,3.117,1018,2.824,1143,3.981,1158,3.981,1159,3.981,1160,3.981,1161,3.981,1164,1.278,1199,3.117,1227,2.606,1314,1.278,1325,2.286,1335,3.015,1336,1.278,1393,3.327,1477,6.573,1478,1.612,1479,3.117,1480,3.561,1481,3.117,1482,3.561,1483,3.561,1484,3.561,1485,2.824,1486,3.561,1487,3.561,1488,2.734,1489,2.734,1490,2.734,1491,4.195,1492,4.195,1493,3.561,1494,2.864,1495,1.612,1496,1.612,1497,3.485,1498,1.612,1499,1.612,1500,4.195,1501,1.612,1502,2.734,1503,1.612,1504,1.612,1505,2.734,1506,1.612,1507,2.734,1508,1.612,1509,1.612,1510,1.612,1511,1.612,1512,1.612,1513,1.612,1514,4.195,1515,5.104,1516,4.195,1517,2.734,1518,1.612,1519,2.734,1520,6.175,1521,2.734,1522,1.612,1523,2.734,1524,2.734,1525,1.612,1526,2.734,1527,1.612,1528,1.612,1529,2.734,1530,2.734,1531,1.612,1532,2.734,1533,2.734,1534,2.734,1535,2.734,1536,1.612,1537,2.734,1538,2.734,1539,1.612,1540,2.734,1541,2.734,1542,1.612,1543,2.734,1544,2.734,1545,2.734,1546,1.612,1547,1.278,1548,1.612,1549,1.612,1550,1.612,1551,1.612,1552,1.612,1553,1.612,1554,1.612,1555,1.612,1556,1.612,1557,1.612,1558,1.612,1559,1.612,1560,1.612,1561,1.612,1562,1.612,1563,1.612,1564,1.612,1565,1.612,1566,1.612,1567,2.734,1568,2.734,1569,2.734,1570,2.734,1571,2.393,1572,1.612,1573,2.734,1574,1.612,1575,1.411,1576,1.612,1577,2.734,1578,1.612,1579,2.734,1580,2.734,1581,1.612,1582,1.411,1583,1.612,1584,1.612,1585,1.612,1586,1.612,1587,1.612,1588,1.612,1589,1.612,1590,3.561,1591,1.612,1592,2.734,1593,1.612,1594,6.516,1595,4.195,1596,4.195,1597,1.612,1598,1.612,1599,3.561,1600,3.561,1601,1.612,1602,1.612,1603,3.561,1604,4.195,1605,1.612,1606,1.612,1607,1.612,1608,3.561,1609,4.195,1610,4.697,1611,1.612,1612,1.612,1613,1.612,1614,1.612,1615,2.734,1616,2.734,1617,2.734,1618,3.561,1619,1.612,1620,1.612,1621,1.612,1622,1.612,1623,1.612,1624,1.612,1625,1.612]],["title/interfaces/GameState.html",[0,0.139,1466,3.312]],["body/interfaces/GameState.html",[0,0.195,2,0.843,3,0.131,4,0.131,5,0.131,9,2.641,13,0.273,14,0.52,19,0.564,20,0.012,21,4.548,22,0.372,29,0.27,30,1.646,45,1.976,47,0.008,48,0.008,104,2.267,134,0.652,142,4.084,144,1.331,145,1.669,154,4.733,256,3.561,297,0.817,309,2.142,355,1.075,426,2.625,447,2.42,452,1.79,801,4.733,804,4.548,805,3.161,1413,5.581,1418,3.161,1419,3.161,1420,2.949,1425,6.05,1426,5.706,1427,6.05,1464,3.781,1465,5.111,1466,5.619,1467,5.79,1468,3.781,1469,3.781,1470,3.781,1471,3.781,1472,3.781,1473,3.781,1474,3.781,1475,3.781,1476,3.781]],["title/interfaces/Hand.html",[0,0.139,188,3.056]],["body/interfaces/Hand.html",[0,0.253,2,1.119,3,0.174,4,0.174,5,0.174,6,2.217,8,2.559,11,2.452,13,0.362,14,0.624,15,2.011,18,1.191,19,0.518,20,0.012,22,0.394,29,0.256,30,1.428,47,0.01,48,0.01,188,5.539,253,4.741,256,4.063,259,4.859,260,4.199,268,3.917,379,3.151,1626,5.738,1627,4.255,1628,5.738]],["title/components/HandComponent.html",[49,1.614,225,2.014]],["body/components/HandComponent.html",[1,4.347,3,0.107,4,0.107,5,0.107,13,0.223,14,0.452,16,1.78,18,1.225,19,0.529,20,0.012,22,0.402,29,0.129,31,3.932,44,1.615,45,1.677,47,0.007,48,0.007,49,2.296,50,1.704,51,2.664,52,1.941,53,1.941,54,1.941,55,1.941,56,3.12,58,1.941,59,4.381,60,4.186,62,2.788,64,2.788,66,1.896,87,1.159,92,3.081,93,3.941,100,2.094,102,2.054,103,1.383,104,1.855,106,2.485,107,2.031,110,3.424,128,0.668,131,2.269,133,2.145,134,0.534,141,3.757,144,1.564,145,1.366,146,1.776,148,1.414,149,1.638,150,0.689,179,1.834,188,5.032,206,1.941,207,2.664,208,2.551,209,1.941,210,3.566,211,1.941,212,1.941,213,1.704,214,1.941,215,1.704,216,1.941,217,1.704,218,1.941,219,1.704,220,1.941,221,1.704,222,1.941,223,1.704,224,1.941,225,3.131,226,1.941,227,1.704,228,1.941,229,1.776,230,1.236,231,1.941,232,1.941,308,1.613,309,1.426,338,3.009,369,2.264,375,1.704,478,2.037,554,3.715,567,3.715,748,3.813,890,4.444,914,4.444,934,2.413,950,2.803,974,3.094,995,4.444,1497,4.695,1547,2.803,1627,2.145,1629,3.535,1630,5.941,1631,5.077,1632,5.077,1633,6.494,1634,5.077,1635,4.444,1636,3.535,1637,5.077,1638,3.535,1639,5.077,1640,3.535,1641,3.535,1642,3.535,1643,5.077,1644,3.535,1645,4.444,1646,3.535,1647,3.535,1648,3.535,1649,3.535,1650,3.094,1651,3.535,1652,3.535,1653,3.535,1654,3.535,1655,5.077,1656,5.077]],["title/modules/HandModule.html",[233,1.862,530,2.851]],["body/modules/HandModule.html",[3,0.178,4,0.178,5,0.178,20,0.012,22,0.43,29,0.215,47,0.01,48,0.01,56,2.352,128,1.112,150,1.147,225,4.159,235,2.352,236,2.948,240,3.173,241,2.622,242,2.352,244,3.734,245,3.576,246,3.173,247,3.297,248,2.622,250,2.622,530,5.715,1657,5.147,1658,5.147,1659,5.147,1660,5.881,1661,5.881]],["title/injectables/HandsCardsEffects.html",[294,0.978,711,3.312]],["body/injectables/HandsCardsEffects.html",[3,0.121,4,0.121,5,0.121,9,1.872,10,2.466,13,0.252,14,0.492,16,0.963,19,0.295,20,0.012,22,0.429,29,0.146,44,1.852,47,0.008,48,0.008,61,3.742,87,1.308,92,4.519,100,1.867,102,1.191,103,0.802,128,0.754,134,1.087,148,2.879,149,1.848,150,0.778,294,1.295,296,1.541,297,1.361,300,2.299,301,2.63,302,2.83,304,2.299,308,2.017,309,1.782,310,4.401,311,4.292,317,3.852,318,3.356,319,3.356,320,3.356,321,3.356,322,3.356,323,3.356,324,3.356,325,3.356,326,3.356,328,3.356,329,3.356,330,2.442,331,3.356,334,2.299,354,2.005,356,2.299,361,1.12,362,1.395,376,2.191,377,2.191,378,2.093,478,2.299,711,4.385,713,4.619,826,4.385,827,4.385,835,3.164,1497,4.678,1627,3.356,1650,4.84,1662,4.913,1663,5.555,1664,3.989,1665,5.53,1666,4.84,1667,5.53,1668,5.53,1669,3.989,1670,5.53,1671,5.53,1672,5.53,1673,5.53,1674,5.53,1675,3.989,1676,2.919,1677,3.492]],["title/interfaces/HandsCardsEntity.html",[0,0.139,131,2.681]],["body/interfaces/HandsCardsEntity.html",[0,0.243,2,1.024,3,0.159,4,0.159,5,0.159,8,2.342,10,2.342,13,0.332,14,0.591,15,1.973,18,1.284,19,0.565,20,0.012,22,0.295,29,0.242,30,1.307,31,3.995,32,4.01,47,0.009,48,0.009,92,4.027,131,4.669,134,0.793,141,3.817,144,1.618,145,2.029,297,0.993,367,3.188,368,4.027,369,3.589,379,2.884,713,3.371,844,4.885,1183,5.262,1184,5.262,1497,5.494,1627,3.188,1662,3.586,1677,4.597]],["title/injectables/HandsCardsFacade.html",[93,2.535,294,0.978]],["body/injectables/HandsCardsFacade.html",[3,0.113,4,0.113,5,0.113,9,1.791,10,2.971,13,0.236,14,0.471,15,1.48,16,1.609,18,1.176,19,0.493,20,0.012,22,0.41,29,0.137,31,2.055,47,0.007,48,0.007,66,1.975,87,1.228,93,3.209,100,2.151,102,1.99,103,1.34,106,2.637,107,3.225,128,0.708,134,1.206,141,1.964,144,1.153,145,1.446,150,0.73,190,2.657,294,1.238,296,1.446,297,1.51,301,2.761,302,2.971,306,3.254,308,1.949,309,1.722,338,1.734,355,0.931,361,1.051,364,1.805,366,1.964,389,2.272,394,2.144,398,2.157,401,3.048,402,3.048,403,2.775,404,2.775,405,3.048,406,3.048,409,2.968,412,3.841,414,2.739,421,2.555,423,3.276,424,3.048,425,3.048,426,1.681,427,2.904,428,3.048,429,3.048,430,3.048,431,3.048,432,3.048,478,2.157,552,3.722,713,5.126,857,2.968,859,2.968,934,3.61,1351,2.968,1352,2.739,1497,4.186,1627,3.722,1635,4.628,1645,4.628,1662,5.452,1676,2.739,1678,6.132,1679,6.132,1680,6.132,1681,5.288,1682,6.664,1683,3.743,1684,5.288,1685,3.743,1686,3.743,1687,5.288,1688,5.288,1689,5.288,1690,3.743,1691,3.743,1692,3.743,1693,3.743,1694,3.743,1695,3.743,1696,3.743,1697,3.743]],["title/interfaces/HandsCardsPartialState.html",[0,0.139,1698,3.312]],["body/interfaces/HandsCardsPartialState.html",[0,0.199,2,0.866,3,0.134,4,0.134,5,0.134,11,1.552,13,0.28,14,0.597,15,1.619,18,0.898,19,0.328,20,0.012,22,0.403,29,0.281,30,1.782,45,1.393,47,0.008,48,0.008,92,4.348,131,2.849,134,0.67,297,0.839,330,2.349,355,1.104,361,1.246,362,1.552,394,2.505,426,2.722,440,1.907,443,2.651,444,2.651,445,2.651,446,1.907,447,2.464,448,2.99,449,3.194,450,2.298,451,3.194,452,1.839,458,2.056,459,2.056,460,2.14,461,3.194,466,2.555,713,2.849,1627,3.609,1662,3.03,1676,3.247,1698,4.716,1699,6.537,1700,5.924,1701,3.884,1702,5.204,1703,3.884,1704,3.884,1705,3.884,1706,3.884,1707,3.884,1708,5.204,1709,3.884,1710,3.884,1711,3.884,1712,3.884,1713,3.884,1714,3.884,1715,3.884,1716,3.884,1717,3.884]],["title/interfaces/HandsCardsState.html",[0,0.139,1700,3.312]],["body/interfaces/HandsCardsState.html",[0,0.193,2,0.827,3,0.129,4,0.129,5,0.129,11,2.017,13,0.268,14,0.584,15,1.582,18,1.146,19,0.52,20,0.012,22,0.395,29,0.277,30,1.75,45,1.351,47,0.008,48,0.008,92,4.268,103,1.415,131,2.723,134,0.641,297,0.802,330,2.307,355,1.055,361,1.192,362,1.484,394,2.714,426,2.71,440,1.823,443,2.572,444,2.572,445,2.922,446,1.823,447,2.39,448,3.383,449,3.461,450,2.932,451,3.461,452,1.758,458,1.966,459,1.966,460,2.046,461,3.136,466,2.478,713,2.723,1627,3.501,1662,2.896,1676,3.104,1698,3.365,1699,5.049,1700,5.578,1701,3.713,1702,5.049,1703,3.713,1704,3.713,1705,3.713,1706,3.713,1707,3.713,1708,5.049,1709,3.713,1710,3.713,1711,3.713,1712,3.713,1713,3.713,1714,3.713,1715,3.713,1716,3.713,1717,3.713]],["title/interfaces/HasColor.html",[0,0.139,259,2.681]],["body/interfaces/HasColor.html",[0,0.211,2,1.23,3,0.191,4,0.191,5,0.191,6,2.437,13,0.398,14,0.661,19,0.466,20,0.012,22,0.355,29,0.23,47,0.01,48,0.01,103,1.492,253,4.69,256,4.089,259,4.763,268,4.306,1718,6.308]],["title/interfaces/HasCost.html",[0,0.139,261,3.056]],["body/interfaces/HasCost.html",[0,0.212,2,1.236,3,0.192,4,0.192,5,0.192,6,2.449,13,0.4,14,0.663,19,0.468,20,0.012,22,0.356,29,0.231,47,0.01,48,0.01,148,3.159,254,5.963,261,5.444,269,4.327,270,4.638,1719,6.339]],["title/interfaces/HasId.html",[0,0.139,12,2.535]],["body/interfaces/HasId.html",[0,0.214,2,1.251,3,0.194,4,0.194,5,0.194,6,2.479,12,4.549,13,0.405,14,0.667,15,1.975,18,1.199,19,0.474,20,0.011,29,0.234,47,0.01,48,0.01,1720,6.417]],["title/interfaces/HasName.html",[0,0.139,24,2.681]],["body/interfaces/HasName.html",[0,0.204,2,1.193,3,0.185,4,0.185,5,0.185,6,2.363,13,0.386,14,0.649,16,1.944,18,1.216,19,0.452,20,0.012,24,4.994,29,0.266,32,3.209,34,2.071,35,2.071,36,2.139,37,2.21,38,2.949,39,2.949,40,3.525,41,3.525,43,3.525,44,1.521,47,0.01,48,0.01,1721,4.85,1722,5.352,1723,6.115]],["title/interfaces/HasRules.html",[0,0.139,26,3.056]],["body/interfaces/HasRules.html",[0,0.214,2,1.251,3,0.194,4,0.194,5,0.194,6,2.479,13,0.405,14,0.667,17,6.489,18,1.199,19,0.474,20,0.011,26,5.484,29,0.234,47,0.01,48,0.01,1724,6.417]],["title/interfaces/HasVictoryPoints.html",[0,0.139,265,3.056]],["body/interfaces/HasVictoryPoints.html",[0,0.213,2,1.245,3,0.193,4,0.193,5,0.193,6,2.467,13,0.403,14,0.666,19,0.472,20,0.011,29,0.233,47,0.01,48,0.01,103,1.503,255,5.977,258,4.351,265,5.468,1725,6.385]],["title/interfaces/LandCard.html",[0,0.139,921,2.851]],["body/interfaces/LandCard.html",[0,0.27,2,0.925,3,0.144,4,0.144,5,0.144,6,1.833,8,2.116,10,2.772,11,2.174,12,4.207,13,0.3,14,0.554,15,1.891,18,1.153,19,0.615,20,0.012,22,0.44,23,3.239,29,0.279,30,1.724,32,2.49,34,1.607,35,1.607,36,1.659,37,1.715,38,2.288,39,2.288,40,2.735,41,2.735,43,3.582,44,1.18,45,1.111,46,3.239,47,0.008,48,0.008,103,1.25,140,3.472,143,5.021,192,4.929,253,4.515,256,3.837,259,3.99,260,3.472,263,4.243,264,4.153,268,3.239,270,3.472,273,3.763,640,5.029,801,4.634,921,5.213,1726,3.763,1727,6.683,1728,4.745,1729,4.745,1730,4.745,1731,4.153]],["title/injectables/LandsPileCardsEffects.html",[294,0.978,715,3.312]],["body/injectables/LandsPileCardsEffects.html",[3,0.132,4,0.132,5,0.132,9,1.988,13,0.275,14,0.523,16,1.051,19,0.322,20,0.012,22,0.43,29,0.159,44,1.902,47,0.008,48,0.008,61,3.843,87,1.429,96,4.563,100,1.81,102,1.301,103,0.876,128,0.824,134,1.074,148,2.657,149,2.018,150,0.85,177,2.941,294,1.375,296,1.683,297,1.344,300,2.511,301,2.753,302,2.962,304,2.511,308,1.866,309,1.649,310,4.278,311,4.098,317,4.032,318,3.564,319,3.564,320,3.564,321,3.564,322,3.564,323,3.564,324,3.564,325,3.564,326,3.564,328,3.564,329,3.564,330,2.508,331,3.564,334,2.511,354,2.189,356,2.511,361,1.223,362,1.523,478,2.511,715,4.657,717,4.563,1732,4.854,1733,4.356,1734,5.872,1735,4.657,1736,5.814,1737,4.356,1738,5.872,1739,4.657,1740,5.872,1741,4.356,1742,3.187,1743,4.297]],["title/interfaces/LandsPileCardsEntity.html",[0,0.139,132,2.851]],["body/interfaces/LandsPileCardsEntity.html",[0,0.245,2,1.041,3,0.162,4,0.162,5,0.162,8,2.38,13,0.337,14,0.597,15,1.98,18,1.253,19,0.495,20,0.012,22,0.412,29,0.268,30,1.912,44,1.328,47,0.009,48,0.009,96,4.303,132,5.247,134,0.806,144,1.644,177,2.422,297,1.009,367,3.24,368,4.069,369,3.657,375,2.574,376,2.932,377,2.932,378,2.801,379,2.932,552,3.24,717,3.427,951,4.234,1305,4.905,1337,4.234,1338,3.906,1341,4.672,1345,4.672,1732,3.644,1736,4.672,1744,5.338,1745,5.338,1746,5.338]],["title/injectables/LandsPileCardsFacade.html",[97,2.681,294,0.978]],["body/injectables/LandsPileCardsFacade.html",[3,0.119,4,0.119,5,0.119,9,1.851,13,0.248,14,0.487,15,1.518,16,1.518,18,1.119,19,0.465,20,0.012,22,0.402,29,0.143,47,0.007,48,0.007,66,2.042,87,1.793,97,3.508,100,2.112,102,1.878,103,1.265,106,2.458,107,3.1,128,0.742,134,1.189,150,0.765,151,1.626,177,3.065,190,2.747,294,1.28,296,1.516,297,1.489,301,2.819,302,3.034,306,3.303,308,1.999,309,1.767,338,1.818,355,0.976,361,1.102,364,1.892,366,2.059,389,2.381,394,2.2,398,2.261,401,3.15,402,3.15,403,2.868,404,2.868,405,3.15,406,3.15,412,4.269,414,2.871,421,2.678,424,3.15,425,3.15,426,1.737,427,3.002,428,3.15,429,3.15,430,3.15,431,3.15,432,3.15,435,2.678,717,5.054,934,3.731,1229,3.434,1241,3.111,1351,3.111,1352,2.871,1355,3.434,1357,3.434,1732,5.375,1742,2.871,1743,4.602,1747,6.29,1748,6.29,1749,5.466,1750,5.466,1751,5.466,1752,5.466,1753,5.466,1754,5.466,1755,5.466,1756,3.923,1757,3.923,1758,3.923,1759,3.923,1760,3.923,1761,3.923]],["title/interfaces/LandsPileCardsPartialState.html",[0,0.139,1762,3.312]],["body/interfaces/LandsPileCardsPartialState.html",[0,0.202,2,0.885,3,0.138,4,0.138,5,0.138,11,1.587,13,0.287,14,0.604,15,1.637,18,0.911,19,0.335,20,0.012,22,0.406,29,0.283,30,1.798,45,1.063,47,0.008,48,0.008,96,4.353,132,3.098,134,0.685,177,2.612,297,0.858,330,2.371,355,1.129,361,1.275,362,1.587,394,2.528,426,2.697,440,1.95,443,2.691,444,2.691,445,2.691,446,1.95,447,2.501,448,2.691,449,3.223,450,2.332,451,3.223,452,1.88,458,2.103,459,2.103,460,2.188,461,3.223,466,2.593,717,2.913,1732,3.098,1735,3.599,1739,3.599,1742,3.321,1743,4.416,1762,4.787,1763,6.587,1764,5.968,1765,3.972,1766,5.283,1767,3.972,1768,3.972,1769,3.972,1770,3.972,1771,5.283,1772,3.972,1773,3.972,1774,3.972,1775,3.972,1776,3.972]],["title/interfaces/LandsPileCardsState.html",[0,0.139,1764,3.312]],["body/interfaces/LandsPileCardsState.html",[0,0.195,2,0.845,3,0.131,4,0.131,5,0.131,11,2.047,13,0.274,14,0.59,15,1.599,18,1.153,19,0.524,20,0.012,22,0.399,29,0.279,30,1.765,45,1.015,47,0.008,48,0.008,96,4.253,103,1.427,132,2.959,134,0.655,177,2.564,297,0.82,330,2.327,355,1.078,361,1.217,362,1.516,394,2.729,426,2.682,440,1.862,443,2.61,444,2.61,445,2.955,446,1.862,447,2.425,448,3.304,449,3.48,450,2.95,451,3.48,452,1.796,458,2.008,459,2.008,460,2.09,461,3.164,466,2.514,717,2.782,1732,2.959,1735,3.438,1739,3.438,1742,3.171,1743,4.282,1762,3.438,1763,5.122,1764,5.627,1765,3.794,1766,5.122,1767,3.794,1768,3.794,1769,3.794,1770,3.794,1771,5.122,1772,3.794,1773,3.794,1774,3.794,1775,3.794,1776,3.794]],["title/components/PhasesComponent.html",[49,1.614,227,2.014]],["body/components/PhasesComponent.html",[3,0.1,4,0.1,5,0.1,9,2.366,13,0.208,14,0.43,16,1.686,18,0.862,19,0.464,20,0.012,21,2.114,22,0.376,29,0.12,44,1.664,45,1.13,47,0.007,48,0.007,49,2.205,50,1.588,51,2.531,52,1.809,53,1.809,54,1.809,55,1.809,56,3.178,58,1.809,59,4.322,60,4.129,62,2.649,64,2.649,66,1.802,87,1.582,88,2.41,89,3.621,100,2.144,102,1.876,103,1.264,104,2.995,106,2.729,107,2.961,110,4.352,128,0.623,133,1.999,134,0.497,142,4.352,144,1.486,145,1.272,146,1.655,150,0.642,151,1.998,154,3.464,179,1.743,200,3.293,201,2.41,202,2.114,203,2.612,204,2.248,205,2.41,206,1.809,207,2.531,208,2.424,209,1.809,210,3.45,211,1.809,212,1.809,213,1.588,214,1.809,215,1.588,216,1.809,217,1.588,218,1.809,219,1.588,220,1.809,221,1.588,222,1.809,223,1.588,224,1.809,225,1.588,226,1.809,227,3.029,228,1.809,229,1.655,230,1.152,231,1.809,232,1.809,256,3.795,308,1.533,309,1.355,369,1.468,375,1.588,686,4.032,813,3.813,1312,4.176,1325,3.663,1335,2.114,1336,2.612,1426,4.176,1429,4.221,1430,4.221,1438,4.221,1440,4.221,1777,3.293,1778,4.823,1779,5.707,1780,4.823,1781,6.282,1782,4.823,1783,6.282,1784,6.282,1785,6.282,1786,6.282,1787,6.282,1788,4.823,1789,3.293,1790,4.823,1791,3.293,1792,3.293,1793,3.293,1794,3.293,1795,3.293,1796,3.293,1797,3.293,1798,3.293,1799,3.293,1800,3.293,1801,3.293,1802,3.293,1803,3.293,1804,3.293,1805,3.293,1806,3.293,1807,3.293,1808,3.293,1809,7.402,1810,4.823,1811,4.823,1812,4.823,1813,6.282]],["title/modules/PhasesModule.html",[233,1.862,531,2.851]],["body/modules/PhasesModule.html",[3,0.176,4,0.176,5,0.176,20,0.012,22,0.445,29,0.212,47,0.01,48,0.01,56,2.321,128,1.097,150,1.132,227,4.152,235,2.321,236,2.924,240,3.147,241,2.587,242,2.321,244,3.704,245,3.547,246,3.147,247,3.27,248,2.587,250,2.587,531,5.699,819,6.177,820,4.601,1814,5.078,1815,5.078,1816,5.078,1817,5.802,1818,5.802]],["title/modules/PilesModule.html",[233,1.862,532,2.851]],["body/modules/PilesModule.html",[3,0.172,4,0.172,5,0.172,20,0.012,22,0.441,29,0.207,47,0.009,48,0.009,56,2.27,128,1.073,150,1.107,179,2.051,229,4.315,235,2.27,236,2.885,240,3.105,241,2.531,242,2.27,244,3.654,245,3.499,246,3.105,247,3.227,248,2.531,250,3.105,532,5.773,1010,5.266,1013,4.968,1819,4.968,1820,4.968,1821,5.676,1822,4.968,1823,5.676,1824,5.676]],["title/injectables/StockPilesCardsEffects.html",[294,0.978,719,3.312]],["body/injectables/StockPilesCardsEffects.html",[3,0.094,4,0.094,5,0.094,9,1.565,10,2.061,13,0.196,14,0.412,15,1.116,16,0.75,19,0.408,20,0.012,22,0.432,29,0.114,44,1.702,45,1.431,47,0.006,48,0.006,61,3.439,87,1.516,100,1.779,102,0.928,103,0.625,128,0.588,134,1.033,146,1.562,147,3.155,148,2.612,149,1.44,150,0.606,151,1.915,230,2.816,242,1.849,294,1.082,296,1.201,297,1.294,300,1.792,301,2.286,302,2.46,304,1.792,306,2.724,308,1.941,309,1.716,310,4.287,311,4.196,317,3.349,318,2.805,319,2.805,320,2.805,321,2.805,322,2.805,323,2.805,324,2.805,325,2.805,326,2.805,328,2.805,329,2.805,330,2.388,331,2.805,334,1.792,338,2.556,340,4.045,343,2.425,347,3.382,354,1.562,355,0.773,356,1.792,359,2.274,361,0.873,362,1.087,364,1.499,366,1.631,369,2.724,370,3.921,376,1.707,377,1.707,378,1.631,719,3.665,721,4.153,826,3.665,827,3.665,844,3.708,1117,4.829,1494,4.97,1571,5.347,1575,4.045,1582,5.989,1663,4.829,1666,4.045,1825,4.392,1826,5.517,1827,5.517,1828,3.109,1829,4.622,1830,4.622,1831,4.622,1832,3.109,1833,4.622,1834,3.665,1835,4.829,1836,3.109,1837,4.622,1838,3.665,1839,4.622,1840,3.109,1841,4.622,1842,4.622,1843,4.622,1844,4.622,1845,4.622,1846,3.665,1847,4.045,1848,4.045,1849,3.767,1850,4.622,1851,4.622,1852,4.622,1853,3.665,1854,3.109,1855,3.109,1856,2.274,1857,4.171,1858,2.721,1859,2.721,1860,2.721]],["title/interfaces/StockPilesCardsEntity.html",[0,0.139,1849,2.851]],["body/interfaces/StockPilesCardsEntity.html",[0,0.23,2,0.914,3,0.142,4,0.142,5,0.142,8,2.089,10,2.089,13,0.296,14,0.549,15,1.921,18,1.263,19,0.541,20,0.012,22,0.411,29,0.252,30,1.821,31,3.783,32,3.841,44,1.166,47,0.008,48,0.008,134,0.707,141,3.615,144,1.899,145,1.81,230,2.409,283,2.844,297,0.886,367,2.844,368,3.741,369,3.481,370,5.011,375,2.259,376,2.573,377,3.385,378,2.459,379,2.573,552,2.844,721,2.844,844,4.738,950,3.716,1183,4.889,1184,4.889,1337,4.889,1338,3.428,1494,4.997,1547,3.716,1825,3.007,1835,4.101,1849,5.33,1857,3.199,1858,5.395,1861,4.685,1862,4.685,1863,4.685,1864,4.685,1865,4.685,1866,4.685,1867,4.685,1868,4.685,1869,4.685,1870,4.685]],["title/injectables/StockPilesCardsFacade.html",[294,0.978,687,2.851]],["body/injectables/StockPilesCardsFacade.html",[3,0.114,4,0.114,5,0.114,9,1.802,10,3.423,13,0.238,14,0.474,16,1.487,18,1.105,19,0.455,20,0.012,22,0.411,29,0.138,31,2.073,47,0.007,48,0.007,66,1.987,87,1.745,100,2.092,102,1.84,103,1.239,106,2.417,107,3.071,128,0.714,134,1.179,141,1.981,144,1.163,145,1.459,150,0.736,151,1.564,190,2.674,230,2.955,294,1.246,296,1.459,297,1.476,301,2.772,302,2.983,306,3.263,308,1.958,309,1.73,338,1.749,355,0.939,361,1.06,364,1.82,366,1.981,370,4.697,389,2.291,394,2.155,398,2.176,401,3.067,402,3.067,403,2.792,404,2.792,405,3.067,406,3.067,412,4.217,421,2.577,424,3.067,425,3.067,426,1.691,427,2.922,428,3.067,429,3.067,430,3.067,431,3.067,432,3.067,435,3.632,552,4.441,687,3.632,721,4.737,855,3.304,857,2.994,859,2.994,1242,3.304,1352,2.762,1353,3.304,1825,5.01,1856,2.762,1857,4.206,1859,3.304,1860,3.304,1871,6.161,1872,6.161,1873,6.161,1874,6.161,1875,3.775,1876,3.775,1877,3.775,1878,5.321,1879,5.321,1880,5.321,1881,3.775,1882,3.775,1883,3.775,1884,3.775]],["title/interfaces/StockPilesCardsPartialState.html",[0,0.139,1885,3.312]],["body/interfaces/StockPilesCardsPartialState.html",[0,0.2,2,0.877,3,0.136,4,0.136,5,0.136,11,1.573,13,0.284,14,0.601,18,0.906,19,0.333,20,0.012,22,0.405,29,0.282,30,1.792,34,1.523,35,1.523,36,1.573,37,1.626,45,1.054,47,0.008,48,0.008,134,0.679,230,2.519,297,0.851,330,2.362,355,1.119,361,1.264,362,1.573,394,2.519,426,2.694,440,1.933,443,2.676,444,2.676,445,2.676,446,1.933,447,2.486,448,2.006,449,3.212,450,2.319,451,3.212,452,1.864,453,2.361,454,2.471,458,2.085,459,2.085,460,2.169,461,3.212,466,2.578,721,2.731,1494,4.917,1825,2.888,1834,3.568,1838,3.568,1849,3.071,1853,3.568,1856,3.292,1857,4.097,1885,4.759,1886,6.568,1887,5.951,1888,3.938,1889,5.252,1890,3.938,1891,3.938,1892,3.938,1893,3.938,1894,5.252,1895,3.938,1896,3.938,1897,3.938,1898,3.938,1899,3.938,1900,3.938]],["title/interfaces/StockPilesCardsState.html",[0,0.139,1887,3.312]],["body/interfaces/StockPilesCardsState.html",[0,0.194,2,0.838,3,0.13,4,0.13,5,0.13,11,2.035,13,0.271,14,0.588,18,1.15,19,0.523,20,0.012,22,0.397,29,0.278,30,1.759,34,1.455,35,1.455,36,1.503,37,1.553,45,1.007,47,0.008,48,0.008,103,1.422,134,0.649,230,2.473,297,0.813,330,2.319,355,1.069,361,1.207,362,1.503,394,2.724,426,2.679,440,1.847,443,2.595,444,2.595,445,2.942,446,1.847,447,2.411,448,3.153,449,3.473,450,2.943,451,3.473,452,1.781,453,2.256,454,2.361,458,1.992,459,1.992,460,2.073,461,3.153,466,2.5,721,2.609,1494,4.827,1825,2.759,1834,3.409,1838,3.409,1849,2.935,1853,3.409,1856,3.145,1857,3.973,1885,3.409,1886,5.094,1887,5.608,1888,3.762,1889,5.094,1890,3.762,1891,3.762,1892,3.762,1893,3.762,1894,5.094,1895,3.762,1896,3.762,1897,3.762,1898,3.762,1899,3.762,1900,3.762]],["title/modules/UiCardModule.html",[233,1.862,1010,2.681]],["body/modules/UiCardModule.html",[3,0.169,4,0.169,5,0.169,20,0.012,22,0.438,29,0.203,47,0.009,48,0.009,128,1.052,150,1.086,179,2.486,235,2.226,236,2.851,240,3.068,241,2.482,242,2.226,245,3.458,246,3.068,247,3.188,248,2.482,250,3.068,545,3.8,547,4.415,622,5.848,628,4.415,646,5.848,1010,5.445,1901,4.872,1902,4.872,1903,5.567,1904,5.567,1905,5.567,1906,5.567,1907,5.567]],["title/dependencies.html",[236,2.082,1908,3.05]],["body/dependencies.html",[20,0.012,34,1.93,47,0.01,48,0.01,128,1.078,146,2.865,207,2.991,236,2.362,248,2.542,306,2.542,354,2.865,355,1.418,356,3.285,378,2.991,446,2.449,492,6.111,493,5.537,552,3.46,820,4.521,1338,4.171,1909,5.701,1910,8.514,1911,5.701,1912,5.701,1913,5.701,1914,5.701,1915,5.701,1916,7.867,1917,5.701,1918,5.701,1919,5.701,1920,5.701,1921,5.701,1922,5.701,1923,5.701,1924,5.701,1925,5.701,1926,5.701,1927,5.701,1928,5.701,1929,5.701,1930,5.701]],["title/miscellaneous/enumerations.html",[1931,2.237,1932,4.398]],["body/miscellaneous/enumerations.html",[6,2.935,13,0.229,20,0.012,21,3.317,47,0.007,48,0.007,61,1.821,142,2.978,256,2.597,257,4.098,269,3.528,279,2.088,281,2.473,309,2.473,343,2.712,459,2.394,603,2.873,756,4.523,757,4.098,760,4.098,765,4.523,775,5.272,779,4.523,804,3.317,813,3.986,952,3.781,987,4.523,990,6.077,992,4.523,1134,4.523,1164,4.098,1314,4.098,1479,3.171,1481,4.523,1485,4.098,1727,4.523,1931,2.326,1932,3.171,1933,3.171,1934,3.171,1935,5.208,1936,5.168,1937,4.098,1938,4.098,1939,3.171,1940,3.623,1941,4.523,1942,3.623,1943,5.168,1944,5.168,1945,5.168,1946,3.623,1947,3.623,1948,5.168,1949,3.623,1950,5.168,1951,5.168,1952,5.168,1953,3.171,1954,5.168,1955,5.168,1956,5.168,1957,5.168,1958,5.168,1959,5.168,1960,5.168,1961,3.623,1962,3.623,1963,3.623,1964,5.168,1965,3.623,1966,3.623,1967,3.623,1968,3.623,1969,5.168,1970,5.168,1971,5.168,1972,5.168,1973,5.168,1974,2.873,1975,5.168,1976,3.171,1977,5.168,1978,5.168,1979,3.623,1980,3.623,1981,3.623,1982,3.623,1983,3.623,1984,3.623,1985,3.623,1986,3.623,1987,5.168,1988,5.168,1989,3.623,1990,3.623,1991,3.623,1992,5.168,1993,3.623,1994,3.623,1995,3.623,1996,3.623,1997,3.623,1998,3.623,1999,5.168,2000,3.623,2001,6.567,2002,3.623,2003,3.623,2004,3.623,2005,3.623,2006,2.873,2007,5.168,2008,5.168,2009,5.168,2010,5.168,2011,5.168,2012,5.168,2013,5.168,2014,5.168,2015,5.168,2016,5.168,2017,5.168,2018,5.168]],["title/miscellaneous/functions.html",[1931,2.237,2019,4.398]],["body/miscellaneous/functions.html",[1,2.498,6,2.991,7,2.708,13,0.216,15,1.708,16,2.035,18,1.262,19,0.62,20,0.012,24,2.191,42,2.988,43,4.207,47,0.007,48,0.007,102,2.476,103,1.668,106,3.029,148,2.556,251,4.362,252,2.708,253,4.078,254,4.676,255,3.623,256,3.983,258,4.106,263,2.331,276,2.988,285,4.334,289,2.988,293,2.988,309,0.959,450,2.469,541,2.708,543,2.988,553,3.927,640,2.191,748,4.102,749,2.708,750,4.334,751,4.334,753,4.334,754,4.334,755,4.334,757,3.927,759,2.708,760,3.927,764,4.334,771,2.988,778,4.334,783,2.988,801,3.536,804,3.178,885,4.334,886,4.334,921,2.331,1227,4.263,1312,2.498,1313,2.708,1318,2.988,1404,5.099,1414,5.099,1721,2.708,1722,2.988,1726,2.708,1731,2.988,1931,2.191,1933,2.988,1934,5.593,1935,5.068,1937,5.068,1938,3.927,1939,2.988,2019,2.988,2020,4.951,2021,4.951,2022,4.951,2023,4.951,2024,5.826,2025,4.951,2026,4.951,2027,4.951,2028,3.414,2029,4.951,2030,4.951,2031,4.951,2032,3.414,2033,4.951,2034,3.414,2035,4.951,2036,4.951,2037,5.826,2038,3.414,2039,7.62,2040,3.414,2041,3.414,2042,3.414,2043,3.414,2044,3.414,2045,3.414,2046,3.414,2047,3.414,2048,3.414,2049,3.414,2050,3.414,2051,3.414,2052,3.414]],["title/index.html",[13,0.22,2053,2.763,2054,2.763]],["body/index.html",[20,0.012,47,0.01,48,0.01,60,3.392,427,3.55,486,5.127,2055,6.465,2056,6.465,2057,6.465,2058,6.465,2059,6.465,2060,6.465,2061,6.465,2062,6.465,2063,6.465,2064,6.465,2065,6.465,2066,5.658,2067,6.465]],["title/license.html",[2053,2.763,2054,2.763,2068,2.763]],["body/license.html",[9,1.853,20,0.009,47,0.009,48,0.009,190,3.422,242,2.189,673,4.004,813,3.322,2068,4.34,2069,4.79,2070,7.412,2071,5.473,2072,5.473,2073,5.473,2074,5.473,2075,5.473,2076,6.809,2077,5.473,2078,5.473,2079,5.473,2080,5.473,2081,5.473,2082,5.473,2083,6.809,2084,8.404,2085,5.473,2086,5.473,2087,5.473,2088,5.473,2089,7.412,2090,5.473,2091,6.809,2092,5.473,2093,5.473,2094,5.473,2095,5.473,2096,5.473,2097,5.473,2098,5.473,2099,5.473,2100,5.473,2101,6.809,2102,5.473,2103,5.473,2104,5.473,2105,5.473,2106,5.473,2107,5.473,2108,6.809,2109,6.809,2110,5.473,2111,5.473,2112,5.473,2113,5.473,2114,5.473,2115,5.473,2116,5.473,2117,5.473,2118,5.473,2119,5.473,2120,5.473,2121,5.473,2122,5.473,2123,5.473,2124,5.473,2125,5.473,2126,5.473,2127,5.473,2128,5.473,2129,5.473,2130,5.473,2131,5.473,2132,5.473,2133,5.473,2134,5.473,2135,5.473,2136,5.473,2137,5.473]],["title/modules.html",[235,2.283]],["body/modules.html",[20,0.01,47,0.01,48,0.01,181,4.217,234,3.935,235,2.305,481,4.217,487,3.935,488,3.935,493,6.847,523,3.935,528,3.935,529,3.935,530,3.935,531,3.935,532,3.935,622,3.935,646,3.935,1010,3.699,1384,4.571,2138,8.634,2139,8.634,2140,8.659,2141,5.764]],["title/overview.html",[2142,4.995]],["body/overview.html",[2,0.72,20,0.012,47,0.007,48,0.007,50,3.601,51,1.936,89,3.507,91,3.693,93,3.693,95,3.905,97,3.905,213,3.601,215,3.601,217,3.601,219,3.601,221,3.601,223,3.601,225,3.601,227,3.601,229,3.754,234,4.958,235,1.476,236,2.169,237,3.229,238,3.229,239,3.229,240,2.334,241,1.645,242,1.476,296,1.426,481,5.827,482,3.229,483,3.229,484,3.229,485,3.229,486,4.825,487,5.716,488,4.958,523,5.771,524,3.229,525,3.229,526,3.229,527,3.229,528,4.958,529,5.21,530,4.958,531,4.958,532,5.21,622,5.375,623,3.229,624,3.229,625,3.229,646,5.375,647,3.229,648,3.229,649,3.229,683,3.229,684,3.229,685,4.154,686,3.905,687,4.154,814,3.229,815,3.229,816,3.229,1006,3.229,1007,3.229,1008,3.229,1009,3.229,1010,5.053,1387,3.229,1389,3.229,1657,3.229,1658,3.229,1659,3.229,1814,3.229,1815,3.229,1816,3.229,1819,3.229,1820,3.229,1822,3.229,1901,3.229,1902,3.229,2142,3.229,2143,3.69,2144,3.69,2145,3.69,2146,3.69]],["title/properties.html",[14,0.448,1908,3.05]],["body/properties.html",[14,0.595,20,0.011,47,0.01,48,0.01,283,4.054,2066,5.847,2068,5.298,2069,5.847,2147,6.68]],["title/todo.html",[1846,2.763,2053,2.763,2054,2.763]],["body/todo.html",[6,2.515,7,1.604,19,0.548,20,0.009,34,1.118,35,1.118,36,1.155,37,1.925,38,4.121,39,4.051,40,3.476,41,4.27,44,1.843,45,0.474,47,0.004,48,0.004,56,3.023,57,3.665,61,1.016,134,1.294,177,1.747,230,2.722,242,0.809,252,1.604,274,3.898,275,3.898,279,1.166,297,1.621,298,3.871,299,3.661,300,3.752,330,2.401,343,1.061,440,2.077,453,2.536,454,2.655,541,1.604,583,2.62,663,5.567,664,5.567,692,1.227,698,5.126,702,1.227,721,2.934,749,1.604,812,1.77,813,1.227,821,1.298,1014,5.422,1096,2.891,1097,1.77,1313,1.604,1319,1.298,1392,1.77,1477,6.408,1485,1.604,1721,1.604,1726,1.604,1825,3.103,1846,1.604,1847,1.77,1848,1.77,1974,1.604,2006,1.604,2148,2.022,2149,4.834,2150,7.322,2151,2.022,2152,7.322,2153,2.022,2154,2.022,2155,2.022,2156,2.022,2157,2.022,2158,2.022,2159,7.225,2160,2.022,2161,2.022,2162,2.022,2163,2.022,2164,2.022,2165,2.022,2166,2.022,2167,2.022,2168,2.022,2169,2.022,2170,2.022,2171,2.022,2172,2.022,2173,2.022,2174,3.303,2175,3.303,2176,2.022,2177,6.291,2178,6.291,2179,6.291,2180,2.022,2181,3.303,2182,2.022,2183,2.022,2184,2.022,2185,2.022,2186,8.078,2187,2.022,2188,2.022,2189,2.022,2190,4.834,2191,7.785,2192,2.022,2193,7.408,2194,2.022,2195,2.022,2196,3.303,2197,2.022,2198,2.022,2199,2.022,2200,2.022,2201,3.303,2202,2.022,2203,2.022,2204,2.022,2205,2.022,2206,2.022,2207,2.022,2208,2.022,2209,2.022,2210,2.022,2211,2.022,2212,2.022,2213,3.303,2214,2.022,2215,2.022,2216,2.022,2217,2.022,2218,2.022,2219,2.022,2220,2.022,2221,2.022,2222,2.022,2223,2.022,2224,2.022,2225,2.022,2226,2.022,2227,3.303,2228,3.303,2229,2.022,2230,2.022,2231,2.022,2232,2.022,2233,2.022,2234,2.022,2235,2.022,2236,2.022,2237,2.022,2238,2.022,2239,2.022,2240,2.022,2241,2.022,2242,2.022,2243,2.022,2244,2.022,2245,2.022,2246,4.187,2247,2.022,2248,2.022,2249,2.022,2250,2.022]],["title/miscellaneous/typealiases.html",[1931,2.237,2251,5.025]],["body/miscellaneous/typealiases.html",[6,3.134,13,0.394,19,0.462,20,0.012,47,0.01,48,0.01,269,4.265,759,5.851,801,4.478,1047,5.851,1163,5.851,1227,5.745,1931,4.01,1935,4.955,1937,5.851,1938,4.955,1941,5.468,1953,5.468,1974,4.955,1976,5.468,2006,4.955,2252,6.247]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":283,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/StockPilesCardsEntity.html":{},"properties.html":{}}}],["0.11.4",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":620,"title":{},"body":{"components/CardBackComponent.html":{}}}],["0.2.0",{"_index":2147,"title":{},"body":{"properties.html":{}}}],["0.3em",{"_index":612,"title":{},"body":{"components/CardBackComponent.html":{}}}],["0.5em",{"_index":621,"title":{},"body":{"components/CardBackComponent.html":{}}}],["1",{"_index":279,"title":{"interfaces/Chainable-1.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["10",{"_index":2144,"title":{},"body":{"overview.html":{}}}],["100",{"_index":573,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["103",{"_index":2197,"title":{},"body":{"todo.html":{}}}],["1054",{"_index":2161,"title":{},"body":{"todo.html":{}}}],["106",{"_index":2223,"title":{},"body":{"todo.html":{}}}],["1076",{"_index":2220,"title":{},"body":{"todo.html":{}}}],["111",{"_index":2183,"title":{},"body":{"todo.html":{}}}],["1134",{"_index":2221,"title":{},"body":{"todo.html":{}}}],["116",{"_index":2188,"title":{},"body":{"todo.html":{}}}],["1171",{"_index":2162,"title":{},"body":{"todo.html":{}}}],["120",{"_index":2189,"title":{},"body":{"todo.html":{}}}],["1216",{"_index":2163,"title":{},"body":{"todo.html":{}}}],["125",{"_index":2198,"title":{},"body":{"todo.html":{}}}],["125ms",{"_index":593,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["129",{"_index":2199,"title":{},"body":{"todo.html":{}}}],["1321",{"_index":2164,"title":{},"body":{"todo.html":{}}}],["1362",{"_index":2165,"title":{},"body":{"todo.html":{}}}],["138",{"_index":2229,"title":{},"body":{"todo.html":{}}}],["14",{"_index":2143,"title":{},"body":{"overview.html":{}}}],["14.0.1",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["14.0.4",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["14.8.6",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["1450",{"_index":2166,"title":{},"body":{"todo.html":{}}}],["15",{"_index":614,"title":{},"body":{"components/CardBackComponent.html":{}}}],["155",{"_index":2230,"title":{},"body":{"todo.html":{}}}],["1552",{"_index":2167,"title":{},"body":{"todo.html":{}}}],["159",{"_index":2248,"title":{},"body":{"todo.html":{}}}],["1603",{"_index":2168,"title":{},"body":{"todo.html":{}}}],["161",{"_index":2249,"title":{},"body":{"todo.html":{}}}],["165",{"_index":2231,"title":{},"body":{"todo.html":{}}}],["17",{"_index":2145,"title":{},"body":{"overview.html":{}}}],["1707",{"_index":2169,"title":{},"body":{"todo.html":{}}}],["175",{"_index":2232,"title":{},"body":{"todo.html":{}}}],["1755",{"_index":2170,"title":{},"body":{"todo.html":{}}}],["1803",{"_index":2171,"title":{},"body":{"todo.html":{}}}],["185",{"_index":2233,"title":{},"body":{"todo.html":{}}}],["1851",{"_index":2172,"title":{},"body":{"todo.html":{}}}],["19",{"_index":2185,"title":{},"body":{"todo.html":{}}}],["191",{"_index":2200,"title":{},"body":{"todo.html":{}}}],["195",{"_index":2201,"title":{},"body":{"todo.html":{}}}],["1em",{"_index":591,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["1px",{"_index":581,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["2",{"_index":281,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardFrontComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":618,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["2021",{"_index":2072,"title":{},"body":{"license.html":{}}}],["20px",{"_index":590,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["21",{"_index":2190,"title":{},"body":{"todo.html":{}}}],["220",{"_index":2224,"title":{},"body":{"todo.html":{}}}],["229",{"_index":2202,"title":{},"body":{"todo.html":{}}}],["233",{"_index":2203,"title":{},"body":{"todo.html":{}}}],["234",{"_index":2234,"title":{},"body":{"todo.html":{}}}],["24",{"_index":2181,"title":{},"body":{"todo.html":{}}}],["243",{"_index":2225,"title":{},"body":{"todo.html":{}}}],["258",{"_index":2204,"title":{},"body":{"todo.html":{}}}],["262",{"_index":2205,"title":{},"body":{"todo.html":{}}}],["294",{"_index":2206,"title":{},"body":{"todo.html":{}}}],["298",{"_index":2207,"title":{},"body":{"todo.html":{}}}],["2px",{"_index":616,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["2rem",{"_index":205,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["3",{"_index":291,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["30",{"_index":643,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["32",{"_index":2243,"title":{},"body":{"todo.html":{}}}],["332",{"_index":2250,"title":{},"body":{"todo.html":{}}}],["333",{"_index":2208,"title":{},"body":{"todo.html":{}}}],["337",{"_index":2209,"title":{},"body":{"todo.html":{}}}],["37",{"_index":2184,"title":{},"body":{"todo.html":{}}}],["371",{"_index":2210,"title":{},"body":{"todo.html":{}}}],["375",{"_index":2211,"title":{},"body":{"todo.html":{}}}],["379",{"_index":2235,"title":{},"body":{"todo.html":{}}}],["39",{"_index":2146,"title":{},"body":{"overview.html":{}}}],["391",{"_index":2236,"title":{},"body":{"todo.html":{}}}],["394",{"_index":2226,"title":{},"body":{"todo.html":{}}}],["395",{"_index":2237,"title":{},"body":{"todo.html":{}}}],["400",{"_index":2212,"title":{},"body":{"todo.html":{}}}],["404",{"_index":2213,"title":{},"body":{"todo.html":{}}}],["413",{"_index":2238,"title":{},"body":{"todo.html":{}}}],["424",{"_index":2239,"title":{},"body":{"todo.html":{}}}],["431",{"_index":2240,"title":{},"body":{"todo.html":{}}}],["443",{"_index":2241,"title":{},"body":{"todo.html":{}}}],["450ms",{"_index":586,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["452",{"_index":2242,"title":{},"body":{"todo.html":{}}}],["49",{"_index":2244,"title":{},"body":{"todo.html":{}}}],["4em",{"_index":611,"title":{},"body":{"components/CardBackComponent.html":{}}}],["5",{"_index":583,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"todo.html":{}}}],["50",{"_index":607,"title":{},"body":{"components/CardBackComponent.html":{}}}],["53",{"_index":2192,"title":{},"body":{"todo.html":{}}}],["6.1.1",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["6.4.22",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2245,"title":{},"body":{"todo.html":{}}}],["617",{"_index":2151,"title":{},"body":{"todo.html":{}}}],["66",{"_index":2194,"title":{},"body":{"todo.html":{}}}],["7",{"_index":1040,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["71",{"_index":2155,"title":{},"body":{"todo.html":{}}}],["73",{"_index":2227,"title":{},"body":{"todo.html":{}}}],["74",{"_index":2195,"title":{},"body":{"todo.html":{}}}],["8.3.2",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["812",{"_index":2176,"title":{},"body":{"todo.html":{}}}],["818",{"_index":2180,"title":{},"body":{"todo.html":{}}}],["82",{"_index":2187,"title":{},"body":{"todo.html":{}}}],["85",{"_index":2228,"title":{},"body":{"todo.html":{}}}],["87",{"_index":2222,"title":{},"body":{"todo.html":{}}}],["90",{"_index":639,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["913",{"_index":2214,"title":{},"body":{"todo.html":{}}}],["917",{"_index":2215,"title":{},"body":{"todo.html":{}}}],["935",{"_index":2158,"title":{},"body":{"todo.html":{}}}],["95",{"_index":2182,"title":{},"body":{"todo.html":{}}}],["951",{"_index":2216,"title":{},"body":{"todo.html":{}}}],["955",{"_index":2217,"title":{},"body":{"todo.html":{}}}],["980",{"_index":2218,"title":{},"body":{"todo.html":{}}}],["984",{"_index":2219,"title":{},"body":{"todo.html":{}}}],["986",{"_index":2160,"title":{},"body":{"todo.html":{}}}],["99",{"_index":2196,"title":{},"body":{"todo.html":{}}}],["_action",{"_index":329,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["above",{"_index":2107,"title":{},"body":{"license.html":{}}}],["access",{"_index":134,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["action.cardid",{"_index":1140,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.cards.map",{"_index":1843,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["action.cardtype",{"_index":1139,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.die",{"_index":1119,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.id",{"_index":1138,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.name",{"_index":1656,"title":{},"body":{"components/HandComponent.html":{}}}],["action.pileid",{"_index":340,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["action_card_interface_name",{"_index":31,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["actioncard",{"_index":1,"title":{"interfaces/ActionCard.html":{}},"body":{"interfaces/ActionCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["actioncards",{"_index":1547,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["actioncards.get(cardid",{"_index":1653,"title":{},"body":{"components/HandComponent.html":{}}}],["actioncards.get(handcard.cardid",{"_index":1623,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["actionname",{"_index":21,"title":{},"body":{"interfaces/ActionCard.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actions",{"_index":61,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["actions'},{'name",{"_index":212,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["actions.component.css",{"_index":63,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions.component.html",{"_index":65,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions/actions.component",{"_index":249,"title":{},"body":{"modules/ActionsModule.html":{}}}],["actions/actions.module",{"_index":535,"title":{},"body":{"modules/BoardModule.html":{}}}],["actionscomponent",{"_index":50,"title":{"components/ActionsComponent.html":{}},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["actionsmodule",{"_index":234,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["actual_component",{"_index":232,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["addcard",{"_index":822,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["addcards",{"_index":1663,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["addcardstohand",{"_index":1680,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstohand(handid",{"_index":1683,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstostockpilebottom",{"_index":1873,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardstostockpilebottom(pileid",{"_index":1875,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardtodiscardpile",{"_index":848,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["addcardtodiscardpile(card",{"_index":850,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["agglomeration",{"_index":176,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomeration_card_interface_name",{"_index":137,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["agglomeration_piles_cards_feature_key",{"_index":441,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationcard",{"_index":251,"title":{"interfaces/AgglomerationCard.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["agglomerationcard.color",{"_index":384,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationcard.type",{"_index":383,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationcards",{"_index":371,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DomainComponent.html":{}}}],["agglomerationcards.get(cardid",{"_index":975,"title":{},"body":{"components/DomainComponent.html":{}}}],["agglomerationpilecard",{"_index":1593,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.cardid",{"_index":1601,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.id",{"_index":1598,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.pileid",{"_index":1602,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilescards",{"_index":94,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/GameRulesService.html":{}}}],["agglomerationpilescardsactions",{"_index":360,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.initagglomerationnewgame",{"_index":436,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":437,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.loadagglomerationpilescardsfailure",{"_index":332,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.loadagglomerationpilescardssuccess",{"_index":327,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.removeagglomerationpilecard",{"_index":438,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.selectagglomerationpilecard",{"_index":348,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.selectfirstcardfromagglomerationpile",{"_index":335,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.setagglomerationpilescardserror",{"_index":351,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.setagglomerationpilescardsinitialized",{"_index":313,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter",{"_index":455,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.getinitialstate",{"_index":457,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.removeone(id",{"_index":468,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.setall(agglomerationpilescards",{"_index":465,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardseffects",{"_index":295,"title":{"injectables/AgglomerationPilesCardsEffects.html":{}},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"modules/DataAccessGameModule.html":{}}}],["agglomerationpilescardsentity",{"_index":130,"title":{"interfaces/AgglomerationPilesCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsfacade",{"_index":95,"title":{"injectables/AgglomerationPilesCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["agglomerationpilescardsfeature",{"_index":363,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardspartialstate",{"_index":439,"title":{"interfaces/AgglomerationPilesCardsPartialState.html":{}},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsreducer",{"_index":462,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsselectors",{"_index":365,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile",{"_index":416,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile(id_agglomeration_road",{"_index":418,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile(id_agglomeration_town",{"_index":420,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getfirstcardpivotforpile",{"_index":339,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["agglomerationpilescardsstate",{"_index":442,"title":{"interfaces/AgglomerationPilesCardsState.html":{}},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsstore",{"_index":305,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["agglomerationtype",{"_index":257,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["agglomerationtype.hamlet",{"_index":288,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationtype.road",{"_index":282,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationtype.town",{"_index":292,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["alexios",{"_index":1973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":604,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["allagglomerationpilescards",{"_index":390,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["alldiscardpilecards",{"_index":845,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldiscardpilecardsreverse",{"_index":846,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldomainscards",{"_index":1186,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["alleventspilecards",{"_index":1347,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["allhamletpivots",{"_index":391,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["allhandscards",{"_index":1678,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["alllandspilecards",{"_index":1747,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["allroadpivots",{"_index":392,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["allstockpilescards",{"_index":1871,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["alltownpivots",{"_index":393,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["altair",{"_index":1967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altaïr",{"_index":1968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":2099,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["angular/cli@14.0.5",{"_index":2061,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":248,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":820,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["app.component",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":213,"title":{"components/AppComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["appmodule",{"_index":481,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/taormina",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Chainable.html":{}}}],["apps/ui",{"_index":682,"title":{},"body":{"interfaces/Chainable-1.html":{}}}],["arising",{"_index":2135,"title":{},"body":{"license.html":{}}}],["array",{"_index":552,"title":{},"body":{"components/CardBackComponent.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["array.from(actioncards.values",{"_index":1863,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["array.from(agglomerationcards.values",{"_index":382,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["array.from(developmentcards.values",{"_index":1864,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle",{"_index":1337,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle(array.from(eventcards.keys()).slice(1",{"_index":1342,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["arrayshuffle(array.from(landcards.keys",{"_index":1745,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["assertion",{"_index":2179,"title":{},"body":{"todo.html":{}}}],["associated",{"_index":2085,"title":{},"body":{"license.html":{}}}],["async",{"_index":986,"title":{},"body":{"components/DomainComponent.html":{}}}],["atmax",{"_index":1157,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["auspicious",{"_index":1985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auspiciousyear",{"_index":1479,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["authors",{"_index":2125,"title":{},"body":{"license.html":{}}}],["available",{"_index":181,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"modules.html":{}}}],["available_agglomeration_slot",{"_index":138,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_development_slot",{"_index":139,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_land_slot",{"_index":140,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["availableagglomerationslot",{"_index":271,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["availablecol",{"_index":1607,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["availabledevelopmentslot",{"_index":762,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["availablelandslot",{"_index":1729,"title":{},"body":{"interfaces/LandCard.html":{}}}],["availableresources",{"_index":1046,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["back",{"_index":549,"title":{},"body":{"components/CardBackComponent.html":{},"injectables/GameRulesService.html":{}}}],["back'},{'name",{"_index":218,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["back.component",{"_index":627,"title":{},"body":{"modules/CardBackModule.html":{}}}],["back.component.css",{"_index":550,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.html",{"_index":551,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts",{"_index":548,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:10",{"_index":562,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:11",{"_index":560,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:12",{"_index":561,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:13",{"_index":564,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:15",{"_index":565,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:16",{"_index":566,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.module",{"_index":1906,"title":{},"body":{"modules/UiCardModule.html":{}}}],["back.module.ts",{"_index":626,"title":{},"body":{"modules/CardBackModule.html":{}}}],["back/card",{"_index":547,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"modules/UiCardModule.html":{}}}],["background",{"_index":575,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["belowmax",{"_index":1156,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["beyond",{"_index":1093,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["black",{"_index":580,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["blue",{"_index":1978,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bluegoldminesandpastures",{"_index":1038,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["blueresourcecount",{"_index":1036,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["board",{"_index":512,"title":{},"body":{"components/BoardComponent.html":{}}}],["board'},{'name",{"_index":216,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["board.component.css",{"_index":513,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":514,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.component",{"_index":534,"title":{},"body":{"modules/BoardModule.html":{}}}],["board/board.module",{"_index":1391,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["boardcomponent",{"_index":215,"title":{"components/BoardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["boardmodule",{"_index":523,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":450,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":577,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["bottom",{"_index":610,"title":{},"body":{"components/CardBackComponent.html":{}}}],["box",{"_index":587,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["break",{"_index":1866,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["brickyard",{"_index":1954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bridge",{"_index":1963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2140,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["bruneton",{"_index":2075,"title":{},"body":{"license.html":{}}}],["building",{"_index":765,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["building.givesknowledge",{"_index":768,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.noduplicate",{"_index":769,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.tradepoints",{"_index":767,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.victorypoints",{"_index":770,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["buildingname",{"_index":757,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["buy",{"_index":175,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buyagglomeration",{"_index":67,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydevelopment",{"_index":68,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydisabled",{"_index":69,"title":{},"body":{"components/ActionsComponent.html":{}}}],["c",{"_index":2071,"title":{},"body":{"license.html":{}}}],["can't",{"_index":344,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["canprint",{"_index":263,"title":{"interfaces/CanPrint.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["card",{"_index":179,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["card.cardid",{"_index":1584,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.cardtype",{"_index":1583,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.id",{"_index":827,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card.module.ts",{"_index":1905,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card.type",{"_index":826,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card/src/lib/card",{"_index":546,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{}}}],["card/src/lib/ui",{"_index":1904,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card0",{"_index":1295,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.col",{"_index":1303,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.id",{"_index":1307,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.row",{"_index":1304,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1",{"_index":1297,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.col",{"_index":1300,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.id",{"_index":1308,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.row",{"_index":1301,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["cardbackcomponent",{"_index":217,"title":{"components/CardBackComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["cardbackmodule",{"_index":622,"title":{"modules/CardBackModule.html":{}},"body":{"modules/CardBackModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardfrontcomponent",{"_index":219,"title":{"components/CardFrontComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["cardfrontmodule",{"_index":646,"title":{"modules/CardFrontModule.html":{}},"body":{"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardid",{"_index":369,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards",{"_index":10,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandCard.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.actions",{"_index":361,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.effects",{"_index":693,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.effects.spec.ts",{"_index":2186,"title":{},"body":{"todo.html":{}}}],["cards.effects.ts",{"_index":300,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["cards.effects.ts:11",{"_index":1737,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:12",{"_index":835,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:139",{"_index":1135,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:15",{"_index":315,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:177",{"_index":1144,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:19",{"_index":1675,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:20",{"_index":1836,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:212",{"_index":1148,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:22",{"_index":1741,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:23",{"_index":839,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:235",{"_index":1090,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:26",{"_index":333,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:31",{"_index":1840,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:317",{"_index":1099,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:32",{"_index":1127,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:348",{"_index":1141,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:36",{"_index":1669,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:364",{"_index":1055,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:381",{"_index":1049,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:39",{"_index":1733,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:42",{"_index":831,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:422",{"_index":1025,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:429",{"_index":1029,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:43",{"_index":1131,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:444",{"_index":1145,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:46",{"_index":1664,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:488",{"_index":1027,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:49",{"_index":353,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:50",{"_index":1854,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:51",{"_index":1322,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:52",{"_index":823,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["cards.effects.ts:62",{"_index":1123,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:82",{"_index":1832,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:85",{"_index":307,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:94",{"_index":1828,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:96",{"_index":1115,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.facade",{"_index":694,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.facade.ts",{"_index":389,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:104",{"_index":1206,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:121",{"_index":1204,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:127",{"_index":1234,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:131",{"_index":1233,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:135",{"_index":1216,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:139",{"_index":1212,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:14",{"_index":1357,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:143",{"_index":1218,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:147",{"_index":1214,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:151",{"_index":1220,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:159",{"_index":1208,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:165",{"_index":1222,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:17",{"_index":1355,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:171",{"_index":1210,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:177",{"_index":1225,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:18",{"_index":859,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:19",{"_index":423,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:20",{"_index":1241,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:21",{"_index":855,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:22",{"_index":414,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:23",{"_index":1239,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:24",{"_index":857,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:25",{"_index":434,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["cards.facade.ts:26",{"_index":1242,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:27",{"_index":861,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:28",{"_index":419,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:29",{"_index":849,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:31",{"_index":417,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["cards.facade.ts:32",{"_index":1351,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:36",{"_index":421,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:38",{"_index":399,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:39",{"_index":852,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:40",{"_index":1352,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:42",{"_index":1228,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:43",{"_index":853,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:44",{"_index":1353,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:46",{"_index":1229,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:48",{"_index":400,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["cards.facade.ts:49",{"_index":851,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:50",{"_index":1236,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:52",{"_index":1685,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:54",{"_index":407,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:56",{"_index":1686,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:58",{"_index":1876,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:60",{"_index":409,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:66",{"_index":411,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:72",{"_index":1237,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:76",{"_index":1223,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:80",{"_index":1235,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:86",{"_index":1203,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:90",{"_index":1231,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.map((card",{"_index":1666,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cards.models",{"_index":362,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.models.ts",{"_index":367,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards.reducer",{"_index":364,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.reducer.ts",{"_index":440,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cards.selectors",{"_index":366,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.selectors.ts",{"_index":2191,"title":{},"body":{"todo.html":{}}}],["cards.ts",{"_index":2175,"title":{},"body":{"todo.html":{}}}],["cards/agglomeration",{"_index":299,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/DataAccessGameModule.html":{},"todo.html":{}}}],["cards/discard",{"_index":692,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["cards/domains",{"_index":698,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["cards/events",{"_index":702,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["cards/hands",{"_index":713,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["cards/lands",{"_index":717,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["cards/stock",{"_index":721,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cardscount",{"_index":1500,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardsvictorypoints",{"_index":1567,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardtype",{"_index":844,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["catcherror",{"_index":357,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["catcherror((error",{"_index":350,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["celebration",{"_index":987,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["celebrationpoints",{"_index":750,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":1005,"title":{},"body":{"components/DomainComponent.html":{}}}],["center",{"_index":603,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"miscellaneous/enumerations.html":{}}}],["chainable",{"_index":652,"title":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["change",{"_index":594,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"injectables/GameEffects.html":{}}}],["changes",{"_index":1045,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["charge",{"_index":2080,"title":{},"body":{"license.html":{}}}],["child",{"_index":670,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["claim",{"_index":2128,"title":{},"body":{"license.html":{}}}],["class",{"_index":150,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{}}}],["clay",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["claypit",{"_index":2007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clear",{"_index":198,"title":{},"body":{"components/ActionsComponent.html":{}}}],["cleardomaincardselection",{"_index":70,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cluster_actionsmodule",{"_index":237,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declarations",{"_index":238,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_exports",{"_index":239,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":524,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":525,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_exports",{"_index":526,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":527,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule",{"_index":623,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule_declarations",{"_index":624,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule_exports",{"_index":625,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule",{"_index":647,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule_declarations",{"_index":649,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule_exports",{"_index":648,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule",{"_index":683,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule_providers",{"_index":684,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dicemodule",{"_index":814,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_declarations",{"_index":815,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_exports",{"_index":816,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_domainmodule",{"_index":1006,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_declarations",{"_index":1009,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_exports",{"_index":1007,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_imports",{"_index":1008,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule",{"_index":1387,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_exports",{"_index":1389,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_imports",{"_index":1388,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["cluster_handmodule",{"_index":1657,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_declarations",{"_index":1658,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_exports",{"_index":1659,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_phasesmodule",{"_index":1814,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_declarations",{"_index":1816,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_exports",{"_index":1815,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule",{"_index":1819,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_declarations",{"_index":1822,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_exports",{"_index":1820,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_imports",{"_index":1821,"title":{},"body":{"modules/PilesModule.html":{}}}],["cluster_uicardmodule",{"_index":1901,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_exports",{"_index":1902,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_imports",{"_index":1903,"title":{},"body":{"modules/UiCardModule.html":{}}}],["col",{"_index":1051,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["color",{"_index":253,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":203,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["combine",{"_index":424,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["combinelatest",{"_index":953,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["command",{"_index":666,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["commonmodule",{"_index":247,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["community",{"_index":1966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["communitycenter",{"_index":1965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["component",{"_index":49,"title":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["component_template",{"_index":211,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["components",{"_index":51,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":358,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["concatmap(([_action",{"_index":1058,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["concatmap((action",{"_index":336,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["conditions",{"_index":2106,"title":{},"body":{"license.html":{}}}],["connection",{"_index":2136,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":331,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["console.log('custom",{"_index":668,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["constants",{"_index":375,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["constructor(actions",{"_index":304,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["constructor(domainscards",{"_index":905,"title":{},"body":{"components/DomainComponent.html":{}}}],["constructor(game",{"_index":88,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["constructor(gamerules",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(handscards",{"_index":1636,"title":{},"body":{"components/HandComponent.html":{}}}],["constructor(private",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["constructor(store",{"_index":398,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["container",{"_index":201,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["content",{"_index":602,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["contract",{"_index":2132,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2101,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2083,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2070,"title":{},"body":{"license.html":{}}}],["corepack@0.10.0",{"_index":2062,"title":{},"body":{"index.html":{}}}],["cost",{"_index":254,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":571,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["countandsteal",{"_index":1480,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["countandstealunprotectedgoldandwool",{"_index":1188,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["countstealresources",{"_index":1015,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createactioncard",{"_index":33,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["createagglomerationcard",{"_index":272,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["createagglomerationpilescardsentity",{"_index":380,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["createavailabledomaincard",{"_index":1189,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createavailabledomaincard(domainid",{"_index":1205,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createbuilding",{"_index":764,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createbuilding(id",{"_index":2038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcard",{"_index":1016,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createdevelopmentcard",{"_index":763,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["creatediscardpilecardsentity",{"_index":842,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{}}}],["creatediscardpilecardsentity(uuidv4",{"_index":825,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["createdomain",{"_index":881,"title":{},"body":{"interfaces/Domain.html":{}}}],["createdomainscardsentity",{"_index":1053,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createeffect",{"_index":310,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["createentityadapter",{"_index":443,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createeventcard",{"_index":1317,"title":{},"body":{"interfaces/EventCard.html":{}}}],["createeventspilecardsentity",{"_index":1339,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createeventspilecardsentity(uuidv4",{"_index":1346,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createhamlet",{"_index":285,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createhamlet(id",{"_index":2043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createhand",{"_index":1628,"title":{},"body":{"interfaces/Hand.html":{}}}],["createhandscardsentity",{"_index":1677,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{}}}],["createhandscardsentity(uuidv4",{"_index":1667,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["createinitialagglomerationpilescards",{"_index":314,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["createinitialdomainscards",{"_index":1126,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createinitialeventspilecards",{"_index":1326,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["createinitiallandspilecards",{"_index":1736,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["createinitialstockpilescards",{"_index":1835,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createlandcard",{"_index":1730,"title":{},"body":{"interfaces/LandCard.html":{}}}],["createlandspilecardsentity",{"_index":1744,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createlandspilecardsentity(uuidv4",{"_index":1746,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createreducer",{"_index":447,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createroad",{"_index":2020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createroad(id",{"_index":276,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createselector",{"_index":428,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["createship",{"_index":2021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createship(id",{"_index":771,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createstockpilescardsentity",{"_index":1858,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createstockpilescardsentity(uuidv4",{"_index":1830,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["createtown",{"_index":2022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtown(id",{"_index":289,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior",{"_index":778,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior(id",{"_index":2042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":1809,"title":{},"body":{"components/PhasesComponent.html":{}}}],["custom",{"_index":319,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cypress",{"_index":662,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"drag",{"_index":671,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add('login",{"_index":667,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["damages",{"_index":2129,"title":{},"body":{"license.html":{}}}],["data",{"_index":368,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["dataaccessgamemodule",{"_index":487,"title":{"modules/DataAccessGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"modules.html":{},"overview.html":{}}}],["deal",{"_index":2088,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2137,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":244,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{}}}],["declare",{"_index":660,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["default",{"_index":308,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["defined",{"_index":100,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["dependencies",{"_index":236,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["development",{"_index":187,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["development.name",{"_index":995,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["development_card_interface_name",{"_index":141,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["developmentcard",{"_index":748,"title":{"interfaces/DevelopmentCard.html":{}},"body":{"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/EventCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["developmentcards",{"_index":950,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["developmentcards.get(cardid",{"_index":974,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["developmenttype",{"_index":756,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["developmenttype.building",{"_index":766,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.ship",{"_index":776,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.warrior",{"_index":780,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["devtools",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["dice",{"_index":785,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice'},{'name",{"_index":222,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["dice.component.css",{"_index":786,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice.component.html",{"_index":787,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice/dice.component",{"_index":818,"title":{},"body":{"modules/DiceModule.html":{}}}],["dice/dice.module",{"_index":536,"title":{},"body":{"modules/BoardModule.html":{}}}],["dicecomponent",{"_index":221,"title":{"components/DiceComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["diceid",{"_index":1936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dicemodule",{"_index":528,"title":{"modules/DiceModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DiceModule.html":{},"modules.html":{},"overview.html":{}}}],["dicevalue",{"_index":1227,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["die",{"_index":640,"title":{},"body":{"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["dieiconname",{"_index":633,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["different",{"_index":1072,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["directive",{"_index":209,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["directives",{"_index":231,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["disable",{"_index":35,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["discard",{"_index":841,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discard_pile_cards_feature_key",{"_index":868,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecard",{"_index":830,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecards",{"_index":834,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/GameRulesService.html":{}}}],["discardpilecardsactions",{"_index":840,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.adddiscardpilecard",{"_index":829,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":865,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsactions.loaddiscardpilecardsfailure",{"_index":838,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.loaddiscardpilecardssuccess",{"_index":837,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.setdiscardpilecardsinitialized",{"_index":833,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter",{"_index":870,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.addone(discardpilecard",{"_index":878,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.getinitialstate",{"_index":872,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.setall(discardpilecards",{"_index":876,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardseffects",{"_index":690,"title":{"injectables/DiscardPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsentity",{"_index":843,"title":{"interfaces/DiscardPileCardsEntity.html":{}},"body":{"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsfacade",{"_index":685,"title":{"injectables/DiscardPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["discardpilecardsfeature",{"_index":862,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardspartialstate",{"_index":867,"title":{"interfaces/DiscardPileCardsPartialState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsreducer",{"_index":873,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsselectors",{"_index":863,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsstate",{"_index":869,"title":{"interfaces/DiscardPileCardsState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["display",{"_index":202,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["distribute",{"_index":2097,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":2086,"title":{},"body":{"license.html":{}}}],["dom",{"_index":54,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain",{"_index":186,"title":{"interfaces/Domain.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{}}}],["domain'},{'name",{"_index":224,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain.color",{"_index":983,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.css",{"_index":883,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.html",{"_index":884,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain/domain.component",{"_index":1012,"title":{},"body":{"modules/DomainModule.html":{}}}],["domain/domain.module",{"_index":537,"title":{},"body":{"modules/BoardModule.html":{}}}],["domaincard",{"_index":161,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.cardid",{"_index":1620,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.cardtype",{"_index":1619,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.col",{"_index":1604,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.domainid",{"_index":973,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.id",{"_index":1600,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.row",{"_index":1622,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard?.cardtype",{"_index":162,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards",{"_index":1592,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards.filter",{"_index":160,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards.length",{"_index":1595,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards[0",{"_index":1596,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincardtype",{"_index":1163,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"miscellaneous/typealiases.html":{}}}],["domaincolor",{"_index":256,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["domaincolor.red",{"_index":1468,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["domaincomponent",{"_index":223,"title":{"components/DomainComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["domainid",{"_index":904,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["domainmodule",{"_index":529,"title":{"modules/DomainModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DomainModule.html":{},"modules.html":{},"overview.html":{}}}],["domains",{"_index":197,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domains.get(this.domainid",{"_index":954,"title":{},"body":{"components/DomainComponent.html":{}}}],["domains_cards_feature_key",{"_index":1269,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscard.id).includes(pivotid",{"_index":978,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards",{"_index":90,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domainscards.filter((domaincard",{"_index":972,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards.map((domainscard",{"_index":977,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscardsactions",{"_index":1150,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.adddomaincard",{"_index":1054,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.countandstealunprotectedgoldandwool",{"_index":1256,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.createdomaincard",{"_index":1255,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresources",{"_index":1247,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1249,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesfordie",{"_index":1248,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.loaddomainscardsfailure",{"_index":1130,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.loaddomainscardssuccess",{"_index":1129,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.putcardinpivot",{"_index":1254,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.setdomainscardserror",{"_index":1089,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.setdomainscardsinitialized",{"_index":1125,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.toggledomaincardselection",{"_index":1252,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.updatedomaincard",{"_index":1098,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.updatedomainscards",{"_index":1048,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsadapter",{"_index":1272,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.addone(domaincard",{"_index":1286,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.getinitialstate",{"_index":1274,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.removeone(id",{"_index":1310,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.setall(domainscards",{"_index":1279,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updatemany(updates",{"_index":1284,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updateone(update",{"_index":1282,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardseffects",{"_index":696,"title":{"injectables/DomainsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{}}}],["domainscardsentity",{"_index":129,"title":{"interfaces/DomainsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsfacade",{"_index":91,"title":{"injectables/DomainsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["domainscardsfeature",{"_index":1151,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardspartialstate",{"_index":1268,"title":{"interfaces/DomainsCardsPartialState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsreducer",{"_index":1275,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsselectors",{"_index":1152,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.count_1",{"_index":1108,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_2",{"_index":1110,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_3",{"_index":1112,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_4",{"_index":1114,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getcardsvictorypointsfordomain(domainid",{"_index":1264,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getcelebrationpointsfordomain(domainid",{"_index":1266,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getdomainresourcecountseenbythieves",{"_index":1033,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getdomainunprotectedgoldminesandpastures",{"_index":1034,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardpivotwithlockedresources",{"_index":1057,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseauspiciousyear",{"_index":1101,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseoneproduction",{"_index":1118,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreasetwoproduction",{"_index":1120,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getmasterydomainfortype(type",{"_index":1263,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getmerchantshipcountfordomain(domainid",{"_index":1265,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.hasdomaincommunitycenter(domainid",{"_index":1267,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsstate",{"_index":1270,"title":{"interfaces/DomainsCardsState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsstore",{"_index":1024,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["draw",{"_index":1999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drawcardfromstocktohand",{"_index":1486,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawcardfromstocktohand(pileid",{"_index":1496,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand",{"_index":1487,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand(pileid",{"_index":1499,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["dual",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["duel",{"_index":653,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duel/src/app/app.component.ts",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:12",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:9",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.module.ts",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/commands.ts",{"_index":654,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["e2e/src/support/commands.ts:15",{"_index":658,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["effects",{"_index":406,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["effectsmodule",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([agglomerationpilescardseffects",{"_index":738,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([discardpilecardseffects",{"_index":747,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([domainscardseffects",{"_index":729,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([eventspilecardseffects",{"_index":735,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([gameeffects",{"_index":725,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([handscardseffects",{"_index":732,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([landspilecardseffects",{"_index":744,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([stockpilescardseffects",{"_index":741,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forroot",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":208,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["email",{"_index":659,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["empty",{"_index":346,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{}}}],["enable",{"_index":284,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["engine",{"_index":136,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["engine.module.ts",{"_index":1386,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/feature",{"_index":1385,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/game",{"_index":1477,"title":{},"body":{"injectables/GameRulesService.html":{},"todo.html":{}}}],["entities",{"_index":1305,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["entityadapter",{"_index":444,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["entitystate",{"_index":445,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["enumerations",{"_index":1932,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["environment.production",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":330,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["error(`can't",{"_index":773,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["error(`couldn't",{"_index":1154,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["error.message",{"_index":352,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["errormsg",{"_index":451,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["eslint",{"_index":34,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{},"todo.html":{}}}],["eslint/explicit",{"_index":2193,"title":{},"body":{"todo.html":{}}}],["eslint/no",{"_index":39,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["event",{"_index":813,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{}}}],["event.name",{"_index":1812,"title":{},"body":{"components/PhasesComponent.html":{}}}],["event_0",{"_index":1344,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["event_card_interface_name",{"_index":1316,"title":{},"body":{"interfaces/EventCard.html":{}}}],["eventcard",{"_index":1312,"title":{"interfaces/EventCard.html":{}},"body":{"interfaces/EventCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/functions.html":{}}}],["eventcards",{"_index":1336,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventcards.get(cardid",{"_index":1804,"title":{},"body":{"components/PhasesComponent.html":{}}}],["eventcards.get(pivot.cardid)?.name",{"_index":1516,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventdie",{"_index":1425,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["eventemitter",{"_index":563,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["eventfromvalue",{"_index":2023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventfromvalue(value",{"_index":2045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventname",{"_index":1314,"title":{},"body":{"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["eventname.auspiciousyear",{"_index":1517,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventname.festival",{"_index":1526,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["events",{"_index":1333,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["events_pile_cards_feature_key",{"_index":1366,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecards",{"_index":1325,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecards[0].id",{"_index":1377,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions",{"_index":1332,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.loadeventspilecardsfailure",{"_index":1329,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsactions.loadeventspilecardssuccess",{"_index":1328,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesinitializedeventspilecards",{"_index":1324,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesselectfirsteventspilecards",{"_index":1331,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter",{"_index":1368,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.getinitialstate",{"_index":1370,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.removeone",{"_index":1383,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.setall(eventspilecards",{"_index":1374,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardseffects",{"_index":700,"title":{"injectables/EventsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsentity",{"_index":1335,"title":{"interfaces/EventsPileCardsEntity.html":{}},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecardsfacade",{"_index":686,"title":{"injectables/EventsPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["eventspilecardsfeature",{"_index":1334,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardspartialstate",{"_index":1365,"title":{"interfaces/EventsPileCardsPartialState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsreducer",{"_index":1371,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsselectors",{"_index":1359,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardsstate",{"_index":1367,"title":{"interfaces/EventsPileCardsState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsstore",{"_index":1321,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventvalue",{"_index":804,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["eventvalue.event",{"_index":1524,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventvalue.thieves",{"_index":1545,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["evie",{"_index":1970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["example",{"_index":669,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["exchange",{"_index":2005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["existing",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["explicit",{"_index":40,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["exports",{"_index":245,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["expose",{"_index":429,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["express",{"_index":2116,"title":{},"body":{"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ezio",{"_index":1969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade",{"_index":432,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["false",{"_index":461,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["featureenginemodule",{"_index":1384,"title":{"modules/FeatureEngineModule.html":{}},"body":{"modules/FeatureEngineModule.html":{},"modules.html":{}}}],["featuregamemodule",{"_index":488,"title":{"modules/FeatureGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["festival",{"_index":1481,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":317,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["field",{"_index":2010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["filename",{"_index":2149,"title":{},"body":{"todo.html":{}}}],["files",{"_index":2087,"title":{},"body":{"license.html":{}}}],["filter",{"_index":147,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["filter((die",{"_index":1544,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((handcard",{"_index":168,"title":{},"body":{"components/ActionsComponent.html":{}}}],["filter((pivot",{"_index":1515,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((stockpilecard",{"_index":1572,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((value",{"_index":1533,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filtering",{"_index":1848,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["find",{"_index":774,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{}}}],["finish",{"_index":1813,"title":{},"body":{"components/PhasesComponent.html":{}}}],["first",{"_index":345,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["firstland",{"_index":1066,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstland.type",{"_index":1071,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstpivot",{"_index":1064,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["fitness",{"_index":2121,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":2157,"title":{},"body":{"todo.html":{}}}],["fixmes",{"_index":2156,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":200,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["following",{"_index":2105,"title":{},"body":{"license.html":{}}}],["force",{"_index":1406,"title":{},"body":{"injectables/GameEffects.html":{}}}],["foreign",{"_index":1183,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["forest",{"_index":2008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":1117,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["formsmodule",{"_index":819,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{}}}],["foundid",{"_index":1288,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["foundry",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["free",{"_index":2079,"title":{},"body":{"license.html":{}}}],["fromagglomerationpilescards",{"_index":705,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromagglomerationpilescards.agglomeration_piles_cards_feature_key",{"_index":733,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromagglomerationpilescards.agglomerationpilescardsreducer",{"_index":734,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards",{"_index":695,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discard_pile_cards_feature_key",{"_index":745,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discardpilecardsreducer",{"_index":746,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards",{"_index":699,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domains_cards_feature_key",{"_index":727,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domainscardsreducer",{"_index":728,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards",{"_index":703,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.events_pile_cards_feature_key",{"_index":742,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.eventspilecardsreducer",{"_index":743,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame",{"_index":709,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame.gamereducer",{"_index":724,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards",{"_index":714,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.hands_cards_feature_key",{"_index":730,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.handscardsreducer",{"_index":731,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards",{"_index":718,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.lands_pile_cards_feature_key",{"_index":736,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.landspilecardsreducer",{"_index":737,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards",{"_index":722,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stock_piles_cards_feature_key",{"_index":739,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stockpilescardsreducer",{"_index":740,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["front",{"_index":630,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front'},{'name",{"_index":220,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["front.component",{"_index":651,"title":{},"body":{"modules/CardFrontModule.html":{}}}],["front.component.css",{"_index":631,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.html",{"_index":632,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts",{"_index":629,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:10",{"_index":636,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:11",{"_index":634,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:12",{"_index":635,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:13",{"_index":637,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:15",{"_index":638,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.module",{"_index":1907,"title":{},"body":{"modules/UiCardModule.html":{}}}],["front.module.ts",{"_index":650,"title":{},"body":{"modules/CardFrontModule.html":{}}}],["front/card",{"_index":628,"title":{},"body":{"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{}}}],["function",{"_index":41,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["functions",{"_index":2019,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2104,"title":{},"body":{"license.html":{}}}],["game",{"_index":104,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["game.actions",{"_index":1419,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game.module.ts",{"_index":689,"title":{},"body":{"modules/DataAccessGameModule.html":{},"modules/FeatureGameModule.html":{}}}],["game.reducer",{"_index":1421,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game.selectors",{"_index":1423,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game/src/lib/+state/agglomeration",{"_index":298,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/discard",{"_index":821,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/domains",{"_index":1014,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/events",{"_index":1319,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts",{"_index":1392,"title":{},"body":{"injectables/GameEffects.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts:16",{"_index":1402,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:26",{"_index":1417,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:49",{"_index":1410,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:59",{"_index":1397,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.facade.ts",{"_index":1424,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:20",{"_index":1455,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:21",{"_index":1449,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:24",{"_index":1447,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:25",{"_index":1451,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:26",{"_index":1453,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:27",{"_index":1433,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:35",{"_index":1434,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:39",{"_index":1442,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:43",{"_index":1444,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:47",{"_index":1437,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:51",{"_index":1443,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:55",{"_index":1439,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:59",{"_index":1441,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:63",{"_index":1436,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.reducer.ts",{"_index":1464,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game/src/lib/+state/hands",{"_index":1662,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["game/src/lib/+state/lands",{"_index":1732,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["game/src/lib/+state/stock",{"_index":1825,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/actions/actions.module.ts",{"_index":243,"title":{},"body":{"modules/ActionsModule.html":{}}}],["game/src/lib/actions/actions/actions.component.ts",{"_index":57,"title":{},"body":{"components/ActionsComponent.html":{},"todo.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:110",{"_index":113,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:121",{"_index":127,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:129",{"_index":126,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:133",{"_index":117,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:139",{"_index":124,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:143",{"_index":123,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:147",{"_index":116,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:151",{"_index":122,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:155",{"_index":121,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:165",{"_index":114,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:175",{"_index":111,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:179",{"_index":125,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:32",{"_index":101,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:42",{"_index":109,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:48",{"_index":105,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:52",{"_index":118,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:58",{"_index":119,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:71",{"_index":112,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:85",{"_index":108,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:89",{"_index":115,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:97",{"_index":120,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/board/board.module.ts",{"_index":533,"title":{},"body":{"modules/BoardModule.html":{}}}],["game/src/lib/board/board/board.component.ts",{"_index":511,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:15",{"_index":522,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:16",{"_index":521,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:17",{"_index":520,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:18",{"_index":519,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/data",{"_index":688,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["game/src/lib/dice/dice.module.ts",{"_index":817,"title":{},"body":{"modules/DiceModule.html":{}}}],["game/src/lib/dice/dice/dice.component.ts",{"_index":784,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:19",{"_index":795,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:23",{"_index":803,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:32",{"_index":799,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:36",{"_index":798,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:40",{"_index":796,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:44",{"_index":797,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:48",{"_index":802,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/domain/domain.module.ts",{"_index":1011,"title":{},"body":{"modules/DomainModule.html":{}}}],["game/src/lib/domain/domain/domain.component.ts",{"_index":882,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:114",{"_index":918,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:122",{"_index":915,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:126",{"_index":909,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:130",{"_index":920,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:134",{"_index":936,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:142",{"_index":940,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:146",{"_index":938,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:150",{"_index":942,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:154",{"_index":933,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:39",{"_index":907,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:41",{"_index":947,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:42",{"_index":943,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:43",{"_index":948,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:44",{"_index":944,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:45",{"_index":945,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:46",{"_index":946,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:48",{"_index":949,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:49",{"_index":906,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:56",{"_index":916,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:60",{"_index":925,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:64",{"_index":911,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:68",{"_index":927,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:74",{"_index":929,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:80",{"_index":931,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:84",{"_index":913,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:99",{"_index":923,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/feature",{"_index":1390,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["game/src/lib/hand/hand.module.ts",{"_index":1660,"title":{},"body":{"modules/HandModule.html":{}}}],["game/src/lib/hand/hand/hand.component.ts",{"_index":1629,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:24",{"_index":1638,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:26",{"_index":1647,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:27",{"_index":1637,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:31",{"_index":1642,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:35",{"_index":1644,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:43",{"_index":1640,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:47",{"_index":1641,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:51",{"_index":1646,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/phases/phases.module.ts",{"_index":1817,"title":{},"body":{"modules/PhasesModule.html":{}}}],["game/src/lib/phases/phases/phases.component.ts",{"_index":1777,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:22",{"_index":1799,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:23",{"_index":1788,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:30",{"_index":1792,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:34",{"_index":1796,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:38",{"_index":1793,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:42",{"_index":1797,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:46",{"_index":1791,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:50",{"_index":1794,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:54",{"_index":1795,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:58",{"_index":1789,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:62",{"_index":1798,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/piles/piles.module.ts",{"_index":1823,"title":{},"body":{"modules/PilesModule.html":{}}}],["game/src/test/fixtures/domains",{"_index":2174,"title":{},"body":{"todo.html":{}}}],["game_feature_key",{"_index":1465,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions",{"_index":1418,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions.seteventdie",{"_index":1409,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setnextproductiondie",{"_index":1416,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setproductiondie",{"_index":1415,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throweventdie",{"_index":1400,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throwproductiondie",{"_index":1401,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameeffects",{"_index":706,"title":{"injectables/GameEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameEffects.html":{}}}],["gameended",{"_index":1482,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["gamefacade",{"_index":89,"title":{"injectables/GameFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["gamepartialstate",{"_index":1420,"title":{"interfaces/GamePartialState.html":{}},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamephase",{"_index":142,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamephase.initialthrow",{"_index":805,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{}}}],["gamephase.loopactions",{"_index":155,"title":{},"body":{"components/ActionsComponent.html":{}}}],["gamephase.loopthrow",{"_index":806,"title":{},"body":{"components/DiceComponent.html":{}}}],["gamereducer",{"_index":1469,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamerules",{"_index":98,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["gamerulesservice",{"_index":99,"title":{"injectables/GameRulesService.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["gameselectors",{"_index":1422,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["gamestate",{"_index":1466,"title":{"interfaces/GameState.html":{}},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamestore",{"_index":1396,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gap",{"_index":204,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["generated",{"_index":2056,"title":{},"body":{"index.html":{}}}],["getaction",{"_index":1781,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getactioncard",{"_index":1632,"title":{},"body":{"components/HandComponent.html":{}}}],["getactioncard(cardid",{"_index":1639,"title":{},"body":{"components/HandComponent.html":{}}}],["getagglomerationcard",{"_index":887,"title":{},"body":{"components/DomainComponent.html":{}}}],["getagglomerationcard(cardid",{"_index":908,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcardsvictorypointsfordomain",{"_index":1190,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcardsvictorypointsfordomain(domainid",{"_index":1207,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpoints",{"_index":888,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domain.id",{"_index":989,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domainid",{"_index":910,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpointsfordomain",{"_index":1191,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpointsfordomain(domainid",{"_index":1209,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcolumnstemplate",{"_index":889,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcolumnstemplate(domainid",{"_index":912,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdevelopmentcard",{"_index":890,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdevelopmentcard(cardid",{"_index":914,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdomain",{"_index":891,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainmaxcol",{"_index":1192,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxcol(domainid",{"_index":1211,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow",{"_index":1193,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow(domainid",{"_index":1213,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol",{"_index":1194,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol(domainid",{"_index":1215,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow",{"_index":1195,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow(domainid",{"_index":1217,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainscards",{"_index":892,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainscards(domainid",{"_index":917,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainselectedagglomerationslots",{"_index":71,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselecteddevelopmentcards",{"_index":72,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselectedlandcards",{"_index":73,"title":{},"body":{"components/ActionsComponent.html":{}}}],["geteventcard",{"_index":1782,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventcard(cardid",{"_index":1790,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventdie",{"_index":789,"title":{},"body":{"components/DiceComponent.html":{}}}],["gethand",{"_index":1633,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards",{"_index":1634,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards(handid",{"_index":1643,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandselecteddevelopmentcard",{"_index":74,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getimgsrc",{"_index":553,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"miscellaneous/functions.html":{}}}],["getimgsrc(name",{"_index":2047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlandcard",{"_index":893,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcard(cardid",{"_index":919,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcardfrompivot",{"_index":1022,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getlandcardfrompivot(pivot",{"_index":1026,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getmasterydomainfortype",{"_index":1196,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmasterydomainfortype(masterypointstype.strength",{"_index":958,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(masterypointstype.trade",{"_index":961,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(type",{"_index":1219,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain",{"_index":1197,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain(domainid",{"_index":1221,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getnextproductiondie",{"_index":790,"title":{},"body":{"components/DiceComponent.html":{}}}],["getphase",{"_index":1783,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getpileselectedlandcard",{"_index":75,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getplayer",{"_index":1784,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getproductiondie",{"_index":791,"title":{},"body":{"components/DiceComponent.html":{}}}],["getrandomeventdievalue",{"_index":1404,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrandomproductiondievalue",{"_index":1414,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrowstemplate",{"_index":894,"title":{},"body":{"components/DomainComponent.html":{}}}],["getrowstemplate(domainid",{"_index":922,"title":{},"body":{"components/DomainComponent.html":{}}}],["getselectedactioncard",{"_index":76,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedagglomerationpilecard",{"_index":77,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailableagglomerationslots",{"_index":78,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailabledevelopmentslots",{"_index":79,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailablelandslots",{"_index":80,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedeventspilecard",{"_index":1785,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getselectedhandcard",{"_index":81,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getshipscount",{"_index":895,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domain.id",{"_index":985,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domainid",{"_index":924,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery",{"_index":896,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery(domainid",{"_index":926,"title":{},"body":{"components/DomainComponent.html":{}}}],["getting",{"_index":2053,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettrademastery",{"_index":897,"title":{},"body":{"components/DomainComponent.html":{}}}],["gettrademastery(domainid",{"_index":928,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints",{"_index":898,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domain.id",{"_index":994,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domainid",{"_index":930,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypointsfordomain",{"_index":1488,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["getvictorypointsfordomain(domainid",{"_index":1502,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["give",{"_index":193,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["givelockedresources",{"_index":82,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["givesknowledge",{"_index":751,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["globally",{"_index":2058,"title":{},"body":{"index.html":{}}}],["goes",{"_index":323,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["gold",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldmine",{"_index":2009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldsmith",{"_index":1945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["granted",{"_index":2078,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2141,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":576,"title":{},"body":{"components/CardBackComponent.html":{}}}],["grid",{"_index":1004,"title":{},"body":{"components/DomainComponent.html":{}}}],["hamlet",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hamletentities",{"_index":387,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["hand",{"_index":188,"title":{"interfaces/Hand.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{}}}],["hand'},{'name",{"_index":226,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["hand.color",{"_index":1655,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.css",{"_index":1630,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.html",{"_index":1631,"title":{},"body":{"components/HandComponent.html":{}}}],["hand/hand.component",{"_index":1661,"title":{},"body":{"modules/HandModule.html":{}}}],["hand/hand.module",{"_index":538,"title":{},"body":{"modules/BoardModule.html":{}}}],["handcard",{"_index":165,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["handcard.cardid",{"_index":1609,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.cardtype",{"_index":1618,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.handid",{"_index":1652,"title":{},"body":{"components/HandComponent.html":{}}}],["handcard?.cardtype",{"_index":166,"title":{},"body":{"components/ActionsComponent.html":{}}}],["handcomponent",{"_index":225,"title":{"components/HandComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["handid",{"_index":1497,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{}}}],["handmodule",{"_index":530,"title":{"modules/HandModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/HandModule.html":{},"modules.html":{},"overview.html":{}}}],["hands",{"_index":1627,"title":{},"body":{"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["hands.get(this.handid",{"_index":1648,"title":{},"body":{"components/HandComponent.html":{}}}],["hands_cards_feature_key",{"_index":1699,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards",{"_index":92,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards.filter((handcard",{"_index":1651,"title":{},"body":{"components/HandComponent.html":{}}}],["handscardsactions",{"_index":1676,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsactions.addhandscards",{"_index":1668,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardsfailure",{"_index":1674,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardssuccess",{"_index":1673,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.sethandscardsinitialized",{"_index":1671,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsadapter",{"_index":1701,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.addmany(handscards",{"_index":1712,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.getinitialstate",{"_index":1703,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.removeone(id",{"_index":1717,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.setall(handscards",{"_index":1708,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardseffects",{"_index":711,"title":{"injectables/HandsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{}}}],["handscardsentity",{"_index":131,"title":{"interfaces/HandsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsfacade",{"_index":93,"title":{"injectables/HandsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"overview.html":{}}}],["handscardsfeature",{"_index":1690,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardspartialstate",{"_index":1698,"title":{"interfaces/HandsCardsPartialState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsreducer",{"_index":1704,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsselectors",{"_index":1691,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardsstate",{"_index":1700,"title":{"interfaces/HandsCardsState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["harvest",{"_index":1975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hascolor",{"_index":259,"title":{"interfaces/HasColor.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["hascost",{"_index":261,"title":{"interfaces/HasCost.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{}}}],["hasdomaincommunitycenter",{"_index":1198,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasdomaincommunitycenter(domainid",{"_index":1224,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasid",{"_index":12,"title":{"interfaces/HasId.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{}}}],["hasname",{"_index":24,"title":{"interfaces/HasName.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["hasrules",{"_index":26,"title":{"interfaces/HasRules.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["hasvictorypoints",{"_index":265,"title":{"interfaces/HasVictoryPoints.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{}}}],["hawker",{"_index":1987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["height",{"_index":574,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["here",{"_index":324,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["hereby",{"_index":2077,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2126,"title":{},"body":{"license.html":{}}}],["html",{"_index":207,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"dependencies.html":{}}}],["hélène",{"_index":2074,"title":{},"body":{"license.html":{}}}],["icon",{"_index":606,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["iconname",{"_index":570,"title":{},"body":{"components/CardBackComponent.html":{}}}],["id",{"_index":15,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"miscellaneous/functions.html":{}}}],["id_agglomeration_hamlet",{"_index":372,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_agglomeration_road",{"_index":373,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["id_agglomeration_town",{"_index":374,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_clay_pit_blue",{"_index":1165,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_clay_pit_red",{"_index":1166,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_blue",{"_index":515,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_red",{"_index":516,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_field_blue",{"_index":1167,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_field_red",{"_index":1168,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_blue",{"_index":1169,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_red",{"_index":1170,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_blue",{"_index":1171,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_red",{"_index":1172,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_1",{"_index":1173,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_2",{"_index":1174,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_1",{"_index":1175,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_2",{"_index":1176,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hand_blue",{"_index":517,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_hand_red",{"_index":518,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_pasture_blue",{"_index":1177,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_pasture_red",{"_index":1178,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_blue",{"_index":1179,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_red",{"_index":1180,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_blue",{"_index":1181,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_red",{"_index":1182,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["ids",{"_index":1853,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ignore",{"_index":1097,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["ignores",{"_index":2247,"title":{},"body":{"todo.html":{}}}],["implied",{"_index":2117,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["imports",{"_index":250,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["included",{"_index":2110,"title":{},"body":{"license.html":{}}}],["including",{"_index":2091,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1003,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["increasefour",{"_index":1105,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseone",{"_index":1102,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresources",{"_index":899,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresources(pivotid",{"_index":932,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresourcesauspiciousyear",{"_index":1017,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresourcesforauspiciousyear",{"_index":1199,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie",{"_index":1018,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie(value",{"_index":1226,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["increasethree",{"_index":1104,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increasetwo",{"_index":1103,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["indent",{"_index":2246,"title":{},"body":{"todo.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["initial",{"_index":459,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{}}}],["initialagglomerationpilescardsstate",{"_index":456,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["initialdiscardpilecardsstate",{"_index":871,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["initialdomainscards",{"_index":1185,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["initialdomainscardsstate",{"_index":1273,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["initialdraw",{"_index":1998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initialeventspilecardsstate",{"_index":1369,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["initialgamestate",{"_index":1467,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["initialhandscardsstate",{"_index":1702,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["initialization",{"_index":401,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initialized",{"_index":449,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initiallandspilecardsstate",{"_index":1766,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["initialstockpilescardsstate",{"_index":1889,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initialthrow",{"_index":1997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initnewgame",{"_index":301,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initsavedgame",{"_index":302,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectable",{"_index":294,"title":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectables",{"_index":296,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["input",{"_index":567,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inputs",{"_index":554,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inset",{"_index":619,"title":{},"body":{"components/CardBackComponent.html":{}}}],["installed",{"_index":2059,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1847,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"overview.html":{}}}],["interfaces/color",{"_index":260,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/LandCard.html":{}}}],["interfaces/cost",{"_index":262,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["interfaces/entity",{"_index":23,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/name",{"_index":25,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/print",{"_index":264,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/rules",{"_index":27,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/victory",{"_index":266,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["invention",{"_index":1988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactioncard",{"_index":2025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isactioncard(obj",{"_index":42,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{}}}],["isagglomerationcard",{"_index":2026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isagglomerationcard(obj",{"_index":293,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["iscanprint",{"_index":2027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iscanprint(obj",{"_index":543,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{}}}],["isdevelopmentcard",{"_index":2029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdevelopmentcard(obj",{"_index":783,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["isdomaincardselected",{"_index":900,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivot.id",{"_index":996,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivotid",{"_index":935,"title":{},"body":{"components/DomainComponent.html":{}}}],["iseventcard",{"_index":2030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iseventcard(obj",{"_index":1318,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{}}}],["ishasname",{"_index":2031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishasname(obj",{"_index":1722,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["islandcard",{"_index":2033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["islandcard(obj",{"_index":1731,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":605,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["jacob",{"_index":1971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["justify",{"_index":601,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["kassandra",{"_index":1972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":1184,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["kind",{"_index":2115,"title":{},"body":{"license.html":{}}}],["land",{"_index":192,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{}}}],["land.die",{"_index":998,"title":{},"body":{"components/DomainComponent.html":{}}}],["land.type",{"_index":1070,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["land_card_interface_name",{"_index":143,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["landcard",{"_index":921,"title":{"interfaces/LandCard.html":{}},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["landcards",{"_index":951,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["landcards.get(cardid",{"_index":976,"title":{},"body":{"components/DomainComponent.html":{}}}],["landcards.get(pivot.cardid",{"_index":1162,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["lands",{"_index":1743,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["lands_pile_cards_feature_key",{"_index":1763,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecard",{"_index":1612,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecard.cardid",{"_index":1614,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecards",{"_index":96,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions",{"_index":1742,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.loadlandspilecardsfailure",{"_index":1740,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsactions.loadlandspilecardssuccess",{"_index":1739,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.selectlandspilecard",{"_index":1760,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsactions.setlandspilecardsinitialized",{"_index":1735,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter",{"_index":1765,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.getinitialstate",{"_index":1767,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.removeone(id",{"_index":1776,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.setall(landspilecards",{"_index":1771,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardseffects",{"_index":715,"title":{"injectables/LandsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsentity",{"_index":132,"title":{"interfaces/LandsPileCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsfacade",{"_index":97,"title":{"injectables/LandsPileCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"overview.html":{}}}],["landspilecardsfeature",{"_index":1756,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardspartialstate",{"_index":1762,"title":{"interfaces/LandsPileCardsPartialState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsreducer",{"_index":1768,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsselectors",{"_index":1757,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsstate",{"_index":1764,"title":{"interfaces/LandsPileCardsState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landtype",{"_index":1727,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{}}}],["laure",{"_index":2073,"title":{},"body":{"license.html":{}}}],["legend",{"_index":206,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["len",{"_index":454,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["liability",{"_index":2130,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2127,"title":{},"body":{"license.html":{}}}],["libs/.../action.ts",{"_index":1933,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../agglomeration.ts",{"_index":1934,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../assets.ts",{"_index":2024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../development.ts",{"_index":1935,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../dice.ts",{"_index":1937,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../domain.ts",{"_index":1938,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../event.ts",{"_index":1939,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../land.ts",{"_index":2034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../name.ts",{"_index":2032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../phase.ts",{"_index":1940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../print.ts",{"_index":2028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../resources.ts",{"_index":1941,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/data",{"_index":297,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["libs/feature",{"_index":56,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"todo.html":{}}}],["libs/shared",{"_index":6,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/Domain.html":{},"interfaces/EventCard.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["libs/ui",{"_index":545,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{}}}],["license",{"_index":2068,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["lightgray",{"_index":592,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["limitation",{"_index":2092,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2118,"title":{},"body":{"license.html":{}}}],["line",{"_index":37,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["lines",{"_index":2173,"title":{},"body":{"todo.html":{}}}],["literal",{"_index":559,"title":{},"body":{"components/CardBackComponent.html":{},"injectables/DiscardPileCardsFacade.html":{}}}],["load",{"_index":321,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["loaded",{"_index":394,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["lock",{"_index":1001,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["locked",{"_index":194,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["lockedresources",{"_index":1076,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["lockresource",{"_index":901,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["lockresource(pivotid",{"_index":937,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["logic",{"_index":322,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["login",{"_index":655,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["login(email",{"_index":656,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["loop",{"_index":2001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopactions",{"_index":2002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopdraw",{"_index":2003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopexchange",{"_index":2004,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopthrow",{"_index":2000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["low",{"_index":1980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lower",{"_index":1979,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["magic",{"_index":274,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["many",{"_index":1086,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map",{"_index":148,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasCost.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/functions.html":{}}}],["map(([_action",{"_index":1147,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["map(([agglomerationpilecard",{"_index":1591,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([landspilecard",{"_index":1611,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([min",{"_index":966,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((action",{"_index":1137,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((discardpilecard",{"_index":828,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["map((domaincards",{"_index":159,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["map((domainscards",{"_index":971,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((handcard",{"_index":1615,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map((handscards",{"_index":1650,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{}}}],["map((ids",{"_index":1851,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["map((phase",{"_index":153,"title":{},"body":{"components/ActionsComponent.html":{}}}],["map((pivot",{"_index":341,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["map((pivots",{"_index":1042,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((pivotsselected",{"_index":1062,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((roadcard",{"_index":385,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["map((stockpilecard",{"_index":1575,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((stockpilescards",{"_index":1571,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((value",{"_index":1534,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["mapdietoiconnamefront",{"_index":885,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["mapdietoiconnamefront(die",{"_index":2048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortodomainid",{"_index":2035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortodomainid(domaincolor",{"_index":2051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid",{"_index":2036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid(domaincolor",{"_index":2052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptypetoiconnamefront",{"_index":886,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["maptypetoiconnamefront(type",{"_index":2049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["market",{"_index":1960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mastery",{"_index":991,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterydomainid",{"_index":960,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterypointstype",{"_index":952,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":48,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(...resource_counts",{"_index":1085,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["max",{"_index":453,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["maximum",{"_index":1094,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["media",{"_index":595,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["merchant",{"_index":1990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":2120,"title":{},"body":{"license.html":{}}}],["merchantshiptravel",{"_index":1989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merge",{"_index":2095,"title":{},"body":{"license.html":{}}}],["mergemap",{"_index":1855,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["mergemap((action",{"_index":1842,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["metareducers",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":66,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["middle",{"_index":1981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mill",{"_index":1956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":967,"title":{},"body":{"components/DomainComponent.html":{}}}],["miscellaneous",{"_index":1931,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":2069,"title":{},"body":{"license.html":{},"properties.html":{}}}],["models",{"_index":145,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["models/src/lib/interfaces/color.ts",{"_index":1718,"title":{},"body":{"interfaces/HasColor.html":{}}}],["models/src/lib/interfaces/cost.ts",{"_index":1719,"title":{},"body":{"interfaces/HasCost.html":{}}}],["models/src/lib/interfaces/entity.ts",{"_index":1720,"title":{},"body":{"interfaces/HasId.html":{}}}],["models/src/lib/interfaces/name.ts",{"_index":1721,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts",{"_index":541,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts:2",{"_index":542,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["models/src/lib/interfaces/rules.ts",{"_index":1724,"title":{},"body":{"interfaces/HasRules.html":{}}}],["models/src/lib/interfaces/victory.ts",{"_index":1725,"title":{},"body":{"interfaces/HasVictoryPoints.html":{}}}],["models/src/lib/structures/action.ts",{"_index":7,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/agglomeration.ts",{"_index":252,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/development.ts",{"_index":749,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/domain.ts",{"_index":880,"title":{},"body":{"interfaces/Domain.html":{}}}],["models/src/lib/structures/event.ts",{"_index":1313,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/hand.ts",{"_index":1626,"title":{},"body":{"interfaces/Hand.html":{}}}],["models/src/lib/structures/land.ts",{"_index":1726,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/types/action.ts",{"_index":1942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/agglomeration.ts",{"_index":1949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/development.ts",{"_index":1953,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/dice.ts",{"_index":1974,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/domain.ts",{"_index":1976,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/event.ts",{"_index":1984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/phase.ts",{"_index":1996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/resources.ts",{"_index":2006,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["modify",{"_index":2094,"title":{},"body":{"license.html":{}}}],["module",{"_index":233,"title":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}},"body":{}}],["modules",{"_index":235,"title":{"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["monastery",{"_index":1964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":404,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["motion",{"_index":598,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["name",{"_index":16,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HasName.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":661,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["needstown",{"_index":752,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["new",{"_index":277,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["newcard0",{"_index":1299,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newcard1",{"_index":1302,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newselectedids",{"_index":1290,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["next",{"_index":36,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["nextproductiondie",{"_index":1413,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["ngmodule",{"_index":246,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["ngrx/effects",{"_index":354,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":446,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":355,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["noduplicate",{"_index":753,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["non",{"_index":2177,"title":{},"body":{"todo.html":{}}}],["none",{"_index":600,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["noninfringement",{"_index":2124,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2108,"title":{},"body":{"license.html":{}}}],["now",{"_index":325,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["npm@8.13.2",{"_index":2063,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":356,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["null",{"_index":2178,"title":{},"body":{"todo.html":{}}}],["number",{"_index":258,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardBackComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["numberofcardsbelowfestival",{"_index":1340,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["numbers",{"_index":275,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["nx",{"_index":2057,"title":{},"body":{"index.html":{}}}],["nx@14.4.2",{"_index":2064,"title":{},"body":{"index.html":{}}}],["obj",{"_index":43,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["obj.interface",{"_index":46,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["obj.name",{"_index":1723,"title":{},"body":{"interfaces/HasName.html":{}}}],["obj.print",{"_index":544,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["observable",{"_index":110,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["observables",{"_index":430,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["obtaining",{"_index":2082,"title":{},"body":{"license.html":{}}}],["offset",{"_index":645,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["oftype",{"_index":334,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["oftype(agglomerationpilescardsactions.initagglomerationnewgame",{"_index":312,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["oftype(agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":316,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["oftype(discardpilecardsactions.addcardtodiscardpile",{"_index":824,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":832,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":836,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(domainscardsactions.countandstealunprotectedgoldandwool",{"_index":1030,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.createdomaincard",{"_index":1050,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.givelockedresources",{"_index":1056,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresources",{"_index":1091,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1100,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesfordie",{"_index":1116,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardsnewgame",{"_index":1124,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardssavedgame",{"_index":1128,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.lockresource",{"_index":1132,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.putcardinpivot",{"_index":1136,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.unlockresources",{"_index":1142,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.uselockedresources",{"_index":1146,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1323,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1327,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.reseteventspile",{"_index":1330,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(gameactions.throwdice",{"_index":1398,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throweventdie",{"_index":1403,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throwproductiondie",{"_index":1411,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(handscardsactions.addcardstohand",{"_index":1665,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardsnewgame",{"_index":1670,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardssavedgame",{"_index":1672,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardsnewgame",{"_index":1734,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardssavedgame",{"_index":1738,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(stockpilescardsactions.addcardstostockpilebottom",{"_index":1829,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1833,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1837,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.removecardsfromstockpiletop",{"_index":1841,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["on(agglomerationpilescardsactions.initagglomerationnewgame",{"_index":463,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":464,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(agglomerationpilescardsactions.unselectagglomerationpilecard",{"_index":467,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(discardpilecardsactions.adddiscardpilecard",{"_index":877,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":874,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":875,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.setdiscardpilecardserror",{"_index":879,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(domainscardsactions.adddomaincard",{"_index":1285,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.cleardomaincardselection",{"_index":1293,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardsnewgame",{"_index":1276,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardssavedgame",{"_index":1277,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardsfailure",{"_index":1280,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardssuccess",{"_index":1278,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.removedomaincard",{"_index":1309,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.setdomainscardserror",{"_index":1311,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.swapselectedcards",{"_index":1294,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.toggledomaincardselection",{"_index":1287,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomaincard",{"_index":1281,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomainscards",{"_index":1283,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1372,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1373,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.loadeventspilecardsfailure",{"_index":1375,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.removeselectedeventspilecard",{"_index":1380,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.selectfirsteventspilecard",{"_index":1378,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.seteventspilecardserror",{"_index":1376,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(gameactions.initnewgame",{"_index":1470,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setaction",{"_index":1476,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.seteventdie",{"_index":1473,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setnextproductiondie",{"_index":1472,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setphase",{"_index":1474,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setplayer",{"_index":1475,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setproductiondie",{"_index":1471,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(handscardsactions.addhandscards",{"_index":1711,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardsnewgame",{"_index":1705,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardssavedgame",{"_index":1706,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardsfailure",{"_index":1709,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardssuccess",{"_index":1707,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.removehandcard",{"_index":1716,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.selecthandcard",{"_index":1714,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardserror",{"_index":1713,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardsinitialized",{"_index":1710,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.unselecthandcard",{"_index":1715,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardsnewgame",{"_index":1769,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardssavedgame",{"_index":1770,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.loadlandspilecardsfailure",{"_index":1772,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.removelandspilecard",{"_index":1775,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.selectlandspilecard",{"_index":1774,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.setlandspilecardserror",{"_index":1773,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(stockpilescardsactions.addstockpilescards",{"_index":1898,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1892,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1893,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.loadstockpilescardsfailure",{"_index":1895,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.removestockpilescards",{"_index":1896,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.setstockpilescardserror",{"_index":1900,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["one",{"_index":403,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["onerror",{"_index":328,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["onthrow",{"_index":792,"title":{},"body":{"components/DiceComponent.html":{}}}],["optional",{"_index":103,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["order",{"_index":2153,"title":{},"body":{"todo.html":{}}}],["originalfn",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["otherwise",{"_index":2134,"title":{},"body":{"license.html":{}}}],["out",{"_index":242,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"modules/UiCardModule.html":{},"license.html":{},"overview.html":{},"todo.html":{}}}],["outline",{"_index":644,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["output",{"_index":568,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["outputs",{"_index":557,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["overview",{"_index":2142,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["package",{"_index":1908,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":2060,"title":{},"body":{"index.html":{}}}],["padding",{"_index":615,"title":{},"body":{"components/CardBackComponent.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":665,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["particular",{"_index":2122,"title":{},"body":{"license.html":{}}}],["password",{"_index":657,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["pasture",{"_index":2012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pathfinder",{"_index":1944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":402,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["permission",{"_index":2076,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2102,"title":{},"body":{"license.html":{}}}],["person",{"_index":2081,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2103,"title":{},"body":{"license.html":{}}}],["phase",{"_index":154,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["phase.key",{"_index":1811,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases",{"_index":1778,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases'},{'name",{"_index":228,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["phases.component.css",{"_index":1779,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases.component.html",{"_index":1780,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases/phases.component",{"_index":1818,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phases/phases.module",{"_index":539,"title":{},"body":{"modules/BoardModule.html":{}}}],["phasescomponent",{"_index":227,"title":{"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"overview.html":{}}}],["phasesmodule",{"_index":531,"title":{"modules/PhasesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PhasesModule.html":{},"modules.html":{},"overview.html":{}}}],["pieces",{"_index":425,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["pile",{"_index":177,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"todo.html":{}}}],["pileid",{"_index":370,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["piles",{"_index":230,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["piles/piles.component",{"_index":1824,"title":{},"body":{"modules/PilesModule.html":{}}}],["piles/piles.module",{"_index":540,"title":{},"body":{"modules/BoardModule.html":{}}}],["pilescomponent",{"_index":229,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"overview.html":{}}}],["pilesmodule",{"_index":532,"title":{"modules/PilesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PilesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipe",{"_index":965,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["pipe(map((masterydomainid",{"_index":959,"title":{},"body":{"components/DomainComponent.html":{}}}],["pivot",{"_index":342,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["pivot.availableresources",{"_index":999,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.cardid",{"_index":189,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.col",{"_index":184,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.domainid",{"_index":183,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.id",{"_index":349,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.lockedresources",{"_index":1000,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.pileid",{"_index":180,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.row",{"_index":185,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivotid",{"_index":934,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["pivots",{"_index":1041,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivots.map((pivot",{"_index":1044,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected.length",{"_index":1077,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected[0",{"_index":1079,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources",{"_index":1059,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.foreach((pivot",{"_index":1068,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.length",{"_index":1063,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.map((pivot",{"_index":1075,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources[0",{"_index":1065,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["player",{"_index":1426,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["player.key",{"_index":1810,"title":{},"body":{"components/PhasesComponent.html":{}}}],["plugin",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["point",{"_index":1161,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["points",{"_index":988,"title":{},"body":{"components/DomainComponent.html":{}}}],["portions",{"_index":2112,"title":{},"body":{"license.html":{}}}],["position",{"_index":608,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["prefers",{"_index":596,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["prettier",{"_index":1096,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["previous",{"_index":1408,"title":{},"body":{"injectables/GameEffects.html":{}}}],["prevsubject",{"_index":672,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["primary",{"_index":379,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["print",{"_index":273,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{}}}],["private",{"_index":151,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["production",{"_index":812,"title":{},"body":{"components/DiceComponent.html":{},"todo.html":{}}}],["productiondie",{"_index":1427,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["project",{"_index":2055,"title":{},"body":{"index.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"properties.html":{}}}],["provided",{"_index":2113,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":1549,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["providers",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["publish",{"_index":2096,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2123,"title":{},"body":{"license.html":{}}}],["put",{"_index":191,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile",{"_index":1489,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile(pileid",{"_index":1505,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile",{"_index":1490,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile(pileid",{"_index":1507,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putcardinpivot",{"_index":1019,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["putcardinslot",{"_index":1200,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putcardinslot(pivotid",{"_index":1230,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putland",{"_index":83,"title":{},"body":{"components/ActionsComponent.html":{}}}],["putlandspilecardinslot",{"_index":1491,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["quarrel",{"_index":1992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["radius",{"_index":582,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["randomdicevalue",{"_index":2037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":452,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["red",{"_index":1977,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redgoldminesandpastures",{"_index":1037,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["redresourcecount",{"_index":1035,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["reduce",{"_index":599,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["reduced",{"_index":597,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["relative",{"_index":609,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["relocation",{"_index":1948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["removeagglomerationpilecard",{"_index":396,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["removeagglomerationpilecard(id",{"_index":408,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["removecards",{"_index":1826,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["removecardsfromstockpiletop",{"_index":1874,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removecardsfromstockpiletop(pileid",{"_index":1877,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removedomaincard",{"_index":1201,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removedomaincard(pivotid",{"_index":1232,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removehandcard",{"_index":1681,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removehandcard(id",{"_index":1684,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removelandspilecard",{"_index":1749,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removelandspilecard(id",{"_index":1751,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removeselected",{"_index":1349,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["removeselectedeventspilecard",{"_index":1786,"title":{},"body":{"components/PhasesComponent.html":{}}}],["required",{"_index":460,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["reset",{"_index":241,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["reseteventspile",{"_index":1350,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["reseteventspileonfestival",{"_index":1483,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["resetpileandselectfirst",{"_index":1320,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["resource",{"_index":1134,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["resource_counts",{"_index":1149,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resource_values",{"_index":788,"title":{},"body":{"components/DiceComponent.html":{}}}],["resourcecount",{"_index":1047,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/typealiases.html":{}}}],["resourceincrement",{"_index":1155,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resources",{"_index":195,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["resourcetype",{"_index":269,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resourcetype.clay",{"_index":280,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.stone",{"_index":290,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wheat",{"_index":287,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wood",{"_index":278,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcetype.wool",{"_index":286,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcevalue",{"_index":801,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ressource",{"_index":613,"title":{},"body":{"components/CardBackComponent.html":{}}}],["ressources",{"_index":555,"title":{},"body":{"components/CardBackComponent.html":{}}}],["restriction",{"_index":2090,"title":{},"body":{"license.html":{}}}],["results",{"_index":47,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":44,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"todo.html":{}}}],["returns",{"_index":106,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":2093,"title":{},"body":{"license.html":{}}}],["rivalry",{"_index":1995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["road",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roadcard.id",{"_index":386,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["roadentities",{"_index":381,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["root",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameRulesService.html":{}}}],["root'},{'name",{"_index":214,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["route",{"_index":1947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["row",{"_index":1052,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["rowvalue",{"_index":1164,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["rowvalue.lower",{"_index":1605,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rowvalue.upper",{"_index":1606,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["ruleids",{"_index":17,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["rules.service.spec.ts",{"_index":2150,"title":{},"body":{"todo.html":{}}}],["rules.service.ts",{"_index":1478,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:102",{"_index":1504,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:120",{"_index":1503,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:142",{"_index":1501,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:168",{"_index":1498,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:198",{"_index":1510,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:207",{"_index":1512,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:285",{"_index":1513,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:322",{"_index":1509,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:357",{"_index":1508,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:378",{"_index":1506,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:41",{"_index":1528,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:426",{"_index":1511,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:43",{"_index":1525,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:45",{"_index":1546,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:49",{"_index":1522,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:56",{"_index":1542,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:63",{"_index":1518,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:70",{"_index":1527,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:75",{"_index":1536,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:81",{"_index":1531,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:86",{"_index":1539,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:89",{"_index":1495,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["run",{"_index":318,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["runtimechecks",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":146,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["s/shipname.html",{"_index":2040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["same",{"_index":1407,"title":{},"body":{"injectables/GameEffects.html":{}}}],["sawmill",{"_index":1955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["select",{"_index":338,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getagglomerationpilescardsloaded",{"_index":422,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getagglomerationselected",{"_index":433,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getallagglomerationpilescards",{"_index":413,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecards",{"_index":854,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecardsreverse",{"_index":856,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsloaded",{"_index":858,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsselected",{"_index":860,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(domainscardsselectors.getalldomainscards",{"_index":1238,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsloaded",{"_index":1240,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsselected",{"_index":1061,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getlandcardpivotbyid(id",{"_index":1153,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["select(eventspilecardsselectors.getalleventspilecards",{"_index":1354,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsloaded",{"_index":1356,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsselected",{"_index":1358,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(gameselectors.getgamenextproductiondie",{"_index":1448,"title":{},"body":{"injectables/GameFacade.html":{}}}],["select(handscardsselectors.getallhandscards",{"_index":1687,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(handscardsselectors.gethandscardsselected",{"_index":1689,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(landspilecardsselectors.getalllandspilecards",{"_index":1753,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsloaded",{"_index":1754,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsselected",{"_index":1755,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(stockpilescardsselectors.getallstockpilescards",{"_index":1878,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsloaded",{"_index":1879,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsselected",{"_index":1880,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selected",{"_index":178,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["selectedagglomerationpilescards",{"_index":395,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectedchange",{"_index":558,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["selecteddiscardpilecards",{"_index":847,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["selecteddomainscards",{"_index":1187,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["selectedeventspilecards",{"_index":1348,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["selectedhandscards",{"_index":1679,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["selectedid",{"_index":448,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["selectedids",{"_index":1271,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["selectedland",{"_index":1080,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedland.type",{"_index":1082,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedlandspilecards",{"_index":1748,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectedpivot",{"_index":1078,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.availableresources",{"_index":1084,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.id",{"_index":1088,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedstockpilescards",{"_index":1872,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selectfirst",{"_index":303,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["selectfirstcardfromagglomerationpile",{"_index":397,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectfirstcardfromagglomerationpile(pileid",{"_index":410,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectfirstevent",{"_index":1484,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["selecthandcard",{"_index":1635,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selecthandcard(pivotid",{"_index":1645,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selection",{"_index":199,"title":{},"body":{"components/ActionsComponent.html":{}}}],["selectlandspilecard",{"_index":1750,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectlandspilecard(pivotid",{"_index":1752,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["sell",{"_index":2100,"title":{},"body":{"license.html":{}}}],["server",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":320,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["set",{"_index":458,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["setaction",{"_index":1428,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setaction(action",{"_index":1435,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setnextproductiondie",{"_index":793,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setnextproductiondie(value",{"_index":800,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setphase",{"_index":1429,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setphase(phase",{"_index":1438,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer",{"_index":1430,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer(player",{"_index":1440,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["shadow",{"_index":588,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["shall",{"_index":2109,"title":{},"body":{"license.html":{}}}],["ship",{"_index":775,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["ship.tradepoints",{"_index":777,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname",{"_index":758,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname.get(type",{"_index":772,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipnamekey",{"_index":759,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ships",{"_index":984,"title":{},"body":{"components/DomainComponent.html":{}}}],["shouldn't",{"_index":1143,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["shuffle",{"_index":1338,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["shuffled",{"_index":1341,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.map((cardid",{"_index":1345,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.splice",{"_index":1343,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["shuffledcards",{"_index":1862,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards.length",{"_index":1865,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].id",{"_index":1870,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].interface",{"_index":1869,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["sibling",{"_index":1994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["siblingrivalry",{"_index":1993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slice(0",{"_index":1574,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slot",{"_index":1594,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slots",{"_index":182,"title":{},"body":{"components/ActionsComponent.html":{}}}],["software",{"_index":2084,"title":{},"body":{"license.html":{}}}],["solid",{"_index":579,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["something",{"_index":1158,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["soothsayer",{"_index":1943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["started",{"_index":2054,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startnewgame",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":426,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["state.entities",{"_index":1306,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[0",{"_index":1296,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[1",{"_index":1298,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.ids[0",{"_index":1379,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedid",{"_index":1382,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedids",{"_index":1291,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.filter",{"_index":1292,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.find((selectedid",{"_index":1289,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state/agglomeration",{"_index":704,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/discard",{"_index":691,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/domains",{"_index":697,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/events",{"_index":701,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.effects",{"_index":707,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.facade",{"_index":708,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.reducer",{"_index":710,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/hands",{"_index":712,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/lands",{"_index":716,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/stock",{"_index":720,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["steal",{"_index":2154,"title":{},"body":{"todo.html":{}}}],["stock",{"_index":1857,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stock_piles_cards_feature_key",{"_index":1886,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilecard",{"_index":1582,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.cardid",{"_index":1577,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.cardtype",{"_index":1576,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.id",{"_index":1850,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.pileid",{"_index":1573,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpiles",{"_index":1861,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpiles[i",{"_index":1868,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescards",{"_index":1494,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescards.find",{"_index":1581,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilescards.push",{"_index":1867,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescardsactions",{"_index":1856,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.addcardstostockpilebottom",{"_index":1884,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.addstockpilescards",{"_index":1831,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardsfailure",{"_index":1839,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardssuccess",{"_index":1838,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.removecardsfromstockpiletop",{"_index":1883,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.removestockpilescards",{"_index":1852,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.setstockpilescardsinitialized",{"_index":1834,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter",{"_index":1888,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.addmany(stockpilescards",{"_index":1899,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.getinitialstate",{"_index":1890,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.removemany(ids",{"_index":1897,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.setall(stockpilescards",{"_index":1894,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardseffects",{"_index":719,"title":{"injectables/StockPilesCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsentity",{"_index":1849,"title":{"interfaces/StockPilesCardsEntity.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsfacade",{"_index":687,"title":{"injectables/StockPilesCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["stockpilescardsfeature",{"_index":1859,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardspartialstate",{"_index":1885,"title":{"interfaces/StockPilesCardsPartialState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsreducer",{"_index":1891,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsselectors",{"_index":1860,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsselectors.getstockpilecardentitybypivot",{"_index":1845,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsstate",{"_index":1887,"title":{"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsstore",{"_index":1827,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stone",{"_index":2017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stonequarry",{"_index":2011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["store",{"_index":306,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["storedevtoolsmodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature",{"_index":726,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature(fromgame.game_feature_key",{"_index":723,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forroot",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["storybook/core",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["strength",{"_index":992,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["strengthmasterydomainid",{"_index":1569,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["strengthpoints",{"_index":754,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["strictactionimmutability",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["strictstateimmutability",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":578,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["stylelint",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":53,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["styleurls",{"_index":62,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["subject",{"_index":673,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/GameRulesService.html":{},"license.html":{}}}],["sublicense",{"_index":2098,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1610,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((card",{"_index":1585,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((cards",{"_index":1578,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["substantial",{"_index":2111,"title":{},"body":{"license.html":{}}}],["success",{"_index":326,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["sumresources",{"_index":1083,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["support",{"_index":2138,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2139,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":196,"title":{},"body":{"components/ActionsComponent.html":{}}}],["swapselectedcards",{"_index":1202,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["swapselecteddomainscards",{"_index":84,"title":{},"body":{"components/ActionsComponent.html":{}}}],["switchmap",{"_index":1399,"title":{},"body":{"injectables/GameEffects.html":{}}}],["switchmap((value",{"_index":1405,"title":{},"body":{"injectables/GameEffects.html":{}}}],["take",{"_index":359,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["take(1",{"_index":347,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["takeonedefinedpivotorthrow",{"_index":1023,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeonedefinedpivotorthrow(id",{"_index":1028,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeuntil",{"_index":1548,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["takeuntil(this.gameended",{"_index":1520,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["taormina",{"_index":60,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"index.html":{}}}],["taormina/data",{"_index":133,"title":{},"body":{"components/ActionsComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["taormina/feature",{"_index":135,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["taormina/shared",{"_index":144,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["taormina/ui",{"_index":1013,"title":{},"body":{"modules/DomainModule.html":{},"modules/PilesModule.html":{}}}],["target=\"_self\">shipnamekey",{"_index":2041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tasks",{"_index":405,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["templateurl",{"_index":64,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["test",{"_index":2152,"title":{},"body":{"todo.html":{}}}],["thieves",{"_index":1485,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["thievesresourcecountthreshold",{"_index":1039,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.actions$.pipe",{"_index":311,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["this.agglomerationpilescards.initnewgame",{"_index":1559,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescards.removeagglomerationpilecard",{"_index":1597,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescards.selectedagglomerationpilescards",{"_index":157,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescardsstore.pipe",{"_index":337,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["this.auspiciousyear$.pipe",{"_index":1529,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.countandsteal$.subscribe",{"_index":1551,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.addcardtodiscardpile",{"_index":1625,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.initnewgame",{"_index":1563,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards",{"_index":957,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.alldomainscards$.pipe",{"_index":970,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.cleardomaincardselection",{"_index":173,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.domainscards.countandstealunprotectedgoldandwool",{"_index":1521,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.createavailabledomaincard",{"_index":1603,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcardsvictorypointsfordomain(domainid",{"_index":1564,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcelebrationpointsfordomain(domainid",{"_index":956,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxcol(domainid",{"_index":964,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxrow(domainid",{"_index":969,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmincol(domainid",{"_index":963,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainminrow(domainid",{"_index":968,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.strength",{"_index":1566,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.trade",{"_index":1565,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmerchantshipcountfordomain(domainid",{"_index":955,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.givelockedresources",{"_index":170,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.increaseresources(pivotid",{"_index":982,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.increaseresourcesforauspiciousyear",{"_index":1530,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.increaseresourcesfordie(value",{"_index":1535,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.initnewgame",{"_index":1557,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.lockresource(pivotid",{"_index":980,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.putcardinslot",{"_index":1599,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.removedomaincard(domaincard.id",{"_index":1621,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards",{"_index":1590,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards$.pipe",{"_index":158,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{}}}],["this.domainscards.swapselectedcards",{"_index":174,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.toggledomaincardselection(pivotid",{"_index":979,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.unlockresources(pivotid",{"_index":981,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.uselockedresources",{"_index":1589,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscardsstore.pipe",{"_index":1060,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.domainscardsstore.select",{"_index":1032,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.event$.pipe",{"_index":1540,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.initnewgame",{"_index":1562,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.removeselected",{"_index":1806,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.reseteventspile",{"_index":1538,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectedeventspilecards",{"_index":1805,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.selectedeventspilecards$.pipe",{"_index":1514,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectfirst",{"_index":1541,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.festival$.pipe",{"_index":1537,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.action",{"_index":1807,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.eventdie",{"_index":809,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.eventdie$.pipe",{"_index":1543,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.eventdie$.pipe(filter((die",{"_index":1523,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.initnewgame",{"_index":1556,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.nextproductiondie",{"_index":810,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.phase",{"_index":1800,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.phase$.pipe",{"_index":152,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{}}}],["this.game.phase$.pipe(take(1)).subscribe((phase",{"_index":1587,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.player",{"_index":1802,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.productiondie",{"_index":808,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.productiondie$.pipe",{"_index":1532,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(action.name",{"_index":1624,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(undefined",{"_index":1808,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setnextproductiondie(value",{"_index":811,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.setphase(phase",{"_index":1801,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setplayer(player",{"_index":1803,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.throweventdie",{"_index":1586,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.throwproductiondie",{"_index":1588,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gameended$.next",{"_index":1550,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gamerules.getvictorypointsfordomain(domainid",{"_index":962,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.gamerules.initnewgame",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gamerules.putlandspilecardinslot",{"_index":169,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.throwdice",{"_index":807,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.gamerules.useactioncard",{"_index":167,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputagglomerationpilecardinslot",{"_index":156,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputhandcardinslot",{"_index":163,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamestore.select(gameselectors.getgamenextproductiondie",{"_index":1412,"title":{},"body":{"injectables/GameEffects.html":{}}}],["this.getlandcardfrompivot(firstpivot",{"_index":1067,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(pivot",{"_index":1069,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(selectedpivot",{"_index":1081,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.handscards.addcardstohand(handid",{"_index":1580,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.allhandscards$.pipe",{"_index":1649,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.initnewgame",{"_index":1558,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.removehandcard(handcard.id",{"_index":1608,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards",{"_index":172,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards$.pipe",{"_index":164,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.handscards.selecthandcard(pivotid",{"_index":1654,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.unselecthandcard",{"_index":1616,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesforauspiciousyear$.subscribe",{"_index":1554,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesfordie$.subscribe",{"_index":1553,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.initnewgame",{"_index":1560,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.removelandspilecard(landspilecard.id",{"_index":1613,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.selectedlandspilecards",{"_index":171,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.reseteventspileonfestival$.subscribe",{"_index":1555,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.selectfirstevent$.subscribe",{"_index":1552,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.addcardstostockpilebottom(pileid",{"_index":1617,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.allstockpilescards",{"_index":1570,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.initnewgame",{"_index":1561,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.removecardsfromstockpiletop(pileid",{"_index":1579,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescardsstore.pipe",{"_index":1844,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["this.store.dispatch",{"_index":435,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.addcardtodiscardpile",{"_index":866,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":864,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.cleardomaincardselection",{"_index":1253,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.givelockedresources",{"_index":1251,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardsnewgame",{"_index":1243,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardssavedgame",{"_index":1244,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.lockresource",{"_index":1245,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.removedomaincard",{"_index":1258,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.swapselectedcards",{"_index":1257,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.unlockresources",{"_index":1246,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.uselockedresources",{"_index":1250,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1360,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1361,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.removeselectedeventspilecard",{"_index":1364,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.reseteventspile",{"_index":1362,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.selectfirsteventspilecard",{"_index":1363,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(gameactions.initnewgame",{"_index":1456,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setaction",{"_index":1463,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setnextproductiondie",{"_index":1459,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setphase",{"_index":1461,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setplayer",{"_index":1462,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwdice",{"_index":1457,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throweventdie",{"_index":1460,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwproductiondie",{"_index":1458,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(handscardsactions.addcardstohand",{"_index":1694,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardsnewgame",{"_index":1692,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardssavedgame",{"_index":1693,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.removehandcard",{"_index":1697,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.selecthandcard",{"_index":1695,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.unselecthandcard",{"_index":1696,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardsnewgame",{"_index":1758,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardssavedgame",{"_index":1759,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.removelandspilecard",{"_index":1761,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1881,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1882,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe",{"_index":412,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameaction",{"_index":1445,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameeventdie",{"_index":1446,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgamephase",{"_index":1450,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameplayer",{"_index":1452,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameproductiondie",{"_index":1454,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(handscardsselectors.gethandscardsloaded",{"_index":1688,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.select",{"_index":415,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxcol(domainid",{"_index":1260,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxrow(domainid",{"_index":1262,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmincol(domainid",{"_index":1259,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainminrow(domainid",{"_index":1261,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.takeonedefinedpivotorthrow(action.id).pipe",{"_index":1092,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.thieves$.pipe",{"_index":1519,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.updatesavailableresources",{"_index":1107,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increaseone",{"_index":1121,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increasetwo",{"_index":1122,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["through",{"_index":431,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["throw",{"_index":343,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["throwdice",{"_index":1393,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{}}}],["throwdisabled",{"_index":794,"title":{},"body":{"components/DiceComponent.html":{}}}],["throwevent",{"_index":1394,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throweventdie",{"_index":1431,"title":{},"body":{"injectables/GameFacade.html":{}}}],["thrown",{"_index":2159,"title":{},"body":{"todo.html":{}}}],["throwproduction",{"_index":1395,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throwproductiondie",{"_index":1432,"title":{},"body":{"injectables/GameFacade.html":{}}}],["todo",{"_index":1846,"title":{"todo.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["todos",{"_index":2148,"title":{},"body":{"todo.html":{}}}],["toggledomaincardselection",{"_index":902,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toggledomaincardselection(pivotid",{"_index":939,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toll",{"_index":1962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tollbridge",{"_index":1961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top",{"_index":641,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["tort",{"_index":2133,"title":{},"body":{"license.html":{}}}],["town",{"_index":1952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["townentities",{"_index":388,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["trade",{"_index":990,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["trademasterydomainid",{"_index":1568,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["tradepoints",{"_index":755,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["traderoute",{"_index":1946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transform",{"_index":585,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["transition",{"_index":584,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["translate(20px",{"_index":589,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["travel",{"_index":1991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tree",{"_index":55,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["true",{"_index":466,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["tslib",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2251,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeiconname",{"_index":556,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["typeof",{"_index":32,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/EventCard.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["types",{"_index":1073,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["types/action",{"_index":28,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["types/agglomeration",{"_index":267,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["types/development",{"_index":761,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["types/dice",{"_index":1728,"title":{},"body":{"interfaces/LandCard.html":{}}}],["types/domain",{"_index":268,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["types/event",{"_index":1315,"title":{},"body":{"interfaces/EventCard.html":{}}}],["types/resources",{"_index":270,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{}}}],["typescript",{"_index":38,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["uicardmodule",{"_index":1010,"title":{"modules/UiCardModule.html":{}},"body":{"modules/DomainModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["unavailable",{"_index":1133,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["undefined",{"_index":45,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["unlock",{"_index":1002,"title":{},"body":{"components/DomainComponent.html":{}}}],["unlockresources",{"_index":903,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unlockresources(pivotid",{"_index":941,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unselect",{"_index":997,"title":{},"body":{"components/DomainComponent.html":{}}}],["unselectedstate",{"_index":1381,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["unselecthandcard",{"_index":1682,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["unsetaction",{"_index":1787,"title":{},"body":{"components/PhasesComponent.html":{}}}],["unused",{"_index":663,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["up",{"_index":1982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update",{"_index":1095,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updateavailable",{"_index":1087,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updates",{"_index":1043,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updatesavailableresources",{"_index":1020,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesfour",{"_index":1113,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updateslocked",{"_index":1074,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesone",{"_index":1106,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesthree",{"_index":1111,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatestwo",{"_index":1109,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updtr@4.0.0node",{"_index":2065,"title":{},"body":{"index.html":{}}}],["upper",{"_index":1983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["use",{"_index":190,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["useactioncard",{"_index":85,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["useactioncarddisabled",{"_index":86,"title":{},"body":{"components/ActionsComponent.html":{}}}],["uselockedresources",{"_index":1021,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["useresourcestoputagglomerationpilecardinslot",{"_index":1492,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["useresourcestoputhandcardinslot",{"_index":1493,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["using",{"_index":427,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"index.html":{}}}],["utils",{"_index":569,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"injectables/GameEffects.html":{}}}],["utils/src/lib/assets.ts",{"_index":2046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/dice.ts",{"_index":2044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/domain.ts",{"_index":2050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uuid",{"_index":378,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":377,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["v16.16.0",{"_index":2067,"title":{},"body":{"index.html":{}}}],["v4",{"_index":376,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["value",{"_index":309,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":210,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["vars",{"_index":664,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["version",{"_index":2066,"title":{},"body":{"index.html":{},"properties.html":{}}}],["victory",{"_index":993,"title":{},"body":{"components/DomainComponent.html":{}}}],["victorypoints",{"_index":255,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["warehouse",{"_index":1959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":2119,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2114,"title":{},"body":{"license.html":{}}}],["warrior",{"_index":779,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["warrior.celebrationpoints",{"_index":782,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warrior.strengthpoints",{"_index":781,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warriorname",{"_index":760,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["weaving",{"_index":1958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["went",{"_index":1159,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["wheat",{"_index":2016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":2131,"title":{},"body":{"license.html":{}}}],["white",{"_index":617,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["width",{"_index":572,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["withlatestfrom",{"_index":1031,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["without",{"_index":2089,"title":{},"body":{"license.html":{}}}],["wood",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wool",{"_index":2018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wrong",{"_index":1160,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["year",{"_index":1986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":2039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":642,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["zone.js",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":240,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCard.html":{"url":"interfaces/ActionCard.html","title":"interface - ActionCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/action.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Action Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         ActionName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { ActionName } from '../types/action';\n\nexport const ACTION_CARD_INTERFACE_NAME = 'ActionCard';\n\n/**\n * Interface for the Action Cards\n */\nexport interface ActionCard extends HasId, HasName, HasRules {\n  interface: typeof ACTION_CARD_INTERFACE_NAME;\n  id: string;\n  name: ActionName;\n  ruleIds: string[];\n}\n\nexport const createActionCard = (\n  id: string,\n  name: ActionName,\n  ruleIds: string[]\n): ActionCard => ({ interface: ACTION_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isActionCard(obj: any): obj is ActionCard {\n  return obj !== undefined && obj.interface === ACTION_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionsComponent.html":{"url":"components/ActionsComponent.html","title":"component - ActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/actions/actions/actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-actions\n            \n\n            \n                styleUrls\n                ./actions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./actions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyAgglomeration\n                            \n                            \n                                buyDevelopment\n                            \n                            \n                                buyDisabled\n                            \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                getDomainSelectedAgglomerationSlots\n                            \n                            \n                                getDomainSelectedDevelopmentCards\n                            \n                            \n                                getDomainSelectedLandCards\n                            \n                            \n                                getHandSelectedDevelopmentCard\n                            \n                            \n                                getPileSelectedLandCard\n                            \n                            \n                                getSelectedActionCard\n                            \n                            \n                                getSelectedAgglomerationPileCard\n                            \n                            \n                                getSelectedAvailableAgglomerationSlots\n                            \n                            \n                                getSelectedAvailableDevelopmentSlots\n                            \n                            \n                                getSelectedAvailableLandSlots\n                            \n                            \n                                getSelectedHandCard\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                putLand\n                            \n                            \n                                swapSelectedDomainsCards\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useActionCardDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, agglomerationPilesCards: AgglomerationPilesCardsFacade, landsPileCards: LandsPileCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCards\n                                                  \n                                                        \n                                                                        AgglomerationPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyAgglomeration\n                        \n                    \n                \n            \n            \n                \nbuyAgglomeration()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDevelopment\n                        \n                    \n                \n            \n            \n                \nbuyDevelopment()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDisabled\n                        \n                    \n                \n            \n            \n                \nbuyDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedDevelopmentCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedDevelopmentCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedLandCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedLandCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandSelectedDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetHandSelectedDevelopmentCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPileSelectedLandCard\n                        \n                    \n                \n            \n            \n                \ngetPileSelectedLandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedActionCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAgglomerationPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedAgglomerationPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableDevelopmentSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableDevelopmentSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableLandSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableLandSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedHandCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLand\n                        \n                    \n                \n            \n            \n                \nputLand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedDomainsCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedDomainsCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCardDisabled\n                        \n                    \n                \n            \n            \n                \nuseActionCardDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n  AgglomerationPilesCardsEntity,\n  AgglomerationPilesCardsFacade,\n  GameFacade,\n  HandsCardsEntity,\n  HandsCardsFacade,\n  LandsPileCardsEntity,\n  LandsPileCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-actions',\n  templateUrl: './actions.component.html',\n  styleUrls: ['./actions.component.css'],\n})\nexport class ActionsComponent {\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private agglomerationPilesCards: AgglomerationPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  buyDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => phase !== GamePhase.LoopActions)\n    );\n  }\n\n  buyAgglomeration(): void {\n    this.gameRules.useResourcesToPutAgglomerationPileCardInSlot();\n  }\n\n  getSelectedAgglomerationPileCard(): Observable {\n    return this.agglomerationPilesCards.selectedAgglomerationPilesCards$;\n  }\n\n  getSelectedAvailableAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_AGGLOMERATION_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === AGGLOMERATION_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  buyDevelopment(): void {\n    this.gameRules.useResourcesToPutHandCardInSlot();\n  }\n\n  getHandSelectedDevelopmentCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter(\n        (handCard) => handCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n      )\n    );\n  }\n\n  getSelectedAvailableDevelopmentSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_DEVELOPMENT_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedDevelopmentCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  useActionCardDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => {\n        return phase !== GamePhase.LoopActions;\n      })\n    );\n  }\n\n  useActionCard(): void {\n    this.gameRules.useActionCard();\n  }\n\n  getSelectedActionCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter((handCard) => handCard?.cardType === ACTION_CARD_INTERFACE_NAME)\n    );\n  }\n\n  putLand(): void {\n    this.gameRules.putLandsPileCardInSlot();\n  }\n\n  giveLockedResources(): void {\n    this.domainsCards.giveLockedResources();\n  }\n\n  getPileSelectedLandCard(): Observable {\n    return this.landsPileCards.selectedLandsPileCards$;\n  }\n\n  getSelectedHandCard(): Observable {\n    return this.handsCards.selectedHandsCards$;\n  }\n\n  getSelectedAvailableLandSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_LAND_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedLandCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === LAND_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.domainsCards.clearDomainCardSelection();\n  }\n\n  swapSelectedDomainsCards(): void {\n    this.domainsCards.swapSelectedCards();\n  }\n}\n\n    \n\n    \n        \n  \n    buy agglomeration\n  \n  \n    Pile Selected Agglomeration Card:\n    \n      {{ pivot.pileId }}\n    \n  \n  \n    Selected Available Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    buy development\n  \n  \n    Hand Selected Development Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Development Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Development Cards:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    Use action card\n  \n  \n    Selected Action Card:\n    \n      {{ pivot.cardId }}\n    \n  \n\n\n\n  put land\n  \n    Give locked resources\n  \n  \n    Pile Selected Land Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    swap selected domains cards\n  \n    clear domain selection\n  \n\n\n    \n\n    \n                \n                    ./actions.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      buy agglomeration        Pile Selected Agglomeration Card:          {{ pivot.pileId }}            Selected Available Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            buy development        Hand Selected Development Card:          {{ pivot.cardId }}            Selected Available Development Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Development Cards:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Use action card        Selected Action Card:          {{ pivot.cardId }}        put land      Give locked resources        Pile Selected Land Card:          {{ pivot.cardId }}            Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            swap selected domains cards      clear domain selection  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/actions/actions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionsComponent } from './actions/actions.component';\n\n@NgModule({\n  declarations: [ActionsComponent],\n  imports: [CommonModule],\n  exports: [ActionsComponent],\n})\nexport class ActionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationCard.html":{"url":"interfaces/AgglomerationCard.html","title":"interface - AgglomerationCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/agglomeration.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Agglomeration Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         AgglomerationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport { AgglomerationType } from '../types/agglomeration';\nimport { DomainColor } from '../types/domain';\nimport { ResourceType } from '../types/resources';\n\nexport const AGGLOMERATION_CARD_INTERFACE_NAME = 'AgglomerationCard';\n\nexport const AVAILABLE_AGGLOMERATION_SLOT = 'AvailableAgglomerationSlot';\n\n/**\n * Interface for the Agglomeration Cards\n */\nexport interface AgglomerationCard\n  extends HasId,\n    HasCost,\n    HasVictoryPoints,\n    HasColor,\n    CanPrint {\n  interface: typeof AGGLOMERATION_CARD_INTERFACE_NAME;\n  id: string;\n  cost: Map;\n  type: AgglomerationType;\n  victoryPoints?: number;\n  color?: DomainColor;\n}\n\nexport const createAgglomerationCard = (\n  id: string,\n  cost: Map,\n  type: AgglomerationType,\n  victoryPoints?: number,\n  color?: DomainColor\n): AgglomerationCard => ({\n  interface: AGGLOMERATION_CARD_INTERFACE_NAME,\n  id,\n  cost,\n  type,\n  victoryPoints,\n  color,\n  print: (): string => `type: ${type}`,\n});\n\n/* eslint-disable no-magic-numbers */\nexport function createRoad(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 2],\n    ]),\n    AgglomerationType.Road,\n    0,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\nexport function createHamlet(\n  id: string,\n  color?: DomainColor\n): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 1],\n      [ResourceType.Wool, 1],\n      [ResourceType.Wheat, 1],\n    ]),\n    AgglomerationType.Hamlet,\n    1,\n    color\n  );\n}\n\n/* eslint-disable no-magic-numbers */\nexport function createTown(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wheat, 2],\n      [ResourceType.Stone, 3],\n    ]),\n    AgglomerationType.Town,\n    2,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isAgglomerationCard(obj: any): obj is AgglomerationCard {\n  return (\n    obj !== undefined && obj.interface === AGGLOMERATION_CARD_INTERFACE_NAME\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgglomerationPilesCardsEffects.html":{"url":"injectables/AgglomerationPilesCardsEffects.html","title":"injectable - AgglomerationPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgglomerationPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                selectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, agglomerationPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationNewGame),\n      map(() =>\n        AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized({\n          agglomerationPilesCards: createInitialAgglomerationPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess(\n            {\n              agglomerationPilesCards: [],\n            }\n          );\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure(\n            { error }\n          );\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile\n      ),\n      concatMap((action) =>\n        this.agglomerationPilesCardsStore.pipe(\n          select(\n            AgglomerationPilesCardsSelectors.getFirstCardPivotForPile(\n              action.pileId\n            )\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(\n                `Can't get first card in empty agglomeration pile.`\n              );\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            AgglomerationPilesCardsActions.selectAgglomerationPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              AgglomerationPilesCardsActions.setAgglomerationPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, take } from 'rxjs/operators';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { createInitialAgglomerationPilesCards } from './agglomeration-piles-cards.models';\nimport * as AgglomerationPilesCardsFeature from './agglomeration-piles-cards.reducer';\nimport * as AgglomerationPilesCardsSelectors from './agglomeration-piles-cards.selectors';\n\n@Injectable()\nexport class AgglomerationPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationNewGame),\n      map(() =>\n        AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized({\n          agglomerationPilesCards: createInitialAgglomerationPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess(\n            {\n              agglomerationPilesCards: [],\n            }\n          );\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure(\n            { error }\n          );\n        },\n      })\n    )\n  );\n\n  selectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile\n      ),\n      concatMap((action) =>\n        this.agglomerationPilesCardsStore.pipe(\n          select(\n            AgglomerationPilesCardsSelectors.getFirstCardPivotForPile(\n              action.pileId\n            )\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(\n                `Can't get first card in empty agglomeration pile.`\n              );\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            AgglomerationPilesCardsActions.selectAgglomerationPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              AgglomerationPilesCardsActions.setAgglomerationPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private agglomerationPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsEntity.html":{"url":"interfaces/AgglomerationPilesCardsEntity.html","title":"interface - AgglomerationPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'AgglomerationPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  agglomerationCards,\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_ROAD,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\nimport { AgglomerationType } from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'AgglomerationPilesCards' data\n */\nexport interface AgglomerationPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string;\n  cardId: string;\n}\n\nexport const createAgglomerationPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardId: string\n): AgglomerationPilesCardsEntity => ({\n  id,\n  pileId,\n  cardId,\n});\n\nexport const createInitialAgglomerationPilesCards =\n  (): AgglomerationPilesCardsEntity[] => {\n    const roadEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Road &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_ROAD,\n          roadCard.id\n        )\n      );\n\n    const hamletEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Hamlet &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_HAMLET,\n          roadCard.id\n        )\n      );\n\n    const townEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Town &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_TOWN,\n          roadCard.id\n        )\n      );\n\n    return [...roadEntities, ...hamletEntities, ...townEntities];\n  };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgglomerationPilesCardsFacade.html":{"url":"injectables/AgglomerationPilesCardsFacade.html","title":"injectable - AgglomerationPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgglomerationPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allAgglomerationPilesCards$\n                            \n                            \n                                allHamletPivots$\n                            \n                            \n                                allRoadPivots$\n                            \n                            \n                                allTownPivots$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedAgglomerationPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeAgglomerationPileCard\n                            \n                            \n                                selectFirstCardFromAgglomerationPile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:48\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAgglomerationPileCard\n                        \n                    \n                \n            \n            \n                \nremoveAgglomerationPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstCardFromAgglomerationPile\n                        \n                    \n                \n            \n            \n                \nselectFirstCardFromAgglomerationPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allAgglomerationPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAllAgglomerationPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allHamletPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(\n      ID_AGGLOMERATION_HAMLET\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allRoadPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_ROAD)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTownPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_TOWN)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:19\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAgglomerationPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_ROAD,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport * as AgglomerationPilesCardsFeature from './agglomeration-piles-cards.reducer';\nimport * as AgglomerationPilesCardsSelectors from './agglomeration-piles-cards.selectors';\n\n@Injectable()\nexport class AgglomerationPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationPilesCardsLoaded)\n  );\n  allAgglomerationPilesCards$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAllAgglomerationPilesCards)\n  );\n  selectedAgglomerationPilesCards$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationSelected)\n  );\n  allRoadPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_ROAD)\n  );\n  allHamletPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(\n      ID_AGGLOMERATION_HAMLET\n    )\n  );\n  allTownPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_TOWN)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.initAgglomerationNewGame()\n    );\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.initAgglomerationSavedGame()\n    );\n  }\n\n  removeAgglomerationPileCard(id: string): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.removeAgglomerationPileCard({ id })\n    );\n  }\n\n  selectFirstCardFromAgglomerationPile(pileId: string): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile({\n        pileId,\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsPartialState.html":{"url":"interfaces/AgglomerationPilesCardsPartialState.html","title":"interface - AgglomerationPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AGGLOMERATION_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AGGLOMERATION_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AGGLOMERATION_PILES_CARDS_FEATURE_KEY:         AgglomerationPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { AgglomerationPilesCardsEntity } from './agglomeration-piles-cards.models';\n\nexport const AGGLOMERATION_PILES_CARDS_FEATURE_KEY = 'agglomerationPilesCards';\n\nexport interface AgglomerationPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface AgglomerationPilesCardsPartialState {\n  readonly [AGGLOMERATION_PILES_CARDS_FEATURE_KEY]: AgglomerationPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const agglomerationPilesCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialAgglomerationPilesCardsState: AgglomerationPilesCardsState =\n  agglomerationPilesCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const agglomerationPilesCardsReducer = createReducer(\n  initialAgglomerationPilesCardsState,\n  on(AgglomerationPilesCardsActions.initAgglomerationNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(AgglomerationPilesCardsActions.initAgglomerationSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.selectAgglomerationPileCard,\n    (state, { id }) => ({\n      ...state,\n      selectedId: id,\n    })\n  ),\n  on(AgglomerationPilesCardsActions.unselectAgglomerationPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.removeAgglomerationPileCard,\n    (state, { id }) => agglomerationPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsError,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsState.html":{"url":"interfaces/AgglomerationPilesCardsState.html","title":"interface - AgglomerationPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { AgglomerationPilesCardsEntity } from './agglomeration-piles-cards.models';\n\nexport const AGGLOMERATION_PILES_CARDS_FEATURE_KEY = 'agglomerationPilesCards';\n\nexport interface AgglomerationPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface AgglomerationPilesCardsPartialState {\n  readonly [AGGLOMERATION_PILES_CARDS_FEATURE_KEY]: AgglomerationPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const agglomerationPilesCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialAgglomerationPilesCardsState: AgglomerationPilesCardsState =\n  agglomerationPilesCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const agglomerationPilesCardsReducer = createReducer(\n  initialAgglomerationPilesCardsState,\n  on(AgglomerationPilesCardsActions.initAgglomerationNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(AgglomerationPilesCardsActions.initAgglomerationSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.selectAgglomerationPileCard,\n    (state, { id }) => ({\n      ...state,\n      selectedId: id,\n    })\n  ),\n  on(AgglomerationPilesCardsActions.unselectAgglomerationPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.removeAgglomerationPileCard,\n    (state, { id }) => agglomerationPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsError,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/taormina-duel/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startNewGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in apps/taormina-duel/src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startNewGame\n                        \n                    \n                \n            \n            \n                \nstartNewGame()\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel/src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameRulesService } from '@taormina/feature-engine';\n\n@Component({\n  selector: 'taormina-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(private gameRules: GameRulesService) {}\n\n  startNewGame(): void {\n    this.gameRules.initNewGame();\n  }\n}\n\n    \n\n    \n        New Game !\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                /* stylelint-disable no-empty-source */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New Game !'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/taormina-duel/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            DataAccessGameModule\n                        \n                        \n                            FeatureGameModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { DataAccessGameModule } from '@taormina/data-access-game';\nimport { FeatureGameModule } from '@taormina/feature-game';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(\n      {},\n      {\n        metaReducers: !environment.production ? [] : [],\n        runtimeChecks: {\n          strictActionImmutability: true,\n          strictStateImmutability: true,\n        },\n      }\n    ),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    DataAccessGameModule,\n    FeatureGameModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/board/board/board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ID_DOMAIN_BLUE\n                            \n                            \n                                ID_DOMAIN_RED\n                            \n                            \n                                ID_HAND_BLUE\n                            \n                            \n                                ID_HAND_RED\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_HAND_BLUE,\n  ID_HAND_RED,\n} from '@taormina/shared-constants';\n\n@Component({\n  selector: 'taormina-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent {\n  ID_HAND_RED = ID_HAND_RED;\n  ID_HAND_BLUE = ID_HAND_BLUE;\n  ID_DOMAIN_RED = ID_DOMAIN_RED;\n  ID_DOMAIN_BLUE = ID_DOMAIN_BLUE;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_BoardModule_imports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/board/board.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DiceModule\n                        \n                        \n                            DomainModule\n                        \n                        \n                            HandModule\n                        \n                        \n                            PhasesModule\n                        \n                        \n                            PilesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardComponent } from './board/board.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DiceModule } from '../dice/dice.module';\nimport { DomainModule } from '../domain/domain.module';\nimport { HandModule } from '../hand/hand.module';\nimport { PhasesModule } from '../phases/phases.module';\nimport { PilesModule } from '../piles/piles.module';\n\n@NgModule({\n  declarations: [BoardComponent],\n  imports: [\n    CommonModule,\n    ActionsModule,\n    DiceModule,\n    DomainModule,\n    HandModule,\n    PhasesModule,\n    PilesModule,\n  ],\n  exports: [BoardComponent],\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanPrint.html":{"url":"interfaces/CanPrint.html","title":"interface - CanPrint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CanPrint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/print.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        print\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        print\n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n            \n                \n                    Defined in libs/shared-models/src/lib/interfaces/print.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface CanPrint {\n  print(): string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isCanPrint(obj: any): obj is CanPrint {\n  return typeof obj.print === 'function';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardBackComponent.html":{"url":"components/CardBackComponent.html","title":"component - CardBackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardBackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card-back/card-back/card-back.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card-back\n            \n\n            \n                styleUrls\n                ./card-back.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card-back.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Array\n                            \n                            \n                                getImgSrc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ressources\n                            \n                            \n                                selected\n                            \n                            \n                                typeIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ressources\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Array\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Array\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getImgSrc\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { getImgSrc } from '@taormina/shared-utils';\n\n@Component({\n  selector: 'taormina-card-back',\n  templateUrl: './card-back.component.html',\n  styleUrls: ['./card-back.component.css'],\n})\nexport class CardBackComponent {\n  @Input() typeIconName!: string;\n  @Input() ressources?: { iconName: string; count: number }[];\n  @Input() selected?: boolean;\n  @Output() selectedChange = new EventEmitter();\n\n  Array = Array;\n  getImgSrc = getImgSrc;\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./card-back.component.css\n                \n                .card-back {\n  width: 100%;\n  height: 100%;\n  background-color: gray;\n  border-style: solid;\n  border-color: black;\n  border-width: 1px;\n  border-radius: 5%;\n  transition: transform 450ms, box-shadow 450ms;\n}\n\n.selected {\n  transform: translate(20px, -20px);\n  box-shadow: 1em 1em 1em lightgray;\n  transition: transform 125ms, box-shadow 125ms;\n  will-change: transform;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .card {\n    transition: none;\n  }\n}\n\n.type {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.type-icon {\n  width: 50%;\n  height: 50%;\n}\n\n.ressources {\n  position: relative;\n  bottom: 4em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.3em;\n}\n\n.ressource-icon {\n  width: 15%;\n  height: 15%;\n  padding: 2px;\n  background-color: white;\n  border-style: solid;\n  border-color: black;\n  border-width: 1px;\n  border-radius: 20%;\n  box-shadow: inset -0.1em -0.1em 0.5em lightgray;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardBackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardBackModule.html":{"url":"modules/CardBackModule.html","title":"module - CardBackModule","body":"\n                   \n\n\n\n\n    Modules\n    CardBackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardBackModule\n\n\n\ncluster_CardBackModule_declarations\n\n\n\ncluster_CardBackModule_exports\n\n\n\n\nCardBackComponent\n\nCardBackComponent\n\n\n\nCardBackModule\n\nCardBackModule\n\nCardBackModule -->\n\nCardBackComponent->CardBackModule\n\n\n\n\n\nCardBackComponent \n\nCardBackComponent \n\nCardBackComponent  -->\n\nCardBackModule->CardBackComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/card-back/card-back.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardBackComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardBackComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardBackComponent } from './card-back/card-back.component';\n\n@NgModule({\n  declarations: [CardBackComponent],\n  imports: [CommonModule],\n  exports: [CardBackComponent],\n})\nexport class CardBackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardFrontComponent.html":{"url":"components/CardFrontComponent.html","title":"component - CardFrontComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardFrontComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card-front/card-front/card-front.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card-front\n            \n\n            \n                styleUrls\n                ./card-front.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card-front.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getImgSrc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dieIconName\n                            \n                            \n                                selected\n                            \n                            \n                                typeIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dieIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getImgSrc\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { getImgSrc } from '@taormina/shared-utils';\n\n@Component({\n  selector: 'taormina-card-front',\n  templateUrl: './card-front.component.html',\n  styleUrls: ['./card-front.component.css'],\n})\nexport class CardFrontComponent {\n  @Input() typeIconName!: string;\n  @Input() dieIconName?: string;\n  @Input() selected?: boolean;\n  @Output() selectedChange = new EventEmitter();\n\n  getImgSrc = getImgSrc;\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card-front.component.css\n                \n                .card-front {\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  border-style: solid;\n  border-color: black;\n  border-width: 1px;\n  border-radius: 5%;\n  transition: transform 450ms, box-shadow 450ms;\n}\n\n.selected {\n  transform: translate(20px, -20px);\n  box-shadow: 1em 1em 1em lightgray;\n  transition: transform 125ms, box-shadow 125ms;\n  will-change: transform;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .card {\n    transition: none;\n  }\n}\n\n.type {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.type-icon {\n  width: 90%;\n  height: 90%;\n}\n\n.die {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  top: -100%;\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.die-icon {\n  width: 30%;\n  height: 30%;\n  border-radius: 20%;\n  outline: 2px solid black;\n  outline-offset: -2px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardFrontComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardFrontModule.html":{"url":"modules/CardFrontModule.html","title":"module - CardFrontModule","body":"\n                   \n\n\n\n\n    Modules\n    CardFrontModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardFrontModule\n\n\n\ncluster_CardFrontModule_exports\n\n\n\ncluster_CardFrontModule_declarations\n\n\n\n\nCardFrontComponent\n\nCardFrontComponent\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nCardFrontModule -->\n\nCardFrontComponent->CardFrontModule\n\n\n\n\n\nCardFrontComponent \n\nCardFrontComponent \n\nCardFrontComponent  -->\n\nCardFrontModule->CardFrontComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/card-front/card-front.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardFrontComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardFrontComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardFrontComponent } from './card-front/card-front.component';\n\n@NgModule({\n  declarations: [CardFrontComponent],\n  imports: [CommonModule],\n  exports: [CardFrontComponent],\n})\nexport class CardFrontModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/taormina-duel-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable-1.html":{"url":"interfaces/Chainable-1.html","title":"interface - Chainable-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ui-card-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ui-card-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataAccessGameModule.html":{"url":"modules/DataAccessGameModule.html","title":"module - DataAccessGameModule","body":"\n                   \n\n\n\n\n    Modules\n    DataAccessGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\n\nAgglomerationPilesCardsFacade\n\nAgglomerationPilesCardsFacade\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nDataAccessGameModule -->\n\nAgglomerationPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/data-access-game/src/lib/data-access-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgglomerationPilesCardsFacade\n                        \n                        \n                            DiscardPileCardsFacade\n                        \n                        \n                            DomainsCardsFacade\n                        \n                        \n                            EventsPileCardsFacade\n                        \n                        \n                            GameFacade\n                        \n                        \n                            HandsCardsFacade\n                        \n                        \n                            LandsPileCardsFacade\n                        \n                        \n                            StockPilesCardsFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { DiscardPileCardsEffects } from './+state/discard-pile-cards/discard-pile-cards.effects';\nimport { DiscardPileCardsFacade } from './+state/discard-pile-cards/discard-pile-cards.facade';\nimport * as fromDiscardPileCards from './+state/discard-pile-cards/discard-pile-cards.reducer';\nimport { DomainsCardsEffects } from './+state/domains-cards/domains-cards.effects';\nimport { DomainsCardsFacade } from './+state/domains-cards/domains-cards.facade';\nimport * as fromDomainsCards from './+state/domains-cards/domains-cards.reducer';\nimport { EventsPileCardsEffects } from './+state/events-pile-cards/events-pile-cards.effects';\nimport { EventsPileCardsFacade } from './+state/events-pile-cards/events-pile-cards.facade';\nimport * as fromEventsPileCards from './+state/events-pile-cards/events-pile-cards.reducer';\nimport { AgglomerationPilesCardsEffects } from './+state/agglomeration-piles-cards/agglomeration-piles-cards.effects';\nimport { AgglomerationPilesCardsFacade } from './+state/agglomeration-piles-cards/agglomeration-piles-cards.facade';\nimport * as fromAgglomerationPilesCards from './+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer';\nimport { GameEffects } from './+state/game/game.effects';\nimport { GameFacade } from './+state/game/game.facade';\nimport * as fromGame from './+state/game/game.reducer';\nimport { HandsCardsEffects } from './+state/hands-cards/hands-cards.effects';\nimport { HandsCardsFacade } from './+state/hands-cards/hands-cards.facade';\nimport * as fromHandsCards from './+state/hands-cards/hands-cards.reducer';\nimport { LandsPileCardsEffects } from './+state/lands-pile-cards/lands-pile-cards.effects';\nimport { LandsPileCardsFacade } from './+state/lands-pile-cards/lands-pile-cards.facade';\nimport * as fromLandsPileCards from './+state/lands-pile-cards/lands-pile-cards.reducer';\nimport { StockPilesCardsEffects } from './+state/stock-piles-cards/stock-piles-cards.effects';\nimport { StockPilesCardsFacade } from './+state/stock-piles-cards/stock-piles-cards.facade';\nimport * as fromStockPilesCards from './+state/stock-piles-cards/stock-piles-cards.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromGame.GAME_FEATURE_KEY, fromGame.gameReducer),\n    EffectsModule.forFeature([GameEffects]),\n    StoreModule.forFeature(\n      fromDomainsCards.DOMAINS_CARDS_FEATURE_KEY,\n      fromDomainsCards.domainsCardsReducer\n    ),\n    EffectsModule.forFeature([DomainsCardsEffects]),\n    StoreModule.forFeature(\n      fromHandsCards.HANDS_CARDS_FEATURE_KEY,\n      fromHandsCards.handsCardsReducer\n    ),\n    EffectsModule.forFeature([HandsCardsEffects]),\n    StoreModule.forFeature(\n      fromAgglomerationPilesCards.AGGLOMERATION_PILES_CARDS_FEATURE_KEY,\n      fromAgglomerationPilesCards.agglomerationPilesCardsReducer\n    ),\n    EffectsModule.forFeature([EventsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromLandsPileCards.LANDS_PILE_CARDS_FEATURE_KEY,\n      fromLandsPileCards.landsPileCardsReducer\n    ),\n    EffectsModule.forFeature([AgglomerationPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromStockPilesCards.STOCK_PILES_CARDS_FEATURE_KEY,\n      fromStockPilesCards.stockPilesCardsReducer\n    ),\n    EffectsModule.forFeature([StockPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromEventsPileCards.EVENTS_PILE_CARDS_FEATURE_KEY,\n      fromEventsPileCards.eventsPileCardsReducer\n    ),\n    EffectsModule.forFeature([LandsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromDiscardPileCards.DISCARD_PILE_CARDS_FEATURE_KEY,\n      fromDiscardPileCards.discardPileCardsReducer\n    ),\n    EffectsModule.forFeature([DiscardPileCardsEffects]),\n  ],\n  providers: [\n    GameFacade,\n    DomainsCardsFacade,\n    HandsCardsFacade,\n    AgglomerationPilesCardsFacade,\n    LandsPileCardsFacade,\n    StockPilesCardsFacade,\n    EventsPileCardsFacade,\n    DiscardPileCardsFacade,\n  ],\n})\nexport class DataAccessGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DevelopmentCard.html":{"url":"interfaces/DevelopmentCard.html","title":"interface - DevelopmentCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DevelopmentCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/development.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Development Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            celebrationPoints\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            givesKnowledge\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            needsTown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noDuplicate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strengthPoints\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tradePoints\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        celebrationPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        celebrationPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        givesKnowledge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        givesKnowledge:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsTown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsTown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strengthPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strengthPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tradePoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tradePoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DevelopmentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DevelopmentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport {\n  BuildingName,\n  DevelopmentType,\n  ShipName,\n  ShipNameKey,\n  WarriorName,\n} from '../types/development';\nimport { ResourceType } from '../types/resources';\n\nexport const DEVELOPMENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\nexport const AVAILABLE_DEVELOPMENT_SLOT = 'AvailableDevelopmentSlot';\n\n/**\n * Interface for the Development Cards\n */\nexport interface DevelopmentCard\n  extends HasId,\n    HasName,\n    HasCost,\n    HasVictoryPoints {\n  interface: typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: string;\n  cost: Map;\n  type: DevelopmentType;\n  tradePoints?: number;\n  strengthPoints?: number;\n  celebrationPoints?: number;\n  givesKnowledge?: boolean;\n  noDuplicate?: boolean;\n  needsTown?: boolean;\n  victoryPoints?: number;\n}\n\nconst createDevelopmentCard = (\n  id: string,\n  name: string,\n  cost: Map,\n  type: DevelopmentType\n): DevelopmentCard => ({\n  interface: DEVELOPMENT_CARD_INTERFACE_NAME,\n  id,\n  name,\n  cost,\n  type,\n});\n\nexport function createBuilding(\n  id: string,\n  name: BuildingName,\n  cost: Map,\n  tradePoints?: number,\n  givesKnowledge?: boolean,\n  noDuplicate?: boolean,\n  victoryPoints?: number\n): DevelopmentCard {\n  const building = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Building\n  );\n  building.tradePoints = tradePoints;\n  building.givesKnowledge = givesKnowledge;\n  building.noDuplicate = noDuplicate;\n  building.victoryPoints = victoryPoints;\n  return building;\n}\n\nexport function createShip(id: string, type: ShipNameKey): DevelopmentCard {\n  const name = ShipName.get(type);\n  if (name === undefined) {\n    throw new Error(`Can't find ship name for type ${type}`);\n  }\n  const ship = createDevelopmentCard(\n    id,\n    name,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Wool, 1],\n    ]),\n    DevelopmentType.Ship\n  );\n  ship.tradePoints = 1;\n  return ship;\n}\n\nexport function createWarrior(\n  id: string,\n  name: WarriorName,\n  cost: Map,\n  strengthPoints?: number,\n  celebrationPoints?: number\n): DevelopmentCard {\n  const warrior = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Warrior\n  );\n  warrior.strengthPoints = strengthPoints;\n  warrior.celebrationPoints = celebrationPoints;\n  return warrior;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isDevelopmentCard(obj: any): obj is DevelopmentCard {\n  return obj !== undefined && obj.interface === DEVELOPMENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiceComponent.html":{"url":"components/DiceComponent.html","title":"component - DiceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/dice/dice/dice.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-dice\n            \n\n            \n                styleUrls\n                ./dice.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                RESOURCE_VALUES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventDie\n                            \n                            \n                                getNextProductionDie\n                            \n                            \n                                getProductionDie\n                            \n                            \n                                onThrow\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                throwDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEventDie\n                        \n                    \n                \n            \n            \n                \ngetEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextProductionDie\n                        \n                    \n                \n            \n            \n                \ngetNextProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductionDie\n                        \n                    \n                \n            \n            \n                \ngetProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onThrow\n                        \n                    \n                \n            \n            \n                \nonThrow()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDisabled\n                        \n                    \n                \n            \n            \n                \nthrowDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RESOURCE_VALUES\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameFacade } from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  EventValue,\n  GamePhase,\n  ResourceValue,\n  RESOURCE_VALUES,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-dice',\n  templateUrl: './dice.component.html',\n  styleUrls: ['./dice.component.css'],\n})\nexport class DiceComponent {\n  RESOURCE_VALUES = RESOURCE_VALUES;\n\n  constructor(private game: GameFacade, private gameRules: GameRulesService) {}\n\n  throwDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map(\n        (phase) =>\n          phase !== GamePhase.InitialThrow && phase !== GamePhase.LoopThrow\n      )\n    );\n  }\n\n  onThrow(): void {\n    this.gameRules.throwDice();\n  }\n\n  getProductionDie(): Observable {\n    return this.game.productionDie$;\n  }\n\n  getEventDie(): Observable {\n    return this.game.eventDie$;\n  }\n\n  getNextProductionDie(): Observable {\n    return this.game.nextProductionDie$;\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.game.setNextProductionDie(value);\n  }\n}\n\n    \n\n    \n        \n  \n    Next Production Die:\n    \n      \n        {{ value }}\n    \n  \n  \n    throw\n  \n  Production: {{ value }}\n  Event: {{ value }}\n\n\n    \n\n    \n                \n                    ./dice.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Next Production Die:                  {{ value }}            throw    Production: {{ value }}  Event: {{ value }}'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiceModule.html":{"url":"modules/DiceModule.html","title":"module - DiceModule","body":"\n                   \n\n\n\n\n    Modules\n    DiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_declarations\n\n\n\ncluster_DiceModule_exports\n\n\n\n\nDiceComponent\n\nDiceComponent\n\n\n\nDiceModule\n\nDiceModule\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/dice/dice.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DiceComponent } from './dice/dice.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [DiceComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [DiceComponent],\n})\nexport class DiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsEffects.html":{"url":"injectables/DiscardPileCardsEffects.html","title":"injectable - DiscardPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCard$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { createDiscardPileCardsEntity } from './discard-pile-cards.models';\n\n@Injectable()\nexport class DiscardPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsEntity.html":{"url":"interfaces/DiscardPileCardsEntity.html","title":"interface - DiscardPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DiscardPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DiscardPileCardsEntity {\n  id: string; // Primary ID\n  cardType: string;\n  cardId: string;\n}\n\nexport const createDiscardPileCardsEntity = (\n  id: string,\n  cardType: string,\n  cardId: string\n): DiscardPileCardsEntity => ({\n  id,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsFacade.html":{"url":"injectables/DiscardPileCardsFacade.html","title":"injectable - DiscardPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDiscardPileCards$\n                            \n                            \n                                allDiscardPileCardsReverse$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDiscardPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardToDiscardPile\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardToDiscardPile\n                        \n                    \n                \n            \n            \n                \naddCardToDiscardPile(card: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:39\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCardsReverse$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport * as DiscardPileCardsFeature from './discard-pile-cards.reducer';\nimport * as DiscardPileCardsSelectors from './discard-pile-cards.selectors';\n\n@Injectable()\nexport class DiscardPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  );\n  allDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  );\n  allDiscardPileCardsReverse$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  );\n  selectedDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DiscardPileCardsActions.initDiscardPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      DiscardPileCardsActions.initDiscardPileCardsSavedGame()\n    );\n  }\n\n  addCardToDiscardPile(card: {\n    type:\n      | typeof ACTION_CARD_INTERFACE_NAME\n      | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n    id: string;\n  }): void {\n    this.store.dispatch(DiscardPileCardsActions.addCardToDiscardPile({ card }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsPartialState.html":{"url":"interfaces/DiscardPileCardsPartialState.html","title":"interface - DiscardPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DISCARD_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DISCARD_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DISCARD_PILE_CARDS_FEATURE_KEY:         DiscardPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DiscardPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsState.html":{"url":"interfaces/DiscardPileCardsState.html","title":"interface - DiscardPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Domain.html":{"url":"interfaces/Domain.html","title":"interface - Domain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Domain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/domain.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Domains\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Domains\n */\nexport interface Domain extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createDomain = (id: string, color: DomainColor): Domain => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DomainComponent.html":{"url":"components/DomainComponent.html","title":"component - DomainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DomainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/domain/domain/domain.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-domain\n            \n\n            \n                styleUrls\n                ./domain.component.css\n            \n\n\n\n            \n                templateUrl\n                ./domain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AGGLOMERATION_CARD_INTERFACE_NAME\n                            \n                            \n                                AVAILABLE_AGGLOMERATION_SLOT\n                            \n                            \n                                AVAILABLE_DEVELOPMENT_SLOT\n                            \n                            \n                                AVAILABLE_LAND_SLOT\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                            \n                                LAND_CARD_INTERFACE_NAME\n                            \n                            \n                                mapDieToIconNameFront\n                            \n                            \n                                mapTypeToIconNameFront\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAgglomerationCard\n                            \n                            \n                                getCelebrationPoints\n                            \n                            \n                                getColumnsTemplate\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getDomain\n                            \n                            \n                                getDomainsCards\n                            \n                            \n                                getLandCard\n                            \n                            \n                                getRowsTemplate\n                            \n                            \n                                getShipsCount\n                            \n                            \n                                getStrengthMastery\n                            \n                            \n                                getTradeMastery\n                            \n                            \n                                getVictoryPoints\n                            \n                            \n                                increaseResources\n                            \n                            \n                                isDomainCardSelected\n                            \n                            \n                                lockResource\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                domainId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domainsCards: DomainsCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        domainId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAgglomerationCard\n                        \n                    \n                \n            \n            \n                \ngetAgglomerationCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPoints\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsTemplate\n                        \n                    \n                \n            \n            \n                \ngetColumnsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n            \n                \ngetDomain()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Domain | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainsCards\n                        \n                    \n                \n            \n            \n                \ngetDomainsCards(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLandCard\n                        \n                    \n                \n            \n            \n                \ngetLandCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRowsTemplate\n                        \n                    \n                \n            \n            \n                \ngetRowsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShipsCount\n                        \n                    \n                \n            \n            \n                \ngetShipsCount(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStrengthMastery\n                        \n                    \n                \n            \n            \n                \ngetStrengthMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTradeMastery\n                        \n                    \n                \n            \n            \n                \ngetTradeMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPoints\n                        \n                    \n                \n            \n            \n                \ngetVictoryPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDomainCardSelected\n                        \n                    \n                \n            \n            \n                \nisDomainCardSelected(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AGGLOMERATION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AGGLOMERATION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_AGGLOMERATION_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_AGGLOMERATION_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_DEVELOPMENT_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_DEVELOPMENT_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_LAND_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_LAND_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LAND_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LAND_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDieToIconNameFront\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mapDieToIconNameFront\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapTypeToIconNameFront\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mapTypeToIconNameFront\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  agglomerationCards,\n  developmentCards,\n  domains,\n  landCards,\n} from '@taormina/shared-constants';\nimport {\n  AgglomerationCard,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Domain,\n  LandCard,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport {\n  mapDieToIconNameFront,\n  mapTypeToIconNameFront,\n} from '@taormina/shared-utils';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-domain',\n  templateUrl: './domain.component.html',\n  styleUrls: ['./domain.component.css'],\n})\nexport class DomainComponent {\n  @Input() domainId!: string;\n\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n  AGGLOMERATION_CARD_INTERFACE_NAME = AGGLOMERATION_CARD_INTERFACE_NAME;\n  LAND_CARD_INTERFACE_NAME = LAND_CARD_INTERFACE_NAME;\n  AVAILABLE_AGGLOMERATION_SLOT = AVAILABLE_AGGLOMERATION_SLOT;\n  AVAILABLE_DEVELOPMENT_SLOT = AVAILABLE_DEVELOPMENT_SLOT;\n  AVAILABLE_LAND_SLOT = AVAILABLE_LAND_SLOT;\n\n  mapTypeToIconNameFront = mapTypeToIconNameFront;\n  mapDieToIconNameFront = mapDieToIconNameFront;\n\n  constructor(\n    private domainsCards: DomainsCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  getDomain(): Domain | undefined {\n    return domains.get(this.domainId);\n  }\n\n  getShipsCount(domainId: string): Observable {\n    return this.domainsCards.getMerchantShipCountForDomain(domainId);\n  }\n\n  getCelebrationPoints(domainId: string): Observable {\n    return this.domainsCards.getCelebrationPointsForDomain(domainId);\n  }\n\n  getStrengthMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Strength)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getTradeMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Trade)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getVictoryPoints(domainId: string): Observable {\n    return this.gameRules.getVictoryPointsForDomain(domainId);\n  }\n\n  getColumnsTemplate(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getDomainMinCol(domainId),\n      this.domainsCards.getDomainMaxCol(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return combineLatest([\n      this.domainsCards.getDomainMinRow(domainId),\n      this.domainsCards.getDomainMaxRow(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return this.domainsCards.allDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.filter((domainCard) => domainCard.domainId === domainId)\n      )\n    );\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  getAgglomerationCard(cardId: string): AgglomerationCard | undefined {\n    return agglomerationCards.get(cardId);\n  }\n\n  getLandCard(cardId: string): LandCard | undefined {\n    return landCards.get(cardId);\n  }\n\n  isDomainCardSelected(pivotId: string): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.map((domainsCard) => domainsCard.id).includes(pivotId)\n      )\n    );\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.domainsCards.toggleDomainCardSelection(pivotId);\n  }\n\n  lockResource(pivotId: string): void {\n    this.domainsCards.lockResource(pivotId);\n  }\n\n  unlockResources(pivotId: string): void {\n    this.domainsCards.unlockResources(pivotId);\n  }\n\n  increaseResources(pivotId: string): void {\n    this.domainsCards.increaseResources(pivotId);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ domain.color }}\n     - Ships count: {{ getShipsCount(domain.id) | async }}\n    \n      - Celebration points: {{ getCelebrationPoints(domain.id) | async }}\n     - Trade Mastery\n    \n      - Strength Mastery\n     - Victory points: {{ getVictoryPoints(domain.id) | async }}\n  \n  \n    \n      \n        \n          {{ development.name }}\n        \n      \n      \n        \n          \n          \n            {{\n              (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select'\n            }}\n           -->\n        \n      \n      \n        \n          \n          \n          {{ land.die }}\n          Available: {{ pivot.availableResources }}\n          locked: {{ pivot.lockedResources }}\n          Lock\n          \n            Unlock\n          \n            Increase\n           -->\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./domain.component.css\n                \n                .grid-container {\n  display: grid;\n  grid-gap: 2rem;\n}\n\n.grid-cell {\n  border: 1px solid black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ domain.color }}     - Ships count: {{ getShipsCount(domain.id) | async }}          - Celebration points: {{ getCelebrationPoints(domain.id) | async }}     - Trade Mastery          - Strength Mastery     - Victory points: {{ getVictoryPoints(domain.id) | async }}                                {{ development.name }}                                                            {{              (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\'            }}           -->                                                          {{ land.die }}          Available: {{ pivot.availableResources }}          locked: {{ pivot.lockedResources }}          Lock                      Unlock                      Increase           -->                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                    '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DomainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DomainModule.html":{"url":"modules/DomainModule.html","title":"module - DomainModule","body":"\n                   \n\n\n\n\n    Modules\n    DomainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_DomainModule_imports\n\n\n\ncluster_DomainModule_declarations\n\n\n\n\nDomainComponent\n\nDomainComponent\n\n\n\nDomainModule\n\nDomainModule\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nDomainModule -->\n\nUiCardModule->DomainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/domain/domain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomainComponent } from './domain/domain.component';\nimport { UiCardModule } from '@taormina/ui-card';\n\n@NgModule({\n  declarations: [DomainComponent],\n  imports: [CommonModule, UiCardModule],\n  exports: [DomainComponent],\n})\nexport class DomainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsEffects.html":{"url":"injectables/DomainsCardsEffects.html","title":"injectable - DomainsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countStealResources$\n                            \n                            \n                                createCard$\n                            \n                            \n                                giveLockedResources$\n                            \n                            \n                                increaseResources$\n                            \n                            \n                                increaseResourcesAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                lockResource$\n                            \n                            \n                                putCardInPivot$\n                            \n                            \n                                unlockResources$\n                            \n                            \n                                    Private\n                                updatesAvailableResources\n                            \n                            \n                                useLockedResources$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLandCardFromPivot\n                            \n                            \n                                    Private\n                                takeOneDefinedPivotOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, domainsCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:422\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCardsStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getLandCardFromPivot\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLandCardFromPivot(pivot: DomainsCardsEntity)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:488\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivot\n                                    \n                                                DomainsCardsEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        takeOneDefinedPivotOrThrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    takeOneDefinedPivotOrThrow(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:429\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countStealResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:381\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:364\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:235\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:317\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInPivot$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:348\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updatesAvailableResources\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:444\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:212\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { landCards } from '@taormina/shared-constants';\nimport {\n  LandCard,\n  ResourceCount,\n  RESOURCE_COUNTS,\n} from '@taormina/shared-models';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  map,\n  take,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport {\n  createDomainsCardsEntity,\n  createInitialDomainsCards,\n  DomainsCardsEntity,\n} from './domains-cards.models';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  increaseResourcesForDie$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  );\n\n  increaseResourcesAuspiciousYear$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  );\n\n  lockResource$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  unlockResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  useLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  giveLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  increaseResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  putCardInPivot$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  );\n\n  createCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  );\n\n  countStealResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private domainsCardsStore: Store\n  ) {}\n\n  private takeOneDefinedPivotOrThrow(\n    id: string\n  ): Observable {\n    return this.domainsCardsStore.pipe(\n      select(DomainsCardsSelectors.getLandCardPivotById(id)),\n      map((pivot) => {\n        if (pivot === undefined) {\n          throw new Error(`Couldn't find land card pivot for id.`);\n        }\n        return pivot;\n      }),\n      take(1)\n    );\n  }\n\n  private updatesAvailableResources = (\n    domainsCards: DomainsCardsEntity[],\n    resourceIncrement: number\n  ): {\n    id: string;\n    changes: {\n      availableResources: ResourceCount;\n    };\n  }[] => {\n    const belowMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: (pivot.availableResources +\n              resourceIncrement) as ResourceCount,\n          },\n        };\n      });\n\n    const atMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources >=\n            Math.max(...RESOURCE_COUNTS) - resourceIncrement &&\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: Math.max(...RESOURCE_COUNTS) as ResourceCount,\n          },\n        };\n      });\n\n    return [...belowMax, ...atMax];\n  };\n\n  private getLandCardFromPivot(pivot: DomainsCardsEntity): LandCard {\n    if (pivot.cardId === undefined) {\n      throw new Error(\n        `Something went wrong, cardId shouldn't be undefined at this point.`\n      );\n    }\n    const land = landCards.get(pivot.cardId);\n    if (land === undefined) {\n      throw new Error(\n        `Something went wrong, land shouldn't be undefined at this point.`\n      );\n    }\n    return land;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsEntity.html":{"url":"interfaces/DomainsCardsEntity.html","title":"interface - DomainsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DomainsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            availableResources\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            domainId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lockedResources\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         DomainCardType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainCardType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        domainId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lockedResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lockedResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         RowValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ID_CLAY_PIT_BLUE,\n  ID_CLAY_PIT_RED,\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_FIELD_BLUE,\n  ID_FIELD_RED,\n  ID_FOREST_BLUE,\n  ID_FOREST_RED,\n  ID_GOLD_MINE_BLUE,\n  ID_GOLD_MINE_RED,\n  ID_HAMLET_BLUE_1,\n  ID_HAMLET_BLUE_2,\n  ID_HAMLET_RED_1,\n  ID_HAMLET_RED_2,\n  ID_PASTURE_BLUE,\n  ID_PASTURE_RED,\n  ID_ROAD_BLUE,\n  ID_ROAD_RED,\n  ID_STONE_QUARRY_BLUE,\n  ID_STONE_QUARRY_RED,\n} from '@taormina/shared-constants';\nimport {\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  DomainCardType,\n  LAND_CARD_INTERFACE_NAME,\n  ResourceCount,\n  RowValue,\n} from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'DomainsCards' data\n */\nexport interface DomainsCardsEntity {\n  id: string; // Primary ID\n  domainId: string; // Foreign key to domains\n  cardType: DomainCardType;\n  cardId?: string; // Foreign key to cards\n  col: number;\n  row: RowValue;\n  availableResources: ResourceCount;\n  lockedResources: ResourceCount;\n}\n\nexport const createDomainsCardsEntity = (\n  id: string,\n  domainId: string,\n  cardType: DomainCardType,\n  cardId: string | undefined,\n  col: number,\n  row: RowValue,\n  availableResources = 0 as ResourceCount,\n  lockedResources = 0 as ResourceCount\n): DomainsCardsEntity => ({\n  id,\n  domainId,\n  cardType,\n  cardId,\n  col,\n  row,\n  availableResources,\n  lockedResources,\n});\n\n/* eslint-disable no-magic-numbers */\nexport const createInitialDomainsCards = (): DomainsCardsEntity[] => {\n  const initialDomainsCards: DomainsCardsEntity[] = [\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_RED,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_RED,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_RED,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_RED,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_RED,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_RED,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_RED,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_BLUE,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_BLUE,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_BLUE,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_BLUE,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_BLUE,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_BLUE,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_BLUE,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n  ];\n  return initialDomainsCards;\n};\n/* eslint-enable no-magic-numbers */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsFacade.html":{"url":"injectables/DomainsCardsFacade.html","title":"injectable - DomainsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDomainsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDomainsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                countAndStealUnprotectedGoldAndWool\n                            \n                            \n                                createAvailableDomainCard\n                            \n                            \n                                getCardsVictoryPointsForDomain\n                            \n                            \n                                getCelebrationPointsForDomain\n                            \n                            \n                                getDomainMaxCol\n                            \n                            \n                                getDomainMaxRow\n                            \n                            \n                                getDomainMinCol\n                            \n                            \n                                getDomainMinRow\n                            \n                            \n                                getMasteryDomainForType\n                            \n                            \n                                getMerchantShipCountForDomain\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                hasDomainCommunityCenter\n                            \n                            \n                                increaseResources\n                            \n                            \n                                increaseResourcesForAuspiciousYear\n                            \n                            \n                                increaseResourcesForDie\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                lockResource\n                            \n                            \n                                putCardInSlot\n                            \n                            \n                                removeDomainCard\n                            \n                            \n                                swapSelectedCards\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                            \n                                useLockedResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndStealUnprotectedGoldAndWool\n                        \n                    \n                \n            \n            \n                \ncountAndStealUnprotectedGoldAndWool()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAvailableDomainCard\n                        \n                    \n                \n            \n            \n                \ncreateAvailableDomainCard(domainId: string, cardType: DomainCardType, col: number, row: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCardsVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMinCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMinRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMasteryDomainForType\n                        \n                    \n                \n            \n            \n                \ngetMasteryDomainForType(type: MasteryPointsType)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                MasteryPointsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMerchantShipCountForDomain\n                        \n                    \n                \n            \n            \n                \ngetMerchantShipCountForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDomainCommunityCenter\n                        \n                    \n                \n            \n            \n                \nhasDomainCommunityCenter(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForAuspiciousYear()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForDie(value: DiceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:38\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInSlot\n                        \n                    \n                \n            \n            \n                \nputCardInSlot(pivotId: string, cardType: DomainCardType, cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeDomainCard\n                        \n                    \n                \n            \n            \n                \nremoveDomainCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources\n                        \n                    \n                \n            \n            \n                \nuseLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  DiceValue,\n  DomainCardType,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  );\n  allDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  );\n  selectedDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsSavedGame());\n  }\n\n  lockResource(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.lockResource({ id: pivotId }));\n  }\n\n  unlockResources(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.unlockResources({ id: pivotId }));\n  }\n\n  increaseResources(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResources({ id: pivotId })\n    );\n  }\n\n  increaseResourcesForDie(value: DiceValue): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForDie({ die: value })\n    );\n  }\n\n  increaseResourcesForAuspiciousYear(): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear()\n    );\n  }\n\n  useLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.useLockedResources());\n  }\n\n  giveLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.giveLockedResources());\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.toggleDomainCardSelection({ id: pivotId })\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.store.dispatch(DomainsCardsActions.clearDomainCardSelection());\n  }\n\n  putCardInSlot(\n    pivotId: string,\n    cardType: DomainCardType,\n    cardId: string\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.putCardInPivot({\n        id: pivotId,\n        cardType,\n        cardId,\n      })\n    );\n  }\n\n  createAvailableDomainCard(\n    domainId: string,\n    cardType: DomainCardType,\n    col: number,\n    row: number\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.createDomainCard({\n        domainId,\n        cardType,\n        cardId: undefined,\n        col,\n        row,\n      })\n    );\n  }\n\n  countAndStealUnprotectedGoldAndWool(): void {\n    this.store.dispatch(\n      DomainsCardsActions.countAndStealUnprotectedGoldAndWool()\n    );\n  }\n\n  swapSelectedCards(): void {\n    this.store.dispatch(DomainsCardsActions.swapSelectedCards());\n  }\n\n  removeDomainCard(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.removeDomainCard({ id: pivotId }));\n  }\n\n  getDomainMinCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinCol(domainId));\n  }\n\n  getDomainMaxCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxCol(domainId));\n  }\n\n  getDomainMinRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinRow(domainId));\n  }\n\n  getDomainMaxRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxRow(domainId));\n  }\n\n  getMasteryDomainForType(\n    type: MasteryPointsType\n  ): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMasteryDomainForType(type)\n    );\n  }\n\n  getCardsVictoryPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCardsVictoryPointsForDomain(domainId)\n    );\n  }\n\n  getMerchantShipCountForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMerchantShipCountForDomain(domainId)\n    );\n  }\n\n  getCelebrationPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCelebrationPointsForDomain(domainId)\n    );\n  }\n\n  hasDomainCommunityCenter(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.hasDomainCommunityCenter(domainId)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsPartialState.html":{"url":"interfaces/DomainsCardsPartialState.html","title":"interface - DomainsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DOMAINS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DOMAINS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DOMAINS_CARDS_FEATURE_KEY:         DomainsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsState.html":{"url":"interfaces/DomainsCardsState.html","title":"interface - DomainsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            selectedIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventCard.html":{"url":"interfaces/EventCard.html","title":"interface - EventCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/event.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Event Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         EventName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { EventName } from '../types/event';\n\nexport const EVENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\n/**\n * Interface for the Event Cards\n */\nexport interface EventCard extends HasId, HasName, HasRules {\n  interface: typeof EVENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: EventName;\n  ruleIds: string[];\n}\n\nexport const createEventCard = (\n  id: string,\n  name: EventName,\n  ruleIds: string[]\n): EventCard => ({ interface: EVENT_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isEventCard(obj: any): obj is EventCard {\n  return obj !== undefined && obj.interface === EVENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsEffects.html":{"url":"injectables/EventsPileCardsEffects.html","title":"injectable - EventsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                resetPileAndSelectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, eventsPileCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPileAndSelectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { createInitialEventsPileCards } from './events-pile-cards.models';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\n\n@Injectable()\nexport class EventsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  resetPileAndSelectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private eventsPileCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsEntity.html":{"url":"interfaces/EventsPileCardsEntity.html","title":"interface - EventsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'EventsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { eventCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'EventsPileCards' data\n */\nexport interface EventsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createEventsPileCardsEntity = (\n  id: string,\n  cardId: string\n): EventsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialEventsPileCards = (): EventsPileCardsEntity[] => {\n  const numberOfCardsBelowFestival = 3;\n  const shuffled = arrayShuffle(Array.from(eventCards.keys()).slice(1));\n  shuffled.splice(-numberOfCardsBelowFestival, 0, 'EVENT_0');\n  const entities = shuffled.map((cardId) =>\n    createEventsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsFacade.html":{"url":"injectables/EventsPileCardsFacade.html","title":"injectable - EventsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allEventsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedEventsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeSelected\n                            \n                            \n                                resetEventsPile\n                            \n                            \n                                selectFirst\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPile\n                        \n                    \n                \n            \n            \n                \nresetEventsPile()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst\n                        \n                    \n                \n            \n            \n                \nselectFirst()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\nimport * as EventsPileCardsSelectors from './events-pile-cards.selectors';\n\n@Injectable()\nexport class EventsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  );\n  allEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  );\n  selectedEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsSavedGame());\n  }\n\n  resetEventsPile(): void {\n    this.store.dispatch(EventsPileCardsActions.resetEventsPile());\n  }\n\n  selectFirst(): void {\n    this.store.dispatch(EventsPileCardsActions.selectFirstEventsPileCard());\n  }\n\n  removeSelected(): void {\n    this.store.dispatch(EventsPileCardsActions.removeSelectedEventsPileCard());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsPartialState.html":{"url":"interfaces/EventsPileCardsPartialState.html","title":"interface - EventsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            EVENTS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EVENTS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        EVENTS_PILE_CARDS_FEATURE_KEY:         EventsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsState.html":{"url":"interfaces/EventsPileCardsState.html","title":"interface - EventsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureEngineModule.html":{"url":"modules/FeatureEngineModule.html","title":"module - FeatureEngineModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureEngineModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-engine/src/lib/feature-engine.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class FeatureEngineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureGameModule.html":{"url":"modules/FeatureGameModule.html","title":"module - FeatureGameModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_imports\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\n\nBoardModule\n\nBoardModule\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/feature-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BoardModule } from './board/board.module';\n\n@NgModule({\n  imports: [CommonModule, BoardModule],\n  exports: [BoardModule],\n})\nexport class FeatureGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameEffects.html":{"url":"injectables/GameEffects.html","title":"injectable - GameEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                throwDice$\n                            \n                            \n                                throwEvent$\n                            \n                            \n                                throwProduction$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, gameStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProduction$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport {\n  getRandomEventDieValue,\n  getRandomProductionDieValue,\n} from '@taormina/shared-utils';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameEffects {\n  throwDice$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  );\n\n  throwProduction$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  );\n\n  throwEvent$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private gameStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameFacade.html":{"url":"injectables/GameFacade.html","title":"injectable - GameFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action$\n                            \n                            \n                                eventDie$\n                            \n                            \n                                nextProductionDie$\n                            \n                            \n                                phase$\n                            \n                            \n                                player$\n                            \n                            \n                                productionDie$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                setAction\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                throwDice\n                            \n                            \n                                throwEventDie\n                            \n                            \n                                throwProductionDie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:35\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAction\n                        \n                    \n                \n            \n            \n                \nsetAction(action: ActionName | undefined)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionName | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEventDie\n                        \n                    \n                \n            \n            \n                \nthrowEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProductionDie\n                        \n                    \n                \n            \n            \n                \nthrowProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameAction))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameEventDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextProductionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phase$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePhase))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePlayer))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameProductionDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  productionDie$ = this.store.pipe(select(GameSelectors.getGameProductionDie));\n  nextProductionDie$ = this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  );\n  eventDie$ = this.store.pipe(select(GameSelectors.getGameEventDie));\n  phase$ = this.store.pipe(select(GameSelectors.getGamePhase));\n  player$ = this.store.pipe(select(GameSelectors.getGamePlayer));\n  action$ = this.store.pipe(select(GameSelectors.getGameAction));\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(GameActions.initNewGame());\n  }\n\n  throwDice(): void {\n    this.store.dispatch(GameActions.throwDice());\n  }\n\n  throwProductionDie(): void {\n    this.store.dispatch(GameActions.throwProductionDie());\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.store.dispatch(GameActions.setNextProductionDie({ value }));\n  }\n\n  throwEventDie(): void {\n    this.store.dispatch(GameActions.throwEventDie());\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.store.dispatch(GameActions.setPhase({ phase }));\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.store.dispatch(GameActions.setPlayer({ player }));\n  }\n\n  setAction(action: ActionName | undefined): void {\n    this.store.dispatch(GameActions.setAction({ action }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamePartialState.html":{"url":"interfaces/GamePartialState.html","title":"interface - GamePartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamePartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            GAME_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        GAME_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GAME_FEATURE_KEY:         GameState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameRulesService.html":{"url":"injectables/GameRulesService.html","title":"injectable - GameRulesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameRulesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/feature-engine/src/lib/game-rules.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auspiciousYear$\n                            \n                            \n                                countAndSteal$\n                            \n                            \n                                event$\n                            \n                            \n                                festival$\n                            \n                            \n                                gameEnded$\n                            \n                            \n                                increaseResourcesForAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                resetEventsPileOnFestival$\n                            \n                            \n                                selectFirstEvent$\n                            \n                            \n                                thieves$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawCardFromStockToHand\n                            \n                            \n                                drawFirstCardsFromStockToHand\n                            \n                            \n                                getVictoryPointsForDomain\n                            \n                            \n                                initNewGame\n                            \n                            \n                                putBackFromDomainToStockPile\n                            \n                            \n                                putBackFromHandToStockPile\n                            \n                            \n                                putLandsPileCardInSlot\n                            \n                            \n                                throwDice\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useResourcesToPutAgglomerationPileCardInSlot\n                            \n                            \n                                useResourcesToPutHandCardInSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, agglomerationPilesCards: AgglomerationPilesCardsFacade, landsPileCards: LandsPileCardsFacade, stockPilesCards: StockPilesCardsFacade, eventsPileCards: EventsPileCardsFacade, discardPileCards: DiscardPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCards\n                                                  \n                                                        \n                                                                        AgglomerationPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCards\n                                                  \n                                                        \n                                                                        StockPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discardPileCards\n                                                  \n                                                        \n                                                                        DiscardPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drawCardFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawCardFromStockToHand(pileId: string, cardId: string, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawFirstCardsFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawFirstCardsFromStockToHand(pileId: string, cardsCount: number, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardsCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromDomainToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromDomainToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:378\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromHandToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromHandToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:357\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLandsPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nputLandsPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:426\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutAgglomerationPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutAgglomerationPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutHandCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutHandCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndSteal$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        event$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(filter((die) => die === EventValue.Event))\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        festival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameEnded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPileOnFestival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thieves$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  DiscardPileCardsFacade,\n  DomainsCardsFacade,\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  AgglomerationPilesCardsFacade,\n  GameFacade,\n  HandsCardsFacade,\n  LandsPileCardsFacade,\n  StockPilesCardsFacade,\n} from '@taormina/data-access-game';\nimport {\n  actionCards,\n  eventCards,\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  DiceValue,\n  EventName,\n  EventValue,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n  RowValue,\n} from '@taormina/shared-models';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameRulesService {\n  gameEnded$ = new Subject();\n\n  event$ = this.game.eventDie$.pipe(filter((die) => die === EventValue.Event));\n\n  thieves$ = this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  );\n\n  countAndSteal$ = this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  );\n\n  selectFirstEvent$ = this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  );\n\n  auspiciousYear$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  );\n\n  festival$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  );\n\n  increaseResourcesForDie$ = this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  );\n\n  increaseResourcesForAuspiciousYear$ = this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  );\n\n  resetEventsPileOnFestival$ = this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  );\n\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private agglomerationPilesCards: AgglomerationPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private stockPilesCards: StockPilesCardsFacade,\n    private eventsPileCards: EventsPileCardsFacade,\n    private discardPileCards: DiscardPileCardsFacade\n  ) {}\n\n  initNewGame(): void {\n    this.gameEnded$.next();\n    this.countAndSteal$.subscribe();\n    this.selectFirstEvent$.subscribe();\n    this.increaseResourcesForDie$.subscribe();\n    this.increaseResourcesForAuspiciousYear$.subscribe();\n    this.resetEventsPileOnFestival$.subscribe();\n\n    this.game.initNewGame();\n    this.domainsCards.initNewGame();\n    this.handsCards.initNewGame();\n    this.agglomerationPilesCards.initNewGame();\n    this.landsPileCards.initNewGame();\n    this.stockPilesCards.initNewGame();\n    this.eventsPileCards.initNewGame();\n    this.discardPileCards.initNewGame();\n  }\n\n  getVictoryPointsForDomain(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getCardsVictoryPointsForDomain(domainId),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Trade),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Strength),\n    ]).pipe(\n      map(\n        ([\n          cardsVictoryPoints,\n          tradeMasteryDomainId,\n          strengthMasteryDomainId,\n        ]) => {\n          return (\n            cardsVictoryPoints +\n            (tradeMasteryDomainId === domainId ? 1 : 0) +\n            (strengthMasteryDomainId === domainId ? 1 : 0)\n          );\n        }\n      )\n    );\n  }\n\n  drawFirstCardsFromStockToHand(\n    pileId: string,\n    cardsCount: number,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          return stockPilesCards\n            .filter((stockPileCard) => stockPileCard.pileId === pileId)\n            .slice(0, cardsCount)\n            .map((stockPileCard) => {\n              return {\n                type: stockPileCard.cardType,\n                id: stockPileCard.cardId,\n              };\n            });\n        })\n      )\n      .subscribe((cards) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, cards);\n        this.handsCards.addCardsToHand(handId, cards);\n      });\n  }\n\n  drawCardFromStockToHand(\n    pileId: string,\n    cardId: string,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          const card = stockPilesCards.find(\n            (stockPileCard) =>\n              stockPileCard.pileId === pileId && stockPileCard.cardId === cardId\n          );\n          if (card === undefined) {\n            throw new Error(\n              `Something went wrong, card shouldn't be undefined at this point.`\n            );\n          }\n          return {\n            type: card.cardType,\n            id: card.cardId,\n          };\n        })\n      )\n      .subscribe((card) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, [card]);\n        this.handsCards.addCardsToHand(handId, [card]);\n      });\n  }\n\n  throwDice(): void {\n    this.game.throwEventDie();\n    this.game.phase$.pipe(take(1)).subscribe((phase) => {\n      if (phase !== GamePhase.InitialThrow) {\n        this.game.throwProductionDie();\n      }\n    });\n  }\n\n  useResourcesToPutAgglomerationPileCardInSlot(): void {\n    this.domainsCards.useLockedResources();\n\n    combineLatest([\n      this.agglomerationPilesCards.selectedAgglomerationPilesCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([agglomerationPileCard, domainCards]) => {\n          if (agglomerationPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.agglomerationPilesCards.removeAgglomerationPileCard(\n            agglomerationPileCard.id\n          );\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            AGGLOMERATION_CARD_INTERFACE_NAME,\n            agglomerationPileCard.cardId\n          );\n\n          if (agglomerationPileCard.pileId === ID_AGGLOMERATION_TOWN) {\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Lower\n            );\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Upper\n            );\n          } else {\n            const availableCol =\n              domainCard.col  {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.handsCards.removeHandCard(handCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            DEVELOPMENT_CARD_INTERFACE_NAME,\n            handCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putLandsPileCardInSlot(): void {\n    combineLatest([\n      this.landsPileCards.selectedLandsPileCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([landsPileCard, domainCards]) => {\n          if (landsPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.landsPileCards.removeLandsPileCard(landsPileCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            LAND_CARD_INTERFACE_NAME,\n            landsPileCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromHandToStockPile(pileId: string): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type: handCard.cardType,\n              id: handCard.cardId,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromDomainToStockPile(pileId: string): void {\n    this.domainsCards.selectedDomainsCards$\n      .pipe(\n        take(1),\n        map((domainCards) => {\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in pile if no card or more than one card selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n          const type = domainCard.cardType;\n          if (type !== DEVELOPMENT_CARD_INTERFACE_NAME) {\n            throw new Error(\n              `Can't put back card of type other than development.`\n            );\n          }\n          const id = domainCard.cardId;\n          if (id === undefined) {\n            throw new Error(\n              `Something went wrong, cardId shouldn't be undefined at this point.`\n            );\n          }\n\n          this.domainsCards.removeDomainCard(domainCard.id);\n          this.domainsCards.createAvailableDomainCard(\n            domainCard.domainId,\n            AVAILABLE_DEVELOPMENT_SLOT,\n            domainCard.col,\n            domainCard.row\n          );\n          this.domainsCards.clearDomainCardSelection();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type,\n              id,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  useActionCard(): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          if (\n            handCard.cardType !== ACTION_CARD_INTERFACE_NAME ||\n            handCard.cardId === undefined\n          ) {\n            throw new Error(`Can't use card other than action.`);\n          }\n          const action = actionCards.get(handCard.cardId);\n          if (action === undefined) {\n            throw new Error(\n              `Something went wrong, action shouldn't be undefined at this point.`\n            );\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.game.setAction(action.name);\n          this.discardPileCards.addCardToDiscardPile({\n            type: handCard.cardType,\n            id: handCard.cardId,\n          });\n        })\n      )\n      .subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            eventDie\n                                        \n                                \n                                \n                                        \n                                            nextProductionDie\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            productionDie\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionName | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventDie:         EventValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextProductionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextProductionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         GamePhase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GamePhase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hand.html":{"url":"interfaces/Hand.html","title":"interface - Hand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/hand.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Hands\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Hands\n */\nexport interface Hand extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createHand = (id: string, color: DomainColor): Hand => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HandComponent.html":{"url":"components/HandComponent.html","title":"component - HandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/hand/hand/hand.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-hand\n            \n\n            \n                styleUrls\n                ./hand.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hand.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ACTION_CARD_INTERFACE_NAME\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionCard\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getHand\n                            \n                            \n                                getHandsCards\n                            \n                            \n                                selectHandCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                handId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(handsCards: HandsCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        handId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActionCard\n                        \n                    \n                \n            \n            \n                \ngetActionCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHand\n                        \n                    \n                \n            \n            \n                \ngetHand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Hand | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandsCards\n                        \n                    \n                \n            \n            \n                \ngetHandsCards(handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ACTION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ACTION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { HandsCardsEntity, HandsCardsFacade } from '@taormina/data-access-game';\nimport {\n  actionCards,\n  developmentCards,\n  hands,\n} from '@taormina/shared-constants';\nimport {\n  ActionCard,\n  ACTION_CARD_INTERFACE_NAME,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Hand,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-hand',\n  templateUrl: './hand.component.html',\n  styleUrls: ['./hand.component.css'],\n})\nexport class HandComponent {\n  @Input() handId!: string;\n\n  ACTION_CARD_INTERFACE_NAME = ACTION_CARD_INTERFACE_NAME;\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n\n  constructor(private handsCards: HandsCardsFacade) {}\n\n  getHand(): Hand | undefined {\n    return hands.get(this.handId);\n  }\n\n  getHandsCards(handId: string): Observable {\n    return this.handsCards.allHandsCards$.pipe(\n      map((handsCards) =>\n        handsCards.filter((handCard) => handCard.handId === handId)\n      )\n    );\n  }\n\n  getActionCard(cardId: string): ActionCard | undefined {\n    return actionCards.get(cardId);\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.handsCards.selectHandCard(pivotId);\n  }\n}\n\n    \n\n    \n        \n  {{ hand.color }}\n  \n    \n      \n        {{ action.name }}\n        Select\n      \n    \n    \n      \n        {{ development.name }}\n        Select\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./hand.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ hand.color }}                    {{ action.name }}        Select                            {{ development.name }}        Select            '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HandModule.html":{"url":"modules/HandModule.html","title":"module - HandModule","body":"\n                   \n\n\n\n\n    Modules\n    HandModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HandModule\n\n\n\ncluster_HandModule_declarations\n\n\n\ncluster_HandModule_exports\n\n\n\n\nHandComponent\n\nHandComponent\n\n\n\nHandModule\n\nHandModule\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/hand/hand.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HandComponent } from './hand/hand.component';\n\n@NgModule({\n  declarations: [HandComponent],\n  imports: [CommonModule],\n  exports: [HandComponent],\n})\nexport class HandModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsEffects.html":{"url":"injectables/HandsCardsEffects.html","title":"injectable - HandsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { createHandsCardsEntity } from './hands-cards.models';\n\n@Injectable()\nexport class HandsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsEntity.html":{"url":"interfaces/HandsCardsEntity.html","title":"interface - HandsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'HandsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            handId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\n/**\n * Interface for the 'HandsCards' data\n */\nexport interface HandsCardsEntity {\n  id: string; // Primary ID\n  handId: string; // Foreign key to hands\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createHandsCardsEntity = (\n  id: string,\n  handId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): HandsCardsEntity => ({\n  id,\n  handId,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsFacade.html":{"url":"injectables/HandsCardsFacade.html","title":"injectable - HandsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allHandsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedHandsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToHand\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeHandCard\n                            \n                            \n                                selectHandCard\n                            \n                            \n                                unselectHandCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToHand\n                        \n                    \n                \n            \n            \n                \naddCardsToHand(handId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeHandCard\n                        \n                    \n                \n            \n            \n                \nremoveHandCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unselectHandCard\n                        \n                    \n                \n            \n            \n                \nunselectHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport * as HandsCardsFeature from './hands-cards.reducer';\nimport * as HandsCardsSelectors from './hands-cards.selectors';\n\n@Injectable()\nexport class HandsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded));\n  allHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  );\n  selectedHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  );\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsSavedGame());\n  }\n\n  addCardsToHand(\n    handId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(HandsCardsActions.addCardsToHand({ handId, cards }));\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.store.dispatch(HandsCardsActions.selectHandCard({ id: pivotId }));\n  }\n\n  unselectHandCard(): void {\n    this.store.dispatch(HandsCardsActions.unselectHandCard());\n  }\n\n  removeHandCard(id: string): void {\n    this.store.dispatch(HandsCardsActions.removeHandCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsPartialState.html":{"url":"interfaces/HandsCardsPartialState.html","title":"interface - HandsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            HANDS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HANDS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HANDS_CARDS_FEATURE_KEY:         HandsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsState.html":{"url":"interfaces/HandsCardsState.html","title":"interface - HandsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasColor.html":{"url":"interfaces/HasColor.html","title":"interface - HasColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/color.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DomainColor } from '../types/domain';\n\nexport interface HasColor {\n  color?: DomainColor;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasCost.html":{"url":"interfaces/HasCost.html","title":"interface - HasCost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasCost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/cost.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResourceType } from '../types/resources';\n\nexport interface HasCost {\n  cost: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasId.html":{"url":"interfaces/HasId.html","title":"interface - HasId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasId {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasName.html":{"url":"interfaces/HasName.html","title":"interface - HasName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/name.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasName {\n  name: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isHasName(obj: any): obj is HasName {\n  return typeof obj.name === 'string';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasRules.html":{"url":"interfaces/HasRules.html","title":"interface - HasRules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasRules\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/rules.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasRules {\n  ruleIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasVictoryPoints.html":{"url":"interfaces/HasVictoryPoints.html","title":"interface - HasVictoryPoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasVictoryPoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/victory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVictoryPoints {\n  victoryPoints?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandCard.html":{"url":"interfaces/LandCard.html","title":"interface - LandCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/land.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Land Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            die\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        die\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        die:         ResourceValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         LandType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { ResourceValue } from '../types/dice';\nimport { DomainColor } from '../types/domain';\nimport { LandType } from '../types/resources';\n\nexport const LAND_CARD_INTERFACE_NAME = 'LandCard';\n\nexport const AVAILABLE_LAND_SLOT = 'AvailableLandSlot';\n\n/**\n * Interface for the Land Cards\n */\nexport interface LandCard extends HasId, HasColor, CanPrint {\n  interface: typeof LAND_CARD_INTERFACE_NAME;\n  id: string;\n  type: LandType;\n  die: ResourceValue;\n  color?: DomainColor;\n}\n\nexport const createLandCard = (\n  id: string,\n  type: LandType,\n  die: ResourceValue,\n  color?: DomainColor\n): LandCard => ({\n  interface: LAND_CARD_INTERFACE_NAME,\n  id,\n  type,\n  die,\n  color,\n  print: (): string => `${type}`,\n});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isLandCard(obj: any): obj is LandCard {\n  return obj !== undefined && obj.interface === LAND_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsEffects.html":{"url":"injectables/LandsPileCardsEffects.html","title":"injectable - LandsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { createInitialLandsPileCards } from './lands-pile-cards.models';\n\n@Injectable()\nexport class LandsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsEntity.html":{"url":"interfaces/LandsPileCardsEntity.html","title":"interface - LandsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'LandsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { landCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'LandsPileCards' data\n */\nexport interface LandsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createLandsPileCardsEntity = (\n  id: string,\n  cardId: string\n): LandsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialLandsPileCards = (): LandsPileCardsEntity[] => {\n  const shuffled = arrayShuffle(Array.from(landCards.keys()));\n  const entities = shuffled.map((cardId) =>\n    createLandsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsFacade.html":{"url":"injectables/LandsPileCardsFacade.html","title":"injectable - LandsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allLandsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedLandsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeLandsPileCard\n                            \n                            \n                                selectLandsPileCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLandsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveLandsPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLandsPileCard\n                        \n                    \n                \n            \n            \n                \nselectLandsPileCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport * as LandsPileCardsFeature from './lands-pile-cards.reducer';\nimport * as LandsPileCardsSelectors from './lands-pile-cards.selectors';\n\n@Injectable()\nexport class LandsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  );\n  allLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  );\n  selectedLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsSavedGame());\n  }\n\n  selectLandsPileCard(pivotId: string): void {\n    this.store.dispatch(\n      LandsPileCardsActions.selectLandsPileCard({ id: pivotId })\n    );\n  }\n\n  removeLandsPileCard(id: string): void {\n    this.store.dispatch(LandsPileCardsActions.removeLandsPileCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsPartialState.html":{"url":"interfaces/LandsPileCardsPartialState.html","title":"interface - LandsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            LANDS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LANDS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LANDS_PILE_CARDS_FEATURE_KEY:         LandsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsState.html":{"url":"interfaces/LandsPileCardsState.html","title":"interface - LandsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhasesComponent.html":{"url":"components/PhasesComponent.html","title":"component - PhasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/phases/phases/phases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-phases\n            \n\n            \n                styleUrls\n                ./phases.component.css\n            \n\n\n\n            \n                templateUrl\n                ./phases.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DomainColor\n                            \n                            \n                                GamePhase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAction\n                            \n                            \n                                getEventCard\n                            \n                            \n                                getPhase\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getSelectedEventsPileCard\n                            \n                            \n                                removeSelectedEventsPileCard\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                unsetAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, eventsPileCards: EventsPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAction\n                        \n                    \n                \n            \n            \n                \ngetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventCard\n                        \n                    \n                \n            \n            \n                \ngetEventCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetAction\n                        \n                    \n                \n            \n            \n                \nunsetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DomainColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DomainColor\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GamePhase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GamePhase\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  GameFacade,\n} from '@taormina/data-access-game';\nimport { eventCards } from '@taormina/shared-constants';\nimport {\n  ActionName,\n  DomainColor,\n  EventCard,\n  GamePhase,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'taormina-phases',\n  templateUrl: './phases.component.html',\n  styleUrls: ['./phases.component.css'],\n})\nexport class PhasesComponent {\n  GamePhase = GamePhase;\n  DomainColor = DomainColor;\n\n  constructor(\n    private game: GameFacade,\n    private eventsPileCards: EventsPileCardsFacade\n  ) {}\n\n  getPhase(): Observable {\n    return this.game.phase$;\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.game.setPhase(phase);\n  }\n\n  getPlayer(): Observable {\n    return this.game.player$;\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.game.setPlayer(player);\n  }\n\n  getEventCard(cardId: string): EventCard | undefined {\n    return eventCards.get(cardId);\n  }\n\n  getSelectedEventsPileCard(): Observable {\n    return this.eventsPileCards.selectedEventsPileCards$;\n  }\n\n  removeSelectedEventsPileCard(): void {\n    this.eventsPileCards.removeSelected();\n  }\n\n  getAction(): Observable {\n    return this.game.action$;\n  }\n\n  unsetAction(): void {\n    this.game.setAction(undefined);\n  }\n}\n\n    \n\n    \n        \n  \n    Current Player:\n    \n      \n        {{ player.key }}\n    \n  \n  \n    Current Phase:\n    \n      \n        {{ phase.key }}\n    \n  \n  \n    Current event:\n    \n      \n        {{ event.name }}\n      \n    \n    \n    \n      Finish event\n    \n  \n  \n    Current action:\n    \n      {{ action }}\n    \n    \n    Finish action\n  \n\n\n    \n\n    \n                \n                    ./phases.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Current Player:                  {{ player.key }}            Current Phase:                  {{ phase.key }}            Current event:                  {{ event.name }}                        Finish event            Current action:          {{ action }}            Finish action  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhasesModule.html":{"url":"modules/PhasesModule.html","title":"module - PhasesModule","body":"\n                   \n\n\n\n\n    Modules\n    PhasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PhasesModule_declarations\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\n\n\nPhasesModule\n\nPhasesModule\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/phases/phases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PhasesComponent } from './phases/phases.component';\n\n@NgModule({\n  declarations: [PhasesComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [PhasesComponent],\n})\nexport class PhasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PilesModule.html":{"url":"modules/PilesModule.html","title":"module - PilesModule","body":"\n                   \n\n\n\n\n    Modules\n    PilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_exports\n\n\n\ncluster_PilesModule_imports\n\n\n\ncluster_PilesModule_declarations\n\n\n\n\nPilesComponent\n\nPilesComponent\n\n\n\nPilesModule\n\nPilesModule\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nPilesModule -->\n\nUiCardModule->PilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/piles/piles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiCardModule } from '@taormina/ui-card';\nimport { PilesComponent } from './piles/piles.component';\n\n@NgModule({\n  declarations: [PilesComponent],\n  imports: [CommonModule, UiCardModule],\n  exports: [PilesComponent],\n})\nexport class PilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsEffects.html":{"url":"injectables/StockPilesCardsEffects.html","title":"injectable - StockPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                removeCards$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, stockPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { forkJoin } from 'rxjs';\nimport { map, mergeMap, take } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport {\n  createInitialStockPilesCards,\n  createStockPilesCardsEntity,\n  StockPilesCardsEntity,\n} from './stock-piles-cards.models';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  removeCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private stockPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsEntity.html":{"url":"interfaces/StockPilesCardsEntity.html","title":"interface - StockPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'StockPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  actionCards,\n  developmentCards,\n  stockPiles,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'StockPilesCards' data\n */\nexport interface StockPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string; // Foreign key to stock piles\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createStockPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): StockPilesCardsEntity =>\n  ({\n    id,\n    pileId,\n    cardType,\n    cardId,\n  } as StockPilesCardsEntity);\n\nexport const createInitialStockPilesCards = (): StockPilesCardsEntity[] => {\n  const stockPilesCards: StockPilesCardsEntity[] = [];\n\n  const shuffledCards = arrayShuffle([\n    ...Array.from(actionCards.values()),\n    ...Array.from(developmentCards.values()),\n  ]);\n\n  for (let i = 0; i = shuffledCards.length) break;\n      stockPilesCards.push(\n        createStockPilesCardsEntity(\n          uuidv4(),\n          stockPiles[i],\n          shuffledCards[cardIndex].interface,\n          shuffledCards[cardIndex].id\n        )\n      );\n    }\n  }\n\n  return stockPilesCards;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsFacade.html":{"url":"injectables/StockPilesCardsFacade.html","title":"injectable - StockPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allStockPilesCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedStockPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToStockPileBottom\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeCardsFromStockPileTop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToStockPileBottom\n                        \n                    \n                \n            \n            \n                \naddCardsToStockPileBottom(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:36\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCardsFromStockPileTop\n                        \n                    \n                \n            \n            \n                \nremoveCardsFromStockPileTop(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  );\n  allStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  );\n  selectedStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsSavedGame());\n  }\n\n  removeCardsFromStockPileTop(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.removeCardsFromStockPileTop({ pileId, cards })\n    );\n  }\n\n  addCardsToStockPileBottom(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.addCardsToStockPileBottom({ pileId, cards })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsPartialState.html":{"url":"interfaces/StockPilesCardsPartialState.html","title":"interface - StockPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            STOCK_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        STOCK_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STOCK_PILES_CARDS_FEATURE_KEY:         StockPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsState.html":{"url":"interfaces/StockPilesCardsState.html","title":"interface - StockPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiCardModule.html":{"url":"modules/UiCardModule.html","title":"module - UiCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UiCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_exports\n\n\n\ncluster_UiCardModule_imports\n\n\n\n\nCardBackModule\n\nCardBackModule\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardBackModule->UiCardModule\n\n\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nUiCardModule -->\n\nCardFrontModule->UiCardModule\n\n\n\n\n\nCardBackModule \n\nCardBackModule \n\nCardBackModule  -->\n\nUiCardModule->CardBackModule \n\n\n\n\n\nCardFrontModule \n\nCardFrontModule \n\nCardFrontModule  -->\n\nUiCardModule->CardFrontModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/ui-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CardBackModule\n                        \n                        \n                            CardFrontModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardBackModule\n                        \n                        \n                            CardFrontModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CardBackModule } from './card-back/card-back.module';\nimport { CardFrontModule } from './card-front/card-front.module';\n\n@NgModule({\n  imports: [CommonModule, CardBackModule, CardFrontModule],\n  exports: [CardBackModule, CardFrontModule],\n})\nexport class UiCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 14.0.4\n        \n            @angular/cdk : 14.0.4\n        \n            @angular/common : 14.0.4\n        \n            @angular/compiler : 14.0.4\n        \n            @angular/core : 14.0.4\n        \n            @angular/forms : 14.0.4\n        \n            @angular/material : 14.0.4\n        \n            @angular/platform-browser : 14.0.4\n        \n            @angular/platform-browser-dynamic : 14.0.4\n        \n            @angular/router : 14.0.4\n        \n            @ngrx/effects : 14.0.1\n        \n            @ngrx/entity : 14.0.1\n        \n            @ngrx/router-store : 14.0.1\n        \n            @ngrx/store : 14.0.1\n        \n            @nrwl/angular : 14.8.6\n        \n            @storybook/core-server : 6.4.22\n        \n            array-shuffle : ^2.0.0\n        \n            eslint-plugin-html : ^6.1.1\n        \n            rxjs : ^6.6.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : 0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionName   (libs/.../action.ts)\n                        \n                        \n                            AgglomerationType   (libs/.../agglomeration.ts)\n                        \n                        \n                            BuildingName   (libs/.../development.ts)\n                        \n                        \n                            DevelopmentType   (libs/.../development.ts)\n                        \n                        \n                            DiceId   (libs/.../dice.ts)\n                        \n                        \n                            DomainColor   (libs/.../domain.ts)\n                        \n                        \n                            EventName   (libs/.../event.ts)\n                        \n                        \n                            EventValue   (libs/.../dice.ts)\n                        \n                        \n                            GamePhase   (libs/.../phase.ts)\n                        \n                        \n                            LandType   (libs/.../resources.ts)\n                        \n                        \n                            MasteryPointsType   (libs/.../development.ts)\n                        \n                        \n                            ResourceType   (libs/.../resources.ts)\n                        \n                        \n                            RowValue   (libs/.../domain.ts)\n                        \n                        \n                            WarriorName   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/action.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionName\n                    \n                \n                        \n                            \n                                 Soothsayer\n                            \n                        \n                        \n                            \n                                Value : Soothsayer\n                            \n                        \n                        \n                            \n                                 Pathfinder\n                            \n                        \n                        \n                            \n                                Value : Pathfinder\n                            \n                        \n                        \n                            \n                                 Goldsmith\n                            \n                        \n                        \n                            \n                                Value : Goldsmith\n                            \n                        \n                        \n                            \n                                 TradeRoute\n                            \n                        \n                        \n                            \n                                Value : Trade route\n                            \n                        \n                        \n                            \n                                 Relocation\n                            \n                        \n                        \n                            \n                                Value : Relocation\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/agglomeration.ts\n    \n        \n            \n                \n                    \n                        \n                        AgglomerationType\n                    \n                \n                        \n                            \n                                 Road\n                            \n                        \n                        \n                            \n                                Value : ROAD\n                            \n                        \n                        \n                            \n                                 Hamlet\n                            \n                        \n                        \n                            \n                                Value : HAMLET\n                            \n                        \n                        \n                            \n                                 Town\n                            \n                        \n                        \n                            \n                                Value : TOWN\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/development.ts\n    \n        \n            \n                \n                    \n                        \n                        BuildingName\n                    \n                \n                        \n                            \n                                 Brickyard\n                            \n                        \n                        \n                            \n                                Value : Brickyard\n                            \n                        \n                        \n                            \n                                 Sawmill\n                            \n                        \n                        \n                            \n                                Value : Sawmill\n                            \n                        \n                        \n                            \n                                 Mill\n                            \n                        \n                        \n                            \n                                Value : Mill\n                            \n                        \n                        \n                            \n                                 Foundry\n                            \n                        \n                        \n                            \n                                Value : Foundry\n                            \n                        \n                        \n                            \n                                 Weaving\n                            \n                        \n                        \n                            \n                                Value : Weaving\n                            \n                        \n                        \n                            \n                                 Warehouse\n                            \n                        \n                        \n                            \n                                Value : Warehouse\n                            \n                        \n                        \n                            \n                                 Market\n                            \n                        \n                        \n                            \n                                Value : Market\n                            \n                        \n                        \n                            \n                                 TollBridge\n                            \n                        \n                        \n                            \n                                Value : Toll bridge\n                            \n                        \n                        \n                            \n                                 Monastery\n                            \n                        \n                        \n                            \n                                Value : Monastery\n                            \n                        \n                        \n                            \n                                 CommunityCenter\n                            \n                        \n                        \n                            \n                                Value : Community center\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DevelopmentType\n                    \n                \n                        \n                            \n                                 Building\n                            \n                        \n                        \n                            \n                                Value : BUILDING\n                            \n                        \n                        \n                            \n                                 Ship\n                            \n                        \n                        \n                            \n                                Value : SHIP\n                            \n                        \n                        \n                            \n                                 Warrior\n                            \n                        \n                        \n                            \n                                Value : WARRIOR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MasteryPointsType\n                    \n                \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Strength\n                            \n                        \n                        \n                            \n                                Value : STRENGTH\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        WarriorName\n                    \n                \n                        \n                            \n                                 Altair\n                            \n                        \n                        \n                            \n                                Value : Altaïr\n                            \n                        \n                        \n                            \n                                 Ezio\n                            \n                        \n                        \n                            \n                                Value : Ezio\n                            \n                        \n                        \n                            \n                                 Evie\n                            \n                        \n                        \n                            \n                                Value : Evie\n                            \n                        \n                        \n                            \n                                 Jacob\n                            \n                        \n                        \n                            \n                                Value : Jacob\n                            \n                        \n                        \n                            \n                                 Kassandra\n                            \n                        \n                        \n                            \n                                Value : Kassandra\n                            \n                        \n                        \n                            \n                                 Alexios\n                            \n                        \n                        \n                            \n                                Value : Alexios\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/dice.ts\n    \n        \n            \n                \n                    \n                        \n                        DiceId\n                    \n                \n                        \n                            \n                                 Resource\n                            \n                        \n                        \n                            \n                                Value : RESOURCE\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventValue\n                    \n                \n                        \n                            \n                                 Thieves\n                            \n                        \n                        \n                            \n                                Value : THIEVES\n                            \n                        \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Celebration\n                            \n                        \n                        \n                            \n                                Value : CELEBRATION\n                            \n                        \n                        \n                            \n                                 Harvest\n                            \n                        \n                        \n                            \n                                Value : HARVEST\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/domain.ts\n    \n        \n            \n                \n                    \n                        \n                        DomainColor\n                    \n                \n                        \n                            \n                                 Red\n                            \n                        \n                        \n                            \n                                Value : RED\n                            \n                        \n                        \n                            \n                                 Blue\n                            \n                        \n                        \n                            \n                                Value : BLUE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RowValue\n                    \n                \n                        \n                            \n                                 Lower\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Middle\n                            \n                        \n                        \n                            \n                                 Up\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Upper\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/event.ts\n    \n        \n            \n                \n                    \n                        \n                        EventName\n                    \n                \n                        \n                            \n                                 Festival\n                            \n                        \n                        \n                            \n                                Value : Festival\n                            \n                        \n                        \n                            \n                                 AuspiciousYear\n                            \n                        \n                        \n                            \n                                Value : Auspicious year\n                            \n                        \n                        \n                            \n                                 Hawker\n                            \n                        \n                        \n                            \n                                Value : Hawker\n                            \n                        \n                        \n                            \n                                 Invention\n                            \n                        \n                        \n                            \n                                Value : Invention\n                            \n                        \n                        \n                            \n                                 MerchantShipTravel\n                            \n                        \n                        \n                            \n                                Value : Merchant ship travel\n                            \n                        \n                        \n                            \n                                 Quarrel\n                            \n                        \n                        \n                            \n                                Value : Quarrel\n                            \n                        \n                        \n                            \n                                 SiblingRivalry\n                            \n                        \n                        \n                            \n                                Value : Sibling rivalry\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/phase.ts\n    \n        \n            \n                \n                    \n                        \n                        GamePhase\n                    \n                \n                        \n                            \n                                 InitialThrow\n                            \n                        \n                        \n                            \n                                Value : INITIAL THROW\n                            \n                        \n                        \n                            \n                                 InitialDraw\n                            \n                        \n                        \n                            \n                                Value : INITIAL DRAW\n                            \n                        \n                        \n                            \n                                 LoopThrow\n                            \n                        \n                        \n                            \n                                Value : LOOP THROW\n                            \n                        \n                        \n                            \n                                 LoopActions\n                            \n                        \n                        \n                            \n                                Value : LOOP ACTIONS\n                            \n                        \n                        \n                            \n                                 LoopDraw\n                            \n                        \n                        \n                            \n                                Value : LOOP DRAW\n                            \n                        \n                        \n                            \n                                 LoopExchange\n                            \n                        \n                        \n                            \n                                Value : LOOP EXCHANGE\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/resources.ts\n    \n        \n            \n                \n                    \n                        \n                        LandType\n                    \n                \n                        \n                            \n                                 ClayPit\n                            \n                        \n                        \n                            \n                                Value : CLAYPIT\n                            \n                        \n                        \n                            \n                                 Forest\n                            \n                        \n                        \n                            \n                                Value : FOREST\n                            \n                        \n                        \n                            \n                                 GoldMine\n                            \n                        \n                        \n                            \n                                Value : GOLDMINE\n                            \n                        \n                        \n                            \n                                 Field\n                            \n                        \n                        \n                            \n                                Value : FIELD\n                            \n                        \n                        \n                            \n                                 StoneQuarry\n                            \n                        \n                        \n                            \n                                Value : STONEQUARRY\n                            \n                        \n                        \n                            \n                                 Pasture\n                            \n                        \n                        \n                            \n                                Value : PASTURE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 Clay\n                            \n                        \n                        \n                            \n                                Value : CLAY\n                            \n                        \n                        \n                            \n                                 Wood\n                            \n                        \n                        \n                            \n                                Value : WOOD\n                            \n                        \n                        \n                            \n                                 Gold\n                            \n                        \n                        \n                            \n                                Value : GOLD\n                            \n                        \n                        \n                            \n                                 Wheat\n                            \n                        \n                        \n                            \n                                Value : WHEAT\n                            \n                        \n                        \n                            \n                                 Stone\n                            \n                        \n                        \n                            \n                                Value : STONE\n                            \n                        \n                        \n                            \n                                 Wool\n                            \n                        \n                        \n                            \n                                Value : WOOL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBuilding   (libs/.../development.ts)\n                        \n                        \n                            createHamlet   (libs/.../agglomeration.ts)\n                        \n                        \n                            createRoad   (libs/.../agglomeration.ts)\n                        \n                        \n                            createShip   (libs/.../development.ts)\n                        \n                        \n                            createTown   (libs/.../agglomeration.ts)\n                        \n                        \n                            createWarrior   (libs/.../development.ts)\n                        \n                        \n                            eventFromValue   (libs/.../dice.ts)\n                        \n                        \n                            getImgSrc   (libs/.../assets.ts)\n                        \n                        \n                            getRandomEventDieValue   (libs/.../dice.ts)\n                        \n                        \n                            getRandomProductionDieValue   (libs/.../dice.ts)\n                        \n                        \n                            isActionCard   (libs/.../action.ts)\n                        \n                        \n                            isAgglomerationCard   (libs/.../agglomeration.ts)\n                        \n                        \n                            isCanPrint   (libs/.../print.ts)\n                        \n                        \n                            isDevelopmentCard   (libs/.../development.ts)\n                        \n                        \n                            isEventCard   (libs/.../event.ts)\n                        \n                        \n                            isHasName   (libs/.../name.ts)\n                        \n                        \n                            isLandCard   (libs/.../land.ts)\n                        \n                        \n                            mapDieToIconNameFront   (libs/.../assets.ts)\n                        \n                        \n                            mapDomainColorToDomainId   (libs/.../domain.ts)\n                        \n                        \n                            mapDomainColorToHandId   (libs/.../domain.ts)\n                        \n                        \n                            mapTypeToIconNameFront   (libs/.../assets.ts)\n                        \n                        \n                            randomDiceValue   (libs/.../dice.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/structures/development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBuilding\n                        \n                    \n                \n            \n            \n                \ncreateBuilding(id: string, name: BuildingName, cost: Map, tradePoints?: number, givesKnowledge?: boolean, noDuplicate?: boolean, victoryPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                BuildingName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tradePoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    givesKnowledge\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    noDuplicate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    victoryPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShip\n                        \n                    \n                \n            \n            \n                \ncreateShip(id: string, type: s/ShipName.html\" target=\"_self\">ShipNameKey)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                ShipNameKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWarrior\n                        \n                    \n                \n            \n            \n                \ncreateWarrior(id: string, name: WarriorName, cost: Map, strengthPoints?: number, celebrationPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                WarriorName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    strengthPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    celebrationPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDevelopmentCard\n                        \n                    \n                \n            \n            \n                \nisDevelopmentCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/agglomeration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createHamlet\n                        \n                    \n                \n            \n            \n                \ncreateHamlet(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRoad\n                        \n                    \n                \n            \n            \n                \ncreateRoad(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTown\n                        \n                    \n                \n            \n            \n                \ncreateTown(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAgglomerationCard\n                        \n                    \n                \n            \n            \n                \nisAgglomerationCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/dice.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eventFromValue\n                        \n                    \n                \n            \n            \n                \neventFromValue(value: DiceValue)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomEventDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomEventDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         EventValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomProductionDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomProductionDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         ResourceValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomDiceValue\n                        \n                    \n                \n            \n            \n                \nrandomDiceValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         DiceValue\n\n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/assets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n            \n                \ngetImgSrc(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDieToIconNameFront\n                        \n                    \n                \n            \n            \n                \nmapDieToIconNameFront(die: ResourceValue)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    die\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapTypeToIconNameFront\n                        \n                    \n                \n            \n            \n                \nmapTypeToIconNameFront(type: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isActionCard\n                        \n                    \n                \n            \n            \n                \nisActionCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/print.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCanPrint\n                        \n                    \n                \n            \n            \n                \nisCanPrint(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CanPrint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/event.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isEventCard\n                        \n                    \n                \n            \n            \n                \nisEventCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isHasName\n                        \n                    \n                \n            \n            \n                \nisHasName(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HasName\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/land.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLandCard\n                        \n                    \n                \n            \n            \n                \nisLandCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/domain.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapDomainColorToDomainId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToDomainId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDomainColorToHandId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToHandId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nTaormina\nThis project was generated using Nx.\nEnvironment\nGlobally installed packages\n├── @angular/cli@14.0.5\n├── corepack@0.10.0\n├── npm@8.13.2\n├── nx@14.4.2\n└── updtr@4.0.0Node version\nv16.16.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Laure-Hélène Bruneton\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardBackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardFrontModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataAccessGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DomainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureEngineModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HandModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_CardBackModule\n\n\n\ncluster_CardBackModule_declarations\n\n\n\ncluster_CardBackModule_exports\n\n\n\ncluster_CardFrontModule\n\n\n\ncluster_CardFrontModule_declarations\n\n\n\ncluster_CardFrontModule_exports\n\n\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_declarations\n\n\n\ncluster_DiceModule_exports\n\n\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_declarations\n\n\n\ncluster_DomainModule_imports\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\ncluster_HandModule\n\n\n\ncluster_HandModule_declarations\n\n\n\ncluster_HandModule_exports\n\n\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_declarations\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_declarations\n\n\n\ncluster_PilesModule_exports\n\n\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nCardBackComponent\n\nCardBackComponent\n\n\n\nCardBackModule\n\nCardBackModule\n\nCardBackModule -->\n\nCardBackComponent->CardBackModule\n\n\n\n\n\nCardBackComponent \n\nCardBackComponent \n\nCardBackComponent  -->\n\nCardBackModule->CardBackComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardBackModule->UiCardModule\n\n\n\n\n\nCardFrontComponent\n\nCardFrontComponent\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nCardFrontModule -->\n\nCardFrontComponent->CardFrontModule\n\n\n\n\n\nCardFrontComponent \n\nCardFrontComponent \n\nCardFrontComponent  -->\n\nCardFrontModule->CardFrontComponent \n\n\n\nUiCardModule -->\n\nCardFrontModule->UiCardModule\n\n\n\n\n\nAgglomerationPilesCardsFacade\n\nAgglomerationPilesCardsFacade\n\nDataAccessGameModule -->\n\nAgglomerationPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiceComponent\n\nDiceComponent\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDomainComponent\n\nDomainComponent\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\nDomainModule -->\n\nUiCardModule->DomainModule\n\n\n\nPilesModule -->\n\nUiCardModule->PilesModule\n\n\n\n\n\nCardBackModule \n\nCardBackModule \n\nCardBackModule  -->\n\nUiCardModule->CardBackModule \n\n\n\n\n\nCardFrontModule \n\nCardFrontModule \n\nCardFrontModule  -->\n\nUiCardModule->CardFrontModule \n\n\n\n\n\nHandComponent\n\nHandComponent\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPilesComponent\n\nPilesComponent\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0-0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs\n\n\n\nFilename\nline #\nTODO\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n617\ntest actions order: event > steal on thieves > production\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n71\nthrow error instead of filtering out undefined ?\n\n\n\nFIXMEs\n\n\n\nFilename\nline #\nFIXME\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n935\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n986\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1054\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1171\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1216\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1321\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1362\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1450\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1552\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1603\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1707\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1755\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1803\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1851\nshould test error thrown\n\n\n\nESLINT-DISABLE-NEXT-LINEs\n\n\n\nFilename\nline #\nESLINT-DISABLE-NEXT-LINE\n\n\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n812\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n818\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/shared-models/src/lib/interfaces/name.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/interfaces/print.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/action.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/agglomeration.ts\n95\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/development.ts\n111\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/event.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/land.ts\n37\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/types/dice.ts\n1\nno-magic-numbers\n\n\nlibs/shared-models/src/lib/types/resources.ts\n19\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n82\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n116\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n120\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n53\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n66\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n74\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n99\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n103\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n125\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n129\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n191\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n195\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n229\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n233\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n258\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n262\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n294\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n298\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n333\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n337\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n371\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n375\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n400\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n404\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n913\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n917\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n951\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n955\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n980\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n984\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1076\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1134\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n87\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n106\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n220\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n243\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n394\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n73\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n85\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n138\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n155\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n165\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n175\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n185\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n195\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n234\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n379\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n391\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n395\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n404\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n413\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n424\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n431\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n443\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n452\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/game/game.effects.ts\n32\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.spec.ts\n85\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.selectors.ts\n49\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n60\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n73\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n99\nindent\n\n\n\nPRETTIER-IGNOREs\n\n\n\nFilename\nline #\nPRETTIER-IGNORE\n\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n159\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n161\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n332\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DiceValue   (libs/.../dice.ts)\n                        \n                        \n                            DomainCardType   (libs/.../domain.ts)\n                        \n                        \n                            ResourceCount   (libs/.../resources.ts)\n                        \n                        \n                            ResourceValue   (libs/.../dice.ts)\n                        \n                        \n                            ShipNameKey   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/dice.ts\n    \n    \n        \n            \n                \n                    \n                    DiceValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceValue\n                \n            \n            \n                \n                            DiceValue\n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/domain.ts\n    \n    \n        \n            \n                \n                    \n                    DomainCardType\n                \n            \n            \n                \n                         |  |  |  |  | \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/resources.ts\n    \n    \n        \n            \n                \n                    \n                    ResourceCount\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/development.ts\n    \n    \n        \n            \n                \n                    \n                    ShipNameKey\n                \n            \n            \n                \n                            ResourceType | \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
