var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCard.html",[0,0.139,1,3.056]],["body/interfaces/ActionCard.html",[0,0.274,1,5.702,2,0.987,3,0.153,4,0.153,5,0.153,6,1.956,7,4.016,8,2.258,9,2.195,10,2.891,11,2.267,12,4.34,13,0.32,14,0.577,15,1.924,16,1.924,17,6.323,18,1.239,19,0.529,20,0.012,21,5.002,22,0.424,23,3.457,24,4.161,25,4.016,26,4.743,27,4.432,28,5.063,29,0.275,30,1.613,31,4.14,32,2.657,33,5.063,34,1.714,35,1.714,36,1.771,37,1.83,38,2.441,39,2.441,40,2.918,41,2.918,42,4.432,43,3.736,44,1.26,45,1.186,46,3.457,47,0.009,48,0.009]],["title/components/ActionsComponent.html",[49,1.614,50,2.014]],["body/components/ActionsComponent.html",[3,0.064,4,0.064,5,0.064,9,1.679,10,2.211,13,0.133,16,1.041,19,0.156,20,0.012,22,0.328,29,0.077,31,1.878,44,1.817,47,0.005,48,0.005,49,1.666,50,2.391,51,1.795,52,1.159,53,1.159,54,1.159,55,1.159,56,3.137,57,1.848,58,1.159,59,3.888,60,3.715,61,1.719,62,1.878,63,4.312,64,1.878,65,3.42,66,1.278,67,4.958,68,4.958,69,4.958,70,4.34,71,4.958,72,4.958,73,4.958,74,4.958,75,4.958,76,4.958,77,4.958,78,4.958,79,4.958,80,4.958,81,4.958,82,3.932,83,4.958,84,4.958,85,4.34,86,4.958,87,1.122,88,1.545,89,2.858,90,2.617,91,3.009,92,2.617,93,3.009,94,2.768,95,3.182,96,2.768,97,3.182,98,3.155,99,3.182,100,2.124,101,2.111,102,0.63,103,0.425,104,2.263,105,2.111,106,2.798,107,2.921,108,2.111,109,2.111,110,4.631,111,2.111,112,2.111,113,2.111,114,2.111,115,2.111,116,2.111,117,2.111,118,2.111,119,2.111,120,2.111,121,2.111,122,2.111,123,2.111,124,2.111,125,2.111,126,2.111,127,2.111,128,0.399,129,1.281,130,1.441,131,1.355,132,1.441,133,1.281,134,0.319,135,1.441,136,1.545,137,2.335,138,2.335,139,2.335,140,2.503,141,2.263,142,1.217,143,2.335,144,0.65,145,0.816,146,1.061,147,2.335,148,0.844,149,0.978,150,0.412,151,2.416,152,2.994,153,3.42,154,2.076,155,3.42,156,2.111,157,1.848,158,5.104,159,5.104,160,5.832,161,3.981,162,5.832,163,2.111,164,3.42,165,1.848,166,3.42,167,2.111,168,2.111,169,2.111,170,2.111,171,1.848,172,1.848,173,1.848,174,2.111,175,4.958,176,4.105,177,1.791,178,5.354,179,2.558,180,3.42,181,4.68,182,6.789,183,7.08,184,7.08,185,7.08,186,4.68,187,5.072,188,2.503,189,5.104,190,1.719,191,2.994,192,5.072,193,2.994,194,2.713,195,2.994,196,3.42,197,1.971,198,3.42,199,3.42,200,2.335,201,1.545,202,1.355,203,1.674,204,1.441,205,1.545,206,0.692,207,1.795,208,1.719,209,1.159,210,2.723,211,1.159,212,1.159,213,1.018,214,1.159,215,1.018,216,1.159,217,1.018,218,1.159,219,1.018,220,1.159,221,1.018,222,1.159,223,1.018,224,1.159,225,1.018,226,1.159,227,1.018,228,1.159,229,1.061,230,0.738,231,1.159,232,1.159]],["title/modules/ActionsModule.html",[233,1.173,234,2.851]],["body/modules/ActionsModule.html",[3,0.176,4,0.176,5,0.176,20,0.012,22,0.428,29,0.212,47,0.01,48,0.01,50,4.153,56,2.327,128,1.1,150,1.135,206,1.908,233,1.634,234,5.703,235,2.327,236,2.411,237,3.396,238,2.594,239,2.594,240,3.396,241,5.093,242,5.093,243,5.093,244,3.153,245,2.594,246,2.327,247,5.818,248,3.153,249,3.276,250,2.594,251,5.818,252,2.594]],["title/interfaces/AgglomerationCard.html",[0,0.139,253,2.851]],["body/interfaces/AgglomerationCard.html",[0,0.258,2,0.752,3,0.117,4,0.117,5,0.117,6,1.489,8,1.718,10,2.407,11,1.888,12,3.781,13,0.243,14,0.481,15,1.918,18,1.165,19,0.604,20,0.012,22,0.434,23,2.631,29,0.282,30,1.55,32,2.022,34,2.406,35,2.11,36,1.348,37,1.393,38,1.858,39,1.858,40,2.221,41,3.891,43,3.111,44,1.679,45,0.903,46,2.631,47,0.007,48,0.007,103,1.358,137,4.608,138,2.631,148,3.025,176,3.465,253,5.268,254,3.056,255,4.671,256,5.389,257,5.389,258,3.878,259,5.636,260,3.707,261,3.465,262,2.82,263,3.95,264,3.373,265,3.685,266,3.373,267,3.95,268,3.373,269,3.854,270,2.631,271,2.631,272,2.82,273,3.854,274,6.751,275,3.056,276,4.939,277,4.939,278,3.373,279,3.269,280,4.725,281,4.245,282,5.398,283,4.253,284,3.373,285,2.339,286,4.725,287,3.373,288,3.373,289,5.398,290,3.373,291,3.373,292,3.854,293,3.373,294,3.373,295,3.373]],["title/injectables/AgglomerationPilesCardsEffects.html",[296,0.978,297,3.312]],["body/injectables/AgglomerationPilesCardsEffects.html",[3,0.103,4,0.103,5,0.103,9,1.672,13,0.215,14,0.44,15,1.192,16,0.821,19,0.251,20,0.012,22,0.435,29,0.124,44,1.858,45,1.157,47,0.007,48,0.007,61,3.551,87,1.62,94,4.095,100,1.738,102,1.016,103,0.684,128,0.643,134,1.023,146,1.71,148,2.326,149,1.577,150,0.664,151,2.047,176,4.536,177,1.785,179,1.785,230,2.818,279,2.592,296,1.157,297,3.917,298,1.315,299,1.281,300,4.349,301,4.112,302,1.961,303,2.409,304,2.593,305,5.089,306,1.961,307,5.815,308,2.845,309,3.402,310,1.848,311,1.633,312,4.202,313,4.073,314,4.939,315,3.917,316,5.089,317,3.402,318,4.939,319,3.529,320,2.998,321,2.998,322,2.998,323,2.998,324,2.998,325,2.998,326,2.998,327,2.998,328,2.998,329,3.917,330,2.998,331,2.998,332,2.536,333,2.998,334,3.917,335,3.402,336,3.351,337,4.323,338,4.323,339,4.939,340,2.694,341,4.939,342,4.323,343,5.584,344,5.06,345,2.592,346,3.917,347,4.939,348,4.323,349,3.614,350,3.917,351,4.323,352,4.323,353,3.917,354,4.323,355,3.402,356,1.71,357,0.846,358,1.961,359,2.065,360,2.065,361,2.978,362,2.978,363,2.49,364,2.49,365,0.956,366,1.19,367,2.978,368,1.641,369,2.978,370,1.785]],["title/interfaces/AgglomerationPilesCardsEntity.html",[0,0.139,130,2.851]],["body/interfaces/AgglomerationPilesCardsEntity.html",[0,0.229,2,0.902,3,0.14,4,0.14,5,0.14,8,2.062,13,0.292,14,0.544,15,1.915,18,1.261,19,0.506,20,0.012,22,0.385,29,0.25,30,1.884,44,1.15,45,1.603,47,0.008,48,0.008,94,3.923,130,4.971,134,0.698,144,1.882,145,1.787,147,4.673,230,2.137,253,4.673,259,3.667,284,4.047,290,4.047,294,4.047,299,0.874,300,2.968,301,2.807,316,4.047,371,2.807,372,3.709,373,3.469,374,4.993,375,4.047,376,4.847,377,5.349,378,4.847,379,2.23,380,2.54,381,3.999,382,2.427,383,2.54,384,7.282,385,6.111,386,6.845,387,6.845,388,6.845,389,6.845,390,6.845,391,6.111,392,6.111]],["title/injectables/AgglomerationPilesCardsFacade.html",[95,2.681,296,0.978]],["body/injectables/AgglomerationPilesCardsFacade.html",[3,0.106,4,0.106,5,0.106,9,1.71,13,0.221,14,0.45,15,1.219,16,1.428,18,1.078,19,0.437,20,0.012,22,0.401,29,0.128,47,0.007,48,0.007,66,1.886,87,1.656,95,3.241,100,2.148,102,1.767,103,1.19,106,2.338,107,3.012,128,0.663,134,1.203,144,1.08,150,0.684,151,1.453,176,3.797,190,2.537,230,2.977,296,1.182,298,1.355,299,1.506,300,5.113,301,4.835,303,2.681,304,2.885,308,3.184,310,2.269,311,2.006,337,3.07,340,1.625,357,0.873,364,2.566,365,0.985,367,3.07,368,1.691,369,3.07,370,1.84,374,3.241,376,4.691,377,3.07,378,2.782,379,1.691,393,2.129,394,5.916,395,5.916,396,5.916,397,5.916,398,2.069,399,5.916,400,5.049,401,5.049,402,2.022,403,3.07,404,3.07,405,2.91,406,2.91,407,2.649,408,2.649,409,2.91,410,2.91,411,3.07,412,5.049,413,2.782,414,5.049,415,3.07,416,4.116,417,5.049,418,2.566,419,6.25,420,5.049,421,3.507,422,5.049,423,3.07,424,5.049,425,2.394,426,5.049,427,3.07,428,2.91,429,2.91,430,1.604,431,2.773,432,2.91,433,2.91,434,2.91,435,2.91,436,2.91,437,5.049,438,3.507,439,4.417,440,3.507,441,3.507,442,2.782]],["title/interfaces/AgglomerationPilesCardsPartialState.html",[0,0.139,443,3.312]],["body/interfaces/AgglomerationPilesCardsPartialState.html",[0,0.198,2,0.862,3,0.134,4,0.134,5,0.134,11,1.546,13,0.279,14,0.596,15,1.616,18,0.896,19,0.327,20,0.012,22,0.402,29,0.28,30,1.779,34,1.497,35,1.497,36,1.546,37,1.597,45,1.389,47,0.008,48,0.008,94,4.296,130,3.018,134,0.668,176,3.807,230,2.501,299,0.836,300,2.838,301,2.683,315,3.506,329,3.506,332,2.346,334,3.506,350,3.506,353,3.506,357,1.1,364,3.235,365,1.242,366,1.546,398,2.501,430,2.707,442,3.506,443,4.704,444,1.899,445,6.529,446,5.916,447,2.645,448,2.645,449,2.645,450,1.899,451,2.457,452,2.984,453,3.189,454,2.292,455,3.189,456,1.832,457,2.32,458,2.428,459,3.869,460,5.191,461,3.869,462,2.049,463,2.049,464,2.132,465,3.189,466,3.869,467,3.869,468,3.869,469,5.191,470,2.548,471,3.869,472,3.869]],["title/interfaces/AgglomerationPilesCardsState.html",[0,0.139,446,3.312]],["body/interfaces/AgglomerationPilesCardsState.html",[0,0.192,2,0.825,3,0.128,4,0.128,5,0.128,11,2.012,13,0.267,14,0.583,15,1.579,18,1.145,19,0.519,20,0.012,22,0.395,29,0.277,30,1.747,34,1.432,35,1.432,36,1.478,37,1.528,45,1.348,47,0.008,48,0.008,94,4.199,103,1.413,130,2.886,134,0.638,176,3.694,230,2.456,299,0.799,300,2.714,301,2.566,315,3.353,329,3.353,332,2.303,334,3.353,350,3.353,353,3.353,357,1.052,364,3.094,365,1.187,366,1.478,398,2.712,430,2.693,442,3.353,443,3.353,444,1.816,445,5.037,446,5.569,447,2.566,448,2.566,449,2.917,450,1.816,451,2.384,452,3.38,453,3.458,454,2.929,455,3.458,456,1.752,457,2.219,458,2.322,459,3.7,460,5.037,461,3.7,462,1.959,463,1.959,464,2.039,465,3.131,466,3.7,467,3.7,468,3.7,469,5.037,470,2.472,471,3.7,472,3.7]],["title/components/AppComponent.html",[49,1.614,213,2.014]],["body/components/AppComponent.html",[3,0.147,4,0.191,5,0.147,13,0.306,16,1.691,19,0.358,20,0.012,22,0.354,29,0.177,35,1.641,47,0.009,48,0.009,49,2.706,50,2.337,51,3.307,52,2.662,53,2.662,54,2.662,55,2.662,58,2.662,59,4.617,60,4.411,62,3.461,64,3.461,66,2.354,87,1.59,98,4.612,99,4.76,100,1.717,102,1.448,103,0.975,104,3.307,106,1.751,107,2.521,128,0.916,135,3.309,136,3.547,150,0.945,179,2.277,206,1.59,207,3.307,208,3.167,209,2.662,210,4.073,211,2.662,212,2.662,213,3.576,214,2.662,215,2.337,216,2.662,217,2.337,218,2.662,219,2.337,220,2.662,221,2.337,222,2.662,223,2.337,224,2.662,225,2.337,226,2.662,227,2.337,228,2.662,229,2.436,230,1.695,231,2.662,232,2.662,279,3.307,348,4.243,473,5.554,474,4.847,475,5.517,476,7.004,477,6.303,478,7.416,479,4.847,480,4.847,481,4.847,482,2.794,483,4.847,484,4.847]],["title/modules/AppModule.html",[233,1.173,485,3.056]],["body/modules/AppModule.html",[3,0.146,4,0.146,5,0.146,20,0.012,22,0.465,29,0.175,47,0.009,48,0.009,104,3.288,128,0.908,133,2.915,134,0.725,135,3.279,150,0.937,206,1.575,213,4.048,233,1.349,235,1.921,236,1.99,237,3.109,238,3.109,239,2.794,240,2.142,244,2.794,245,2.142,246,1.921,248,2.794,252,2.794,356,2.413,357,1.559,470,2.692,473,3.809,485,6.175,486,4.204,487,4.204,488,4.204,489,4.204,490,6.079,491,5.366,492,5.366,493,4.803,494,6.265,495,5.483,496,3.809,497,6.265,498,4.803,499,4.204,500,4.204,501,4.803,502,4.803,503,4.803,504,4.803,505,4.803,506,4.803,507,6.265,508,4.803,509,4.803,510,4.803,511,4.803,512,4.803]],["title/components/BoardComponent.html",[49,1.614,215,2.014]],["body/components/BoardComponent.html",[3,0.144,4,0.144,5,0.144,13,0.301,14,0.555,16,1.505,20,0.012,22,0.35,29,0.174,47,0.008,48,0.008,49,2.685,50,2.299,51,3.272,52,2.618,53,2.618,54,2.618,55,2.618,56,3.059,58,2.618,59,4.605,60,4.4,62,3.424,64,3.424,100,2.008,128,0.901,144,1.469,150,0.93,179,2.253,206,1.564,207,3.272,208,3.133,209,2.618,210,4.047,211,2.618,212,2.618,213,2.299,214,2.618,215,3.553,216,2.618,217,2.299,218,2.618,219,2.299,220,2.618,221,2.299,222,2.618,223,2.299,224,2.618,225,2.299,226,2.618,227,2.299,228,2.618,229,2.396,230,1.667,231,2.618,232,2.618,310,2.342,311,2.07,379,2.299,513,4.768,514,6.235,515,6.948,516,6.235,517,6.866,518,6.866,519,7.845,520,7.845,521,4.768,522,4.768,523,4.768,524,4.768]],["title/modules/BoardModule.html",[233,1.173,525,2.851]],["body/modules/BoardModule.html",[3,0.149,4,0.149,5,0.149,20,0.012,22,0.463,29,0.18,47,0.009,48,0.009,56,1.968,128,0.93,150,0.96,206,1.614,215,4.062,233,1.382,234,5.401,235,1.968,236,2.039,237,3.145,238,2.194,239,2.194,240,3.145,244,2.838,245,2.194,246,1.968,248,2.838,249,2.949,250,2.194,252,2.838,525,5.892,526,4.306,527,4.306,528,4.306,529,4.306,530,5.401,531,5.401,532,5.401,533,5.401,534,5.401,535,4.92,536,4.92,537,4.92,538,4.92,539,4.92,540,4.92,541,4.92,542,4.92]],["title/interfaces/CanPrint.html",[0,0.139,265,2.851]],["body/interfaces/CanPrint.html",[0,0.203,2,1.188,3,0.185,4,0.185,5,0.185,6,2.808,13,0.384,18,1.097,20,0.012,29,0.265,32,3.195,34,2.062,35,2.062,36,2.129,37,2.2,38,2.936,39,2.936,40,3.51,41,4.188,43,3.51,44,1.515,47,0.01,48,0.01,66,2.714,100,1.659,106,2.2,265,5.302,275,6.379,543,4.829,544,6.09,545,5.33,546,6.09]],["title/components/CardBackComponent.html",[49,1.614,217,2.014]],["body/components/CardBackComponent.html",[3,0.107,4,0.107,5,0.107,13,0.222,14,0.451,16,1.222,18,0.895,19,0.545,20,0.012,22,0.285,29,0.129,47,0.007,48,0.007,49,2.291,50,1.698,51,2.657,52,1.934,53,1.934,54,1.934,55,1.934,58,1.934,59,4.378,60,4.183,62,2.781,64,2.781,100,1.948,128,0.666,144,1.085,150,0.687,178,4.426,179,2.851,200,3.457,202,3.25,204,2.404,206,1.155,207,2.657,208,2.545,209,1.934,210,3.56,211,1.934,212,1.934,213,1.698,214,1.934,215,1.698,216,1.934,217,3.126,218,1.934,219,1.698,220,1.934,221,1.698,222,1.934,223,1.698,224,1.934,225,1.698,226,1.934,227,1.698,228,1.934,229,1.77,230,1.231,231,1.934,232,1.934,255,3.736,260,1.934,279,1.848,310,1.609,311,1.422,454,1.957,547,5.03,548,5.391,549,6.428,550,3.522,551,5.189,552,5.929,553,5.064,554,4.168,555,5.671,556,3.705,557,6.483,558,5.189,559,4.432,560,5.189,561,3.082,562,3.522,563,3.522,564,3.522,565,5.189,566,3.522,567,3.522,568,3.522,569,4.743,570,4.432,571,2.577,572,3.522,573,2.793,574,6.259,575,5.141,576,5.674,577,4.432,578,3.522,579,5.979,580,4.432,581,4.016,582,4.016,583,4.016,584,4.432,585,2.793,586,5.189,587,5.674,588,4.432,589,5.674,590,5.674,591,3.082,592,3.082,593,5.189,594,4.432,595,4.432,596,2.793,597,3.082,598,3.082,599,3.082,600,3.082,601,3.082,602,3.082,603,4.432,604,4.432,605,5.141,606,4.432,607,4.432,608,4.432,609,5.064,610,3.082,611,3.082,612,3.522,613,3.522,614,3.522,615,3.522,616,5.064,617,3.522,618,3.082,619,3.082,620,3.082,621,3.522,622,5.064,623,3.522]],["title/modules/CardBackModule.html",[233,1.173,624,2.851]],["body/modules/CardBackModule.html",[3,0.175,4,0.175,5,0.175,20,0.012,22,0.426,29,0.211,47,0.01,48,0.01,128,1.09,150,1.125,179,2.084,206,1.891,217,4.149,233,1.62,235,2.307,236,2.39,237,3.383,238,2.572,239,2.572,240,3.383,244,3.136,245,2.572,246,2.307,248,3.136,249,3.258,250,2.572,252,2.572,547,3.937,548,4.22,549,5.577,624,5.692,625,5.048,626,5.048,627,5.048,628,5.767,629,5.767]],["title/components/CardFrontComponent.html",[49,1.614,219,2.014]],["body/components/CardFrontComponent.html",[3,0.111,4,0.111,5,0.111,13,0.329,14,0.464,16,1.259,18,0.997,19,0.536,20,0.012,22,0.293,29,0.134,47,0.007,48,0.007,49,2.344,50,1.769,51,2.737,52,2.015,53,2.015,54,2.015,55,2.015,58,2.015,59,4.412,60,4.216,62,2.864,64,2.864,100,1.901,128,0.694,144,1.13,150,0.716,178,4.51,179,2.875,200,3.56,202,3.347,206,1.204,207,2.737,208,2.621,209,2.015,210,3.628,211,2.015,212,2.015,213,1.769,214,2.015,215,1.769,216,2.015,217,1.769,218,2.015,219,3.185,220,2.015,221,1.769,222,2.015,223,1.769,224,2.015,225,1.769,226,2.015,227,1.769,228,2.015,229,1.844,230,1.283,231,2.015,232,2.015,255,3.006,279,1.926,283,2.505,310,1.166,311,1.031,454,2.015,547,4.949,548,5.305,555,5.75,556,3.816,558,5.31,559,4.564,560,5.31,565,5.31,569,4.833,570,4.564,571,2.685,574,6.346,575,5.915,576,6.107,577,3.212,579,5.534,580,3.212,581,4.136,582,4.136,583,2.911,584,4.564,585,2.911,586,5.31,587,5.782,588,4.564,589,5.31,590,5.31,591,3.212,592,3.212,593,5.31,594,3.212,595,4.564,596,2.911,597,3.212,598,3.212,599,3.212,600,3.212,601,3.212,602,3.212,603,4.564,604,4.564,605,5.239,606,4.564,607,4.564,608,4.564,610,3.212,611,3.212,618,4.564,619,3.212,620,3.212,630,6.371,631,3.67,632,6.067,633,6.067,634,5.215,635,6.067,636,3.67,637,3.67,638,3.67,639,3.67,640,3.67,641,5.215,642,3.347,643,3.67,644,3.67,645,5.215,646,5.215,647,3.67]],["title/modules/CardFrontModule.html",[233,1.173,648,2.851]],["body/modules/CardFrontModule.html",[3,0.175,4,0.175,5,0.175,20,0.012,22,0.426,29,0.211,47,0.01,48,0.01,128,1.09,150,1.125,179,2.084,206,1.891,219,4.149,233,1.62,235,2.307,236,2.39,237,3.383,238,2.572,239,2.572,240,3.383,244,3.136,245,2.572,246,2.307,248,3.136,249,3.258,250,2.572,252,2.572,547,3.937,548,4.22,630,5.577,648,5.692,649,5.048,650,5.048,651,5.048,652,5.767,653,5.767]],["title/interfaces/Chainable.html",[0,0.139,654,3.056]],["body/interfaces/Chainable.html",[0,0.174,2,1.017,3,0.158,4,0.158,5,0.158,13,0.329,16,1.259,18,1.213,19,0.385,20,0.012,34,1.766,35,1.766,36,1.824,37,1.884,38,2.514,39,2.514,47,0.009,48,0.009,66,2.467,100,1.421,102,1.557,103,1.329,106,1.884,107,2.642,208,2.621,473,5.239,654,4.833,655,6.605,656,4.564,657,6.345,658,5.781,659,6.883,660,4.564,661,6.345,662,4.564,663,4.564,664,4.564,665,3.56,666,3.56,667,4.564,668,6.883,669,4.564,670,4.564,671,4.564,672,4.564,673,4.564,674,5.781,675,4.833,676,6.345,677,4.564,678,4.564,679,4.564,680,4.564,681,4.564,682,4.564,683,4.564]],["title/interfaces/Chainable-1.html",[0,0.116,281,2.008,654,2.55]],["body/interfaces/Chainable-1.html",[0,0.174,2,1.017,3,0.158,4,0.158,5,0.158,13,0.329,16,1.259,18,1.213,19,0.385,20,0.012,34,1.766,35,1.766,36,1.824,37,1.884,38,2.514,39,2.514,47,0.009,48,0.009,66,2.467,100,1.421,102,1.557,103,1.329,106,1.884,107,2.642,179,2.387,208,2.621,654,4.833,656,4.564,657,6.345,658,5.781,659,6.883,660,4.564,661,6.345,662,4.564,663,4.564,664,4.564,665,3.56,666,3.56,667,4.564,668,6.883,669,4.564,670,4.564,671,4.564,672,4.564,673,4.564,674,5.781,675,4.833,676,6.345,677,4.564,678,4.564,679,4.564,680,4.564,681,4.564,682,4.564,683,4.564,684,6.605]],["title/modules/DataAccessGameModule.html",[233,1.173,491,2.851]],["body/modules/DataAccessGameModule.html",[3,0.109,4,0.109,5,0.109,20,0.012,22,0.48,29,0.131,47,0.007,48,0.007,89,4.148,91,4.368,93,4.368,95,4.619,97,4.619,128,0.679,134,0.775,150,0.7,177,3.003,206,1.177,230,2.798,233,1.008,235,1.436,236,1.487,237,1.6,238,1.6,239,2.672,240,1.6,244,2.289,245,1.6,246,1.436,248,2.289,249,2.378,250,1.6,252,1.6,297,2.847,299,0.679,301,3.637,356,1.804,357,0.893,368,3.573,491,5.718,499,3.142,500,3.142,685,3.142,686,3.142,687,4.913,688,4.619,689,4.913,690,3.589,691,3.142,692,2.847,693,5.992,694,3.637,695,7.41,696,7.41,697,3.589,698,2.847,699,5.992,700,3.637,701,3.589,702,2.847,703,5.992,704,3.637,705,3.589,706,5.992,707,3.589,708,2.847,709,3.589,710,3.589,711,3.589,712,3.589,713,2.847,714,5.992,715,3.846,716,3.589,717,2.847,718,5.992,719,3.846,720,3.589,721,2.847,722,5.992,723,3.637,724,3.589,725,3.589,726,3.589,727,3.589,728,7.41,729,3.589,730,3.589,731,3.589,732,3.589,733,3.589,734,3.589,735,3.589,736,3.589,737,3.589,738,3.589,739,3.589,740,3.589,741,3.589,742,3.589,743,3.589,744,3.589,745,3.589,746,3.589,747,3.589,748,3.589,749,3.589]],["title/interfaces/DevelopmentCard.html",[0,0.139,750,2.681]],["body/interfaces/DevelopmentCard.html",[0,0.251,2,0.681,3,0.106,4,0.106,5,0.106,6,1.35,8,1.558,10,2.245,11,1.76,12,3.582,13,0.221,14,0.448,15,1.901,16,1.954,18,1.189,19,0.617,20,0.012,22,0.401,23,2.385,24,3.231,25,2.77,29,0.268,30,1.829,32,1.833,34,1.183,35,1.183,36,1.222,37,1.262,38,1.684,39,1.684,40,2.013,41,3.723,43,2.902,44,1.607,45,1.179,46,2.385,47,0.007,48,0.007,103,1.628,139,2.385,141,3.389,148,2.94,187,3.993,256,5.692,257,5.218,260,4.503,263,3.684,264,3.058,267,3.684,268,3.058,271,2.385,272,2.556,279,2.642,280,3.058,281,3.402,288,3.058,345,1.833,454,3.044,750,4.829,751,2.77,752,6.242,753,6.242,754,6.459,755,6.242,756,6.242,757,6.242,758,5.992,759,3.993,760,3.493,761,3.993,762,3.993,763,3.493,764,3.493,765,6.459,766,3.058,767,4.406,768,3.493,769,3.493,770,3.493,771,3.493,772,3.493,773,3.058,774,3.493,775,3.058,776,3.058,777,5.166,778,3.493,779,3.493,780,3.058,781,4.406,782,3.493,783,3.493,784,3.493,785,3.058]],["title/components/DiceComponent.html",[49,1.614,221,2.014]],["body/components/DiceComponent.html",[3,0.112,4,0.112,5,0.112,13,0.233,14,0.466,16,1.597,19,0.387,20,0.012,22,0.408,29,0.135,36,1.829,44,1.646,47,0.007,48,0.007,49,2.35,50,1.777,51,2.745,52,2.024,53,2.024,54,2.024,55,2.024,56,3.105,58,2.024,59,4.415,60,4.219,62,2.873,64,2.873,66,1.954,87,1.209,88,2.697,89,3.814,98,4.449,99,4.248,100,2.079,102,1.562,103,1.052,104,3.191,106,2.623,107,2.647,110,4.474,128,0.697,133,2.237,134,0.557,135,2.516,136,2.697,142,2.124,144,1.135,145,1.424,146,1.852,148,2.092,149,1.708,150,0.719,151,1.527,152,3.226,154,3.69,179,1.89,200,3.571,201,2.697,202,2.366,203,2.923,204,2.516,205,2.697,206,1.209,207,2.745,208,2.629,209,2.024,210,3.635,211,2.024,212,2.024,213,1.777,214,2.024,215,1.777,216,2.024,217,1.777,218,2.024,219,1.777,220,2.024,221,3.191,222,2.024,223,1.777,224,2.024,225,1.777,226,2.024,227,1.777,228,2.024,229,1.852,230,1.289,231,2.024,232,2.024,310,1.171,311,2.143,345,2.745,482,2.124,642,3.357,786,3.686,787,5.231,788,6.081,789,5.231,790,7.26,791,6.618,792,6.618,793,6.618,794,6.618,795,4.578,796,6.618,797,5.231,798,3.686,799,3.686,800,3.686,801,3.686,802,4.578,803,4.017,804,3.686,805,3.686,806,2.366,807,2.697,808,3.686,809,3.686,810,3.686,811,3.686,812,3.686,813,3.686,814,5.793,815,3.175]],["title/modules/DiceModule.html",[233,1.173,530,2.851]],["body/modules/DiceModule.html",[3,0.174,4,0.174,5,0.174,20,0.012,22,0.443,29,0.21,47,0.01,48,0.01,56,2.297,128,1.086,150,1.12,206,1.883,221,4.146,233,1.613,235,2.297,236,2.379,237,3.376,238,2.56,239,2.56,240,3.376,244,3.127,245,2.56,246,2.297,248,3.127,249,3.25,250,2.56,252,2.56,530,5.687,816,5.025,817,5.025,818,5.025,819,5.742,820,5.742,821,6.138,822,4.554]],["title/injectables/DiscardPileCardsEffects.html",[296,0.978,692,3.312]],["body/injectables/DiscardPileCardsEffects.html",[3,0.12,4,0.12,5,0.12,9,1.858,13,0.249,14,0.489,16,0.953,19,0.292,20,0.012,22,0.428,29,0.144,44,1.846,47,0.007,48,0.007,61,3.729,87,1.295,100,1.858,102,1.179,103,0.794,128,0.746,134,1.083,148,2.867,149,1.829,150,0.77,177,2.94,179,1.983,296,1.285,298,1.525,299,1.355,302,2.275,303,2.615,304,2.814,306,2.275,310,2.005,311,1.772,312,4.388,313,4.277,319,3.83,320,3.331,321,3.331,322,3.331,323,3.331,324,3.331,325,3.331,326,3.331,327,3.331,328,3.331,330,3.331,331,3.331,332,2.434,333,3.331,336,2.275,356,1.983,358,2.275,359,2.396,360,2.396,365,1.109,366,1.38,380,2.168,381,2.168,382,2.071,482,2.275,692,4.353,694,4.351,823,4.602,824,6.311,825,3.947,826,5.489,827,5.489,828,4.353,829,4.353,830,5.489,831,5.489,832,4.353,833,3.455,834,5.489,835,4.353,836,4.657,837,3.13,838,5.489,839,4.353,840,4.353,841,3.455,842,2.888,843,4.016,844,3.455]],["title/interfaces/DiscardPileCardsEntity.html",[0,0.139,845,3.056]],["body/interfaces/DiscardPileCardsEntity.html",[0,0.234,2,1.117,3,0.174,4,0.174,5,0.174,8,2.555,13,0.362,14,0.624,15,2.01,18,1.298,19,0.559,20,0.012,29,0.256,30,1.425,47,0.01,48,0.01,134,0.865,177,2.531,299,1.083,371,3.477,372,3.477,373,3.667,383,3.146,694,3.477,823,3.677,836,3.911,844,5.014,845,5.535,846,4.991]],["title/injectables/DiscardPileCardsFacade.html",[296,0.978,687,2.851]],["body/injectables/DiscardPileCardsFacade.html",[3,0.117,4,0.117,5,0.117,9,1.835,13,0.245,14,0.483,15,0.936,16,1.308,18,0.585,19,0.526,20,0.012,22,0.415,29,0.142,31,2.977,32,2.844,47,0.007,48,0.007,66,2.025,87,1.778,100,2.106,102,1.619,103,1.09,106,2.258,107,2.952,128,0.733,134,1.186,141,2.844,144,1.194,145,1.498,150,0.756,151,1.606,177,3.062,179,1.959,190,2.724,296,1.269,298,1.498,299,1.485,303,2.804,304,3.018,308,3.291,310,2.151,311,1.901,340,1.796,357,0.964,365,1.089,368,1.869,370,2.034,393,2.353,398,2.186,402,2.234,405,3.124,406,3.124,407,2.844,408,2.844,409,3.124,410,3.124,416,4.455,428,3.124,429,3.124,430,1.723,431,2.977,432,3.124,433,3.124,434,3.124,435,3.124,436,3.124,439,2.647,561,4.744,687,3.7,694,4.766,823,5.04,842,2.837,843,4.573,847,6.25,848,6.25,849,6.25,850,5.421,851,3.877,852,5.421,853,3.877,854,3.877,855,3.877,856,5.421,857,3.393,858,5.421,859,3.075,860,5.421,861,3.075,862,5.421,863,3.877,864,3.877,865,3.877,866,3.877,867,3.877,868,3.877]],["title/interfaces/DiscardPileCardsPartialState.html",[0,0.139,869,3.312]],["body/interfaces/DiscardPileCardsPartialState.html",[0,0.203,2,0.894,3,0.139,4,0.139,5,0.139,11,1.603,13,0.289,14,0.607,18,0.917,19,0.339,20,0.012,22,0.408,29,0.283,30,1.805,34,1.552,35,1.552,36,1.603,37,1.656,45,1.073,47,0.008,48,0.008,134,0.692,177,2.622,299,0.867,332,2.38,357,1.14,365,1.287,366,1.603,398,2.538,430,2.678,444,1.969,447,2.709,448,2.709,449,2.709,450,1.969,451,2.517,452,2.044,453,3.236,454,2.348,455,3.236,456,1.899,457,2.405,458,2.517,462,2.124,463,2.124,464,2.21,465,3.236,470,2.61,694,2.782,823,2.942,832,3.635,835,3.635,836,4.652,839,3.635,840,3.635,842,3.354,843,4.446,845,3.354,869,4.818,870,6.608,871,5.988,872,4.012,873,5.318,874,4.012,875,4.012,876,4.012,877,4.012,878,5.318,879,4.012,880,4.012,881,4.012]],["title/interfaces/DiscardPileCardsState.html",[0,0.139,871,3.312]],["body/interfaces/DiscardPileCardsState.html",[0,0.197,2,0.854,3,0.133,4,0.133,5,0.133,11,2.06,13,0.276,14,0.593,18,1.156,19,0.526,20,0.012,22,0.4,29,0.28,30,1.772,34,1.482,35,1.482,36,1.53,37,1.581,45,1.025,47,0.008,48,0.008,103,1.433,134,0.661,177,2.574,299,0.827,332,2.336,357,1.089,365,1.229,366,1.53,398,2.736,430,2.661,444,1.88,447,2.627,448,2.627,449,2.969,450,1.88,451,2.441,452,3.176,453,3.489,454,2.959,455,3.489,456,1.813,457,2.297,458,2.404,462,2.028,463,2.028,464,2.11,465,3.176,470,2.531,694,2.656,823,2.809,832,3.471,835,3.471,836,4.546,839,3.471,840,3.471,842,3.202,843,4.31,845,3.202,869,3.471,870,5.156,871,5.649,872,3.831,873,5.156,874,3.831,875,3.831,876,3.831,877,3.831,878,5.156,879,3.831,880,3.831,881,3.831]],["title/interfaces/Domain.html",[0,0.139,186,3.056]],["body/interfaces/Domain.html",[0,0.253,2,1.12,3,0.174,4,0.174,5,0.174,6,2.219,8,2.56,11,2.452,13,0.362,14,0.625,15,2.011,18,1.191,19,0.518,20,0.012,22,0.394,29,0.256,30,1.428,47,0.01,48,0.01,186,5.54,197,4.042,255,4.742,258,4.064,261,4.86,262,4.201,270,3.92,383,3.153,882,5.742,883,5.742]],["title/components/DomainComponent.html",[49,1.614,223,2.014]],["body/components/DomainComponent.html",[3,0.06,4,0.06,5,0.06,13,0.125,14,0.288,16,1.831,18,1.266,19,0.556,20,0.012,22,0.35,29,0.072,44,1.758,45,1.459,47,0.004,48,0.004,49,1.59,50,0.951,51,1.698,52,2.26,53,1.083,54,1.083,55,1.083,56,3.196,58,1.083,59,3.813,60,3.644,62,1.777,64,1.777,66,1.209,87,1.061,90,1.964,91,2.89,98,3.011,99,3.056,100,2.168,102,2.223,103,1.498,104,1.035,106,2.69,107,2.492,110,4.291,128,0.373,129,1.197,133,1.197,134,0.298,135,1.347,136,1.443,137,3.857,138,3.857,139,3.857,140,4.133,141,2.964,143,3.857,144,1.268,145,0.762,146,0.991,148,0.789,149,0.914,150,0.385,151,1.341,158,1.726,179,1.169,181,2.368,186,3.847,194,2.567,197,1.137,201,1.443,202,1.266,204,1.347,205,1.443,206,0.647,207,1.698,208,1.626,209,1.083,210,2.615,211,1.083,212,1.083,213,0.951,214,1.083,215,0.951,216,1.083,217,0.951,218,1.083,219,0.951,220,1.083,221,0.951,222,1.083,223,2.296,224,1.083,225,0.951,226,1.083,227,0.951,228,1.083,229,0.991,230,0.69,231,1.083,232,1.083,253,2.809,310,1.98,311,1.75,340,2.887,373,1.835,375,1.726,379,0.951,457,1.698,556,2.368,569,2.368,571,1.443,573,2.567,579,1.564,581,1.564,582,1.564,583,1.564,750,2.641,884,1.972,885,4.115,886,3.236,887,4.944,888,4.944,889,3.236,890,3.236,891,3.236,892,2.832,893,4.762,894,3.236,895,3.236,896,3.236,897,3.236,898,3.236,899,3.236,900,3.236,901,2.567,902,3.236,903,2.567,904,2.832,905,2.567,906,4.901,907,1.972,908,3.236,909,1.972,910,3.236,911,1.972,912,3.236,913,1.972,914,3.236,915,1.972,916,2.832,917,1.972,918,1.972,919,1.972,920,1.972,921,3.236,922,1.972,923,2.809,924,1.972,925,1.972,926,3.236,927,1.972,928,3.236,929,1.972,930,3.236,931,1.972,932,3.236,933,1.972,934,2.832,935,1.972,936,3.589,937,3.236,938,1.972,939,2.832,940,1.972,941,2.832,942,1.972,943,2.832,944,1.972,945,1.972,946,1.972,947,1.972,948,1.972,949,1.972,950,1.972,951,1.972,952,1.564,953,1.564,954,1.443,955,3.602,956,1.972,957,1.972,958,1.972,959,3.236,960,1.972,961,3.236,962,3.236,963,1.972,964,1.972,965,1.972,966,1.972,967,2.832,968,3.236,969,3.236,970,1.972,971,1.972,972,1.972,973,3.236,974,1.972,975,1.726,976,1.726,977,1.972,978,1.972,979,1.972,980,1.972,981,1.972,982,1.972,983,1.972,984,1.972,985,3.236,986,3.236,987,3.236,988,7.179,989,2.832,990,4.762,991,3.236,992,2.832,993,4.762,994,2.832,995,3.236,996,3.236,997,2.832,998,6.23,999,6.23,1000,3.236,1001,2.832,1002,2.832,1003,2.832,1004,3.236,1005,2.832,1006,4.762,1007,1.972]],["title/modules/DomainModule.html",[233,1.173,531,2.851]],["body/modules/DomainModule.html",[3,0.17,4,0.17,5,0.17,20,0.012,22,0.44,29,0.205,47,0.009,48,0.009,56,2.247,128,1.062,150,1.096,179,2.03,206,1.843,223,4.135,233,1.578,235,2.247,236,2.328,237,3.344,238,2.505,239,2.505,240,3.344,244,3.086,245,2.505,246,2.247,248,3.086,249,3.207,250,2.505,252,3.086,531,5.763,1008,4.917,1009,4.917,1010,4.917,1011,4.917,1012,5.253,1013,5.618,1014,5.618,1015,4.917]],["title/injectables/DomainsCardsEffects.html",[296,0.978,698,3.312]],["body/injectables/DomainsCardsEffects.html",[3,0.032,4,0.032,5,0.032,9,0.647,13,0.067,14,0.17,15,1.625,16,0.626,18,0.476,19,0.268,20,0.012,22,0.322,29,0.039,30,1.935,34,1.75,35,1.75,36,1.808,37,1.868,38,2.252,39,2.252,44,1.904,45,0.849,47,0.003,48,0.003,61,2.023,66,0.714,82,2.055,87,0.627,90,2.653,100,1.676,102,0.774,103,0.521,106,0.691,110,1.494,128,0.202,129,2.653,134,0.947,144,0.589,145,0.413,146,0.537,147,1.305,148,2.151,149,0.495,150,0.208,151,2.228,161,2.153,178,2.153,179,0.386,181,1.398,189,0.936,192,3.466,193,4.524,194,4.413,195,5.581,197,1.817,260,0.587,276,1.398,277,1.398,279,3.492,281,2.979,283,1.305,285,3.572,296,0.448,298,0.413,299,1.185,302,0.616,303,1.074,304,1.156,306,0.616,308,1.406,310,1.822,311,1.61,312,4.003,313,3.965,319,1.573,320,1.16,321,1.16,322,1.16,323,1.16,324,1.16,325,1.16,326,1.16,327,1.16,328,1.16,330,1.16,331,2.443,332,2.425,333,1.16,336,0.616,338,4.089,340,1.679,343,3.825,344,5.341,345,3.492,346,4.879,349,3.198,351,5.894,352,4.089,354,4.089,356,0.537,357,0.266,358,0.616,359,0.649,360,0.649,361,0.936,362,0.936,363,0.782,365,0.3,366,0.374,368,0.515,370,0.561,373,1.949,379,0.515,380,0.587,381,1.423,382,0.561,407,1.003,408,1.655,573,3.192,665,3.189,666,3.189,698,1.516,700,3.805,776,0.936,846,2.443,901,2.055,903,2.055,905,2.055,906,2.153,923,1.769,953,0.848,1001,5.385,1002,4.524,1003,3.523,1005,1.673,1016,4.024,1017,2.592,1018,2.592,1019,2.592,1020,2.055,1021,2.592,1022,2.592,1023,2.268,1024,1.911,1025,2.592,1026,2.592,1027,1.069,1028,1.911,1029,1.069,1030,1.069,1031,1.069,1032,1.911,1033,4.32,1034,5.169,1035,1.911,1036,1.911,1037,3.153,1038,3.153,1039,3.153,1040,3.153,1041,4.025,1042,1.911,1043,6.152,1044,1.911,1045,4.668,1046,3.153,1047,6.476,1048,5.018,1049,5.341,1050,5.169,1051,1.069,1052,1.911,1053,2.153,1054,2.153,1055,2.268,1056,1.911,1057,1.069,1058,1.911,1059,3.153,1060,1.911,1061,1.911,1062,4.371,1063,1.673,1064,1.911,1065,1.911,1066,1.911,1067,1.911,1068,1.911,1069,1.911,1070,1.911,1071,1.911,1072,1.911,1073,3.153,1074,3.153,1075,1.911,1076,3.153,1077,1.911,1078,4.089,1079,1.911,1080,1.911,1081,1.911,1082,1.911,1083,1.911,1084,1.911,1085,4.025,1086,1.911,1087,5.169,1088,3.153,1089,3.153,1090,1.911,1091,4.671,1092,1.069,1093,1.911,1094,4.025,1095,1.911,1096,1.911,1097,4.879,1098,3.523,1099,3.523,1100,4.671,1101,1.069,1102,1.911,1103,1.911,1104,4.671,1105,4.671,1106,3.153,1107,3.153,1108,4.671,1109,4.671,1110,1.911,1111,4.671,1112,1.911,1113,3.153,1114,1.911,1115,3.153,1116,1.911,1117,1.069,1118,1.911,1119,2.268,1120,1.911,1121,3.153,1122,1.911,1123,1.911,1124,1.911,1125,1.069,1126,1.911,1127,1.516,1128,2.268,1129,1.069,1130,1.911,1131,1.911,1132,1.911,1133,1.069,1134,1.911,1135,1.911,1136,1.673,1137,1.069,1138,1.911,1139,1.911,1140,1.911,1141,1.911,1142,1.911,1143,1.069,1144,1.911,1145,2.307,1146,1.069,1147,1.069,1148,1.911,1149,1.673,1150,1.069,1151,1.069,1152,0.782,1153,0.936,1154,0.936,1155,1.069,1156,1.069,1157,2.592,1158,1.911,1159,1.911,1160,1.398,1161,1.398,1162,1.398,1163,1.398,1164,1.069]],["title/interfaces/DomainsCardsEntity.html",[0,0.139,129,2.535]],["body/interfaces/DomainsCardsEntity.html",[0,0.182,2,0.593,3,0.092,4,0.092,5,0.092,8,1.355,10,1.355,13,0.192,14,0.405,15,1.698,18,1.169,19,0.534,20,0.012,22,0.306,29,0.199,30,1.354,34,1.539,35,1.029,44,0.756,45,1.833,47,0.006,48,0.006,90,2.758,103,0.914,129,3.925,134,0.459,137,4.802,138,4.415,139,5.047,143,5.342,144,1.4,145,1.174,197,1.751,260,3.318,276,3.325,277,3.325,281,4.959,283,5.284,285,4.978,286,2.659,299,0.575,371,1.844,372,2.758,373,3.026,379,1.465,380,1.669,381,4.652,382,1.594,383,1.669,517,7.022,518,7.022,700,1.844,846,4.118,906,4.632,1016,1.95,1048,5.939,1049,5.864,1053,4.632,1054,4.632,1055,7.414,1078,5.939,1128,2.659,1165,5.129,1166,5.129,1167,4.544,1168,4.544,1169,4.544,1170,4.544,1171,4.544,1172,4.544,1173,4.544,1174,4.544,1175,4.544,1176,4.544,1177,4.544,1178,4.544,1179,4.544,1180,4.544,1181,4.544,1182,4.544,1183,4.544,1184,4.544,1185,3.604,1186,3.604,1187,4.544]],["title/injectables/DomainsCardsFacade.html",[91,2.535,296,0.978]],["body/injectables/DomainsCardsFacade.html",[3,0.064,4,0.064,5,0.064,9,1.156,13,0.133,14,0.304,15,1.406,16,1.839,18,1.273,19,0.572,20,0.012,22,0.345,29,0.077,44,1.643,45,0.493,47,0.005,48,0.005,66,1.275,70,4.333,82,3.926,87,1.12,91,2.072,100,2.205,102,2.276,103,1.533,106,2.877,107,3.268,110,4.428,128,0.398,134,1.226,144,0.649,145,0.814,146,1.058,150,0.411,151,0.873,190,1.715,197,2.481,260,3.199,296,0.799,298,0.814,299,1.535,303,2.051,304,2.208,308,2.598,310,1.368,311,1.528,340,0.976,357,0.524,365,0.591,368,1.015,370,1.105,373,2.426,393,1.278,398,1.505,402,1.214,403,1.843,405,1.967,406,1.967,407,1.791,408,1.791,409,1.967,410,1.967,411,1.843,413,1.67,415,1.843,416,3.358,419,4.762,423,1.843,428,1.967,429,1.967,430,1.085,431,1.875,432,1.967,433,1.967,434,1.967,435,1.967,436,1.967,439,4.188,642,1.352,700,4.928,846,3.878,901,2.707,903,2.707,904,2.988,905,2.707,906,4.738,934,2.988,936,4.911,939,2.988,941,2.988,943,2.988,954,3.623,1016,5.212,1020,2.707,1023,4.333,1053,3.38,1054,3.38,1063,2.988,1152,1.541,1153,1.843,1154,1.843,1165,4.866,1188,4.305,1189,4.305,1190,4.951,1191,4.305,1192,3.414,1193,3.414,1194,3.414,1195,3.414,1196,3.414,1197,3.414,1198,4.305,1199,3.414,1200,3.414,1201,4.333,1202,4.305,1203,3.414,1204,4.951,1205,2.106,1206,2.106,1207,2.106,1208,2.106,1209,3.414,1210,2.106,1211,3.414,1212,2.106,1213,3.414,1214,2.106,1215,3.414,1216,2.106,1217,3.414,1218,2.106,1219,3.414,1220,2.106,1221,2.106,1222,2.106,1223,3.414,1224,2.106,1225,2.106,1226,3.414,1227,2.106,1228,3.414,1229,3.623,1230,2.106,1231,1.843,1232,2.106,1233,2.106,1234,3.414,1235,2.106,1236,2.106,1237,2.106,1238,2.106,1239,2.106,1240,3.414,1241,2.106,1242,3.414,1243,1.67,1244,1.843,1245,2.106,1246,2.106,1247,2.106,1248,2.106,1249,2.106,1250,2.106,1251,2.106,1252,2.106,1253,2.106,1254,2.106,1255,2.106,1256,2.106,1257,2.106,1258,2.106,1259,2.106,1260,2.106,1261,2.106,1262,2.106,1263,2.106,1264,2.106,1265,2.106,1266,2.106,1267,2.106,1268,2.106,1269,2.106]],["title/interfaces/DomainsCardsPartialState.html",[0,0.139,1270,3.312]],["body/interfaces/DomainsCardsPartialState.html",[0,0.176,2,0.729,3,0.113,4,0.113,5,0.113,11,1.307,13,0.236,14,0.471,15,1.608,18,0.798,19,0.276,20,0.012,22,0.374,29,0.266,30,1.937,44,1.314,45,1.646,47,0.007,48,0.007,90,3.719,129,2.269,134,0.564,161,2.552,197,3.045,279,1.962,299,0.707,332,2.305,345,1.962,357,0.93,365,1.05,366,1.307,398,2.329,430,2.715,444,1.606,447,2.356,448,2.356,449,2.356,450,1.606,451,2.189,452,2.733,453,2.97,454,2.042,455,2.97,456,1.549,465,2.97,470,2.27,700,2.269,1016,2.399,1045,2.965,1053,3.607,1054,3.607,1097,2.965,1127,2.965,1145,2.735,1152,2.735,1160,2.735,1161,2.735,1162,2.735,1163,2.735,1270,4.19,1271,6.15,1272,5.573,1273,5.829,1274,3.272,1275,4.624,1276,3.272,1277,3.272,1278,3.272,1279,3.272,1280,3.272,1281,4.624,1282,3.272,1283,3.272,1284,3.272,1285,3.272,1286,3.272,1287,3.272,1288,3.272,1289,3.272,1290,5.364,1291,3.272,1292,5.829,1293,3.272,1294,3.272,1295,3.272,1296,3.272,1297,5.829,1298,3.272,1299,5.829,1300,3.272,1301,4.624,1302,3.272,1303,3.272,1304,4.624,1305,3.272,1306,3.272,1307,2.735,1308,3.272,1309,3.272,1310,3.272,1311,3.272,1312,3.272,1313,3.272]],["title/interfaces/DomainsCardsState.html",[0,0.139,1272,3.312]],["body/interfaces/DomainsCardsState.html",[0,0.172,2,0.704,3,0.109,4,0.109,5,0.109,11,1.802,13,0.228,14,0.459,15,1.582,18,1.089,19,0.485,20,0.012,22,0.368,29,0.263,30,1.922,44,1.282,45,1.624,47,0.007,48,0.007,90,3.648,103,1.037,129,2.19,134,0.545,161,2.464,197,2.97,279,1.894,299,0.682,332,2.274,345,1.894,357,0.898,365,1.014,366,1.262,398,2.595,430,2.707,444,1.551,447,2.298,448,2.298,449,2.68,450,1.551,451,2.135,452,2.68,453,3.309,454,2.786,455,3.309,456,1.495,465,2.923,470,2.214,700,2.19,1016,2.317,1045,2.862,1053,3.518,1054,3.518,1097,2.862,1127,2.862,1145,2.641,1152,2.641,1160,2.641,1161,2.641,1162,2.641,1163,2.641,1270,2.862,1271,4.511,1272,5.199,1273,6.496,1274,3.159,1275,4.511,1276,3.159,1277,3.159,1278,3.159,1279,3.159,1280,3.159,1281,4.511,1282,3.159,1283,3.159,1284,3.159,1285,3.159,1286,3.159,1287,3.159,1288,3.159,1289,3.159,1290,5.261,1291,3.159,1292,5.738,1293,3.159,1294,3.159,1295,3.159,1296,3.159,1297,5.738,1298,3.159,1299,5.738,1300,3.159,1301,4.511,1302,3.159,1303,3.159,1304,4.511,1305,3.159,1306,3.159,1307,2.641,1308,3.159,1309,3.159,1310,3.159,1311,3.159,1312,3.159,1313,3.159]],["title/interfaces/EventCard.html",[0,0.139,1314,3.056]],["body/interfaces/EventCard.html",[0,0.274,2,0.987,3,0.153,4,0.153,5,0.153,6,1.956,8,2.258,10,2.891,11,2.267,12,4.34,13,0.32,14,0.577,15,1.924,16,1.924,17,6.323,18,1.239,19,0.529,20,0.012,22,0.424,23,3.457,24,4.161,25,4.016,26,4.743,27,4.432,29,0.275,30,1.613,32,2.657,34,1.714,35,1.714,36,1.771,37,1.83,38,2.441,39,2.441,40,2.918,41,2.918,43,3.736,44,1.26,45,1.186,46,3.457,47,0.009,48,0.009,750,3.25,815,3.934,1314,5.516,1315,4.016,1316,6.181,1317,5.063,1318,7.539,1319,5.063,1320,4.432]],["title/injectables/EventsPileCardsEffects.html",[296,0.978,702,3.312]],["body/injectables/EventsPileCardsEffects.html",[3,0.12,4,0.12,5,0.12,9,1.858,13,0.249,14,0.489,16,0.953,19,0.292,20,0.012,22,0.436,29,0.144,44,1.846,47,0.007,48,0.007,61,3.729,87,1.8,100,1.858,102,1.179,103,0.794,128,0.746,134,1.083,148,2.867,149,1.829,150,0.77,151,2.274,177,2.962,296,1.285,298,1.525,299,1.355,302,2.275,303,2.615,304,2.814,306,2.275,308,3.042,310,2.005,311,1.772,312,4.388,313,4.277,319,3.83,320,3.331,321,3.331,322,3.331,323,3.331,324,3.331,325,3.331,326,3.331,327,3.331,328,3.331,330,3.331,331,3.331,332,2.434,333,3.331,336,2.275,356,1.983,357,0.982,358,2.275,359,2.396,360,2.396,365,1.109,366,1.38,368,1.903,702,4.353,704,4.351,833,3.455,837,3.13,841,3.455,1321,4.602,1322,6.311,1323,6.311,1324,3.947,1325,5.489,1326,4.353,1327,4.764,1328,6.275,1329,5.489,1330,4.353,1331,5.489,1332,5.489,1333,4.353,1334,2.888,1335,4.617,1336,3.455]],["title/interfaces/EventsPileCardsEntity.html",[0,0.139,1337,2.681]],["body/interfaces/EventsPileCardsEntity.html",[0,0.243,2,1.025,3,0.159,4,0.159,5,0.159,8,2.344,13,0.332,14,0.591,15,1.973,18,1.249,19,0.491,20,0.012,22,0.409,29,0.266,30,1.961,44,1.308,47,0.009,48,0.009,134,0.794,144,1.619,177,2.399,285,3.19,293,4.601,299,0.994,371,3.19,372,4.029,373,3.645,379,2.535,380,2.887,381,2.887,382,2.758,383,2.887,554,3.19,704,3.19,1307,4.858,1321,3.374,1327,4.261,1328,4.601,1337,4.906,1338,4.169,1339,4.169,1340,3.846,1341,5.257,1342,6.639,1343,4.601,1344,5.257,1345,5.257,1346,5.257,1347,4.601,1348,5.257]],["title/injectables/EventsPileCardsFacade.html",[296,0.978,688,2.681]],["body/injectables/EventsPileCardsFacade.html",[3,0.12,4,0.12,5,0.12,9,1.864,13,0.25,14,0.49,16,0.957,19,0.293,20,0.012,22,0.404,29,0.145,47,0.007,48,0.007,66,2.057,87,1.806,100,2.15,102,1.184,103,0.798,106,2.595,107,3.196,128,0.75,134,1.207,150,0.773,151,1.643,177,3.084,190,2.767,296,1.29,298,1.532,299,1.511,303,2.832,304,3.048,305,5.982,308,3.314,310,2.01,311,1.777,340,1.837,357,0.986,365,1.114,368,1.912,370,2.081,393,2.406,398,2.212,402,2.285,404,3.47,405,3.173,406,3.173,407,2.889,408,2.889,409,3.173,410,3.173,416,4.284,418,2.901,425,2.707,428,3.173,429,3.173,430,1.75,431,3.024,432,3.173,433,3.173,434,3.173,435,3.173,436,3.173,688,3.534,704,4.85,1243,3.145,1321,5.129,1334,2.901,1335,4.629,1336,3.47,1349,6.326,1350,6.326,1351,6.835,1352,6.835,1353,3.145,1354,2.901,1355,3.47,1356,5.506,1357,3.47,1358,5.506,1359,3.47,1360,5.506,1361,3.965,1362,3.965,1363,3.965,1364,3.965,1365,3.965,1366,3.965]],["title/interfaces/EventsPileCardsPartialState.html",[0,0.139,1367,3.312]],["body/interfaces/EventsPileCardsPartialState.html",[0,0.193,2,0.831,3,0.129,4,0.129,5,0.129,11,1.491,13,0.269,14,0.585,18,0.992,19,0.315,20,0.012,22,0.396,29,0.277,30,1.833,34,1.443,35,1.443,36,1.491,37,1.54,44,1.44,45,1.65,47,0.008,48,0.008,134,0.644,177,2.546,299,0.806,332,2.311,357,1.06,365,1.197,366,1.491,398,2.464,430,2.696,444,1.831,447,2.58,448,2.58,449,2.58,450,1.831,451,2.398,452,3.285,453,3.142,454,2.236,455,3.142,456,1.766,457,2.237,458,2.341,462,1.975,463,1.975,464,2.055,465,3.142,470,2.486,704,2.587,1321,2.736,1326,3.38,1327,4.523,1330,3.38,1333,3.38,1334,3.119,1335,4.234,1337,2.736,1367,4.589,1368,6.448,1369,5.843,1370,3.731,1371,5.065,1372,3.731,1373,3.731,1374,3.731,1375,3.731,1376,5.75,1377,3.731,1378,3.731,1379,3.731,1380,3.731,1381,3.731,1382,3.731,1383,5.75,1384,5.065,1385,3.731]],["title/interfaces/EventsPileCardsState.html",[0,0.139,1369,3.312]],["body/interfaces/EventsPileCardsState.html",[0,0.188,2,0.796,3,0.124,4,0.124,5,0.124,11,1.965,13,0.258,14,0.572,18,1.16,19,0.511,20,0.012,22,0.389,29,0.274,30,1.805,34,1.382,35,1.382,36,1.428,37,1.475,44,1.398,45,1.621,47,0.008,48,0.008,103,1.392,134,0.616,177,2.501,299,0.772,332,2.27,357,1.016,365,1.147,366,1.428,398,2.687,430,2.683,444,1.754,447,2.505,448,2.505,449,2.865,450,1.754,451,2.328,452,3.49,453,3.426,454,2.898,455,3.426,456,1.692,457,2.142,458,2.242,462,1.892,463,1.892,464,1.968,465,3.086,470,2.414,704,2.478,1321,2.621,1326,3.238,1327,4.442,1330,3.238,1333,3.238,1334,2.987,1335,4.111,1337,2.621,1367,3.238,1368,4.918,1369,5.488,1370,3.573,1371,4.918,1372,3.573,1373,3.573,1374,3.573,1375,3.573,1376,5.623,1377,3.573,1378,3.573,1379,3.573,1380,3.573,1381,3.573,1382,3.573,1383,5.623,1384,4.918,1385,3.573]],["title/modules/FeatureEngineModule.html",[233,1.173,1386,3.312]],["body/modules/FeatureEngineModule.html",[3,0.194,4,0.194,5,0.194,20,0.012,22,0.42,29,0.233,47,0.01,48,0.01,56,2.555,128,1.208,150,1.246,235,2.555,248,3.333,249,3.463,250,2.848,252,2.848,1386,5.928,1387,6.387,1388,6.387]],["title/modules/FeatureGameModule.html",[233,1.173,492,2.851]],["body/modules/FeatureGameModule.html",[3,0.176,4,0.176,5,0.176,20,0.012,22,0.428,29,0.212,47,0.01,48,0.01,56,2.327,128,1.1,150,1.135,206,1.908,233,1.634,235,2.327,236,2.411,237,2.594,238,2.594,239,2.594,240,3.396,244,3.153,245,2.594,246,2.327,248,3.153,249,3.276,250,2.594,252,3.153,492,5.703,525,5.881,691,5.093,1389,5.093,1390,5.093,1391,5.818,1392,5.818,1393,5.818]],["title/injectables/GameEffects.html",[296,0.978,708,3.312]],["body/injectables/GameEffects.html",[3,0.113,4,0.113,5,0.113,13,0.236,14,0.471,16,0.904,19,0.277,20,0.012,22,0.431,29,0.137,34,1.791,35,1.791,36,1.85,37,1.911,38,2.55,39,2.55,44,1.658,45,1.888,47,0.007,48,0.007,61,3.667,87,1.735,100,1.816,102,1.118,103,0.753,128,0.708,134,1.062,144,1.153,148,2.453,149,1.735,150,0.73,151,2.191,296,1.239,298,1.447,299,1.329,306,2.158,308,2.972,310,1.949,311,2.337,312,4.323,313,4.206,336,2.158,356,1.881,357,0.931,462,3.088,571,2.739,596,5.285,665,3.611,666,3.611,708,4.194,1033,5.368,1149,4.629,1394,3.277,1395,4.864,1396,6.133,1397,6.133,1398,6.133,1399,3.744,1400,5.289,1401,6.133,1402,5.289,1403,5.289,1404,3.744,1405,5.289,1406,5.368,1407,6.665,1408,6.665,1409,6.665,1410,6.665,1411,6.665,1412,3.744,1413,5.289,1414,5.289,1415,5.339,1416,5.368,1417,6.665,1418,5.289,1419,3.744,1420,2.739,1421,2.739,1422,2.556,1423,3.277,1424,3.277,1425,3.277]],["title/injectables/GameFacade.html",[89,2.407,296,0.978]],["body/injectables/GameFacade.html",[3,0.106,4,0.106,5,0.106,9,2.49,13,0.221,14,0.449,16,1.653,19,0.506,20,0.012,21,4.148,22,0.401,29,0.128,45,1.383,47,0.007,48,0.007,66,1.882,87,1.147,89,2.904,100,2.221,102,2.046,103,1.378,106,2.719,107,3.28,128,0.661,134,1.238,142,3.725,144,1.077,145,1.352,150,0.682,154,4.157,190,2.532,258,3.248,296,1.18,298,1.352,299,1.55,303,2.678,308,3.181,310,2.267,311,2.114,340,1.621,357,0.87,402,2.016,405,2.904,406,2.904,407,2.644,408,2.644,409,2.904,410,2.904,416,2.904,428,2.904,429,2.904,430,1.601,431,2.767,432,2.904,433,2.904,434,2.904,435,2.904,436,2.904,482,2.016,795,4.411,802,4.411,803,3.922,1395,5.125,1415,4.322,1420,2.559,1421,2.559,1422,2.388,1423,3.062,1424,3.062,1425,3.062,1426,3.498,1427,4.684,1428,5.012,1429,4.684,1430,5.039,1431,4.411,1432,4.411,1433,6.463,1434,6.463,1435,5.039,1436,3.498,1437,5.039,1438,3.498,1439,3.498,1440,4.411,1441,3.498,1442,4.411,1443,3.498,1444,3.498,1445,3.498,1446,3.498,1447,5.039,1448,5.039,1449,3.498,1450,5.039,1451,3.498,1452,5.039,1453,3.498,1454,5.039,1455,3.498,1456,5.039,1457,3.498,1458,3.498,1459,3.498,1460,3.498,1461,3.498,1462,3.498,1463,3.498,1464,3.498,1465,3.498]],["title/interfaces/GamePartialState.html",[0,0.139,1422,2.851]],["body/interfaces/GamePartialState.html",[0,0.207,2,0.921,3,0.143,4,0.143,5,0.143,9,2.486,13,0.298,14,0.552,19,0.349,20,0.012,21,3.978,22,0.389,29,0.278,30,1.721,45,1.895,47,0.008,48,0.008,104,2.479,134,0.713,142,3.572,144,1.455,145,1.826,154,4.457,258,3.115,299,0.893,311,2.198,357,1.175,430,2.661,451,2.568,456,1.958,803,4.198,806,3.978,807,3.457,1415,5.061,1420,3.457,1421,3.457,1422,4.231,1427,5.486,1428,5.373,1429,5.486,1466,4.135,1467,6.674,1468,6.047,1469,6.054,1470,4.135,1471,4.135,1472,4.135,1473,4.135,1474,4.135,1475,4.135,1476,4.135,1477,4.135,1478,4.135]],["title/injectables/GameRulesService.html",[99,2.681,296,0.978]],["body/injectables/GameRulesService.html",[3,0.049,4,0.049,5,0.049,9,1.423,10,1.222,13,0.102,14,0.244,15,1.315,16,1.234,18,1.142,19,0.502,20,0.012,22,0.287,29,0.059,30,1.486,31,1.505,44,1.17,45,1.794,47,0.004,48,0.004,56,3.005,66,1.024,85,3.678,87,0.899,88,1.183,89,2.422,90,2.166,91,2.551,92,2.166,93,2.551,94,2.29,95,2.698,96,2.29,97,2.698,99,1.759,100,2.032,102,1.526,103,1.028,104,1.872,106,2.299,107,2.904,110,2.057,128,0.306,133,0.981,134,0.244,137,1.871,138,1.103,139,2.869,140,1.183,141,1.872,142,0.932,143,1.871,144,0.844,145,0.625,146,0.812,147,2.436,148,2.472,149,0.749,150,0.315,151,2.375,154,0.981,157,1.415,159,1.415,161,4.452,165,3.123,171,1.415,172,2.399,173,3.123,177,1.289,178,4.077,179,2.715,187,1.282,190,0.812,191,5.41,260,1.96,279,3.847,281,2.946,285,1.663,296,0.642,298,0.625,303,1.741,310,1.964,311,1.907,332,2.139,344,4.902,345,3.769,346,3.731,349,3.986,363,1.183,373,2.098,374,3.679,376,1.282,378,2.174,379,0.779,407,2.205,408,2.205,475,1.415,551,1.415,642,2.698,675,2.611,687,2.869,688,2.698,689,2.869,775,4.474,806,1.037,807,1.183,815,2.166,836,2.436,906,2.436,954,1.183,955,3.678,967,5.016,975,3.123,1020,2.83,1145,3.986,1160,3.986,1161,3.986,1162,3.986,1163,3.986,1166,1.282,1201,3.123,1229,2.611,1316,1.282,1327,2.29,1337,3.02,1338,1.282,1395,3.333,1479,6.576,1480,1.616,1481,3.123,1482,3.568,1483,3.123,1484,3.568,1485,3.568,1486,3.568,1487,2.83,1488,3.568,1489,3.568,1490,2.741,1491,2.741,1492,2.741,1493,4.203,1494,4.203,1495,3.568,1496,2.869,1497,1.616,1498,1.616,1499,3.49,1500,1.616,1501,1.616,1502,4.203,1503,1.616,1504,2.741,1505,1.616,1506,1.616,1507,2.741,1508,1.616,1509,2.741,1510,1.616,1511,1.616,1512,1.616,1513,1.616,1514,1.616,1515,1.616,1516,4.203,1517,5.112,1518,4.203,1519,2.741,1520,1.616,1521,2.741,1522,6.181,1523,2.741,1524,1.616,1525,2.741,1526,2.741,1527,1.616,1528,2.741,1529,1.616,1530,1.616,1531,2.741,1532,2.741,1533,1.616,1534,2.741,1535,2.741,1536,2.741,1537,2.741,1538,1.616,1539,2.741,1540,2.741,1541,1.616,1542,2.741,1543,2.741,1544,1.616,1545,2.741,1546,2.741,1547,2.741,1548,1.616,1549,1.282,1550,1.616,1551,1.616,1552,1.616,1553,1.616,1554,1.616,1555,1.616,1556,1.616,1557,1.616,1558,1.616,1559,1.616,1560,1.616,1561,1.616,1562,1.616,1563,1.616,1564,1.616,1565,1.616,1566,1.616,1567,1.616,1568,1.616,1569,2.741,1570,2.741,1571,2.741,1572,2.741,1573,2.399,1574,1.616,1575,2.741,1576,1.616,1577,1.415,1578,1.616,1579,2.741,1580,1.616,1581,2.741,1582,2.741,1583,1.616,1584,1.415,1585,1.616,1586,1.616,1587,1.616,1588,1.616,1589,1.616,1590,1.616,1591,1.616,1592,3.568,1593,1.616,1594,2.741,1595,1.616,1596,6.522,1597,4.203,1598,4.203,1599,1.616,1600,1.616,1601,3.568,1602,3.568,1603,1.616,1604,1.616,1605,3.568,1606,4.203,1607,1.616,1608,1.616,1609,1.616,1610,3.568,1611,4.203,1612,4.705,1613,1.616,1614,1.616,1615,1.616,1616,1.616,1617,2.741,1618,2.741,1619,2.741,1620,3.568,1621,1.616,1622,1.616,1623,1.616,1624,1.616,1625,1.616,1626,1.616,1627,1.616]],["title/interfaces/GameState.html",[0,0.139,1468,3.312]],["body/interfaces/GameState.html",[0,0.195,2,0.844,3,0.131,4,0.131,5,0.131,9,2.641,13,0.273,14,0.521,19,0.564,20,0.012,21,4.55,22,0.372,29,0.27,30,1.647,45,1.976,47,0.008,48,0.008,104,2.27,134,0.653,142,4.086,144,1.332,145,1.672,154,4.735,258,3.563,299,0.818,311,2.143,357,1.076,430,2.626,451,2.422,456,1.792,803,4.735,806,4.55,807,3.165,1415,5.584,1420,3.165,1421,3.165,1422,2.953,1427,6.052,1428,5.708,1429,6.052,1466,3.786,1467,5.116,1468,5.622,1469,5.794,1470,3.786,1471,3.786,1472,3.786,1473,3.786,1474,3.786,1475,3.786,1476,3.786,1477,3.786,1478,3.786]],["title/interfaces/Hand.html",[0,0.139,188,3.056]],["body/interfaces/Hand.html",[0,0.253,2,1.12,3,0.174,4,0.174,5,0.174,6,2.219,8,2.56,11,2.452,13,0.362,14,0.625,15,2.011,18,1.191,19,0.518,20,0.012,22,0.394,29,0.256,30,1.428,47,0.01,48,0.01,188,5.54,255,4.742,258,4.064,261,4.86,262,4.201,270,3.92,383,3.153,1628,5.742,1629,4.256,1630,5.742]],["title/components/HandComponent.html",[49,1.614,225,2.014]],["body/components/HandComponent.html",[1,4.351,3,0.107,4,0.107,5,0.107,13,0.224,14,0.453,16,1.781,18,1.225,19,0.529,20,0.012,22,0.403,29,0.129,31,3.934,44,1.617,45,1.678,47,0.007,48,0.007,49,2.298,50,1.707,51,2.667,52,1.944,53,1.944,54,1.944,55,1.944,56,3.121,58,1.944,59,4.383,60,4.188,62,2.792,64,2.792,66,1.899,87,1.161,92,3.085,93,3.944,100,2.095,102,2.055,103,1.384,104,1.858,106,2.487,107,2.033,110,3.427,128,0.669,131,2.273,133,2.149,134,0.535,141,3.759,144,1.566,145,1.368,146,1.779,148,1.416,149,1.641,150,0.691,179,1.837,188,5.036,206,1.161,207,2.667,208,2.554,209,1.944,210,3.569,211,1.944,212,1.944,213,1.707,214,1.944,215,1.707,216,1.944,217,1.707,218,1.944,219,1.707,220,1.944,221,1.707,222,1.944,223,1.707,224,1.944,225,3.133,226,1.944,227,1.707,228,1.944,229,1.779,230,1.238,231,1.944,232,1.944,310,1.615,311,1.428,340,3.011,373,2.267,379,1.707,482,2.041,556,3.719,569,3.719,750,3.817,892,4.449,916,4.449,936,2.417,952,2.808,976,3.099,997,4.449,1499,4.698,1549,2.808,1629,2.149,1631,3.541,1632,5.947,1633,5.083,1634,5.083,1635,6.499,1636,5.083,1637,4.449,1638,3.541,1639,5.083,1640,3.541,1641,5.083,1642,3.541,1643,3.541,1644,3.541,1645,5.083,1646,3.541,1647,4.449,1648,3.541,1649,3.541,1650,3.541,1651,3.541,1652,3.099,1653,3.541,1654,3.541,1655,3.541,1656,3.541,1657,5.083,1658,5.083]],["title/modules/HandModule.html",[233,1.173,532,2.851]],["body/modules/HandModule.html",[3,0.176,4,0.176,5,0.176,20,0.012,22,0.428,29,0.212,47,0.01,48,0.01,56,2.327,128,1.1,150,1.135,206,1.908,225,4.153,233,1.634,235,2.327,236,2.411,237,3.396,238,2.594,239,2.594,240,3.396,244,3.153,245,2.594,246,2.327,248,3.153,249,3.276,250,2.594,252,2.594,532,5.703,1659,5.093,1660,5.093,1661,5.093,1662,5.818,1663,5.818]],["title/injectables/HandsCardsEffects.html",[296,0.978,713,3.312]],["body/injectables/HandsCardsEffects.html",[3,0.121,4,0.121,5,0.121,9,1.87,10,2.463,13,0.251,14,0.492,16,0.961,19,0.294,20,0.012,22,0.429,29,0.145,44,1.852,47,0.008,48,0.008,61,3.74,87,1.306,92,4.517,100,1.866,102,1.189,103,0.801,128,0.753,134,1.086,148,2.877,149,1.846,150,0.777,296,1.294,298,1.539,299,1.36,302,2.296,303,2.627,304,2.828,306,2.296,310,2.015,311,1.781,312,4.399,313,4.29,319,3.849,320,3.352,321,3.352,322,3.352,323,3.352,324,3.352,325,3.352,326,3.352,327,3.352,328,3.352,330,3.352,331,3.352,332,2.441,333,3.352,336,2.296,356,2.002,358,2.296,359,2.417,360,2.417,365,1.119,366,1.393,380,2.187,381,2.187,382,2.09,482,2.296,713,4.381,715,4.617,828,4.381,829,4.381,837,3.159,1499,4.675,1629,3.352,1652,4.835,1664,4.91,1665,5.55,1666,3.983,1667,5.524,1668,4.835,1669,5.524,1670,5.524,1671,3.983,1672,5.524,1673,5.524,1674,5.524,1675,5.524,1676,5.524,1677,3.983,1678,2.914,1679,3.486]],["title/interfaces/HandsCardsEntity.html",[0,0.139,131,2.681]],["body/interfaces/HandsCardsEntity.html",[0,0.243,2,1.025,3,0.159,4,0.159,5,0.159,8,2.344,10,2.344,13,0.332,14,0.591,15,1.973,18,1.284,19,0.565,20,0.012,22,0.295,29,0.242,30,1.308,31,3.996,32,4.011,47,0.009,48,0.009,92,4.029,131,4.671,134,0.794,141,3.818,144,1.619,145,2.031,299,0.994,371,3.19,372,4.029,373,3.59,383,2.887,715,3.374,846,4.886,1185,5.265,1186,5.265,1499,5.496,1629,3.19,1664,3.589,1679,4.601]],["title/injectables/HandsCardsFacade.html",[93,2.535,296,0.978]],["body/injectables/HandsCardsFacade.html",[3,0.114,4,0.114,5,0.114,9,1.793,10,2.974,13,0.237,14,0.472,15,1.481,16,1.61,18,1.177,19,0.493,20,0.012,22,0.41,29,0.137,31,2.059,47,0.007,48,0.007,66,1.978,87,1.23,93,3.213,100,2.152,102,1.991,103,1.341,106,2.638,107,3.226,128,0.709,134,1.206,141,1.967,144,1.155,145,1.449,150,0.731,190,2.66,296,1.24,298,1.449,299,1.51,303,2.763,304,2.974,308,3.255,310,1.951,311,1.724,340,1.737,357,0.933,365,1.053,368,1.808,370,1.967,393,2.275,398,2.146,402,2.161,405,3.051,406,3.051,407,2.778,408,2.778,409,3.051,410,3.051,413,2.973,416,3.844,418,2.743,425,2.559,427,3.281,428,3.051,429,3.051,430,1.682,431,2.908,432,3.051,433,3.051,434,3.051,435,3.051,436,3.051,482,2.161,554,3.725,715,5.128,859,2.973,861,2.973,936,3.614,1353,2.973,1354,2.743,1499,4.19,1629,3.725,1637,4.634,1647,4.634,1664,5.454,1678,2.743,1680,6.138,1681,6.138,1682,6.138,1683,5.294,1684,6.669,1685,3.749,1686,5.294,1687,3.749,1688,3.749,1689,5.294,1690,5.294,1691,5.294,1692,3.749,1693,3.749,1694,3.749,1695,3.749,1696,3.749,1697,3.749,1698,3.749,1699,3.749]],["title/interfaces/HandsCardsPartialState.html",[0,0.139,1700,3.312]],["body/interfaces/HandsCardsPartialState.html",[0,0.199,2,0.867,3,0.135,4,0.135,5,0.135,11,1.554,13,0.281,14,0.598,15,1.62,18,0.899,19,0.328,20,0.012,22,0.403,29,0.281,30,1.783,45,1.394,47,0.008,48,0.008,92,4.35,131,2.852,134,0.671,299,0.84,332,2.351,357,1.105,365,1.248,366,1.554,398,2.506,430,2.723,444,1.909,447,2.654,448,2.654,449,2.654,450,1.909,451,2.466,452,2.992,453,3.196,454,2.3,455,3.196,456,1.841,462,2.059,463,2.059,464,2.142,465,3.196,470,2.557,715,2.852,1629,3.612,1664,3.033,1678,3.251,1700,4.72,1701,6.54,1702,5.926,1703,3.889,1704,5.209,1705,3.889,1706,3.889,1707,3.889,1708,3.889,1709,3.889,1710,5.209,1711,3.889,1712,3.889,1713,3.889,1714,3.889,1715,3.889,1716,3.889,1717,3.889,1718,3.889,1719,3.889]],["title/interfaces/HandsCardsState.html",[0,0.139,1702,3.312]],["body/interfaces/HandsCardsState.html",[0,0.193,2,0.829,3,0.129,4,0.129,5,0.129,11,2.019,13,0.268,14,0.584,15,1.583,18,1.146,19,0.52,20,0.012,22,0.395,29,0.277,30,1.751,45,1.352,47,0.008,48,0.008,92,4.271,103,1.415,131,2.727,134,0.642,299,0.803,332,2.308,357,1.057,365,1.193,366,1.486,398,2.715,430,2.711,444,1.825,447,2.575,448,2.575,449,2.925,450,1.825,451,2.392,452,3.385,453,3.462,454,2.933,455,3.462,456,1.76,462,1.969,463,1.969,464,2.048,465,3.138,470,2.48,715,2.727,1629,3.504,1664,2.9,1678,3.109,1700,3.369,1701,5.053,1702,5.581,1703,3.719,1704,5.053,1705,3.719,1706,3.719,1707,3.719,1708,3.719,1709,3.719,1710,5.053,1711,3.719,1712,3.719,1713,3.719,1714,3.719,1715,3.719,1716,3.719,1717,3.719,1718,3.719,1719,3.719]],["title/interfaces/HasColor.html",[0,0.139,261,2.681]],["body/interfaces/HasColor.html",[0,0.211,2,1.231,3,0.191,4,0.191,5,0.191,6,2.438,13,0.398,14,0.661,19,0.466,20,0.012,22,0.355,29,0.23,47,0.01,48,0.01,103,1.493,255,4.69,258,4.089,261,4.763,270,4.308,1720,6.31]],["title/interfaces/HasCost.html",[0,0.139,263,3.056]],["body/interfaces/HasCost.html",[0,0.212,2,1.237,3,0.192,4,0.192,5,0.192,6,2.45,13,0.4,14,0.663,19,0.469,20,0.012,22,0.356,29,0.232,47,0.01,48,0.01,148,3.16,256,5.964,263,5.445,271,4.329,272,4.639,1721,6.341]],["title/interfaces/HasId.html",[0,0.139,12,2.535]],["body/interfaces/HasId.html",[0,0.214,2,1.252,3,0.194,4,0.194,5,0.194,6,2.48,12,4.549,13,0.405,14,0.668,15,1.975,18,1.199,19,0.474,20,0.011,29,0.234,47,0.01,48,0.01,1722,6.418]],["title/interfaces/HasName.html",[0,0.139,24,2.681]],["body/interfaces/HasName.html",[0,0.204,2,1.193,3,0.185,4,0.185,5,0.185,6,2.364,13,0.386,14,0.649,16,1.945,18,1.217,19,0.452,20,0.012,24,4.995,29,0.266,32,3.21,34,2.071,35,2.071,36,2.139,37,2.211,38,2.95,39,2.95,40,3.526,41,3.526,43,3.526,44,1.522,47,0.01,48,0.01,1723,4.852,1724,5.355,1725,6.118]],["title/interfaces/HasRules.html",[0,0.139,26,3.056]],["body/interfaces/HasRules.html",[0,0.214,2,1.252,3,0.194,4,0.194,5,0.194,6,2.48,13,0.405,14,0.668,17,6.489,18,1.199,19,0.474,20,0.011,26,5.484,29,0.234,47,0.01,48,0.01,1726,6.418]],["title/interfaces/HasVictoryPoints.html",[0,0.139,267,3.056]],["body/interfaces/HasVictoryPoints.html",[0,0.213,2,1.246,3,0.194,4,0.194,5,0.194,6,2.468,13,0.403,14,0.666,19,0.472,20,0.011,29,0.233,47,0.01,48,0.01,103,1.503,257,5.978,260,4.352,267,5.469,1727,6.387]],["title/interfaces/LandCard.html",[0,0.139,923,2.851]],["body/interfaces/LandCard.html",[0,0.27,2,0.926,3,0.144,4,0.144,5,0.144,6,1.836,8,2.118,10,2.774,11,2.175,12,4.209,13,0.3,14,0.554,15,1.892,18,1.153,19,0.616,20,0.012,22,0.44,23,3.243,29,0.279,30,1.725,32,2.493,34,1.608,35,1.608,36,1.661,37,1.716,38,2.29,39,2.29,40,2.738,41,2.738,43,3.585,44,1.182,45,1.113,46,3.243,47,0.008,48,0.008,103,1.251,140,3.476,143,5.024,192,4.933,255,4.517,258,3.838,261,3.993,262,3.476,265,4.246,266,4.158,270,3.243,272,3.476,275,3.767,642,5.03,803,4.636,923,5.215,1728,3.767,1729,6.686,1730,4.75,1731,4.75,1732,4.75,1733,4.158]],["title/injectables/LandsPileCardsEffects.html",[296,0.978,717,3.312]],["body/injectables/LandsPileCardsEffects.html",[3,0.132,4,0.132,5,0.132,9,1.986,13,0.274,14,0.522,16,1.049,19,0.321,20,0.012,22,0.43,29,0.159,44,1.901,47,0.008,48,0.008,61,3.84,87,1.426,96,4.56,100,1.808,102,1.298,103,0.874,128,0.822,134,1.073,148,2.654,149,2.014,150,0.848,177,2.94,296,1.373,298,1.68,299,1.343,302,2.506,303,2.75,304,2.959,306,2.506,310,1.864,311,1.647,312,4.275,313,4.094,319,4.028,320,3.559,321,3.559,322,3.559,323,3.559,324,3.559,325,3.559,326,3.559,327,3.559,328,3.559,330,3.559,331,3.559,332,2.506,333,3.559,336,2.506,356,2.185,358,2.506,359,2.639,360,2.639,365,1.221,366,1.52,482,2.506,717,4.651,719,4.56,1734,4.85,1735,4.348,1736,5.865,1737,4.651,1738,5.808,1739,4.348,1740,5.865,1741,4.651,1742,5.865,1743,4.348,1744,3.181,1745,4.291]],["title/interfaces/LandsPileCardsEntity.html",[0,0.139,132,2.851]],["body/interfaces/LandsPileCardsEntity.html",[0,0.245,2,1.042,3,0.162,4,0.162,5,0.162,8,2.382,13,0.337,14,0.597,15,1.98,18,1.253,19,0.496,20,0.012,22,0.412,29,0.268,30,1.913,44,1.329,47,0.009,48,0.009,96,4.305,132,5.249,134,0.807,144,1.646,177,2.423,299,1.01,371,3.243,372,4.071,373,3.658,379,2.576,380,2.934,381,2.934,382,2.804,383,2.934,554,3.243,719,3.429,953,4.237,1307,4.907,1339,4.237,1340,3.909,1343,4.676,1347,4.676,1734,3.647,1738,4.676,1746,5.343,1747,5.343,1748,5.343]],["title/injectables/LandsPileCardsFacade.html",[97,2.681,296,0.978]],["body/injectables/LandsPileCardsFacade.html",[3,0.119,4,0.119,5,0.119,9,1.853,13,0.248,14,0.487,15,1.52,16,1.52,18,1.119,19,0.465,20,0.012,22,0.402,29,0.144,47,0.007,48,0.007,66,2.044,87,1.795,97,3.512,100,2.113,102,1.88,103,1.266,106,2.46,107,3.102,128,0.743,134,1.189,150,0.766,151,1.628,177,3.066,190,2.75,296,1.281,298,1.518,299,1.489,303,2.821,304,3.036,308,3.305,310,2.001,311,1.768,340,1.821,357,0.978,365,1.104,368,1.894,370,2.062,393,2.385,398,2.201,402,2.265,405,3.154,406,3.154,407,2.871,408,2.871,409,3.154,410,3.154,416,4.271,418,2.875,425,2.682,428,3.154,429,3.154,430,1.739,431,3.005,432,3.154,433,3.154,434,3.154,435,3.154,436,3.154,439,2.682,719,5.056,936,3.735,1231,3.439,1243,3.116,1353,3.116,1354,2.875,1357,3.439,1359,3.439,1734,5.377,1744,2.875,1745,4.606,1749,6.295,1750,6.295,1751,5.472,1752,5.472,1753,5.472,1754,5.472,1755,5.472,1756,5.472,1757,5.472,1758,3.929,1759,3.929,1760,3.929,1761,3.929,1762,3.929,1763,3.929]],["title/interfaces/LandsPileCardsPartialState.html",[0,0.139,1764,3.312]],["body/interfaces/LandsPileCardsPartialState.html",[0,0.202,2,0.886,3,0.138,4,0.138,5,0.138,11,1.589,13,0.287,14,0.604,15,1.638,18,0.912,19,0.336,20,0.012,22,0.406,29,0.283,30,1.799,45,1.064,47,0.008,48,0.008,96,4.355,132,3.102,134,0.686,177,2.613,299,0.859,332,2.372,357,1.13,365,1.276,366,1.589,398,2.529,430,2.697,444,1.952,447,2.694,448,2.694,449,2.694,450,1.952,451,2.503,452,2.694,453,3.225,454,2.334,455,3.225,456,1.883,462,2.105,463,2.105,464,2.191,465,3.225,470,2.595,719,2.917,1734,3.102,1737,3.604,1741,3.604,1744,3.325,1745,4.42,1764,4.791,1765,6.589,1766,5.971,1767,3.977,1768,5.287,1769,3.977,1770,3.977,1771,3.977,1772,3.977,1773,5.287,1774,3.977,1775,3.977,1776,3.977,1777,3.977,1778,3.977]],["title/interfaces/LandsPileCardsState.html",[0,0.139,1766,3.312]],["body/interfaces/LandsPileCardsState.html",[0,0.196,2,0.846,3,0.132,4,0.132,5,0.132,11,2.048,13,0.274,14,0.591,15,1.6,18,1.153,19,0.525,20,0.012,22,0.399,29,0.279,30,1.766,45,1.016,47,0.008,48,0.008,96,4.256,103,1.428,132,2.963,134,0.655,177,2.565,299,0.821,332,2.328,357,1.08,365,1.219,366,1.518,398,2.73,430,2.682,444,1.865,447,2.612,448,2.612,449,2.957,450,1.865,451,2.427,452,3.306,453,3.482,454,2.952,455,3.482,456,1.798,462,2.011,463,2.011,464,2.093,465,3.165,470,2.517,719,2.786,1734,2.963,1737,3.442,1741,3.442,1744,3.176,1745,4.286,1764,3.442,1765,5.127,1766,5.63,1767,3.799,1768,5.127,1769,3.799,1770,3.799,1771,3.799,1772,3.799,1773,5.127,1774,3.799,1775,3.799,1776,3.799,1777,3.799,1778,3.799]],["title/components/PhasesComponent.html",[49,1.614,227,2.014]],["body/components/PhasesComponent.html",[3,0.1,4,0.1,5,0.1,9,2.367,13,0.208,14,0.43,16,1.688,18,0.863,19,0.465,20,0.012,21,2.118,22,0.376,29,0.12,44,1.665,45,1.131,47,0.007,48,0.007,49,2.207,50,1.591,51,2.534,52,1.812,53,1.812,54,1.812,55,1.812,56,3.18,58,1.812,59,4.323,60,4.131,62,2.652,64,2.652,66,1.804,87,1.584,88,2.414,89,3.624,100,2.145,102,1.878,103,1.265,104,2.998,106,2.73,107,2.962,110,4.354,128,0.624,133,2.002,134,0.498,142,4.354,144,1.488,145,1.275,146,1.658,150,0.643,151,2.001,154,3.467,179,1.745,200,3.297,201,2.414,202,2.118,203,2.617,204,2.252,205,2.414,206,1.082,207,2.534,208,2.427,209,1.812,210,3.453,211,1.812,212,1.812,213,1.591,214,1.812,215,1.591,216,1.812,217,1.591,218,1.812,219,1.591,220,1.812,221,1.591,222,1.812,223,1.591,224,1.812,225,1.591,226,1.812,227,3.032,228,1.812,229,1.658,230,1.154,231,1.812,232,1.812,258,3.797,310,1.535,311,1.356,373,1.471,379,1.591,688,4.036,815,3.816,1314,4.18,1327,3.667,1337,2.118,1338,2.617,1428,4.18,1431,4.227,1432,4.227,1440,4.227,1442,4.227,1779,3.299,1780,4.83,1781,5.713,1782,4.83,1783,6.288,1784,4.83,1785,6.288,1786,6.288,1787,6.288,1788,6.288,1789,6.288,1790,4.83,1791,3.299,1792,4.83,1793,3.299,1794,3.299,1795,3.299,1796,3.299,1797,3.299,1798,3.299,1799,3.299,1800,3.299,1801,3.299,1802,3.299,1803,3.299,1804,3.299,1805,3.299,1806,3.299,1807,3.299,1808,3.299,1809,3.299,1810,3.299,1811,7.406,1812,4.83,1813,4.83,1814,4.83,1815,6.288]],["title/modules/PhasesModule.html",[233,1.173,533,2.851]],["body/modules/PhasesModule.html",[3,0.174,4,0.174,5,0.174,20,0.012,22,0.443,29,0.21,47,0.01,48,0.01,56,2.297,128,1.086,150,1.12,206,1.883,227,4.146,233,1.613,235,2.297,236,2.379,237,3.376,238,2.56,239,2.56,240,3.376,244,3.127,245,2.56,246,2.297,248,3.127,249,3.25,250,2.56,252,2.56,533,5.687,821,6.138,822,4.554,1816,5.025,1817,5.025,1818,5.025,1819,5.742,1820,5.742]],["title/modules/PilesModule.html",[233,1.173,534,2.851]],["body/modules/PilesModule.html",[3,0.17,4,0.17,5,0.17,20,0.012,22,0.44,29,0.205,47,0.009,48,0.009,56,2.247,128,1.062,150,1.096,179,2.03,206,1.843,229,4.31,233,1.578,235,2.247,236,2.328,237,3.344,238,2.505,239,2.505,240,3.344,244,3.086,245,2.505,246,2.247,248,3.086,249,3.207,250,2.505,252,3.086,534,5.763,1012,5.253,1015,4.917,1821,4.917,1822,5.618,1823,4.917,1824,4.917,1825,5.618,1826,5.618]],["title/injectables/StockPilesCardsEffects.html",[296,0.978,721,3.312]],["body/injectables/StockPilesCardsEffects.html",[3,0.094,4,0.094,5,0.094,9,1.564,10,2.06,13,0.196,14,0.412,15,1.115,16,0.75,19,0.408,20,0.012,22,0.432,29,0.113,44,1.702,45,1.43,47,0.006,48,0.006,61,3.438,87,1.515,100,1.778,102,0.928,103,0.625,128,0.587,134,1.033,146,1.561,147,3.154,148,2.611,149,1.44,150,0.606,151,1.914,230,2.816,246,1.848,296,1.082,298,1.201,299,1.294,302,1.791,303,2.286,304,2.46,306,1.791,308,2.724,310,1.941,311,1.715,312,4.287,313,4.196,319,3.348,320,2.804,321,2.804,322,2.804,323,2.804,324,2.804,325,2.804,326,2.804,327,2.804,328,2.804,330,2.804,331,2.804,332,2.387,333,2.804,336,1.791,340,2.556,342,4.044,345,2.425,349,3.381,356,1.561,357,0.773,358,1.791,359,1.886,360,1.886,363,2.273,365,0.873,366,1.087,368,1.498,370,1.63,373,2.724,374,3.92,380,1.706,381,1.706,382,1.63,721,3.664,723,4.153,828,3.664,829,3.664,846,3.707,1119,4.828,1496,4.97,1573,5.346,1577,4.044,1584,5.988,1665,4.828,1668,4.044,1827,4.392,1828,5.516,1829,5.516,1830,3.107,1831,4.621,1832,4.621,1833,4.621,1834,3.107,1835,4.621,1836,3.664,1837,4.828,1838,3.107,1839,4.621,1840,3.664,1841,4.621,1842,3.107,1843,4.621,1844,4.621,1845,4.621,1846,4.621,1847,4.621,1848,3.664,1849,4.044,1850,4.044,1851,3.766,1852,4.621,1853,4.621,1854,4.621,1855,3.664,1856,3.107,1857,3.107,1858,2.273,1859,4.17,1860,2.72,1861,2.72,1862,2.72]],["title/interfaces/StockPilesCardsEntity.html",[0,0.139,1851,2.851]],["body/interfaces/StockPilesCardsEntity.html",[0,0.23,2,0.915,3,0.142,4,0.142,5,0.142,8,2.092,10,2.092,13,0.296,14,0.549,15,1.922,18,1.263,19,0.541,20,0.012,22,0.412,29,0.252,30,1.822,31,3.786,32,3.843,44,1.167,47,0.008,48,0.008,134,0.708,141,3.617,144,1.9,145,1.813,230,2.41,285,2.847,299,0.887,371,2.847,372,3.744,373,3.482,374,5.013,379,2.262,380,2.576,381,3.388,382,2.461,383,2.576,554,2.847,723,2.847,846,4.74,952,3.72,1185,4.892,1186,4.892,1339,4.892,1340,3.432,1496,4.999,1549,3.72,1827,3.011,1837,4.106,1851,5.331,1859,3.202,1860,5.399,1863,4.691,1864,4.691,1865,4.691,1866,4.691,1867,4.691,1868,4.691,1869,4.691,1870,4.691,1871,4.691,1872,4.691]],["title/injectables/StockPilesCardsFacade.html",[296,0.978,689,2.851]],["body/injectables/StockPilesCardsFacade.html",[3,0.115,4,0.115,5,0.115,9,1.804,10,3.425,13,0.239,14,0.474,16,1.488,18,1.106,19,0.456,20,0.012,22,0.411,29,0.138,31,2.077,47,0.007,48,0.007,66,1.99,87,1.747,100,2.092,102,1.842,103,1.24,106,2.419,107,3.072,128,0.715,134,1.179,141,1.984,144,1.165,145,1.461,150,0.737,151,1.567,190,2.677,230,2.955,296,1.247,298,1.461,299,1.476,303,2.774,304,2.985,308,3.265,310,1.96,311,1.732,340,1.752,357,0.941,365,1.062,368,1.823,370,1.984,374,4.699,393,2.295,398,2.156,402,2.179,405,3.07,406,3.07,407,2.795,408,2.795,409,3.07,410,3.07,416,4.22,425,2.581,428,3.07,429,3.07,430,1.693,431,2.925,432,3.07,433,3.07,434,3.07,435,3.07,436,3.07,439,3.636,554,4.443,689,3.636,723,4.739,857,3.31,859,2.999,861,2.999,1244,3.31,1354,2.767,1355,3.31,1827,5.012,1858,2.767,1859,4.21,1861,3.31,1862,3.31,1873,6.167,1874,6.167,1875,6.167,1876,6.167,1877,3.781,1878,3.781,1879,3.781,1880,5.327,1881,5.327,1882,5.327,1883,3.781,1884,3.781,1885,3.781,1886,3.781]],["title/interfaces/StockPilesCardsPartialState.html",[0,0.139,1887,3.312]],["body/interfaces/StockPilesCardsPartialState.html",[0,0.201,2,0.879,3,0.136,4,0.136,5,0.136,11,1.575,13,0.284,14,0.602,18,0.907,19,0.333,20,0.012,22,0.405,29,0.282,30,1.793,34,1.525,35,1.525,36,1.575,37,1.628,45,1.055,47,0.008,48,0.008,134,0.68,230,2.52,299,0.852,332,2.364,357,1.121,365,1.265,366,1.575,398,2.52,430,2.694,444,1.935,447,2.678,448,2.678,449,2.678,450,1.935,451,2.489,452,2.009,453,3.213,454,2.321,455,3.213,456,1.867,457,2.364,458,2.474,462,2.087,463,2.087,464,2.172,465,3.213,470,2.58,723,2.734,1496,4.92,1827,2.892,1836,3.573,1840,3.573,1851,3.075,1855,3.573,1858,3.296,1859,4.1,1887,4.763,1888,6.57,1889,5.953,1890,3.943,1891,5.257,1892,3.943,1893,3.943,1894,3.943,1895,3.943,1896,5.257,1897,3.943,1898,3.943,1899,3.943,1900,3.943,1901,3.943,1902,3.943]],["title/interfaces/StockPilesCardsState.html",[0,0.139,1889,3.312]],["body/interfaces/StockPilesCardsState.html",[0,0.195,2,0.84,3,0.13,4,0.13,5,0.13,11,2.037,13,0.272,14,0.588,18,1.151,19,0.523,20,0.012,22,0.398,29,0.278,30,1.76,34,1.457,35,1.457,36,1.505,37,1.555,45,1.008,47,0.008,48,0.008,103,1.423,134,0.65,230,2.474,299,0.814,332,2.32,357,1.071,365,1.209,366,1.505,398,2.725,430,2.68,444,1.849,447,2.597,448,2.597,449,2.944,450,1.849,451,2.414,452,3.155,453,3.474,454,2.944,455,3.474,456,1.784,457,2.259,458,2.364,462,1.995,463,1.995,464,2.075,465,3.155,470,2.503,723,2.612,1496,4.83,1827,2.763,1836,3.414,1840,3.414,1851,2.939,1855,3.414,1858,3.15,1859,3.977,1887,3.414,1888,5.099,1889,5.611,1890,3.768,1891,5.099,1892,3.768,1893,3.768,1894,3.768,1895,3.768,1896,5.099,1897,3.768,1898,3.768,1899,3.768,1900,3.768,1901,3.768,1902,3.768]],["title/modules/UiCardModule.html",[233,1.173,1012,2.681]],["body/modules/UiCardModule.html",[3,0.167,4,0.167,5,0.167,20,0.012,22,0.437,29,0.201,47,0.009,48,0.009,128,1.042,150,1.075,179,2.471,206,1.808,233,1.548,235,2.205,236,2.284,237,2.458,238,2.458,239,2.458,240,3.315,244,3.049,245,2.458,246,2.205,248,3.049,249,3.169,250,2.458,252,3.049,547,3.763,549,4.371,624,5.84,630,4.371,648,5.84,1012,5.437,1903,4.824,1904,5.512,1905,4.824,1906,5.512,1907,5.512,1908,5.512,1909,5.512]],["title/dependencies.html",[236,2.082,1910,3.05]],["body/dependencies.html",[20,0.012,34,1.931,47,0.01,48,0.01,128,1.078,146,2.866,207,2.993,236,2.363,250,2.543,308,2.543,356,2.866,357,1.419,358,3.288,382,2.993,450,2.451,495,6.114,496,5.539,554,3.462,822,4.524,1340,4.174,1911,5.704,1912,8.4,1913,5.704,1914,6.985,1915,5.704,1916,5.704,1917,5.704,1918,5.704,1919,7.868,1920,5.704,1921,5.704,1922,5.704,1923,5.704,1924,5.704,1925,5.704,1926,5.704,1927,5.704,1928,5.704,1929,5.704,1930,5.704,1931,5.704,1932,5.704,1933,5.704]],["title/miscellaneous/enumerations.html",[1934,2.237,1935,4.398]],["body/miscellaneous/enumerations.html",[6,2.937,13,0.229,20,0.012,21,3.321,47,0.007,48,0.007,61,1.824,142,2.982,258,2.6,259,4.103,271,3.532,281,2.092,283,2.478,311,2.473,345,2.715,463,2.397,605,2.878,758,4.528,759,4.103,762,4.103,767,4.528,777,5.277,781,4.528,806,3.321,815,3.989,954,3.786,989,4.528,992,6.081,994,4.528,1136,4.528,1166,4.103,1316,4.103,1481,3.176,1483,4.528,1487,4.103,1729,4.528,1934,2.329,1935,3.176,1936,3.176,1937,3.176,1938,5.212,1939,5.174,1940,4.103,1941,4.103,1942,3.176,1943,3.629,1944,4.528,1945,3.629,1946,5.174,1947,5.174,1948,5.174,1949,3.629,1950,3.629,1951,5.174,1952,3.629,1953,5.174,1954,5.174,1955,5.174,1956,3.176,1957,5.174,1958,5.174,1959,5.174,1960,5.174,1961,5.174,1962,5.174,1963,5.174,1964,3.629,1965,3.629,1966,3.629,1967,5.174,1968,3.629,1969,3.629,1970,3.629,1971,3.629,1972,5.174,1973,5.174,1974,5.174,1975,5.174,1976,5.174,1977,2.878,1978,5.174,1979,3.176,1980,5.174,1981,5.174,1982,3.629,1983,3.629,1984,3.629,1985,3.629,1986,3.629,1987,3.629,1988,3.629,1989,3.629,1990,5.174,1991,5.174,1992,3.629,1993,3.629,1994,3.629,1995,5.174,1996,3.629,1997,3.629,1998,3.629,1999,3.629,2000,3.629,2001,3.629,2002,5.174,2003,3.629,2004,6.573,2005,3.629,2006,3.629,2007,3.629,2008,3.629,2009,2.878,2010,5.174,2011,5.174,2012,5.174,2013,5.174,2014,5.174,2015,5.174,2016,5.174,2017,5.174,2018,5.174,2019,5.174,2020,5.174,2021,5.174]],["title/miscellaneous/functions.html",[1934,2.237,2022,4.398]],["body/miscellaneous/functions.html",[1,2.506,6,2.993,7,2.716,13,0.216,15,1.71,16,2.036,18,1.262,19,0.62,20,0.012,24,2.198,42,2.997,43,4.211,47,0.007,48,0.007,102,2.477,103,1.669,106,3.03,148,2.56,253,4.369,254,2.716,255,4.082,256,4.682,257,3.631,258,3.985,260,4.109,265,2.338,278,2.997,287,4.344,291,2.997,295,2.997,311,0.962,454,2.473,543,2.716,545,2.997,555,3.936,642,2.198,750,4.108,751,2.716,752,4.344,753,4.344,755,4.344,756,4.344,757,4.344,759,3.936,761,3.936,762,3.936,766,4.344,773,2.997,780,4.344,785,2.997,803,3.542,806,3.185,887,4.344,888,4.344,923,2.338,1229,4.27,1314,2.506,1315,2.716,1320,2.997,1406,5.108,1416,5.108,1723,2.716,1724,2.997,1728,2.716,1733,2.997,1934,2.198,1936,2.997,1937,5.601,1938,5.075,1940,5.075,1941,3.936,1942,2.997,2022,2.997,2023,4.963,2024,4.963,2025,4.963,2026,4.963,2027,5.836,2028,4.963,2029,4.963,2030,4.963,2031,3.425,2032,4.963,2033,4.963,2034,4.963,2035,3.425,2036,4.963,2037,3.425,2038,4.963,2039,4.963,2040,5.836,2041,3.425,2042,7.626,2043,3.425,2044,3.425,2045,3.425,2046,3.425,2047,3.425,2048,3.425,2049,3.425,2050,3.425,2051,3.425,2052,3.425,2053,3.425]],["title/index.html",[13,0.22,2054,2.763,2055,2.763]],["body/index.html",[20,0.012,47,0.01,48,0.01,60,3.393,431,3.551,490,5.128,2056,6.466,2057,6.466,2058,6.466,2059,6.466,2060,6.466,2061,6.466,2062,6.466,2063,6.466,2064,6.466,2065,6.466,2066,6.466,2067,5.659,2068,6.466]],["title/license.html",[2054,2.763,2055,2.763,2069,2.763]],["body/license.html",[9,1.854,20,0.009,47,0.009,48,0.009,190,3.423,246,2.191,675,4.007,815,3.324,2069,4.344,2070,4.794,2071,7.414,2072,5.477,2073,5.477,2074,5.477,2075,5.477,2076,5.477,2077,6.812,2078,5.477,2079,5.477,2080,5.477,2081,5.477,2082,5.477,2083,5.477,2084,6.812,2085,8.406,2086,5.477,2087,5.477,2088,5.477,2089,5.477,2090,7.414,2091,5.477,2092,6.812,2093,5.477,2094,5.477,2095,5.477,2096,5.477,2097,5.477,2098,5.477,2099,5.477,2100,5.477,2101,5.477,2102,6.812,2103,5.477,2104,5.477,2105,5.477,2106,5.477,2107,5.477,2108,5.477,2109,6.812,2110,6.812,2111,5.477,2112,5.477,2113,5.477,2114,5.477,2115,5.477,2116,5.477,2117,5.477,2118,5.477,2119,5.477,2120,5.477,2121,5.477,2122,5.477,2123,5.477,2124,5.477,2125,5.477,2126,5.477,2127,5.477,2128,5.477,2129,5.477,2130,5.477,2131,5.477,2132,5.477,2133,5.477,2134,5.477,2135,5.477,2136,5.477,2137,5.477,2138,5.477]],["title/modules.html",[235,2.283]],["body/modules.html",[20,0.01,47,0.01,48,0.01,181,4.22,234,3.937,235,2.307,485,4.22,491,3.937,492,3.937,496,6.848,525,3.937,530,3.937,531,3.937,532,3.937,533,3.937,534,3.937,624,3.937,648,3.937,1012,3.702,1386,4.574,2139,8.634,2140,8.634,2141,8.66,2142,5.767]],["title/overview.html",[2143,4.995]],["body/overview.html",[2,0.716,20,0.012,47,0.007,48,0.007,50,3.596,51,1.926,89,3.496,91,3.682,93,3.682,95,3.894,97,3.894,206,1.204,213,3.596,215,3.596,217,3.596,219,3.596,221,3.596,223,3.596,225,3.596,227,3.596,229,3.748,233,1.031,234,4.949,235,1.468,236,1.521,237,1.636,238,1.636,239,1.636,240,1.636,241,3.212,242,3.212,243,3.212,244,2.325,245,1.636,246,1.468,298,1.418,485,5.821,486,3.212,487,3.212,488,3.212,489,3.212,490,4.811,491,5.712,492,4.949,525,5.768,526,3.212,527,3.212,528,3.212,529,3.212,530,4.949,531,5.203,532,4.949,533,4.949,534,5.203,624,5.368,625,3.212,626,3.212,627,3.212,648,5.368,649,3.212,650,3.212,651,3.212,685,3.212,686,3.212,687,4.141,688,3.894,689,4.141,816,3.212,817,3.212,818,3.212,1008,3.212,1009,3.212,1010,3.212,1011,3.212,1012,5.048,1389,3.212,1390,3.212,1659,3.212,1660,3.212,1661,3.212,1816,3.212,1817,3.212,1818,3.212,1821,3.212,1823,3.212,1824,3.212,1903,3.212,1905,3.212,2143,3.212,2144,3.67,2145,3.67,2146,3.67,2147,3.67]],["title/properties.html",[14,0.448,1910,3.05]],["body/properties.html",[14,0.595,20,0.011,47,0.01,48,0.01,285,4.055,2067,5.847,2069,5.298,2070,5.847,2148,6.681]],["title/todo.html",[1848,2.763,2054,2.763,2055,2.763]],["body/todo.html",[6,2.517,7,1.608,19,0.548,20,0.009,34,1.121,35,1.121,36,1.157,37,1.927,38,4.121,39,4.052,40,3.48,41,4.272,44,1.844,45,0.475,47,0.005,48,0.005,56,3.024,57,3.671,61,1.019,134,1.295,177,1.749,230,2.724,246,0.811,254,1.608,276,3.903,277,3.903,281,1.169,299,1.621,300,3.876,301,3.665,302,3.755,332,2.403,345,1.064,444,2.08,457,2.54,458,2.659,543,1.608,575,1.608,585,2.625,665,5.568,666,5.568,694,1.231,700,5.127,704,1.231,723,2.938,751,1.608,814,1.775,815,1.231,823,1.301,1016,5.423,1098,2.897,1099,1.775,1315,1.608,1321,1.301,1394,1.775,1479,6.412,1487,1.608,1723,1.608,1728,1.608,1827,3.107,1848,1.608,1849,1.775,1850,1.775,1977,1.608,2009,1.608,2149,2.028,2150,4.841,2151,7.326,2152,2.028,2153,7.326,2154,2.028,2155,2.028,2156,2.028,2157,2.028,2158,2.028,2159,2.028,2160,7.23,2161,2.028,2162,2.028,2163,2.028,2164,2.028,2165,2.028,2166,2.028,2167,2.028,2168,2.028,2169,2.028,2170,2.028,2171,2.028,2172,2.028,2173,2.028,2174,2.028,2175,3.31,2176,3.31,2177,2.028,2178,6.298,2179,6.298,2180,6.298,2181,2.028,2182,3.31,2183,2.028,2184,2.028,2185,2.028,2186,2.028,2187,8.08,2188,2.028,2189,2.028,2190,2.028,2191,4.841,2192,7.789,2193,2.028,2194,7.413,2195,2.028,2196,2.028,2197,2.028,2198,2.028,2199,2.028,2200,2.028,2201,2.028,2202,2.028,2203,2.028,2204,2.028,2205,2.028,2206,2.028,2207,2.028,2208,2.028,2209,2.028,2210,2.028,2211,2.028,2212,2.028,2213,2.028,2214,2.028,2215,2.028,2216,2.028,2217,2.028,2218,2.028,2219,2.028,2220,2.028,2221,2.028,2222,2.028,2223,2.028,2224,2.028,2225,2.028,2226,2.028,2227,3.31,2228,2.028,2229,2.028,2230,2.028,2231,2.028,2232,2.028,2233,2.028,2234,2.028,2235,2.028,2236,2.028,2237,2.028,2238,2.028,2239,2.028,2240,2.028,2241,2.028,2242,2.028,2243,2.028,2244,2.028,2245,2.028,2246,2.028,2247,2.028,2248,2.028,2249,4.194,2250,2.028,2251,2.028,2252,2.028,2253,2.028,2254,2.028]],["title/miscellaneous/typealiases.html",[1934,2.237,2255,5.025]],["body/miscellaneous/typealiases.html",[6,3.135,13,0.395,19,0.462,20,0.012,47,0.01,48,0.01,271,4.266,761,5.852,803,4.479,1049,5.852,1165,5.852,1229,5.745,1934,4.011,1938,4.956,1940,5.852,1941,4.956,1944,5.47,1956,5.47,1977,4.956,1979,5.47,2009,4.956,2256,6.25]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":285,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/StockPilesCardsEntity.html":{},"properties.html":{}}}],["0.13.1",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":622,"title":{},"body":{"components/CardBackComponent.html":{}}}],["0.2.0",{"_index":2148,"title":{},"body":{"properties.html":{}}}],["0.3em",{"_index":614,"title":{},"body":{"components/CardBackComponent.html":{}}}],["0.5em",{"_index":623,"title":{},"body":{"components/CardBackComponent.html":{}}}],["1",{"_index":281,"title":{"interfaces/Chainable-1.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["10",{"_index":2145,"title":{},"body":{"overview.html":{}}}],["100",{"_index":575,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"todo.html":{}}}],["1054",{"_index":2162,"title":{},"body":{"todo.html":{}}}],["106",{"_index":2223,"title":{},"body":{"todo.html":{}}}],["1073",{"_index":2220,"title":{},"body":{"todo.html":{}}}],["111",{"_index":2184,"title":{},"body":{"todo.html":{}}}],["1131",{"_index":2221,"title":{},"body":{"todo.html":{}}}],["114",{"_index":2189,"title":{},"body":{"todo.html":{}}}],["1171",{"_index":2163,"title":{},"body":{"todo.html":{}}}],["119",{"_index":2190,"title":{},"body":{"todo.html":{}}}],["1216",{"_index":2164,"title":{},"body":{"todo.html":{}}}],["122",{"_index":2198,"title":{},"body":{"todo.html":{}}}],["125ms",{"_index":595,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["126",{"_index":2199,"title":{},"body":{"todo.html":{}}}],["1321",{"_index":2165,"title":{},"body":{"todo.html":{}}}],["1362",{"_index":2166,"title":{},"body":{"todo.html":{}}}],["138",{"_index":2229,"title":{},"body":{"todo.html":{}}}],["14",{"_index":2144,"title":{},"body":{"overview.html":{}}}],["1450",{"_index":2167,"title":{},"body":{"todo.html":{}}}],["15",{"_index":616,"title":{},"body":{"components/CardBackComponent.html":{}}}],["155",{"_index":2230,"title":{},"body":{"todo.html":{}}}],["1552",{"_index":2168,"title":{},"body":{"todo.html":{}}}],["159",{"_index":2252,"title":{},"body":{"todo.html":{}}}],["16.2.0",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["16.2.2",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["16.2.4",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["16.8.0",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["1603",{"_index":2169,"title":{},"body":{"todo.html":{}}}],["161",{"_index":2253,"title":{},"body":{"todo.html":{}}}],["165",{"_index":2231,"title":{},"body":{"todo.html":{}}}],["17",{"_index":2146,"title":{},"body":{"overview.html":{}}}],["1707",{"_index":2170,"title":{},"body":{"todo.html":{}}}],["175",{"_index":2232,"title":{},"body":{"todo.html":{}}}],["1755",{"_index":2171,"title":{},"body":{"todo.html":{}}}],["1803",{"_index":2172,"title":{},"body":{"todo.html":{}}}],["185",{"_index":2233,"title":{},"body":{"todo.html":{}}}],["1851",{"_index":2173,"title":{},"body":{"todo.html":{}}}],["188",{"_index":2200,"title":{},"body":{"todo.html":{}}}],["19",{"_index":2186,"title":{},"body":{"todo.html":{}}}],["192",{"_index":2201,"title":{},"body":{"todo.html":{}}}],["195",{"_index":2234,"title":{},"body":{"todo.html":{}}}],["1em",{"_index":593,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["1px",{"_index":583,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["2",{"_index":283,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardFrontComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":620,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["2021",{"_index":2073,"title":{},"body":{"license.html":{}}}],["20px",{"_index":592,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["21",{"_index":2191,"title":{},"body":{"todo.html":{}}}],["220",{"_index":2224,"title":{},"body":{"todo.html":{}}}],["226",{"_index":2202,"title":{},"body":{"todo.html":{}}}],["230",{"_index":2203,"title":{},"body":{"todo.html":{}}}],["234",{"_index":2235,"title":{},"body":{"todo.html":{}}}],["24",{"_index":2182,"title":{},"body":{"todo.html":{}}}],["243",{"_index":2225,"title":{},"body":{"todo.html":{}}}],["255",{"_index":2204,"title":{},"body":{"todo.html":{}}}],["259",{"_index":2205,"title":{},"body":{"todo.html":{}}}],["291",{"_index":2206,"title":{},"body":{"todo.html":{}}}],["295",{"_index":2207,"title":{},"body":{"todo.html":{}}}],["2px",{"_index":618,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["2rem",{"_index":205,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["3",{"_index":293,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["30",{"_index":645,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["32",{"_index":2245,"title":{},"body":{"todo.html":{}}}],["330",{"_index":2208,"title":{},"body":{"todo.html":{}}}],["332",{"_index":2254,"title":{},"body":{"todo.html":{}}}],["334",{"_index":2209,"title":{},"body":{"todo.html":{}}}],["368",{"_index":2210,"title":{},"body":{"todo.html":{}}}],["37",{"_index":2185,"title":{},"body":{"todo.html":{}}}],["372",{"_index":2211,"title":{},"body":{"todo.html":{}}}],["379",{"_index":2236,"title":{},"body":{"todo.html":{}}}],["39",{"_index":2147,"title":{},"body":{"overview.html":{}}}],["391",{"_index":2237,"title":{},"body":{"todo.html":{}}}],["394",{"_index":2226,"title":{},"body":{"todo.html":{}}}],["395",{"_index":2238,"title":{},"body":{"todo.html":{}}}],["397",{"_index":2212,"title":{},"body":{"todo.html":{}}}],["401",{"_index":2213,"title":{},"body":{"todo.html":{}}}],["404",{"_index":2239,"title":{},"body":{"todo.html":{}}}],["413",{"_index":2240,"title":{},"body":{"todo.html":{}}}],["424",{"_index":2241,"title":{},"body":{"todo.html":{}}}],["431",{"_index":2242,"title":{},"body":{"todo.html":{}}}],["443",{"_index":2243,"title":{},"body":{"todo.html":{}}}],["450ms",{"_index":588,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["452",{"_index":2244,"title":{},"body":{"todo.html":{}}}],["49",{"_index":2247,"title":{},"body":{"todo.html":{}}}],["4em",{"_index":613,"title":{},"body":{"components/CardBackComponent.html":{}}}],["5",{"_index":585,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"todo.html":{}}}],["50",{"_index":609,"title":{},"body":{"components/CardBackComponent.html":{}}}],["53",{"_index":2193,"title":{},"body":{"todo.html":{}}}],["6.1.1",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2248,"title":{},"body":{"todo.html":{}}}],["617",{"_index":2152,"title":{},"body":{"todo.html":{}}}],["66",{"_index":2195,"title":{},"body":{"todo.html":{}}}],["7",{"_index":1042,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["7.8.1",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":2156,"title":{},"body":{"todo.html":{}}}],["73",{"_index":2227,"title":{},"body":{"todo.html":{}}}],["74",{"_index":2196,"title":{},"body":{"todo.html":{}}}],["8.2.9",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2188,"title":{},"body":{"todo.html":{}}}],["812",{"_index":2177,"title":{},"body":{"todo.html":{}}}],["818",{"_index":2181,"title":{},"body":{"todo.html":{}}}],["82",{"_index":2246,"title":{},"body":{"todo.html":{}}}],["85",{"_index":2228,"title":{},"body":{"todo.html":{}}}],["87",{"_index":2222,"title":{},"body":{"todo.html":{}}}],["90",{"_index":641,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["910",{"_index":2214,"title":{},"body":{"todo.html":{}}}],["914",{"_index":2215,"title":{},"body":{"todo.html":{}}}],["935",{"_index":2159,"title":{},"body":{"todo.html":{}}}],["948",{"_index":2216,"title":{},"body":{"todo.html":{}}}],["95",{"_index":2183,"title":{},"body":{"todo.html":{}}}],["952",{"_index":2217,"title":{},"body":{"todo.html":{}}}],["96",{"_index":2197,"title":{},"body":{"todo.html":{}}}],["977",{"_index":2218,"title":{},"body":{"todo.html":{}}}],["981",{"_index":2219,"title":{},"body":{"todo.html":{}}}],["986",{"_index":2161,"title":{},"body":{"todo.html":{}}}],["99",{"_index":2250,"title":{},"body":{"todo.html":{}}}],["_action",{"_index":331,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["above",{"_index":2108,"title":{},"body":{"license.html":{}}}],["access",{"_index":134,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["action.cardid",{"_index":1142,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.cards.map",{"_index":1845,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["action.cardtype",{"_index":1141,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.die",{"_index":1121,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.id",{"_index":1140,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.name",{"_index":1658,"title":{},"body":{"components/HandComponent.html":{}}}],["action.pileid",{"_index":342,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["action_card_interface_name",{"_index":31,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["actioncard",{"_index":1,"title":{"interfaces/ActionCard.html":{}},"body":{"interfaces/ActionCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["actioncards",{"_index":1549,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["actioncards.get(cardid",{"_index":1655,"title":{},"body":{"components/HandComponent.html":{}}}],["actioncards.get(handcard.cardid",{"_index":1625,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["actionname",{"_index":21,"title":{},"body":{"interfaces/ActionCard.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actions",{"_index":61,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["actions'},{'name",{"_index":212,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["actions.component.css",{"_index":63,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions.component.html",{"_index":65,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions/actions.component",{"_index":251,"title":{},"body":{"modules/ActionsModule.html":{}}}],["actions/actions.module",{"_index":537,"title":{},"body":{"modules/BoardModule.html":{}}}],["actionscomponent",{"_index":50,"title":{"components/ActionsComponent.html":{}},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["actionsmodule",{"_index":234,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["actual_component",{"_index":232,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["addcard",{"_index":824,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["addcards",{"_index":1665,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["addcardstohand",{"_index":1682,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstohand(handid",{"_index":1685,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstostockpilebottom",{"_index":1875,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardstostockpilebottom(pileid",{"_index":1877,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardtodiscardpile",{"_index":850,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["addcardtodiscardpile(card",{"_index":852,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["agglomeration",{"_index":176,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomeration_card_interface_name",{"_index":137,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["agglomeration_piles_cards_feature_key",{"_index":445,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationcard",{"_index":253,"title":{"interfaces/AgglomerationCard.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["agglomerationcard.color",{"_index":388,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationcard.type",{"_index":387,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationcards",{"_index":375,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DomainComponent.html":{}}}],["agglomerationcards.get(cardid",{"_index":977,"title":{},"body":{"components/DomainComponent.html":{}}}],["agglomerationpilecard",{"_index":1595,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.cardid",{"_index":1603,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.id",{"_index":1600,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.pileid",{"_index":1604,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilescards",{"_index":94,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/GameRulesService.html":{}}}],["agglomerationpilescardsactions",{"_index":364,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.initagglomerationnewgame",{"_index":440,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":441,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.loadagglomerationpilescardsfailure",{"_index":334,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.loadagglomerationpilescardssuccess",{"_index":329,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.removeagglomerationpilecard",{"_index":442,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.selectagglomerationpilecard",{"_index":350,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.selectfirstcardfromagglomerationpile",{"_index":337,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.setagglomerationpilescardserror",{"_index":353,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.setagglomerationpilescardsinitialized",{"_index":315,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter",{"_index":459,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.getinitialstate",{"_index":461,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.removeone(id",{"_index":472,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.setall(agglomerationpilescards",{"_index":469,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardseffects",{"_index":297,"title":{"injectables/AgglomerationPilesCardsEffects.html":{}},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"modules/DataAccessGameModule.html":{}}}],["agglomerationpilescardsentity",{"_index":130,"title":{"interfaces/AgglomerationPilesCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsfacade",{"_index":95,"title":{"injectables/AgglomerationPilesCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["agglomerationpilescardsfeature",{"_index":367,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardspartialstate",{"_index":443,"title":{"interfaces/AgglomerationPilesCardsPartialState.html":{}},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsreducer",{"_index":466,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsselectors",{"_index":369,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile",{"_index":420,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile(id_agglomeration_road",{"_index":422,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile(id_agglomeration_town",{"_index":424,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getfirstcardpivotforpile",{"_index":341,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["agglomerationpilescardsstate",{"_index":446,"title":{"interfaces/AgglomerationPilesCardsState.html":{}},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsstore",{"_index":307,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["agglomerationtype",{"_index":259,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["agglomerationtype.hamlet",{"_index":290,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationtype.road",{"_index":284,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationtype.town",{"_index":294,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["alexios",{"_index":1976,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":606,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["allagglomerationpilescards",{"_index":394,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["alldiscardpilecards",{"_index":847,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldiscardpilecardsreverse",{"_index":848,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldomainscards",{"_index":1188,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["alleventspilecards",{"_index":1349,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["allhamletpivots",{"_index":395,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["allhandscards",{"_index":1680,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["alllandspilecards",{"_index":1749,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["allroadpivots",{"_index":396,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["allstockpilescards",{"_index":1873,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["alltownpivots",{"_index":397,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["altair",{"_index":1970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altaïr",{"_index":1971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":2100,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["angular/cli@14.0.5",{"_index":2062,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":250,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":822,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["app.component",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":213,"title":{"components/AppComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["appmodule",{"_index":485,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/taormina",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Chainable.html":{}}}],["apps/ui",{"_index":684,"title":{},"body":{"interfaces/Chainable-1.html":{}}}],["arising",{"_index":2136,"title":{},"body":{"license.html":{}}}],["array",{"_index":554,"title":{},"body":{"components/CardBackComponent.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["array.from(actioncards.values",{"_index":1865,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["array.from(agglomerationcards.values",{"_index":386,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["array.from(developmentcards.values",{"_index":1866,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle",{"_index":1339,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle(array.from(eventcards.keys()).slice(1",{"_index":1344,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["arrayshuffle(array.from(landcards.keys",{"_index":1747,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["assertion",{"_index":2180,"title":{},"body":{"todo.html":{}}}],["associated",{"_index":2086,"title":{},"body":{"license.html":{}}}],["async",{"_index":988,"title":{},"body":{"components/DomainComponent.html":{}}}],["atmax",{"_index":1159,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["auspicious",{"_index":1988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auspiciousyear",{"_index":1481,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["authors",{"_index":2126,"title":{},"body":{"license.html":{}}}],["available",{"_index":181,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"modules.html":{}}}],["available_agglomeration_slot",{"_index":138,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_development_slot",{"_index":139,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_land_slot",{"_index":140,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["availableagglomerationslot",{"_index":273,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["availablecol",{"_index":1609,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["availabledevelopmentslot",{"_index":764,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["availablelandslot",{"_index":1731,"title":{},"body":{"interfaces/LandCard.html":{}}}],["availableresources",{"_index":1048,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["back",{"_index":551,"title":{},"body":{"components/CardBackComponent.html":{},"injectables/GameRulesService.html":{}}}],["back'},{'name",{"_index":218,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["back.component",{"_index":629,"title":{},"body":{"modules/CardBackModule.html":{}}}],["back.component.css",{"_index":552,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.html",{"_index":553,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts",{"_index":550,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:10",{"_index":564,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:11",{"_index":562,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:12",{"_index":563,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:13",{"_index":566,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:15",{"_index":567,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:16",{"_index":568,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.module",{"_index":1908,"title":{},"body":{"modules/UiCardModule.html":{}}}],["back.module.ts",{"_index":628,"title":{},"body":{"modules/CardBackModule.html":{}}}],["back/card",{"_index":549,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"modules/UiCardModule.html":{}}}],["background",{"_index":577,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["belowmax",{"_index":1158,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["beyond",{"_index":1095,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["black",{"_index":582,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["blue",{"_index":1981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bluegoldminesandpastures",{"_index":1040,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["blueresourcecount",{"_index":1038,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["board",{"_index":514,"title":{},"body":{"components/BoardComponent.html":{}}}],["board'},{'name",{"_index":216,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["board.component.css",{"_index":515,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":516,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.component",{"_index":536,"title":{},"body":{"modules/BoardModule.html":{}}}],["board/board.module",{"_index":1393,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["boardcomponent",{"_index":215,"title":{"components/BoardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["boardmodule",{"_index":525,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":454,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":238,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["border",{"_index":579,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["bottom",{"_index":612,"title":{},"body":{"components/CardBackComponent.html":{}}}],["box",{"_index":589,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["break",{"_index":1868,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["brickyard",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bridge",{"_index":1966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2141,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["bruneton",{"_index":2076,"title":{},"body":{"license.html":{}}}],["building",{"_index":767,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["building.givesknowledge",{"_index":770,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.noduplicate",{"_index":771,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.tradepoints",{"_index":769,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.victorypoints",{"_index":772,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["buildingname",{"_index":759,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["buy",{"_index":175,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buyagglomeration",{"_index":67,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydevelopment",{"_index":68,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydisabled",{"_index":69,"title":{},"body":{"components/ActionsComponent.html":{}}}],["c",{"_index":2072,"title":{},"body":{"license.html":{}}}],["can't",{"_index":346,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["canprint",{"_index":265,"title":{"interfaces/CanPrint.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["card",{"_index":179,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["card.cardid",{"_index":1586,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.cardtype",{"_index":1585,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.id",{"_index":829,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card.module.ts",{"_index":1907,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card.type",{"_index":828,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card/src/lib/card",{"_index":548,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{}}}],["card/src/lib/ui",{"_index":1906,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card0",{"_index":1297,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.col",{"_index":1305,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.id",{"_index":1309,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.row",{"_index":1306,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1",{"_index":1299,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.col",{"_index":1302,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.id",{"_index":1310,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.row",{"_index":1303,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["cardbackcomponent",{"_index":217,"title":{"components/CardBackComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["cardbackmodule",{"_index":624,"title":{"modules/CardBackModule.html":{}},"body":{"modules/CardBackModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardfrontcomponent",{"_index":219,"title":{"components/CardFrontComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["cardfrontmodule",{"_index":648,"title":{"modules/CardFrontModule.html":{}},"body":{"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardid",{"_index":373,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards",{"_index":10,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandCard.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.actions",{"_index":365,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.effects",{"_index":695,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.effects.spec.ts",{"_index":2187,"title":{},"body":{"todo.html":{}}}],["cards.effects.ts",{"_index":302,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["cards.effects.ts:11",{"_index":1739,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:12",{"_index":837,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:139",{"_index":1137,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:15",{"_index":317,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:177",{"_index":1146,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:19",{"_index":1677,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:20",{"_index":1838,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:212",{"_index":1150,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:22",{"_index":1743,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:23",{"_index":841,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:235",{"_index":1092,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:26",{"_index":335,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:31",{"_index":1842,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:317",{"_index":1101,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:32",{"_index":1129,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:348",{"_index":1143,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:36",{"_index":1671,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:364",{"_index":1057,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:381",{"_index":1051,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:39",{"_index":1735,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:42",{"_index":833,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:422",{"_index":1027,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:429",{"_index":1031,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:43",{"_index":1133,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:444",{"_index":1147,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:46",{"_index":1666,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:488",{"_index":1029,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:49",{"_index":355,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:50",{"_index":1856,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:51",{"_index":1324,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:52",{"_index":825,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["cards.effects.ts:62",{"_index":1125,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:82",{"_index":1834,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:85",{"_index":309,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:94",{"_index":1830,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:96",{"_index":1117,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.facade",{"_index":696,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.facade.ts",{"_index":393,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:104",{"_index":1208,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:121",{"_index":1206,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:127",{"_index":1236,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:131",{"_index":1235,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:135",{"_index":1218,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:139",{"_index":1214,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:14",{"_index":1359,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:143",{"_index":1220,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:147",{"_index":1216,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:151",{"_index":1222,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:159",{"_index":1210,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:165",{"_index":1224,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:17",{"_index":1357,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:171",{"_index":1212,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:177",{"_index":1227,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:18",{"_index":861,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:19",{"_index":427,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:20",{"_index":1243,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:21",{"_index":857,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:22",{"_index":418,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:23",{"_index":1241,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:24",{"_index":859,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:25",{"_index":438,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["cards.facade.ts:26",{"_index":1244,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:27",{"_index":863,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:28",{"_index":423,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:29",{"_index":851,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:31",{"_index":421,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["cards.facade.ts:32",{"_index":1353,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:36",{"_index":425,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:38",{"_index":403,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:39",{"_index":854,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:40",{"_index":1354,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:42",{"_index":1230,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:43",{"_index":855,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:44",{"_index":1355,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:46",{"_index":1231,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:48",{"_index":404,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["cards.facade.ts:49",{"_index":853,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:50",{"_index":1238,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:52",{"_index":1687,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:54",{"_index":411,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:56",{"_index":1688,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:58",{"_index":1878,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:60",{"_index":413,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:66",{"_index":415,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:72",{"_index":1239,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:76",{"_index":1225,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:80",{"_index":1237,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:86",{"_index":1205,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:90",{"_index":1233,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.map((card",{"_index":1668,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cards.models",{"_index":366,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.models.ts",{"_index":371,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards.reducer",{"_index":368,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.reducer.ts",{"_index":444,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cards.selectors",{"_index":370,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.selectors.ts",{"_index":2192,"title":{},"body":{"todo.html":{}}}],["cards.ts",{"_index":2176,"title":{},"body":{"todo.html":{}}}],["cards/agglomeration",{"_index":301,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/DataAccessGameModule.html":{},"todo.html":{}}}],["cards/discard",{"_index":694,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["cards/domains",{"_index":700,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["cards/events",{"_index":704,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["cards/hands",{"_index":715,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["cards/lands",{"_index":719,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["cards/stock",{"_index":723,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cardscount",{"_index":1502,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardsvictorypoints",{"_index":1569,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardtype",{"_index":846,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["catcherror",{"_index":361,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["catcherror((error",{"_index":352,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["celebration",{"_index":989,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["celebrationpoints",{"_index":752,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":1007,"title":{},"body":{"components/DomainComponent.html":{}}}],["center",{"_index":605,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"miscellaneous/enumerations.html":{}}}],["chainable",{"_index":654,"title":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["change",{"_index":596,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"injectables/GameEffects.html":{}}}],["changes",{"_index":1047,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["charge",{"_index":2081,"title":{},"body":{"license.html":{}}}],["child",{"_index":672,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["claim",{"_index":2129,"title":{},"body":{"license.html":{}}}],["class",{"_index":150,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{}}}],["clay",{"_index":2016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["claypit",{"_index":2010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clear",{"_index":198,"title":{},"body":{"components/ActionsComponent.html":{}}}],["cleardomaincardselection",{"_index":70,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cluster_actionsmodule",{"_index":241,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declarations",{"_index":242,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_exports",{"_index":243,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":526,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":529,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_exports",{"_index":527,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":528,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule",{"_index":625,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule_declarations",{"_index":626,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule_exports",{"_index":627,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule",{"_index":649,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule_declarations",{"_index":651,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule_exports",{"_index":650,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule",{"_index":685,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule_providers",{"_index":686,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dicemodule",{"_index":816,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_declarations",{"_index":817,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_exports",{"_index":818,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_domainmodule",{"_index":1008,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_declarations",{"_index":1011,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_exports",{"_index":1009,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_imports",{"_index":1010,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule",{"_index":1389,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_exports",{"_index":1390,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_imports",{"_index":1391,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["cluster_handmodule",{"_index":1659,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_declarations",{"_index":1660,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_exports",{"_index":1661,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_phasesmodule",{"_index":1816,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_declarations",{"_index":1817,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_exports",{"_index":1818,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule",{"_index":1821,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_declarations",{"_index":1824,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_exports",{"_index":1823,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_imports",{"_index":1822,"title":{},"body":{"modules/PilesModule.html":{}}}],["cluster_uicardmodule",{"_index":1903,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_exports",{"_index":1905,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_imports",{"_index":1904,"title":{},"body":{"modules/UiCardModule.html":{}}}],["col",{"_index":1053,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["color",{"_index":255,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":203,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["combine",{"_index":428,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["combinelatest",{"_index":955,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["command",{"_index":668,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["commonmodule",{"_index":249,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["community",{"_index":1969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["communitycenter",{"_index":1968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["component",{"_index":49,"title":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["component_template",{"_index":211,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["components",{"_index":51,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":362,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["concatmap(([_action",{"_index":1060,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["concatmap((action",{"_index":338,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["conditions",{"_index":2107,"title":{},"body":{"license.html":{}}}],["connection",{"_index":2137,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":333,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["console.log('custom",{"_index":670,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["constants",{"_index":379,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["constructor(actions",{"_index":306,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["constructor(domainscards",{"_index":907,"title":{},"body":{"components/DomainComponent.html":{}}}],["constructor(game",{"_index":88,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["constructor(gamerules",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(handscards",{"_index":1638,"title":{},"body":{"components/HandComponent.html":{}}}],["constructor(private",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["constructor(store",{"_index":402,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["container",{"_index":201,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["content",{"_index":604,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["contract",{"_index":2133,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2102,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2084,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2071,"title":{},"body":{"license.html":{}}}],["corepack@0.10.0",{"_index":2063,"title":{},"body":{"index.html":{}}}],["cost",{"_index":256,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":573,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["countandsteal",{"_index":1482,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["countandstealunprotectedgoldandwool",{"_index":1190,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["countstealresources",{"_index":1017,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createactioncard",{"_index":33,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["createagglomerationcard",{"_index":274,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["createagglomerationpilescardsentity",{"_index":384,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["createavailabledomaincard",{"_index":1191,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createavailabledomaincard(domainid",{"_index":1207,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createbuilding",{"_index":766,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createbuilding(id",{"_index":2041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcard",{"_index":1018,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createdevelopmentcard",{"_index":765,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["creatediscardpilecardsentity",{"_index":844,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{}}}],["creatediscardpilecardsentity(uuidv4",{"_index":827,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["createdomain",{"_index":883,"title":{},"body":{"interfaces/Domain.html":{}}}],["createdomainscardsentity",{"_index":1055,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createeffect",{"_index":312,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["createentityadapter",{"_index":447,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createeventcard",{"_index":1319,"title":{},"body":{"interfaces/EventCard.html":{}}}],["createeventspilecardsentity",{"_index":1341,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createeventspilecardsentity(uuidv4",{"_index":1348,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createhamlet",{"_index":287,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createhamlet(id",{"_index":2044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createhand",{"_index":1630,"title":{},"body":{"interfaces/Hand.html":{}}}],["createhandscardsentity",{"_index":1679,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{}}}],["createhandscardsentity(uuidv4",{"_index":1669,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["createinitialagglomerationpilescards",{"_index":316,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["createinitialdomainscards",{"_index":1128,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createinitialeventspilecards",{"_index":1328,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["createinitiallandspilecards",{"_index":1738,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["createinitialstockpilescards",{"_index":1837,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createlandcard",{"_index":1732,"title":{},"body":{"interfaces/LandCard.html":{}}}],["createlandspilecardsentity",{"_index":1746,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createlandspilecardsentity(uuidv4",{"_index":1748,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createreducer",{"_index":451,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createroad",{"_index":2023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createroad(id",{"_index":278,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createselector",{"_index":432,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["createship",{"_index":2024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createship(id",{"_index":773,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createstockpilescardsentity",{"_index":1860,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createstockpilescardsentity(uuidv4",{"_index":1832,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["createtown",{"_index":2025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtown(id",{"_index":291,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior",{"_index":780,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior(id",{"_index":2043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":1811,"title":{},"body":{"components/PhasesComponent.html":{}}}],["custom",{"_index":321,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cypress",{"_index":664,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"drag",{"_index":673,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add('login",{"_index":669,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["damages",{"_index":2130,"title":{},"body":{"license.html":{}}}],["data",{"_index":372,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["dataaccessgamemodule",{"_index":491,"title":{"modules/DataAccessGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"modules.html":{},"overview.html":{}}}],["deal",{"_index":2089,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2138,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":237,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["declare",{"_index":662,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["default",{"_index":310,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["defined",{"_index":100,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["dependencies",{"_index":236,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["development",{"_index":187,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["development.name",{"_index":997,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["development_card_interface_name",{"_index":141,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["developmentcard",{"_index":750,"title":{"interfaces/DevelopmentCard.html":{}},"body":{"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/EventCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["developmentcards",{"_index":952,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["developmentcards.get(cardid",{"_index":976,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["developmenttype",{"_index":758,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["developmenttype.building",{"_index":768,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.ship",{"_index":778,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.warrior",{"_index":782,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["devtools",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["dice",{"_index":787,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice'},{'name",{"_index":222,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["dice.component.css",{"_index":788,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice.component.html",{"_index":789,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice/dice.component",{"_index":820,"title":{},"body":{"modules/DiceModule.html":{}}}],["dice/dice.module",{"_index":538,"title":{},"body":{"modules/BoardModule.html":{}}}],["dicecomponent",{"_index":221,"title":{"components/DiceComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["diceid",{"_index":1939,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dicemodule",{"_index":530,"title":{"modules/DiceModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DiceModule.html":{},"modules.html":{},"overview.html":{}}}],["dicevalue",{"_index":1229,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["die",{"_index":642,"title":{},"body":{"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["dieiconname",{"_index":635,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["different",{"_index":1074,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["directive",{"_index":209,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["directives",{"_index":231,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["disable",{"_index":35,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["discard",{"_index":843,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discard_pile_cards_feature_key",{"_index":870,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecard",{"_index":832,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecards",{"_index":836,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/GameRulesService.html":{}}}],["discardpilecardsactions",{"_index":842,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.adddiscardpilecard",{"_index":831,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":867,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsactions.loaddiscardpilecardsfailure",{"_index":840,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.loaddiscardpilecardssuccess",{"_index":839,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.setdiscardpilecardsinitialized",{"_index":835,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter",{"_index":872,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.addone(discardpilecard",{"_index":880,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.getinitialstate",{"_index":874,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.setall(discardpilecards",{"_index":878,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardseffects",{"_index":692,"title":{"injectables/DiscardPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsentity",{"_index":845,"title":{"interfaces/DiscardPileCardsEntity.html":{}},"body":{"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsfacade",{"_index":687,"title":{"injectables/DiscardPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["discardpilecardsfeature",{"_index":864,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardspartialstate",{"_index":869,"title":{"interfaces/DiscardPileCardsPartialState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsreducer",{"_index":875,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsselectors",{"_index":865,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsstate",{"_index":871,"title":{"interfaces/DiscardPileCardsState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["display",{"_index":202,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["distribute",{"_index":2098,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":2087,"title":{},"body":{"license.html":{}}}],["dom",{"_index":54,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain",{"_index":186,"title":{"interfaces/Domain.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{}}}],["domain'},{'name",{"_index":224,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain.color",{"_index":985,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.css",{"_index":885,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.html",{"_index":886,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain/domain.component",{"_index":1014,"title":{},"body":{"modules/DomainModule.html":{}}}],["domain/domain.module",{"_index":539,"title":{},"body":{"modules/BoardModule.html":{}}}],["domaincard",{"_index":161,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.cardid",{"_index":1622,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.cardtype",{"_index":1621,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.col",{"_index":1606,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.domainid",{"_index":975,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.id",{"_index":1602,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.row",{"_index":1624,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard?.cardtype",{"_index":162,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards",{"_index":1594,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards.filter",{"_index":160,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards.length",{"_index":1597,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards[0",{"_index":1598,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincardtype",{"_index":1165,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"miscellaneous/typealiases.html":{}}}],["domaincolor",{"_index":258,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["domaincolor.red",{"_index":1470,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["domaincomponent",{"_index":223,"title":{"components/DomainComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["domainid",{"_index":906,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["domainmodule",{"_index":531,"title":{"modules/DomainModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DomainModule.html":{},"modules.html":{},"overview.html":{}}}],["domains",{"_index":197,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domains.get(this.domainid",{"_index":956,"title":{},"body":{"components/DomainComponent.html":{}}}],["domains_cards_feature_key",{"_index":1271,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscard.id).includes(pivotid",{"_index":980,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards",{"_index":90,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domainscards.filter((domaincard",{"_index":974,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards.map((domainscard",{"_index":979,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscardsactions",{"_index":1152,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.adddomaincard",{"_index":1056,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.countandstealunprotectedgoldandwool",{"_index":1258,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.createdomaincard",{"_index":1257,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresources",{"_index":1249,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1251,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesfordie",{"_index":1250,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.loaddomainscardsfailure",{"_index":1132,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.loaddomainscardssuccess",{"_index":1131,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.putcardinpivot",{"_index":1256,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.setdomainscardserror",{"_index":1091,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.setdomainscardsinitialized",{"_index":1127,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.toggledomaincardselection",{"_index":1254,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.updatedomaincard",{"_index":1100,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.updatedomainscards",{"_index":1050,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsadapter",{"_index":1274,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.addone(domaincard",{"_index":1288,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.getinitialstate",{"_index":1276,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.removeone(id",{"_index":1312,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.setall(domainscards",{"_index":1281,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updatemany(updates",{"_index":1286,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updateone(update",{"_index":1284,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardseffects",{"_index":698,"title":{"injectables/DomainsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{}}}],["domainscardsentity",{"_index":129,"title":{"interfaces/DomainsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsfacade",{"_index":91,"title":{"injectables/DomainsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["domainscardsfeature",{"_index":1153,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardspartialstate",{"_index":1270,"title":{"interfaces/DomainsCardsPartialState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsreducer",{"_index":1277,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsselectors",{"_index":1154,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.count_1",{"_index":1110,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_2",{"_index":1112,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_3",{"_index":1114,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_4",{"_index":1116,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getcardsvictorypointsfordomain(domainid",{"_index":1266,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getcelebrationpointsfordomain(domainid",{"_index":1268,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getdomainresourcecountseenbythieves",{"_index":1035,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getdomainunprotectedgoldminesandpastures",{"_index":1036,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardpivotwithlockedresources",{"_index":1059,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseauspiciousyear",{"_index":1103,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseoneproduction",{"_index":1120,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreasetwoproduction",{"_index":1122,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getmasterydomainfortype(type",{"_index":1265,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getmerchantshipcountfordomain(domainid",{"_index":1267,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.hasdomaincommunitycenter(domainid",{"_index":1269,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsstate",{"_index":1272,"title":{"interfaces/DomainsCardsState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsstore",{"_index":1026,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["draw",{"_index":2002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drawcardfromstocktohand",{"_index":1488,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawcardfromstocktohand(pileid",{"_index":1498,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand",{"_index":1489,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand(pileid",{"_index":1501,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["dual",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["duel",{"_index":655,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duel/src/app/app.component.ts",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:12",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:9",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.module.ts",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/commands.ts",{"_index":656,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["e2e/src/support/commands.ts:15",{"_index":660,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["effects",{"_index":410,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["effectsmodule",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([agglomerationpilescardseffects",{"_index":740,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([discardpilecardseffects",{"_index":749,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([domainscardseffects",{"_index":731,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([eventspilecardseffects",{"_index":737,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([gameeffects",{"_index":727,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([handscardseffects",{"_index":734,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([landspilecardseffects",{"_index":746,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([stockpilescardseffects",{"_index":743,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forroot",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":208,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["email",{"_index":661,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["empty",{"_index":348,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{}}}],["enable",{"_index":286,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["engine",{"_index":136,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["engine.module.ts",{"_index":1388,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/feature",{"_index":1387,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/game",{"_index":1479,"title":{},"body":{"injectables/GameRulesService.html":{},"todo.html":{}}}],["entities",{"_index":1307,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["entityadapter",{"_index":448,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["entitystate",{"_index":449,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["enumerations",{"_index":1935,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["environment.production",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":332,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["error(`can't",{"_index":775,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["error(`couldn't",{"_index":1156,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["error.message",{"_index":354,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["errormsg",{"_index":455,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["eslint",{"_index":34,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{},"todo.html":{}}}],["eslint/explicit",{"_index":2194,"title":{},"body":{"todo.html":{}}}],["eslint/no",{"_index":39,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["event",{"_index":815,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{}}}],["event.name",{"_index":1814,"title":{},"body":{"components/PhasesComponent.html":{}}}],["event_0",{"_index":1346,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["event_card_interface_name",{"_index":1318,"title":{},"body":{"interfaces/EventCard.html":{}}}],["eventcard",{"_index":1314,"title":{"interfaces/EventCard.html":{}},"body":{"interfaces/EventCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/functions.html":{}}}],["eventcards",{"_index":1338,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventcards.get(cardid",{"_index":1806,"title":{},"body":{"components/PhasesComponent.html":{}}}],["eventcards.get(pivot.cardid)?.name",{"_index":1518,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventdie",{"_index":1427,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["eventemitter",{"_index":565,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["eventfromvalue",{"_index":2026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventfromvalue(value",{"_index":2046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventname",{"_index":1316,"title":{},"body":{"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["eventname.auspiciousyear",{"_index":1519,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventname.festival",{"_index":1528,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["events",{"_index":1335,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["events_pile_cards_feature_key",{"_index":1368,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecards",{"_index":1327,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecards[0].id",{"_index":1379,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions",{"_index":1334,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.loadeventspilecardsfailure",{"_index":1331,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsactions.loadeventspilecardssuccess",{"_index":1330,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesinitializedeventspilecards",{"_index":1326,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesselectfirsteventspilecards",{"_index":1333,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter",{"_index":1370,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.getinitialstate",{"_index":1372,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.removeone",{"_index":1385,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.setall(eventspilecards",{"_index":1376,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardseffects",{"_index":702,"title":{"injectables/EventsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsentity",{"_index":1337,"title":{"interfaces/EventsPileCardsEntity.html":{}},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecardsfacade",{"_index":688,"title":{"injectables/EventsPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["eventspilecardsfeature",{"_index":1336,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardspartialstate",{"_index":1367,"title":{"interfaces/EventsPileCardsPartialState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsreducer",{"_index":1373,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsselectors",{"_index":1361,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardsstate",{"_index":1369,"title":{"interfaces/EventsPileCardsState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsstore",{"_index":1323,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventvalue",{"_index":806,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["eventvalue.event",{"_index":1526,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventvalue.thieves",{"_index":1547,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["evie",{"_index":1973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["example",{"_index":671,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["exchange",{"_index":2008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["existing",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["explicit",{"_index":40,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["exports",{"_index":240,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["expose",{"_index":433,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["express",{"_index":2117,"title":{},"body":{"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ezio",{"_index":1972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade",{"_index":436,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["false",{"_index":465,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["featureenginemodule",{"_index":1386,"title":{"modules/FeatureEngineModule.html":{}},"body":{"modules/FeatureEngineModule.html":{},"modules.html":{}}}],["featuregamemodule",{"_index":492,"title":{"modules/FeatureGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["festival",{"_index":1483,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":319,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["field",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["filename",{"_index":2150,"title":{},"body":{"todo.html":{}}}],["files",{"_index":2088,"title":{},"body":{"license.html":{}}}],["filter",{"_index":147,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["filter((die",{"_index":1546,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((handcard",{"_index":168,"title":{},"body":{"components/ActionsComponent.html":{}}}],["filter((pivot",{"_index":1517,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((stockpilecard",{"_index":1574,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((value",{"_index":1535,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filtering",{"_index":1850,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["find",{"_index":776,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{}}}],["finish",{"_index":1815,"title":{},"body":{"components/PhasesComponent.html":{}}}],["first",{"_index":347,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["firstland",{"_index":1068,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstland.type",{"_index":1073,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstpivot",{"_index":1066,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["fitness",{"_index":2122,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":2158,"title":{},"body":{"todo.html":{}}}],["fixmes",{"_index":2157,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":200,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["following",{"_index":2106,"title":{},"body":{"license.html":{}}}],["force",{"_index":1408,"title":{},"body":{"injectables/GameEffects.html":{}}}],["foreign",{"_index":1185,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["forest",{"_index":2011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":1119,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["formsmodule",{"_index":821,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{}}}],["foundid",{"_index":1290,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["foundry",{"_index":1960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["free",{"_index":2080,"title":{},"body":{"license.html":{}}}],["fromagglomerationpilescards",{"_index":707,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromagglomerationpilescards.agglomeration_piles_cards_feature_key",{"_index":735,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromagglomerationpilescards.agglomerationpilescardsreducer",{"_index":736,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards",{"_index":697,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discard_pile_cards_feature_key",{"_index":747,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discardpilecardsreducer",{"_index":748,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards",{"_index":701,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domains_cards_feature_key",{"_index":729,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domainscardsreducer",{"_index":730,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards",{"_index":705,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.events_pile_cards_feature_key",{"_index":744,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.eventspilecardsreducer",{"_index":745,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame",{"_index":711,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame.gamereducer",{"_index":726,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards",{"_index":716,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.hands_cards_feature_key",{"_index":732,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.handscardsreducer",{"_index":733,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards",{"_index":720,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.lands_pile_cards_feature_key",{"_index":738,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.landspilecardsreducer",{"_index":739,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards",{"_index":724,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stock_piles_cards_feature_key",{"_index":741,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stockpilescardsreducer",{"_index":742,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["front",{"_index":632,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front'},{'name",{"_index":220,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["front.component",{"_index":653,"title":{},"body":{"modules/CardFrontModule.html":{}}}],["front.component.css",{"_index":633,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.html",{"_index":634,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts",{"_index":631,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:10",{"_index":638,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:11",{"_index":636,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:12",{"_index":637,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:13",{"_index":639,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:15",{"_index":640,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.module",{"_index":1909,"title":{},"body":{"modules/UiCardModule.html":{}}}],["front.module.ts",{"_index":652,"title":{},"body":{"modules/CardFrontModule.html":{}}}],["front/card",{"_index":630,"title":{},"body":{"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{}}}],["function",{"_index":41,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["functions",{"_index":2022,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2105,"title":{},"body":{"license.html":{}}}],["game",{"_index":104,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["game.actions",{"_index":1421,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game.module.ts",{"_index":691,"title":{},"body":{"modules/DataAccessGameModule.html":{},"modules/FeatureGameModule.html":{}}}],["game.reducer",{"_index":1423,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game.selectors",{"_index":1425,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game/src/lib/+state/agglomeration",{"_index":300,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/discard",{"_index":823,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/domains",{"_index":1016,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/events",{"_index":1321,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts",{"_index":1394,"title":{},"body":{"injectables/GameEffects.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts:16",{"_index":1404,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:26",{"_index":1419,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:49",{"_index":1412,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:59",{"_index":1399,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.facade.ts",{"_index":1426,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:20",{"_index":1457,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:21",{"_index":1451,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:24",{"_index":1449,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:25",{"_index":1453,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:26",{"_index":1455,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:27",{"_index":1435,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:35",{"_index":1436,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:39",{"_index":1444,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:43",{"_index":1446,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:47",{"_index":1439,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:51",{"_index":1445,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:55",{"_index":1441,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:59",{"_index":1443,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:63",{"_index":1438,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.reducer.ts",{"_index":1466,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game/src/lib/+state/hands",{"_index":1664,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["game/src/lib/+state/lands",{"_index":1734,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["game/src/lib/+state/stock",{"_index":1827,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/actions/actions.module.ts",{"_index":247,"title":{},"body":{"modules/ActionsModule.html":{}}}],["game/src/lib/actions/actions/actions.component.ts",{"_index":57,"title":{},"body":{"components/ActionsComponent.html":{},"todo.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:110",{"_index":113,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:121",{"_index":127,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:129",{"_index":126,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:133",{"_index":117,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:139",{"_index":124,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:143",{"_index":123,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:147",{"_index":116,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:151",{"_index":122,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:155",{"_index":121,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:165",{"_index":114,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:175",{"_index":111,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:179",{"_index":125,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:32",{"_index":101,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:42",{"_index":109,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:48",{"_index":105,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:52",{"_index":118,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:58",{"_index":119,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:71",{"_index":112,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:85",{"_index":108,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:89",{"_index":115,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:97",{"_index":120,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/board/board.module.ts",{"_index":535,"title":{},"body":{"modules/BoardModule.html":{}}}],["game/src/lib/board/board/board.component.ts",{"_index":513,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:15",{"_index":524,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:16",{"_index":523,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:17",{"_index":522,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:18",{"_index":521,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/data",{"_index":690,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["game/src/lib/dice/dice.module.ts",{"_index":819,"title":{},"body":{"modules/DiceModule.html":{}}}],["game/src/lib/dice/dice/dice.component.ts",{"_index":786,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:19",{"_index":797,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:23",{"_index":805,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:32",{"_index":801,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:36",{"_index":800,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:40",{"_index":798,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:44",{"_index":799,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:48",{"_index":804,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/domain/domain.module.ts",{"_index":1013,"title":{},"body":{"modules/DomainModule.html":{}}}],["game/src/lib/domain/domain/domain.component.ts",{"_index":884,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:114",{"_index":920,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:122",{"_index":917,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:126",{"_index":911,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:130",{"_index":922,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:134",{"_index":938,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:142",{"_index":942,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:146",{"_index":940,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:150",{"_index":944,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:154",{"_index":935,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:39",{"_index":909,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:41",{"_index":949,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:42",{"_index":945,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:43",{"_index":950,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:44",{"_index":946,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:45",{"_index":947,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:46",{"_index":948,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:48",{"_index":951,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:49",{"_index":908,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:56",{"_index":918,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:60",{"_index":927,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:64",{"_index":913,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:68",{"_index":929,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:74",{"_index":931,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:80",{"_index":933,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:84",{"_index":915,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:99",{"_index":925,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/feature",{"_index":1392,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["game/src/lib/hand/hand.module.ts",{"_index":1662,"title":{},"body":{"modules/HandModule.html":{}}}],["game/src/lib/hand/hand/hand.component.ts",{"_index":1631,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:24",{"_index":1640,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:26",{"_index":1649,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:27",{"_index":1639,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:31",{"_index":1644,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:35",{"_index":1646,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:43",{"_index":1642,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:47",{"_index":1643,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:51",{"_index":1648,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/phases/phases.module.ts",{"_index":1819,"title":{},"body":{"modules/PhasesModule.html":{}}}],["game/src/lib/phases/phases/phases.component.ts",{"_index":1779,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:22",{"_index":1801,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:23",{"_index":1790,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:30",{"_index":1794,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:34",{"_index":1798,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:38",{"_index":1795,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:42",{"_index":1799,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:46",{"_index":1793,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:50",{"_index":1796,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:54",{"_index":1797,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:58",{"_index":1791,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:62",{"_index":1800,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/piles/piles.module.ts",{"_index":1825,"title":{},"body":{"modules/PilesModule.html":{}}}],["game/src/test/fixtures/domains",{"_index":2175,"title":{},"body":{"todo.html":{}}}],["game_feature_key",{"_index":1467,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions",{"_index":1420,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions.seteventdie",{"_index":1411,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setnextproductiondie",{"_index":1418,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setproductiondie",{"_index":1417,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throweventdie",{"_index":1402,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throwproductiondie",{"_index":1403,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameeffects",{"_index":708,"title":{"injectables/GameEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameEffects.html":{}}}],["gameended",{"_index":1484,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["gamefacade",{"_index":89,"title":{"injectables/GameFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["gamepartialstate",{"_index":1422,"title":{"interfaces/GamePartialState.html":{}},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamephase",{"_index":142,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamephase.initialthrow",{"_index":807,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{}}}],["gamephase.loopactions",{"_index":155,"title":{},"body":{"components/ActionsComponent.html":{}}}],["gamephase.loopthrow",{"_index":808,"title":{},"body":{"components/DiceComponent.html":{}}}],["gamereducer",{"_index":1471,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamerules",{"_index":98,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["gamerulesservice",{"_index":99,"title":{"injectables/GameRulesService.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["gameselectors",{"_index":1424,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["gamestate",{"_index":1468,"title":{"interfaces/GameState.html":{}},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamestore",{"_index":1398,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gap",{"_index":204,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["generated",{"_index":2057,"title":{},"body":{"index.html":{}}}],["getaction",{"_index":1783,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getactioncard",{"_index":1634,"title":{},"body":{"components/HandComponent.html":{}}}],["getactioncard(cardid",{"_index":1641,"title":{},"body":{"components/HandComponent.html":{}}}],["getagglomerationcard",{"_index":889,"title":{},"body":{"components/DomainComponent.html":{}}}],["getagglomerationcard(cardid",{"_index":910,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcardsvictorypointsfordomain",{"_index":1192,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcardsvictorypointsfordomain(domainid",{"_index":1209,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpoints",{"_index":890,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domain.id",{"_index":991,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domainid",{"_index":912,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpointsfordomain",{"_index":1193,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpointsfordomain(domainid",{"_index":1211,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcolumnstemplate",{"_index":891,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcolumnstemplate(domainid",{"_index":914,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdevelopmentcard",{"_index":892,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdevelopmentcard(cardid",{"_index":916,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdomain",{"_index":893,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainmaxcol",{"_index":1194,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxcol(domainid",{"_index":1213,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow",{"_index":1195,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow(domainid",{"_index":1215,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol",{"_index":1196,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol(domainid",{"_index":1217,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow",{"_index":1197,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow(domainid",{"_index":1219,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainscards",{"_index":894,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainscards(domainid",{"_index":919,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainselectedagglomerationslots",{"_index":71,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselecteddevelopmentcards",{"_index":72,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselectedlandcards",{"_index":73,"title":{},"body":{"components/ActionsComponent.html":{}}}],["geteventcard",{"_index":1784,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventcard(cardid",{"_index":1792,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventdie",{"_index":791,"title":{},"body":{"components/DiceComponent.html":{}}}],["gethand",{"_index":1635,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards",{"_index":1636,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards(handid",{"_index":1645,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandselecteddevelopmentcard",{"_index":74,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getimgsrc",{"_index":555,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"miscellaneous/functions.html":{}}}],["getimgsrc(name",{"_index":2048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlandcard",{"_index":895,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcard(cardid",{"_index":921,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcardfrompivot",{"_index":1024,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getlandcardfrompivot(pivot",{"_index":1028,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getmasterydomainfortype",{"_index":1198,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmasterydomainfortype(masterypointstype.strength",{"_index":960,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(masterypointstype.trade",{"_index":963,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(type",{"_index":1221,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain",{"_index":1199,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain(domainid",{"_index":1223,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getnextproductiondie",{"_index":792,"title":{},"body":{"components/DiceComponent.html":{}}}],["getphase",{"_index":1785,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getpileselectedlandcard",{"_index":75,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getplayer",{"_index":1786,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getproductiondie",{"_index":793,"title":{},"body":{"components/DiceComponent.html":{}}}],["getrandomeventdievalue",{"_index":1406,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrandomproductiondievalue",{"_index":1416,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrowstemplate",{"_index":896,"title":{},"body":{"components/DomainComponent.html":{}}}],["getrowstemplate(domainid",{"_index":924,"title":{},"body":{"components/DomainComponent.html":{}}}],["getselectedactioncard",{"_index":76,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedagglomerationpilecard",{"_index":77,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailableagglomerationslots",{"_index":78,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailabledevelopmentslots",{"_index":79,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailablelandslots",{"_index":80,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedeventspilecard",{"_index":1787,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getselectedhandcard",{"_index":81,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getshipscount",{"_index":897,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domain.id",{"_index":987,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domainid",{"_index":926,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery",{"_index":898,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery(domainid",{"_index":928,"title":{},"body":{"components/DomainComponent.html":{}}}],["getting",{"_index":2054,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettrademastery",{"_index":899,"title":{},"body":{"components/DomainComponent.html":{}}}],["gettrademastery(domainid",{"_index":930,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints",{"_index":900,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domain.id",{"_index":996,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domainid",{"_index":932,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypointsfordomain",{"_index":1490,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["getvictorypointsfordomain(domainid",{"_index":1504,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["give",{"_index":193,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["givelockedresources",{"_index":82,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["givesknowledge",{"_index":753,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["globally",{"_index":2059,"title":{},"body":{"index.html":{}}}],["goes",{"_index":325,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["gold",{"_index":2018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldmine",{"_index":2012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldsmith",{"_index":1948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["granted",{"_index":2079,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2142,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":578,"title":{},"body":{"components/CardBackComponent.html":{}}}],["grid",{"_index":1006,"title":{},"body":{"components/DomainComponent.html":{}}}],["hamlet",{"_index":1954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hamletentities",{"_index":391,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["hand",{"_index":188,"title":{"interfaces/Hand.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{}}}],["hand'},{'name",{"_index":226,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["hand.color",{"_index":1657,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.css",{"_index":1632,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.html",{"_index":1633,"title":{},"body":{"components/HandComponent.html":{}}}],["hand/hand.component",{"_index":1663,"title":{},"body":{"modules/HandModule.html":{}}}],["hand/hand.module",{"_index":540,"title":{},"body":{"modules/BoardModule.html":{}}}],["handcard",{"_index":165,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["handcard.cardid",{"_index":1611,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.cardtype",{"_index":1620,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.handid",{"_index":1654,"title":{},"body":{"components/HandComponent.html":{}}}],["handcard?.cardtype",{"_index":166,"title":{},"body":{"components/ActionsComponent.html":{}}}],["handcomponent",{"_index":225,"title":{"components/HandComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["handid",{"_index":1499,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{}}}],["handmodule",{"_index":532,"title":{"modules/HandModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/HandModule.html":{},"modules.html":{},"overview.html":{}}}],["hands",{"_index":1629,"title":{},"body":{"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["hands.get(this.handid",{"_index":1650,"title":{},"body":{"components/HandComponent.html":{}}}],["hands_cards_feature_key",{"_index":1701,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards",{"_index":92,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards.filter((handcard",{"_index":1653,"title":{},"body":{"components/HandComponent.html":{}}}],["handscardsactions",{"_index":1678,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsactions.addhandscards",{"_index":1670,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardsfailure",{"_index":1676,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardssuccess",{"_index":1675,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.sethandscardsinitialized",{"_index":1673,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsadapter",{"_index":1703,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.addmany(handscards",{"_index":1714,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.getinitialstate",{"_index":1705,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.removeone(id",{"_index":1719,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.setall(handscards",{"_index":1710,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardseffects",{"_index":713,"title":{"injectables/HandsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{}}}],["handscardsentity",{"_index":131,"title":{"interfaces/HandsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsfacade",{"_index":93,"title":{"injectables/HandsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"overview.html":{}}}],["handscardsfeature",{"_index":1692,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardspartialstate",{"_index":1700,"title":{"interfaces/HandsCardsPartialState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsreducer",{"_index":1706,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsselectors",{"_index":1693,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardsstate",{"_index":1702,"title":{"interfaces/HandsCardsState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["harvest",{"_index":1978,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hascolor",{"_index":261,"title":{"interfaces/HasColor.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["hascost",{"_index":263,"title":{"interfaces/HasCost.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{}}}],["hasdomaincommunitycenter",{"_index":1200,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasdomaincommunitycenter(domainid",{"_index":1226,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasid",{"_index":12,"title":{"interfaces/HasId.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{}}}],["hasname",{"_index":24,"title":{"interfaces/HasName.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["hasrules",{"_index":26,"title":{"interfaces/HasRules.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["hasvictorypoints",{"_index":267,"title":{"interfaces/HasVictoryPoints.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{}}}],["hawker",{"_index":1990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["height",{"_index":576,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["here",{"_index":326,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["hereby",{"_index":2078,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2127,"title":{},"body":{"license.html":{}}}],["html",{"_index":207,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"dependencies.html":{}}}],["hélène",{"_index":2075,"title":{},"body":{"license.html":{}}}],["icon",{"_index":608,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["iconname",{"_index":572,"title":{},"body":{"components/CardBackComponent.html":{}}}],["id",{"_index":15,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"miscellaneous/functions.html":{}}}],["id_agglomeration_hamlet",{"_index":376,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_agglomeration_road",{"_index":377,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["id_agglomeration_town",{"_index":378,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_clay_pit_blue",{"_index":1167,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_clay_pit_red",{"_index":1168,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_blue",{"_index":517,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_red",{"_index":518,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_field_blue",{"_index":1169,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_field_red",{"_index":1170,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_blue",{"_index":1171,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_red",{"_index":1172,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_blue",{"_index":1173,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_red",{"_index":1174,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_1",{"_index":1175,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_2",{"_index":1176,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_1",{"_index":1177,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_2",{"_index":1178,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hand_blue",{"_index":519,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_hand_red",{"_index":520,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_pasture_blue",{"_index":1179,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_pasture_red",{"_index":1180,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_blue",{"_index":1181,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_red",{"_index":1182,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_blue",{"_index":1183,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_red",{"_index":1184,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["ids",{"_index":1855,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ignore",{"_index":1099,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["ignores",{"_index":2251,"title":{},"body":{"todo.html":{}}}],["implied",{"_index":2118,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["imports",{"_index":252,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["included",{"_index":2111,"title":{},"body":{"license.html":{}}}],["including",{"_index":2092,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1005,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["increasefour",{"_index":1107,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseone",{"_index":1104,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresources",{"_index":901,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresources(pivotid",{"_index":934,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresourcesauspiciousyear",{"_index":1019,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresourcesforauspiciousyear",{"_index":1201,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie",{"_index":1020,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie(value",{"_index":1228,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["increasethree",{"_index":1106,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increasetwo",{"_index":1105,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["indent",{"_index":2249,"title":{},"body":{"todo.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["initial",{"_index":463,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{}}}],["initialagglomerationpilescardsstate",{"_index":460,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["initialdiscardpilecardsstate",{"_index":873,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["initialdomainscards",{"_index":1187,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["initialdomainscardsstate",{"_index":1275,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["initialdraw",{"_index":2001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initialeventspilecardsstate",{"_index":1371,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["initialgamestate",{"_index":1469,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["initialhandscardsstate",{"_index":1704,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["initialization",{"_index":405,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initialized",{"_index":453,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initiallandspilecardsstate",{"_index":1768,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["initialstockpilescardsstate",{"_index":1891,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initialthrow",{"_index":2000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initnewgame",{"_index":303,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initsavedgame",{"_index":304,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectable",{"_index":296,"title":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectables",{"_index":298,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["input",{"_index":569,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inputs",{"_index":556,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inset",{"_index":621,"title":{},"body":{"components/CardBackComponent.html":{}}}],["installed",{"_index":2060,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1849,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"overview.html":{}}}],["interfaces/color",{"_index":262,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/LandCard.html":{}}}],["interfaces/cost",{"_index":264,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["interfaces/entity",{"_index":23,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/name",{"_index":25,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/print",{"_index":266,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/rules",{"_index":27,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/victory",{"_index":268,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["invention",{"_index":1991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactioncard",{"_index":2028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isactioncard(obj",{"_index":42,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{}}}],["isagglomerationcard",{"_index":2029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isagglomerationcard(obj",{"_index":295,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["iscanprint",{"_index":2030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iscanprint(obj",{"_index":545,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{}}}],["isdevelopmentcard",{"_index":2032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdevelopmentcard(obj",{"_index":785,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["isdomaincardselected",{"_index":902,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivot.id",{"_index":998,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivotid",{"_index":937,"title":{},"body":{"components/DomainComponent.html":{}}}],["iseventcard",{"_index":2033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iseventcard(obj",{"_index":1320,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{}}}],["ishasname",{"_index":2034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishasname(obj",{"_index":1724,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["islandcard",{"_index":2036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["islandcard(obj",{"_index":1733,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":607,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["jacob",{"_index":1974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["justify",{"_index":603,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["kassandra",{"_index":1975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":1186,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["kind",{"_index":2116,"title":{},"body":{"license.html":{}}}],["land",{"_index":192,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{}}}],["land.die",{"_index":1000,"title":{},"body":{"components/DomainComponent.html":{}}}],["land.type",{"_index":1072,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["land_card_interface_name",{"_index":143,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["landcard",{"_index":923,"title":{"interfaces/LandCard.html":{}},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["landcards",{"_index":953,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["landcards.get(cardid",{"_index":978,"title":{},"body":{"components/DomainComponent.html":{}}}],["landcards.get(pivot.cardid",{"_index":1164,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["lands",{"_index":1745,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["lands_pile_cards_feature_key",{"_index":1765,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecard",{"_index":1614,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecard.cardid",{"_index":1616,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecards",{"_index":96,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions",{"_index":1744,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.loadlandspilecardsfailure",{"_index":1742,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsactions.loadlandspilecardssuccess",{"_index":1741,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.selectlandspilecard",{"_index":1762,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsactions.setlandspilecardsinitialized",{"_index":1737,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter",{"_index":1767,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.getinitialstate",{"_index":1769,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.removeone(id",{"_index":1778,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.setall(landspilecards",{"_index":1773,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardseffects",{"_index":717,"title":{"injectables/LandsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsentity",{"_index":132,"title":{"interfaces/LandsPileCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsfacade",{"_index":97,"title":{"injectables/LandsPileCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"overview.html":{}}}],["landspilecardsfeature",{"_index":1758,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardspartialstate",{"_index":1764,"title":{"interfaces/LandsPileCardsPartialState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsreducer",{"_index":1770,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsselectors",{"_index":1759,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsstate",{"_index":1766,"title":{"interfaces/LandsPileCardsState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landtype",{"_index":1729,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{}}}],["laure",{"_index":2074,"title":{},"body":{"license.html":{}}}],["legend",{"_index":206,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["len",{"_index":458,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["liability",{"_index":2131,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2128,"title":{},"body":{"license.html":{}}}],["libs/.../action.ts",{"_index":1936,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../agglomeration.ts",{"_index":1937,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../assets.ts",{"_index":2027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../development.ts",{"_index":1938,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../dice.ts",{"_index":1940,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../domain.ts",{"_index":1941,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../event.ts",{"_index":1942,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../land.ts",{"_index":2037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../name.ts",{"_index":2035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../phase.ts",{"_index":1943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../print.ts",{"_index":2031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../resources.ts",{"_index":1944,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/data",{"_index":299,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["libs/feature",{"_index":56,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"todo.html":{}}}],["libs/shared",{"_index":6,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/Domain.html":{},"interfaces/EventCard.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["libs/ui",{"_index":547,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{}}}],["license",{"_index":2069,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["lightgray",{"_index":594,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["limitation",{"_index":2093,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2119,"title":{},"body":{"license.html":{}}}],["line",{"_index":37,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["lines",{"_index":2174,"title":{},"body":{"todo.html":{}}}],["literal",{"_index":561,"title":{},"body":{"components/CardBackComponent.html":{},"injectables/DiscardPileCardsFacade.html":{}}}],["load",{"_index":323,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["loaded",{"_index":398,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["lock",{"_index":1003,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["locked",{"_index":194,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["lockedresources",{"_index":1078,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["lockresource",{"_index":903,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["lockresource(pivotid",{"_index":939,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["logic",{"_index":324,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["login",{"_index":657,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["login(email",{"_index":658,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["loop",{"_index":2004,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopactions",{"_index":2005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopdraw",{"_index":2006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopexchange",{"_index":2007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopthrow",{"_index":2003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["low",{"_index":1983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lower",{"_index":1982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["magic",{"_index":276,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["many",{"_index":1088,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map",{"_index":148,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasCost.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/functions.html":{}}}],["map(([_action",{"_index":1149,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["map(([agglomerationpilecard",{"_index":1593,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([landspilecard",{"_index":1613,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([min",{"_index":968,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((action",{"_index":1139,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((discardpilecard",{"_index":830,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["map((domaincards",{"_index":159,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["map((domainscards",{"_index":973,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((handcard",{"_index":1617,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map((handscards",{"_index":1652,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{}}}],["map((ids",{"_index":1853,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["map((phase",{"_index":153,"title":{},"body":{"components/ActionsComponent.html":{}}}],["map((pivot",{"_index":343,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["map((pivots",{"_index":1044,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((pivotsselected",{"_index":1064,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((roadcard",{"_index":389,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["map((stockpilecard",{"_index":1577,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((stockpilescards",{"_index":1573,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((value",{"_index":1536,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["mapdietoiconnamefront",{"_index":887,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["mapdietoiconnamefront(die",{"_index":2049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortodomainid",{"_index":2038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortodomainid(domaincolor",{"_index":2052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid",{"_index":2039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid(domaincolor",{"_index":2053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptypetoiconnamefront",{"_index":888,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["maptypetoiconnamefront(type",{"_index":2050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["market",{"_index":1963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mastery",{"_index":993,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterydomainid",{"_index":962,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterypointstype",{"_index":954,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":48,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(...resource_counts",{"_index":1087,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["max",{"_index":457,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["maximum",{"_index":1096,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["media",{"_index":597,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["merchant",{"_index":1993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":2121,"title":{},"body":{"license.html":{}}}],["merchantshiptravel",{"_index":1992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merge",{"_index":2096,"title":{},"body":{"license.html":{}}}],["mergemap",{"_index":1857,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["mergemap((action",{"_index":1844,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["metareducers",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":66,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["middle",{"_index":1984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mill",{"_index":1959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":969,"title":{},"body":{"components/DomainComponent.html":{}}}],["miscellaneous",{"_index":1934,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":2070,"title":{},"body":{"license.html":{},"properties.html":{}}}],["models",{"_index":145,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["models/src/lib/interfaces/color.ts",{"_index":1720,"title":{},"body":{"interfaces/HasColor.html":{}}}],["models/src/lib/interfaces/cost.ts",{"_index":1721,"title":{},"body":{"interfaces/HasCost.html":{}}}],["models/src/lib/interfaces/entity.ts",{"_index":1722,"title":{},"body":{"interfaces/HasId.html":{}}}],["models/src/lib/interfaces/name.ts",{"_index":1723,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts",{"_index":543,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts:2",{"_index":544,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["models/src/lib/interfaces/rules.ts",{"_index":1726,"title":{},"body":{"interfaces/HasRules.html":{}}}],["models/src/lib/interfaces/victory.ts",{"_index":1727,"title":{},"body":{"interfaces/HasVictoryPoints.html":{}}}],["models/src/lib/structures/action.ts",{"_index":7,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/agglomeration.ts",{"_index":254,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/development.ts",{"_index":751,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/domain.ts",{"_index":882,"title":{},"body":{"interfaces/Domain.html":{}}}],["models/src/lib/structures/event.ts",{"_index":1315,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/hand.ts",{"_index":1628,"title":{},"body":{"interfaces/Hand.html":{}}}],["models/src/lib/structures/land.ts",{"_index":1728,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/types/action.ts",{"_index":1945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/agglomeration.ts",{"_index":1952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/development.ts",{"_index":1956,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/dice.ts",{"_index":1977,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/domain.ts",{"_index":1979,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/event.ts",{"_index":1987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/phase.ts",{"_index":1999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/resources.ts",{"_index":2009,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["modify",{"_index":2095,"title":{},"body":{"license.html":{}}}],["module",{"_index":233,"title":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["modules",{"_index":235,"title":{"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["monastery",{"_index":1967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":408,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["motion",{"_index":600,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["name",{"_index":16,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HasName.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":663,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["needstown",{"_index":754,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["new",{"_index":279,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["newcard0",{"_index":1301,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newcard1",{"_index":1304,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newselectedids",{"_index":1292,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["next",{"_index":36,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["nextproductiondie",{"_index":1415,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["ngmodule",{"_index":248,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["ngrx/effects",{"_index":356,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":450,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":358,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":357,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["noduplicate",{"_index":755,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["non",{"_index":2178,"title":{},"body":{"todo.html":{}}}],["none",{"_index":602,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["noninfringement",{"_index":2125,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2109,"title":{},"body":{"license.html":{}}}],["now",{"_index":327,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["npm@8.13.2",{"_index":2064,"title":{},"body":{"index.html":{}}}],["null",{"_index":2179,"title":{},"body":{"todo.html":{}}}],["number",{"_index":260,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardBackComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["numberofcardsbelowfestival",{"_index":1342,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["numbers",{"_index":277,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["nx",{"_index":2058,"title":{},"body":{"index.html":{}}}],["nx/angular",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["nx@14.4.2",{"_index":2065,"title":{},"body":{"index.html":{}}}],["obj",{"_index":43,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["obj.interface",{"_index":46,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["obj.name",{"_index":1725,"title":{},"body":{"interfaces/HasName.html":{}}}],["obj.print",{"_index":546,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["observable",{"_index":110,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["observables",{"_index":434,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["obtaining",{"_index":2083,"title":{},"body":{"license.html":{}}}],["offset",{"_index":647,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["oftype",{"_index":336,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["oftype(agglomerationpilescardsactions.initagglomerationnewgame",{"_index":314,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["oftype(agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":318,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["oftype(discardpilecardsactions.addcardtodiscardpile",{"_index":826,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":834,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":838,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(domainscardsactions.countandstealunprotectedgoldandwool",{"_index":1032,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.createdomaincard",{"_index":1052,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.givelockedresources",{"_index":1058,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresources",{"_index":1093,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1102,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesfordie",{"_index":1118,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardsnewgame",{"_index":1126,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardssavedgame",{"_index":1130,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.lockresource",{"_index":1134,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.putcardinpivot",{"_index":1138,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.unlockresources",{"_index":1144,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.uselockedresources",{"_index":1148,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1325,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1329,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.reseteventspile",{"_index":1332,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(gameactions.throwdice",{"_index":1400,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throweventdie",{"_index":1405,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throwproductiondie",{"_index":1413,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(handscardsactions.addcardstohand",{"_index":1667,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardsnewgame",{"_index":1672,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardssavedgame",{"_index":1674,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardsnewgame",{"_index":1736,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardssavedgame",{"_index":1740,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(stockpilescardsactions.addcardstostockpilebottom",{"_index":1831,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1835,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1839,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.removecardsfromstockpiletop",{"_index":1843,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["on(agglomerationpilescardsactions.initagglomerationnewgame",{"_index":467,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":468,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(agglomerationpilescardsactions.unselectagglomerationpilecard",{"_index":471,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(discardpilecardsactions.adddiscardpilecard",{"_index":879,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":876,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":877,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.setdiscardpilecardserror",{"_index":881,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(domainscardsactions.adddomaincard",{"_index":1287,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.cleardomaincardselection",{"_index":1295,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardsnewgame",{"_index":1278,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardssavedgame",{"_index":1279,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardsfailure",{"_index":1282,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardssuccess",{"_index":1280,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.removedomaincard",{"_index":1311,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.setdomainscardserror",{"_index":1313,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.swapselectedcards",{"_index":1296,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.toggledomaincardselection",{"_index":1289,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomaincard",{"_index":1283,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomainscards",{"_index":1285,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1374,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1375,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.loadeventspilecardsfailure",{"_index":1377,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.removeselectedeventspilecard",{"_index":1382,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.selectfirsteventspilecard",{"_index":1380,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.seteventspilecardserror",{"_index":1378,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(gameactions.initnewgame",{"_index":1472,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setaction",{"_index":1478,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.seteventdie",{"_index":1475,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setnextproductiondie",{"_index":1474,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setphase",{"_index":1476,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setplayer",{"_index":1477,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setproductiondie",{"_index":1473,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(handscardsactions.addhandscards",{"_index":1713,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardsnewgame",{"_index":1707,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardssavedgame",{"_index":1708,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardsfailure",{"_index":1711,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardssuccess",{"_index":1709,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.removehandcard",{"_index":1718,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.selecthandcard",{"_index":1716,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardserror",{"_index":1715,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardsinitialized",{"_index":1712,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.unselecthandcard",{"_index":1717,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardsnewgame",{"_index":1771,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardssavedgame",{"_index":1772,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.loadlandspilecardsfailure",{"_index":1774,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.removelandspilecard",{"_index":1777,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.selectlandspilecard",{"_index":1776,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.setlandspilecardserror",{"_index":1775,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(stockpilescardsactions.addstockpilescards",{"_index":1900,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1894,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1895,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.loadstockpilescardsfailure",{"_index":1897,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.removestockpilescards",{"_index":1898,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.setstockpilescardserror",{"_index":1902,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["one",{"_index":407,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["onerror",{"_index":330,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["onthrow",{"_index":794,"title":{},"body":{"components/DiceComponent.html":{}}}],["optional",{"_index":103,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["order",{"_index":2154,"title":{},"body":{"todo.html":{}}}],["originalfn",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["otherwise",{"_index":2135,"title":{},"body":{"license.html":{}}}],["out",{"_index":246,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"modules/UiCardModule.html":{},"license.html":{},"overview.html":{},"todo.html":{}}}],["outline",{"_index":646,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["output",{"_index":570,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["outputs",{"_index":559,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["overview",{"_index":2143,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["package",{"_index":1910,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":2061,"title":{},"body":{"index.html":{}}}],["padding",{"_index":617,"title":{},"body":{"components/CardBackComponent.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":667,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["particular",{"_index":2123,"title":{},"body":{"license.html":{}}}],["password",{"_index":659,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["pasture",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pathfinder",{"_index":1947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":406,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["permission",{"_index":2077,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2103,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":360,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["person",{"_index":2082,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2104,"title":{},"body":{"license.html":{}}}],["phase",{"_index":154,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["phase.key",{"_index":1813,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases",{"_index":1780,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases'},{'name",{"_index":228,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["phases.component.css",{"_index":1781,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases.component.html",{"_index":1782,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases/phases.component",{"_index":1820,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phases/phases.module",{"_index":541,"title":{},"body":{"modules/BoardModule.html":{}}}],["phasescomponent",{"_index":227,"title":{"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"overview.html":{}}}],["phasesmodule",{"_index":533,"title":{"modules/PhasesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PhasesModule.html":{},"modules.html":{},"overview.html":{}}}],["pieces",{"_index":429,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["pile",{"_index":177,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"todo.html":{}}}],["pileid",{"_index":374,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["piles",{"_index":230,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["piles/piles.component",{"_index":1826,"title":{},"body":{"modules/PilesModule.html":{}}}],["piles/piles.module",{"_index":542,"title":{},"body":{"modules/BoardModule.html":{}}}],["pilescomponent",{"_index":229,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"overview.html":{}}}],["pilesmodule",{"_index":534,"title":{"modules/PilesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PilesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipe",{"_index":967,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["pipe(map((masterydomainid",{"_index":961,"title":{},"body":{"components/DomainComponent.html":{}}}],["pivot",{"_index":344,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["pivot.availableresources",{"_index":1001,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.cardid",{"_index":189,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.col",{"_index":184,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.domainid",{"_index":183,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.id",{"_index":351,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.lockedresources",{"_index":1002,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.pileid",{"_index":180,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.row",{"_index":185,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivotid",{"_index":936,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["pivots",{"_index":1043,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivots.map((pivot",{"_index":1046,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected.length",{"_index":1079,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected[0",{"_index":1081,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources",{"_index":1061,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.foreach((pivot",{"_index":1070,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.length",{"_index":1065,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.map((pivot",{"_index":1077,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources[0",{"_index":1067,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["player",{"_index":1428,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["player.key",{"_index":1812,"title":{},"body":{"components/PhasesComponent.html":{}}}],["plugin",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["point",{"_index":1163,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["points",{"_index":990,"title":{},"body":{"components/DomainComponent.html":{}}}],["portions",{"_index":2113,"title":{},"body":{"license.html":{}}}],["position",{"_index":610,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["prefers",{"_index":598,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["prettier",{"_index":1098,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["previous",{"_index":1410,"title":{},"body":{"injectables/GameEffects.html":{}}}],["prevsubject",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["primary",{"_index":383,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["print",{"_index":275,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{}}}],["private",{"_index":151,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["production",{"_index":814,"title":{},"body":{"components/DiceComponent.html":{},"todo.html":{}}}],["productiondie",{"_index":1429,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["project",{"_index":2056,"title":{},"body":{"index.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"properties.html":{}}}],["provided",{"_index":2114,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":1551,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["providers",{"_index":239,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["publish",{"_index":2097,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2124,"title":{},"body":{"license.html":{}}}],["put",{"_index":191,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile",{"_index":1491,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile(pileid",{"_index":1507,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile",{"_index":1492,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile(pileid",{"_index":1509,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putcardinpivot",{"_index":1021,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["putcardinslot",{"_index":1202,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putcardinslot(pivotid",{"_index":1232,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putland",{"_index":83,"title":{},"body":{"components/ActionsComponent.html":{}}}],["putlandspilecardinslot",{"_index":1493,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["quarrel",{"_index":1995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["radius",{"_index":584,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["randomdicevalue",{"_index":2040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":456,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["red",{"_index":1980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redgoldminesandpastures",{"_index":1039,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["redresourcecount",{"_index":1037,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["reduce",{"_index":601,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["reduced",{"_index":599,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["relative",{"_index":611,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["relocation",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["removeagglomerationpilecard",{"_index":400,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["removeagglomerationpilecard(id",{"_index":412,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["removecards",{"_index":1828,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["removecardsfromstockpiletop",{"_index":1876,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removecardsfromstockpiletop(pileid",{"_index":1879,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removedomaincard",{"_index":1203,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removedomaincard(pivotid",{"_index":1234,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removehandcard",{"_index":1683,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removehandcard(id",{"_index":1686,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removelandspilecard",{"_index":1751,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removelandspilecard(id",{"_index":1753,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removeselected",{"_index":1351,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["removeselectedeventspilecard",{"_index":1788,"title":{},"body":{"components/PhasesComponent.html":{}}}],["required",{"_index":464,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["reset",{"_index":245,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["reseteventspile",{"_index":1352,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["reseteventspileonfestival",{"_index":1485,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["resetpileandselectfirst",{"_index":1322,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["resource",{"_index":1136,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["resource_counts",{"_index":1151,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resource_values",{"_index":790,"title":{},"body":{"components/DiceComponent.html":{}}}],["resourcecount",{"_index":1049,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/typealiases.html":{}}}],["resourceincrement",{"_index":1157,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resources",{"_index":195,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["resourcetype",{"_index":271,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resourcetype.clay",{"_index":282,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.stone",{"_index":292,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wheat",{"_index":289,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wood",{"_index":280,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcetype.wool",{"_index":288,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcevalue",{"_index":803,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ressource",{"_index":615,"title":{},"body":{"components/CardBackComponent.html":{}}}],["ressources",{"_index":557,"title":{},"body":{"components/CardBackComponent.html":{}}}],["restriction",{"_index":2091,"title":{},"body":{"license.html":{}}}],["results",{"_index":47,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":44,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"todo.html":{}}}],["returns",{"_index":106,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":2094,"title":{},"body":{"license.html":{}}}],["rivalry",{"_index":1998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["road",{"_index":1953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roadcard.id",{"_index":390,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["roadentities",{"_index":385,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["root",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameRulesService.html":{}}}],["root'},{'name",{"_index":214,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["route",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["row",{"_index":1054,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["rowvalue",{"_index":1166,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["rowvalue.lower",{"_index":1607,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rowvalue.upper",{"_index":1608,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["ruleids",{"_index":17,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["rules.service.spec.ts",{"_index":2151,"title":{},"body":{"todo.html":{}}}],["rules.service.ts",{"_index":1480,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:102",{"_index":1506,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:120",{"_index":1505,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:142",{"_index":1503,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:168",{"_index":1500,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:198",{"_index":1512,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:207",{"_index":1514,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:285",{"_index":1515,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:322",{"_index":1511,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:357",{"_index":1510,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:378",{"_index":1508,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:41",{"_index":1530,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:426",{"_index":1513,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:43",{"_index":1527,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:45",{"_index":1548,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:49",{"_index":1524,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:56",{"_index":1544,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:63",{"_index":1520,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:70",{"_index":1529,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:75",{"_index":1538,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:81",{"_index":1533,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:86",{"_index":1541,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:89",{"_index":1497,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["run",{"_index":320,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["runtimechecks",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":146,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["same",{"_index":1409,"title":{},"body":{"injectables/GameEffects.html":{}}}],["sawmill",{"_index":1958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["select",{"_index":340,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getagglomerationpilescardsloaded",{"_index":426,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getagglomerationselected",{"_index":437,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getallagglomerationpilescards",{"_index":417,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecards",{"_index":856,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecardsreverse",{"_index":858,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsloaded",{"_index":860,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsselected",{"_index":862,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(domainscardsselectors.getalldomainscards",{"_index":1240,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsloaded",{"_index":1242,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsselected",{"_index":1063,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getlandcardpivotbyid(id",{"_index":1155,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["select(eventspilecardsselectors.getalleventspilecards",{"_index":1356,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsloaded",{"_index":1358,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsselected",{"_index":1360,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(gameselectors.getgamenextproductiondie",{"_index":1450,"title":{},"body":{"injectables/GameFacade.html":{}}}],["select(handscardsselectors.getallhandscards",{"_index":1689,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(handscardsselectors.gethandscardsselected",{"_index":1691,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(landspilecardsselectors.getalllandspilecards",{"_index":1755,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsloaded",{"_index":1756,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsselected",{"_index":1757,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(stockpilescardsselectors.getallstockpilescards",{"_index":1880,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsloaded",{"_index":1881,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsselected",{"_index":1882,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selected",{"_index":178,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["selectedagglomerationpilescards",{"_index":399,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectedchange",{"_index":560,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["selecteddiscardpilecards",{"_index":849,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["selecteddomainscards",{"_index":1189,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["selectedeventspilecards",{"_index":1350,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["selectedhandscards",{"_index":1681,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["selectedid",{"_index":452,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["selectedids",{"_index":1273,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["selectedland",{"_index":1082,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedland.type",{"_index":1084,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedlandspilecards",{"_index":1750,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectedpivot",{"_index":1080,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.availableresources",{"_index":1086,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.id",{"_index":1090,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedstockpilescards",{"_index":1874,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selectfirst",{"_index":305,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["selectfirstcardfromagglomerationpile",{"_index":401,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectfirstcardfromagglomerationpile(pileid",{"_index":414,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectfirstevent",{"_index":1486,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["selecthandcard",{"_index":1637,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selecthandcard(pivotid",{"_index":1647,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selection",{"_index":199,"title":{},"body":{"components/ActionsComponent.html":{}}}],["selectlandspilecard",{"_index":1752,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectlandspilecard(pivotid",{"_index":1754,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["sell",{"_index":2101,"title":{},"body":{"license.html":{}}}],["server",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":322,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["set",{"_index":462,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["setaction",{"_index":1430,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setaction(action",{"_index":1437,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setnextproductiondie",{"_index":795,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setnextproductiondie(value",{"_index":802,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setphase",{"_index":1431,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setphase(phase",{"_index":1440,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer",{"_index":1432,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer(player",{"_index":1442,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["shadow",{"_index":590,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["shall",{"_index":2110,"title":{},"body":{"license.html":{}}}],["ship",{"_index":777,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["ship.tradepoints",{"_index":779,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname",{"_index":760,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname.get(type",{"_index":774,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipnamekey",{"_index":761,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ships",{"_index":986,"title":{},"body":{"components/DomainComponent.html":{}}}],["shouldn't",{"_index":1145,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["shuffle",{"_index":1340,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["shuffled",{"_index":1343,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.map((cardid",{"_index":1347,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.splice",{"_index":1345,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["shuffledcards",{"_index":1864,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards.length",{"_index":1867,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].id",{"_index":1872,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].interface",{"_index":1871,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["sibling",{"_index":1997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["siblingrivalry",{"_index":1996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slice(0",{"_index":1576,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slot",{"_index":1596,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slots",{"_index":182,"title":{},"body":{"components/ActionsComponent.html":{}}}],["software",{"_index":2085,"title":{},"body":{"license.html":{}}}],["solid",{"_index":581,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["something",{"_index":1160,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["soothsayer",{"_index":1946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["started",{"_index":2055,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startnewgame",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":430,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["state.entities",{"_index":1308,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[0",{"_index":1298,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[1",{"_index":1300,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.ids[0",{"_index":1381,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedid",{"_index":1384,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedids",{"_index":1293,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.filter",{"_index":1294,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.find((selectedid",{"_index":1291,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state/agglomeration",{"_index":706,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/discard",{"_index":693,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/domains",{"_index":699,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/events",{"_index":703,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.effects",{"_index":709,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.facade",{"_index":710,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.reducer",{"_index":712,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/hands",{"_index":714,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/lands",{"_index":718,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/stock",{"_index":722,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["steal",{"_index":2155,"title":{},"body":{"todo.html":{}}}],["stock",{"_index":1859,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stock_piles_cards_feature_key",{"_index":1888,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilecard",{"_index":1584,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.cardid",{"_index":1579,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.cardtype",{"_index":1578,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.id",{"_index":1852,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.pileid",{"_index":1575,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpiles",{"_index":1863,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpiles[i",{"_index":1870,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescards",{"_index":1496,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescards.find",{"_index":1583,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilescards.push",{"_index":1869,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescardsactions",{"_index":1858,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.addcardstostockpilebottom",{"_index":1886,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.addstockpilescards",{"_index":1833,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardsfailure",{"_index":1841,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardssuccess",{"_index":1840,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.removecardsfromstockpiletop",{"_index":1885,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.removestockpilescards",{"_index":1854,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.setstockpilescardsinitialized",{"_index":1836,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter",{"_index":1890,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.addmany(stockpilescards",{"_index":1901,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.getinitialstate",{"_index":1892,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.removemany(ids",{"_index":1899,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.setall(stockpilescards",{"_index":1896,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardseffects",{"_index":721,"title":{"injectables/StockPilesCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsentity",{"_index":1851,"title":{"interfaces/StockPilesCardsEntity.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsfacade",{"_index":689,"title":{"injectables/StockPilesCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["stockpilescardsfeature",{"_index":1861,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardspartialstate",{"_index":1887,"title":{"interfaces/StockPilesCardsPartialState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsreducer",{"_index":1893,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsselectors",{"_index":1862,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsselectors.getstockpilecardentitybypivot",{"_index":1847,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsstate",{"_index":1889,"title":{"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsstore",{"_index":1829,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stone",{"_index":2020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stonequarry",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["store",{"_index":308,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["store/data",{"_index":359,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["storedevtoolsmodule",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":500,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature",{"_index":728,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature(fromgame.game_feature_key",{"_index":725,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forroot",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["storybook/core",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["strength",{"_index":994,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["strengthmasterydomainid",{"_index":1571,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["strengthpoints",{"_index":756,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["strictactionimmutability",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["strictstateimmutability",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":580,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["stylelint",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":53,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["styleurls",{"_index":62,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["subject",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/GameRulesService.html":{},"license.html":{}}}],["sublicense",{"_index":2099,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1612,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((card",{"_index":1587,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((cards",{"_index":1580,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["substantial",{"_index":2112,"title":{},"body":{"license.html":{}}}],["success",{"_index":328,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["sumresources",{"_index":1085,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["support",{"_index":2139,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2140,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":196,"title":{},"body":{"components/ActionsComponent.html":{}}}],["swapselectedcards",{"_index":1204,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["swapselecteddomainscards",{"_index":84,"title":{},"body":{"components/ActionsComponent.html":{}}}],["switchmap",{"_index":1401,"title":{},"body":{"injectables/GameEffects.html":{}}}],["switchmap((value",{"_index":1407,"title":{},"body":{"injectables/GameEffects.html":{}}}],["take",{"_index":363,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["take(1",{"_index":349,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["takeonedefinedpivotorthrow",{"_index":1025,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeonedefinedpivotorthrow(id",{"_index":1030,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeuntil",{"_index":1550,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["takeuntil(this.gameended",{"_index":1522,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["taormina",{"_index":60,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"index.html":{}}}],["taormina/data",{"_index":133,"title":{},"body":{"components/ActionsComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["taormina/feature",{"_index":135,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["taormina/shared",{"_index":144,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["taormina/ui",{"_index":1015,"title":{},"body":{"modules/DomainModule.html":{},"modules/PilesModule.html":{}}}],["tasks",{"_index":409,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["templateurl",{"_index":64,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["test",{"_index":2153,"title":{},"body":{"todo.html":{}}}],["thieves",{"_index":1487,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["thievesresourcecountthreshold",{"_index":1041,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.actions$.pipe",{"_index":313,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["this.agglomerationpilescards.initnewgame",{"_index":1561,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescards.removeagglomerationpilecard",{"_index":1599,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescards.selectedagglomerationpilescards",{"_index":157,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescardsstore.pipe",{"_index":339,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["this.auspiciousyear$.pipe",{"_index":1531,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.countandsteal$.subscribe",{"_index":1553,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.addcardtodiscardpile",{"_index":1627,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.initnewgame",{"_index":1565,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards",{"_index":959,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.alldomainscards$.pipe",{"_index":972,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.cleardomaincardselection",{"_index":173,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.domainscards.countandstealunprotectedgoldandwool",{"_index":1523,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.createavailabledomaincard",{"_index":1605,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcardsvictorypointsfordomain(domainid",{"_index":1566,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcelebrationpointsfordomain(domainid",{"_index":958,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxcol(domainid",{"_index":966,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxrow(domainid",{"_index":971,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmincol(domainid",{"_index":965,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainminrow(domainid",{"_index":970,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.strength",{"_index":1568,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.trade",{"_index":1567,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmerchantshipcountfordomain(domainid",{"_index":957,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.givelockedresources",{"_index":170,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.increaseresources(pivotid",{"_index":984,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.increaseresourcesforauspiciousyear",{"_index":1532,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.increaseresourcesfordie(value",{"_index":1537,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.initnewgame",{"_index":1559,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.lockresource(pivotid",{"_index":982,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.putcardinslot",{"_index":1601,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.removedomaincard(domaincard.id",{"_index":1623,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards",{"_index":1592,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards$.pipe",{"_index":158,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{}}}],["this.domainscards.swapselectedcards",{"_index":174,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.toggledomaincardselection(pivotid",{"_index":981,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.unlockresources(pivotid",{"_index":983,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.uselockedresources",{"_index":1591,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscardsstore.pipe",{"_index":1062,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.domainscardsstore.select",{"_index":1034,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.event$.pipe",{"_index":1542,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.initnewgame",{"_index":1564,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.removeselected",{"_index":1808,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.reseteventspile",{"_index":1540,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectedeventspilecards",{"_index":1807,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.selectedeventspilecards$.pipe",{"_index":1516,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectfirst",{"_index":1543,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.festival$.pipe",{"_index":1539,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.action",{"_index":1809,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.eventdie",{"_index":811,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.eventdie$.pipe",{"_index":1545,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.eventdie$.pipe(filter((die",{"_index":1525,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.initnewgame",{"_index":1558,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.nextproductiondie",{"_index":812,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.phase",{"_index":1802,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.phase$.pipe",{"_index":152,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{}}}],["this.game.phase$.pipe(take(1)).subscribe((phase",{"_index":1589,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.player",{"_index":1804,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.productiondie",{"_index":810,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.productiondie$.pipe",{"_index":1534,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(action.name",{"_index":1626,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(undefined",{"_index":1810,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setnextproductiondie(value",{"_index":813,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.setphase(phase",{"_index":1803,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setplayer(player",{"_index":1805,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.throweventdie",{"_index":1588,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.throwproductiondie",{"_index":1590,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gameended$.next",{"_index":1552,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gamerules.getvictorypointsfordomain(domainid",{"_index":964,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.gamerules.initnewgame",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gamerules.putlandspilecardinslot",{"_index":169,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.throwdice",{"_index":809,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.gamerules.useactioncard",{"_index":167,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputagglomerationpilecardinslot",{"_index":156,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputhandcardinslot",{"_index":163,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamestore.select(gameselectors.getgamenextproductiondie",{"_index":1414,"title":{},"body":{"injectables/GameEffects.html":{}}}],["this.getlandcardfrompivot(firstpivot",{"_index":1069,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(pivot",{"_index":1071,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(selectedpivot",{"_index":1083,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.handscards.addcardstohand(handid",{"_index":1582,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.allhandscards$.pipe",{"_index":1651,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.initnewgame",{"_index":1560,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.removehandcard(handcard.id",{"_index":1610,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards",{"_index":172,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards$.pipe",{"_index":164,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.handscards.selecthandcard(pivotid",{"_index":1656,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.unselecthandcard",{"_index":1618,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesforauspiciousyear$.subscribe",{"_index":1556,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesfordie$.subscribe",{"_index":1555,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.initnewgame",{"_index":1562,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.removelandspilecard(landspilecard.id",{"_index":1615,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.selectedlandspilecards",{"_index":171,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.reseteventspileonfestival$.subscribe",{"_index":1557,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.selectfirstevent$.subscribe",{"_index":1554,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.addcardstostockpilebottom(pileid",{"_index":1619,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.allstockpilescards",{"_index":1572,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.initnewgame",{"_index":1563,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.removecardsfromstockpiletop(pileid",{"_index":1581,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescardsstore.pipe",{"_index":1846,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["this.store.dispatch",{"_index":439,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.addcardtodiscardpile",{"_index":868,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":866,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.cleardomaincardselection",{"_index":1255,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.givelockedresources",{"_index":1253,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardsnewgame",{"_index":1245,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardssavedgame",{"_index":1246,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.lockresource",{"_index":1247,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.removedomaincard",{"_index":1260,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.swapselectedcards",{"_index":1259,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.unlockresources",{"_index":1248,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.uselockedresources",{"_index":1252,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1362,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1363,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.removeselectedeventspilecard",{"_index":1366,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.reseteventspile",{"_index":1364,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.selectfirsteventspilecard",{"_index":1365,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(gameactions.initnewgame",{"_index":1458,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setaction",{"_index":1465,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setnextproductiondie",{"_index":1461,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setphase",{"_index":1463,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setplayer",{"_index":1464,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwdice",{"_index":1459,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throweventdie",{"_index":1462,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwproductiondie",{"_index":1460,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(handscardsactions.addcardstohand",{"_index":1696,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardsnewgame",{"_index":1694,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardssavedgame",{"_index":1695,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.removehandcard",{"_index":1699,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.selecthandcard",{"_index":1697,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.unselecthandcard",{"_index":1698,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardsnewgame",{"_index":1760,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardssavedgame",{"_index":1761,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.removelandspilecard",{"_index":1763,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1883,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1884,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe",{"_index":416,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameaction",{"_index":1447,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameeventdie",{"_index":1448,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgamephase",{"_index":1452,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameplayer",{"_index":1454,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameproductiondie",{"_index":1456,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(handscardsselectors.gethandscardsloaded",{"_index":1690,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.select",{"_index":419,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxcol(domainid",{"_index":1262,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxrow(domainid",{"_index":1264,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmincol(domainid",{"_index":1261,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainminrow(domainid",{"_index":1263,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.takeonedefinedpivotorthrow(action.id).pipe",{"_index":1094,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.thieves$.pipe",{"_index":1521,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.updatesavailableresources",{"_index":1109,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increaseone",{"_index":1123,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increasetwo",{"_index":1124,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["through",{"_index":435,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["throw",{"_index":345,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["throwdice",{"_index":1395,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{}}}],["throwdisabled",{"_index":796,"title":{},"body":{"components/DiceComponent.html":{}}}],["throwevent",{"_index":1396,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throweventdie",{"_index":1433,"title":{},"body":{"injectables/GameFacade.html":{}}}],["thrown",{"_index":2160,"title":{},"body":{"todo.html":{}}}],["throwproduction",{"_index":1397,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throwproductiondie",{"_index":1434,"title":{},"body":{"injectables/GameFacade.html":{}}}],["todo",{"_index":1848,"title":{"todo.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["todos",{"_index":2149,"title":{},"body":{"todo.html":{}}}],["toggledomaincardselection",{"_index":904,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toggledomaincardselection(pivotid",{"_index":941,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toll",{"_index":1965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tollbridge",{"_index":1964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top",{"_index":643,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["tort",{"_index":2134,"title":{},"body":{"license.html":{}}}],["town",{"_index":1955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["townentities",{"_index":392,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["trade",{"_index":992,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["trademasterydomainid",{"_index":1570,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["tradepoints",{"_index":757,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["traderoute",{"_index":1949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transform",{"_index":587,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["transition",{"_index":586,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["translate(20px",{"_index":591,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["travel",{"_index":1994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tree",{"_index":55,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["true",{"_index":470,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["tslib",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2255,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeiconname",{"_index":558,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["typeof",{"_index":32,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/EventCard.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["types",{"_index":1075,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["types/action",{"_index":28,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["types/agglomeration",{"_index":269,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["types/development",{"_index":763,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["types/dice",{"_index":1730,"title":{},"body":{"interfaces/LandCard.html":{}}}],["types/domain",{"_index":270,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["types/event",{"_index":1317,"title":{},"body":{"interfaces/EventCard.html":{}}}],["types/resources",{"_index":272,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{}}}],["typescript",{"_index":38,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["uicardmodule",{"_index":1012,"title":{"modules/UiCardModule.html":{}},"body":{"modules/DomainModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["unavailable",{"_index":1135,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["undefined",{"_index":45,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["unlock",{"_index":1004,"title":{},"body":{"components/DomainComponent.html":{}}}],["unlockresources",{"_index":905,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unlockresources(pivotid",{"_index":943,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unselect",{"_index":999,"title":{},"body":{"components/DomainComponent.html":{}}}],["unselectedstate",{"_index":1383,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["unselecthandcard",{"_index":1684,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["unsetaction",{"_index":1789,"title":{},"body":{"components/PhasesComponent.html":{}}}],["unused",{"_index":665,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["up",{"_index":1985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update",{"_index":1097,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updateavailable",{"_index":1089,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updates",{"_index":1045,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updatesavailableresources",{"_index":1022,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesfour",{"_index":1115,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updateslocked",{"_index":1076,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesone",{"_index":1108,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesthree",{"_index":1113,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatestwo",{"_index":1111,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updtr@4.0.0node",{"_index":2066,"title":{},"body":{"index.html":{}}}],["upper",{"_index":1986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["use",{"_index":190,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["useactioncard",{"_index":85,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["useactioncarddisabled",{"_index":86,"title":{},"body":{"components/ActionsComponent.html":{}}}],["uselockedresources",{"_index":1023,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["useresourcestoputagglomerationpilecardinslot",{"_index":1494,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["useresourcestoputhandcardinslot",{"_index":1495,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["using",{"_index":431,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"index.html":{}}}],["utils",{"_index":571,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"injectables/GameEffects.html":{}}}],["utils/src/lib/assets.ts",{"_index":2047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/dice.ts",{"_index":2045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/domain.ts",{"_index":2051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uuid",{"_index":382,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":381,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["v16.16.0",{"_index":2068,"title":{},"body":{"index.html":{}}}],["v4",{"_index":380,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["value",{"_index":311,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":210,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["vars",{"_index":666,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["version",{"_index":2067,"title":{},"body":{"index.html":{},"properties.html":{}}}],["victory",{"_index":995,"title":{},"body":{"components/DomainComponent.html":{}}}],["victorypoints",{"_index":257,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["warehouse",{"_index":1962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":2120,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2115,"title":{},"body":{"license.html":{}}}],["warrior",{"_index":781,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["warrior.celebrationpoints",{"_index":784,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warrior.strengthpoints",{"_index":783,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warriorname",{"_index":762,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["weaving",{"_index":1961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["went",{"_index":1161,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["wheat",{"_index":2019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":2132,"title":{},"body":{"license.html":{}}}],["white",{"_index":619,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["width",{"_index":574,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["withlatestfrom",{"_index":1033,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["without",{"_index":2090,"title":{},"body":{"license.html":{}}}],["wood",{"_index":2017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wool",{"_index":2021,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wrong",{"_index":1162,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["year",{"_index":1989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":2042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":644,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["zone.js",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":244,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCard.html":{"url":"interfaces/ActionCard.html","title":"interface - ActionCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/action.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Action Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         ActionName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { ActionName } from '../types/action';\n\nexport const ACTION_CARD_INTERFACE_NAME = 'ActionCard';\n\n/**\n * Interface for the Action Cards\n */\nexport interface ActionCard extends HasId, HasName, HasRules {\n  interface: typeof ACTION_CARD_INTERFACE_NAME;\n  id: string;\n  name: ActionName;\n  ruleIds: string[];\n}\n\nexport const createActionCard = (\n  id: string,\n  name: ActionName,\n  ruleIds: string[]\n): ActionCard => ({ interface: ACTION_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isActionCard(obj: any): obj is ActionCard {\n  return obj !== undefined && obj.interface === ACTION_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionsComponent.html":{"url":"components/ActionsComponent.html","title":"component - ActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/actions/actions/actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-actions\n            \n\n\n\n            \n                styleUrls\n                ./actions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./actions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyAgglomeration\n                            \n                            \n                                buyDevelopment\n                            \n                            \n                                buyDisabled\n                            \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                getDomainSelectedAgglomerationSlots\n                            \n                            \n                                getDomainSelectedDevelopmentCards\n                            \n                            \n                                getDomainSelectedLandCards\n                            \n                            \n                                getHandSelectedDevelopmentCard\n                            \n                            \n                                getPileSelectedLandCard\n                            \n                            \n                                getSelectedActionCard\n                            \n                            \n                                getSelectedAgglomerationPileCard\n                            \n                            \n                                getSelectedAvailableAgglomerationSlots\n                            \n                            \n                                getSelectedAvailableDevelopmentSlots\n                            \n                            \n                                getSelectedAvailableLandSlots\n                            \n                            \n                                getSelectedHandCard\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                putLand\n                            \n                            \n                                swapSelectedDomainsCards\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useActionCardDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, agglomerationPilesCards: AgglomerationPilesCardsFacade, landsPileCards: LandsPileCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCards\n                                                  \n                                                        \n                                                                        AgglomerationPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyAgglomeration\n                        \n                    \n                \n            \n            \n                \nbuyAgglomeration()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDevelopment\n                        \n                    \n                \n            \n            \n                \nbuyDevelopment()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDisabled\n                        \n                    \n                \n            \n            \n                \nbuyDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedDevelopmentCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedDevelopmentCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedLandCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedLandCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandSelectedDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetHandSelectedDevelopmentCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPileSelectedLandCard\n                        \n                    \n                \n            \n            \n                \ngetPileSelectedLandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedActionCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAgglomerationPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedAgglomerationPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableDevelopmentSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableDevelopmentSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableLandSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableLandSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedHandCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLand\n                        \n                    \n                \n            \n            \n                \nputLand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedDomainsCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedDomainsCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCardDisabled\n                        \n                    \n                \n            \n            \n                \nuseActionCardDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n  AgglomerationPilesCardsEntity,\n  AgglomerationPilesCardsFacade,\n  GameFacade,\n  HandsCardsEntity,\n  HandsCardsFacade,\n  LandsPileCardsEntity,\n  LandsPileCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-actions',\n  templateUrl: './actions.component.html',\n  styleUrls: ['./actions.component.css'],\n})\nexport class ActionsComponent {\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private agglomerationPilesCards: AgglomerationPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  buyDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => phase !== GamePhase.LoopActions)\n    );\n  }\n\n  buyAgglomeration(): void {\n    this.gameRules.useResourcesToPutAgglomerationPileCardInSlot();\n  }\n\n  getSelectedAgglomerationPileCard(): Observable {\n    return this.agglomerationPilesCards.selectedAgglomerationPilesCards$;\n  }\n\n  getSelectedAvailableAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_AGGLOMERATION_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === AGGLOMERATION_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  buyDevelopment(): void {\n    this.gameRules.useResourcesToPutHandCardInSlot();\n  }\n\n  getHandSelectedDevelopmentCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter(\n        (handCard) => handCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n      )\n    );\n  }\n\n  getSelectedAvailableDevelopmentSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_DEVELOPMENT_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedDevelopmentCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  useActionCardDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => {\n        return phase !== GamePhase.LoopActions;\n      })\n    );\n  }\n\n  useActionCard(): void {\n    this.gameRules.useActionCard();\n  }\n\n  getSelectedActionCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter((handCard) => handCard?.cardType === ACTION_CARD_INTERFACE_NAME)\n    );\n  }\n\n  putLand(): void {\n    this.gameRules.putLandsPileCardInSlot();\n  }\n\n  giveLockedResources(): void {\n    this.domainsCards.giveLockedResources();\n  }\n\n  getPileSelectedLandCard(): Observable {\n    return this.landsPileCards.selectedLandsPileCards$;\n  }\n\n  getSelectedHandCard(): Observable {\n    return this.handsCards.selectedHandsCards$;\n  }\n\n  getSelectedAvailableLandSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_LAND_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedLandCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === LAND_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.domainsCards.clearDomainCardSelection();\n  }\n\n  swapSelectedDomainsCards(): void {\n    this.domainsCards.swapSelectedCards();\n  }\n}\n\n    \n\n    \n        \n  \n    buy agglomeration\n  \n  \n    Pile Selected Agglomeration Card:\n    \n      {{ pivot.pileId }}\n    \n  \n  \n    Selected Available Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    buy development\n  \n  \n    Hand Selected Development Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Development Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Development Cards:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    Use action card\n  \n  \n    Selected Action Card:\n    \n      {{ pivot.cardId }}\n    \n  \n\n\n\n  put land\n  \n    Give locked resources\n  \n  \n    Pile Selected Land Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    swap selected domains cards\n  \n    clear domain selection\n  \n\n\n    \n\n    \n                \n                    ./actions.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      buy agglomeration        Pile Selected Agglomeration Card:          {{ pivot.pileId }}            Selected Available Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            buy development        Hand Selected Development Card:          {{ pivot.cardId }}            Selected Available Development Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Development Cards:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Use action card        Selected Action Card:          {{ pivot.cardId }}        put land      Give locked resources        Pile Selected Land Card:          {{ pivot.cardId }}            Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            swap selected domains cards      clear domain selection  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/actions/actions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionsComponent } from './actions/actions.component';\n\n@NgModule({\n  declarations: [ActionsComponent],\n  imports: [CommonModule],\n  exports: [ActionsComponent],\n})\nexport class ActionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationCard.html":{"url":"interfaces/AgglomerationCard.html","title":"interface - AgglomerationCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/agglomeration.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Agglomeration Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         AgglomerationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport { AgglomerationType } from '../types/agglomeration';\nimport { DomainColor } from '../types/domain';\nimport { ResourceType } from '../types/resources';\n\nexport const AGGLOMERATION_CARD_INTERFACE_NAME = 'AgglomerationCard';\n\nexport const AVAILABLE_AGGLOMERATION_SLOT = 'AvailableAgglomerationSlot';\n\n/**\n * Interface for the Agglomeration Cards\n */\nexport interface AgglomerationCard\n  extends HasId,\n    HasCost,\n    HasVictoryPoints,\n    HasColor,\n    CanPrint {\n  interface: typeof AGGLOMERATION_CARD_INTERFACE_NAME;\n  id: string;\n  cost: Map;\n  type: AgglomerationType;\n  victoryPoints?: number;\n  color?: DomainColor;\n}\n\nexport const createAgglomerationCard = (\n  id: string,\n  cost: Map,\n  type: AgglomerationType,\n  victoryPoints?: number,\n  color?: DomainColor\n): AgglomerationCard => ({\n  interface: AGGLOMERATION_CARD_INTERFACE_NAME,\n  id,\n  cost,\n  type,\n  victoryPoints,\n  color,\n  print: (): string => `type: ${type}`,\n});\n\n/* eslint-disable no-magic-numbers */\nexport function createRoad(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 2],\n    ]),\n    AgglomerationType.Road,\n    0,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\nexport function createHamlet(\n  id: string,\n  color?: DomainColor\n): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 1],\n      [ResourceType.Wool, 1],\n      [ResourceType.Wheat, 1],\n    ]),\n    AgglomerationType.Hamlet,\n    1,\n    color\n  );\n}\n\n/* eslint-disable no-magic-numbers */\nexport function createTown(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wheat, 2],\n      [ResourceType.Stone, 3],\n    ]),\n    AgglomerationType.Town,\n    2,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isAgglomerationCard(obj: any): obj is AgglomerationCard {\n  return (\n    obj !== undefined && obj.interface === AGGLOMERATION_CARD_INTERFACE_NAME\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgglomerationPilesCardsEffects.html":{"url":"injectables/AgglomerationPilesCardsEffects.html","title":"injectable - AgglomerationPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgglomerationPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                selectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, agglomerationPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationNewGame),\n      map(() =>\n        AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized({\n          agglomerationPilesCards: createInitialAgglomerationPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess(\n            {\n              agglomerationPilesCards: [],\n            }\n          );\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure(\n            { error }\n          );\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile\n      ),\n      concatMap((action) =>\n        this.agglomerationPilesCardsStore.pipe(\n          select(\n            AgglomerationPilesCardsSelectors.getFirstCardPivotForPile(\n              action.pileId\n            )\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(\n                `Can't get first card in empty agglomeration pile.`\n              );\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            AgglomerationPilesCardsActions.selectAgglomerationPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              AgglomerationPilesCardsActions.setAgglomerationPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@ngrx/router-store/data-persistence';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, take } from 'rxjs/operators';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { createInitialAgglomerationPilesCards } from './agglomeration-piles-cards.models';\nimport * as AgglomerationPilesCardsFeature from './agglomeration-piles-cards.reducer';\nimport * as AgglomerationPilesCardsSelectors from './agglomeration-piles-cards.selectors';\n\n@Injectable()\nexport class AgglomerationPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationNewGame),\n      map(() =>\n        AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized({\n          agglomerationPilesCards: createInitialAgglomerationPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess(\n            {\n              agglomerationPilesCards: [],\n            }\n          );\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure(\n            { error }\n          );\n        },\n      })\n    )\n  );\n\n  selectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile\n      ),\n      concatMap((action) =>\n        this.agglomerationPilesCardsStore.pipe(\n          select(\n            AgglomerationPilesCardsSelectors.getFirstCardPivotForPile(\n              action.pileId\n            )\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(\n                `Can't get first card in empty agglomeration pile.`\n              );\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            AgglomerationPilesCardsActions.selectAgglomerationPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              AgglomerationPilesCardsActions.setAgglomerationPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private agglomerationPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsEntity.html":{"url":"interfaces/AgglomerationPilesCardsEntity.html","title":"interface - AgglomerationPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'AgglomerationPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  agglomerationCards,\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_ROAD,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\nimport { AgglomerationType } from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'AgglomerationPilesCards' data\n */\nexport interface AgglomerationPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string;\n  cardId: string;\n}\n\nexport const createAgglomerationPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardId: string\n): AgglomerationPilesCardsEntity => ({\n  id,\n  pileId,\n  cardId,\n});\n\nexport const createInitialAgglomerationPilesCards =\n  (): AgglomerationPilesCardsEntity[] => {\n    const roadEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Road &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_ROAD,\n          roadCard.id\n        )\n      );\n\n    const hamletEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Hamlet &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_HAMLET,\n          roadCard.id\n        )\n      );\n\n    const townEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Town &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_TOWN,\n          roadCard.id\n        )\n      );\n\n    return [...roadEntities, ...hamletEntities, ...townEntities];\n  };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgglomerationPilesCardsFacade.html":{"url":"injectables/AgglomerationPilesCardsFacade.html","title":"injectable - AgglomerationPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgglomerationPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allAgglomerationPilesCards$\n                            \n                            \n                                allHamletPivots$\n                            \n                            \n                                allRoadPivots$\n                            \n                            \n                                allTownPivots$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedAgglomerationPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeAgglomerationPileCard\n                            \n                            \n                                selectFirstCardFromAgglomerationPile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:48\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAgglomerationPileCard\n                        \n                    \n                \n            \n            \n                \nremoveAgglomerationPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstCardFromAgglomerationPile\n                        \n                    \n                \n            \n            \n                \nselectFirstCardFromAgglomerationPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allAgglomerationPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAllAgglomerationPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allHamletPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(\n      ID_AGGLOMERATION_HAMLET\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allRoadPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_ROAD)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTownPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_TOWN)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:19\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAgglomerationPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_ROAD,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport * as AgglomerationPilesCardsFeature from './agglomeration-piles-cards.reducer';\nimport * as AgglomerationPilesCardsSelectors from './agglomeration-piles-cards.selectors';\n\n@Injectable()\nexport class AgglomerationPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationPilesCardsLoaded)\n  );\n  allAgglomerationPilesCards$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAllAgglomerationPilesCards)\n  );\n  selectedAgglomerationPilesCards$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationSelected)\n  );\n  allRoadPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_ROAD)\n  );\n  allHamletPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(\n      ID_AGGLOMERATION_HAMLET\n    )\n  );\n  allTownPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_TOWN)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.initAgglomerationNewGame()\n    );\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.initAgglomerationSavedGame()\n    );\n  }\n\n  removeAgglomerationPileCard(id: string): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.removeAgglomerationPileCard({ id })\n    );\n  }\n\n  selectFirstCardFromAgglomerationPile(pileId: string): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile({\n        pileId,\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsPartialState.html":{"url":"interfaces/AgglomerationPilesCardsPartialState.html","title":"interface - AgglomerationPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AGGLOMERATION_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AGGLOMERATION_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AGGLOMERATION_PILES_CARDS_FEATURE_KEY:         AgglomerationPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { AgglomerationPilesCardsEntity } from './agglomeration-piles-cards.models';\n\nexport const AGGLOMERATION_PILES_CARDS_FEATURE_KEY = 'agglomerationPilesCards';\n\nexport interface AgglomerationPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface AgglomerationPilesCardsPartialState {\n  readonly [AGGLOMERATION_PILES_CARDS_FEATURE_KEY]: AgglomerationPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const agglomerationPilesCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialAgglomerationPilesCardsState: AgglomerationPilesCardsState =\n  agglomerationPilesCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const agglomerationPilesCardsReducer = createReducer(\n  initialAgglomerationPilesCardsState,\n  on(AgglomerationPilesCardsActions.initAgglomerationNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(AgglomerationPilesCardsActions.initAgglomerationSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.selectAgglomerationPileCard,\n    (state, { id }) => ({\n      ...state,\n      selectedId: id,\n    })\n  ),\n  on(AgglomerationPilesCardsActions.unselectAgglomerationPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.removeAgglomerationPileCard,\n    (state, { id }) => agglomerationPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsError,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsState.html":{"url":"interfaces/AgglomerationPilesCardsState.html","title":"interface - AgglomerationPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { AgglomerationPilesCardsEntity } from './agglomeration-piles-cards.models';\n\nexport const AGGLOMERATION_PILES_CARDS_FEATURE_KEY = 'agglomerationPilesCards';\n\nexport interface AgglomerationPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface AgglomerationPilesCardsPartialState {\n  readonly [AGGLOMERATION_PILES_CARDS_FEATURE_KEY]: AgglomerationPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const agglomerationPilesCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialAgglomerationPilesCardsState: AgglomerationPilesCardsState =\n  agglomerationPilesCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const agglomerationPilesCardsReducer = createReducer(\n  initialAgglomerationPilesCardsState,\n  on(AgglomerationPilesCardsActions.initAgglomerationNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(AgglomerationPilesCardsActions.initAgglomerationSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.selectAgglomerationPileCard,\n    (state, { id }) => ({\n      ...state,\n      selectedId: id,\n    })\n  ),\n  on(AgglomerationPilesCardsActions.unselectAgglomerationPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.removeAgglomerationPileCard,\n    (state, { id }) => agglomerationPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsError,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/taormina-duel/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startNewGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in apps/taormina-duel/src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startNewGame\n                        \n                    \n                \n            \n            \n                \nstartNewGame()\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel/src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameRulesService } from '@taormina/feature-engine';\n\n@Component({\n  selector: 'taormina-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(private gameRules: GameRulesService) {}\n\n  startNewGame(): void {\n    this.gameRules.initNewGame();\n  }\n}\n\n    \n\n    \n        New Game !\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                /* stylelint-disable no-empty-source */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New Game !'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/taormina-duel/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            DataAccessGameModule\n                        \n                        \n                            FeatureGameModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { DataAccessGameModule } from '@taormina/data-access-game';\nimport { FeatureGameModule } from '@taormina/feature-game';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(\n      {},\n      {\n        metaReducers: !environment.production ? [] : [],\n        runtimeChecks: {\n          strictActionImmutability: true,\n          strictStateImmutability: true,\n        },\n      }\n    ),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    DataAccessGameModule,\n    FeatureGameModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/board/board/board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-board\n            \n\n\n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ID_DOMAIN_BLUE\n                            \n                            \n                                ID_DOMAIN_RED\n                            \n                            \n                                ID_HAND_BLUE\n                            \n                            \n                                ID_HAND_RED\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_HAND_BLUE,\n  ID_HAND_RED,\n} from '@taormina/shared-constants';\n\n@Component({\n  selector: 'taormina-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent {\n  ID_HAND_RED = ID_HAND_RED;\n  ID_HAND_BLUE = ID_HAND_BLUE;\n  ID_DOMAIN_RED = ID_DOMAIN_RED;\n  ID_DOMAIN_BLUE = ID_DOMAIN_BLUE;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_BoardModule_declarations\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/board/board.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DiceModule\n                        \n                        \n                            DomainModule\n                        \n                        \n                            HandModule\n                        \n                        \n                            PhasesModule\n                        \n                        \n                            PilesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardComponent } from './board/board.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DiceModule } from '../dice/dice.module';\nimport { DomainModule } from '../domain/domain.module';\nimport { HandModule } from '../hand/hand.module';\nimport { PhasesModule } from '../phases/phases.module';\nimport { PilesModule } from '../piles/piles.module';\n\n@NgModule({\n  declarations: [BoardComponent],\n  imports: [\n    CommonModule,\n    ActionsModule,\n    DiceModule,\n    DomainModule,\n    HandModule,\n    PhasesModule,\n    PilesModule,\n  ],\n  exports: [BoardComponent],\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanPrint.html":{"url":"interfaces/CanPrint.html","title":"interface - CanPrint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CanPrint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/print.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        print\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        print\n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n            \n                \n                    Defined in libs/shared-models/src/lib/interfaces/print.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface CanPrint {\n  print(): string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isCanPrint(obj: any): obj is CanPrint {\n  return typeof obj.print === 'function';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardBackComponent.html":{"url":"components/CardBackComponent.html","title":"component - CardBackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardBackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card-back/card-back/card-back.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card-back\n            \n\n\n\n            \n                styleUrls\n                ./card-back.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card-back.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Array\n                            \n                            \n                                getImgSrc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ressources\n                            \n                            \n                                selected\n                            \n                            \n                                typeIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ressources\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Array\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Array\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getImgSrc\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { getImgSrc } from '@taormina/shared-utils';\n\n@Component({\n  selector: 'taormina-card-back',\n  templateUrl: './card-back.component.html',\n  styleUrls: ['./card-back.component.css'],\n})\nexport class CardBackComponent {\n  @Input() typeIconName!: string;\n  @Input() ressources?: { iconName: string; count: number }[];\n  @Input() selected?: boolean;\n  @Output() selectedChange = new EventEmitter();\n\n  Array = Array;\n  getImgSrc = getImgSrc;\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./card-back.component.css\n                \n                .card-back {\n  width: 100%;\n  height: 100%;\n  background-color: gray;\n  border-style: solid;\n  border-color: black;\n  border-width: 1px;\n  border-radius: 5%;\n  transition: transform 450ms, box-shadow 450ms;\n}\n\n.selected {\n  transform: translate(20px, -20px);\n  box-shadow: 1em 1em 1em lightgray;\n  transition: transform 125ms, box-shadow 125ms;\n  will-change: transform;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .card {\n    transition: none;\n  }\n}\n\n.type {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.type-icon {\n  width: 50%;\n  height: 50%;\n}\n\n.ressources {\n  position: relative;\n  bottom: 4em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.3em;\n}\n\n.ressource-icon {\n  width: 15%;\n  height: 15%;\n  padding: 2px;\n  background-color: white;\n  border-style: solid;\n  border-color: black;\n  border-width: 1px;\n  border-radius: 20%;\n  box-shadow: inset -0.1em -0.1em 0.5em lightgray;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardBackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardBackModule.html":{"url":"modules/CardBackModule.html","title":"module - CardBackModule","body":"\n                   \n\n\n\n\n    Modules\n    CardBackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardBackModule\n\n\n\ncluster_CardBackModule_declarations\n\n\n\ncluster_CardBackModule_exports\n\n\n\n\nCardBackComponent\n\nCardBackComponent\n\n\n\nCardBackModule\n\nCardBackModule\n\nCardBackModule -->\n\nCardBackComponent->CardBackModule\n\n\n\n\n\nCardBackComponent \n\nCardBackComponent \n\nCardBackComponent  -->\n\nCardBackModule->CardBackComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/card-back/card-back.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardBackComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardBackComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardBackComponent } from './card-back/card-back.component';\n\n@NgModule({\n  declarations: [CardBackComponent],\n  imports: [CommonModule],\n  exports: [CardBackComponent],\n})\nexport class CardBackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardFrontComponent.html":{"url":"components/CardFrontComponent.html","title":"component - CardFrontComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardFrontComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card-front/card-front/card-front.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card-front\n            \n\n\n\n            \n                styleUrls\n                ./card-front.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card-front.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getImgSrc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dieIconName\n                            \n                            \n                                selected\n                            \n                            \n                                typeIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dieIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getImgSrc\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { getImgSrc } from '@taormina/shared-utils';\n\n@Component({\n  selector: 'taormina-card-front',\n  templateUrl: './card-front.component.html',\n  styleUrls: ['./card-front.component.css'],\n})\nexport class CardFrontComponent {\n  @Input() typeIconName!: string;\n  @Input() dieIconName?: string;\n  @Input() selected?: boolean;\n  @Output() selectedChange = new EventEmitter();\n\n  getImgSrc = getImgSrc;\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card-front.component.css\n                \n                .card-front {\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  border-style: solid;\n  border-color: black;\n  border-width: 1px;\n  border-radius: 5%;\n  transition: transform 450ms, box-shadow 450ms;\n}\n\n.selected {\n  transform: translate(20px, -20px);\n  box-shadow: 1em 1em 1em lightgray;\n  transition: transform 125ms, box-shadow 125ms;\n  will-change: transform;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .card {\n    transition: none;\n  }\n}\n\n.type {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.type-icon {\n  width: 90%;\n  height: 90%;\n}\n\n.die {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  top: -100%;\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.die-icon {\n  width: 30%;\n  height: 30%;\n  border-radius: 20%;\n  outline: 2px solid black;\n  outline-offset: -2px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardFrontComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardFrontModule.html":{"url":"modules/CardFrontModule.html","title":"module - CardFrontModule","body":"\n                   \n\n\n\n\n    Modules\n    CardFrontModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardFrontModule\n\n\n\ncluster_CardFrontModule_exports\n\n\n\ncluster_CardFrontModule_declarations\n\n\n\n\nCardFrontComponent\n\nCardFrontComponent\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nCardFrontModule -->\n\nCardFrontComponent->CardFrontModule\n\n\n\n\n\nCardFrontComponent \n\nCardFrontComponent \n\nCardFrontComponent  -->\n\nCardFrontModule->CardFrontComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/card-front/card-front.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardFrontComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardFrontComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardFrontComponent } from './card-front/card-front.component';\n\n@NgModule({\n  declarations: [CardFrontComponent],\n  imports: [CommonModule],\n  exports: [CardFrontComponent],\n})\nexport class CardFrontModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/taormina-duel-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable-1.html":{"url":"interfaces/Chainable-1.html","title":"interface - Chainable-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ui-card-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ui-card-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataAccessGameModule.html":{"url":"modules/DataAccessGameModule.html","title":"module - DataAccessGameModule","body":"\n                   \n\n\n\n\n    Modules\n    DataAccessGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\n\nAgglomerationPilesCardsFacade\n\nAgglomerationPilesCardsFacade\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nDataAccessGameModule -->\n\nAgglomerationPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/data-access-game/src/lib/data-access-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgglomerationPilesCardsFacade\n                        \n                        \n                            DiscardPileCardsFacade\n                        \n                        \n                            DomainsCardsFacade\n                        \n                        \n                            EventsPileCardsFacade\n                        \n                        \n                            GameFacade\n                        \n                        \n                            HandsCardsFacade\n                        \n                        \n                            LandsPileCardsFacade\n                        \n                        \n                            StockPilesCardsFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { DiscardPileCardsEffects } from './+state/discard-pile-cards/discard-pile-cards.effects';\nimport { DiscardPileCardsFacade } from './+state/discard-pile-cards/discard-pile-cards.facade';\nimport * as fromDiscardPileCards from './+state/discard-pile-cards/discard-pile-cards.reducer';\nimport { DomainsCardsEffects } from './+state/domains-cards/domains-cards.effects';\nimport { DomainsCardsFacade } from './+state/domains-cards/domains-cards.facade';\nimport * as fromDomainsCards from './+state/domains-cards/domains-cards.reducer';\nimport { EventsPileCardsEffects } from './+state/events-pile-cards/events-pile-cards.effects';\nimport { EventsPileCardsFacade } from './+state/events-pile-cards/events-pile-cards.facade';\nimport * as fromEventsPileCards from './+state/events-pile-cards/events-pile-cards.reducer';\nimport { AgglomerationPilesCardsEffects } from './+state/agglomeration-piles-cards/agglomeration-piles-cards.effects';\nimport { AgglomerationPilesCardsFacade } from './+state/agglomeration-piles-cards/agglomeration-piles-cards.facade';\nimport * as fromAgglomerationPilesCards from './+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer';\nimport { GameEffects } from './+state/game/game.effects';\nimport { GameFacade } from './+state/game/game.facade';\nimport * as fromGame from './+state/game/game.reducer';\nimport { HandsCardsEffects } from './+state/hands-cards/hands-cards.effects';\nimport { HandsCardsFacade } from './+state/hands-cards/hands-cards.facade';\nimport * as fromHandsCards from './+state/hands-cards/hands-cards.reducer';\nimport { LandsPileCardsEffects } from './+state/lands-pile-cards/lands-pile-cards.effects';\nimport { LandsPileCardsFacade } from './+state/lands-pile-cards/lands-pile-cards.facade';\nimport * as fromLandsPileCards from './+state/lands-pile-cards/lands-pile-cards.reducer';\nimport { StockPilesCardsEffects } from './+state/stock-piles-cards/stock-piles-cards.effects';\nimport { StockPilesCardsFacade } from './+state/stock-piles-cards/stock-piles-cards.facade';\nimport * as fromStockPilesCards from './+state/stock-piles-cards/stock-piles-cards.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromGame.GAME_FEATURE_KEY, fromGame.gameReducer),\n    EffectsModule.forFeature([GameEffects]),\n    StoreModule.forFeature(\n      fromDomainsCards.DOMAINS_CARDS_FEATURE_KEY,\n      fromDomainsCards.domainsCardsReducer\n    ),\n    EffectsModule.forFeature([DomainsCardsEffects]),\n    StoreModule.forFeature(\n      fromHandsCards.HANDS_CARDS_FEATURE_KEY,\n      fromHandsCards.handsCardsReducer\n    ),\n    EffectsModule.forFeature([HandsCardsEffects]),\n    StoreModule.forFeature(\n      fromAgglomerationPilesCards.AGGLOMERATION_PILES_CARDS_FEATURE_KEY,\n      fromAgglomerationPilesCards.agglomerationPilesCardsReducer\n    ),\n    EffectsModule.forFeature([EventsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromLandsPileCards.LANDS_PILE_CARDS_FEATURE_KEY,\n      fromLandsPileCards.landsPileCardsReducer\n    ),\n    EffectsModule.forFeature([AgglomerationPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromStockPilesCards.STOCK_PILES_CARDS_FEATURE_KEY,\n      fromStockPilesCards.stockPilesCardsReducer\n    ),\n    EffectsModule.forFeature([StockPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromEventsPileCards.EVENTS_PILE_CARDS_FEATURE_KEY,\n      fromEventsPileCards.eventsPileCardsReducer\n    ),\n    EffectsModule.forFeature([LandsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromDiscardPileCards.DISCARD_PILE_CARDS_FEATURE_KEY,\n      fromDiscardPileCards.discardPileCardsReducer\n    ),\n    EffectsModule.forFeature([DiscardPileCardsEffects]),\n  ],\n  providers: [\n    GameFacade,\n    DomainsCardsFacade,\n    HandsCardsFacade,\n    AgglomerationPilesCardsFacade,\n    LandsPileCardsFacade,\n    StockPilesCardsFacade,\n    EventsPileCardsFacade,\n    DiscardPileCardsFacade,\n  ],\n})\nexport class DataAccessGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DevelopmentCard.html":{"url":"interfaces/DevelopmentCard.html","title":"interface - DevelopmentCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DevelopmentCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/development.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Development Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            celebrationPoints\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            givesKnowledge\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            needsTown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noDuplicate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strengthPoints\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tradePoints\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        celebrationPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        celebrationPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        givesKnowledge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        givesKnowledge:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsTown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsTown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strengthPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strengthPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tradePoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tradePoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DevelopmentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DevelopmentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport {\n  BuildingName,\n  DevelopmentType,\n  ShipName,\n  ShipNameKey,\n  WarriorName,\n} from '../types/development';\nimport { ResourceType } from '../types/resources';\n\nexport const DEVELOPMENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\nexport const AVAILABLE_DEVELOPMENT_SLOT = 'AvailableDevelopmentSlot';\n\n/**\n * Interface for the Development Cards\n */\nexport interface DevelopmentCard\n  extends HasId,\n    HasName,\n    HasCost,\n    HasVictoryPoints {\n  interface: typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: string;\n  cost: Map;\n  type: DevelopmentType;\n  tradePoints?: number;\n  strengthPoints?: number;\n  celebrationPoints?: number;\n  givesKnowledge?: boolean;\n  noDuplicate?: boolean;\n  needsTown?: boolean;\n  victoryPoints?: number;\n}\n\nconst createDevelopmentCard = (\n  id: string,\n  name: string,\n  cost: Map,\n  type: DevelopmentType\n): DevelopmentCard => ({\n  interface: DEVELOPMENT_CARD_INTERFACE_NAME,\n  id,\n  name,\n  cost,\n  type,\n});\n\nexport function createBuilding(\n  id: string,\n  name: BuildingName,\n  cost: Map,\n  tradePoints?: number,\n  givesKnowledge?: boolean,\n  noDuplicate?: boolean,\n  victoryPoints?: number\n): DevelopmentCard {\n  const building = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Building\n  );\n  building.tradePoints = tradePoints;\n  building.givesKnowledge = givesKnowledge;\n  building.noDuplicate = noDuplicate;\n  building.victoryPoints = victoryPoints;\n  return building;\n}\n\nexport function createShip(id: string, type: ShipNameKey): DevelopmentCard {\n  const name = ShipName.get(type);\n  if (name === undefined) {\n    throw new Error(`Can't find ship name for type ${type}`);\n  }\n  const ship = createDevelopmentCard(\n    id,\n    name,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Wool, 1],\n    ]),\n    DevelopmentType.Ship\n  );\n  ship.tradePoints = 1;\n  return ship;\n}\n\nexport function createWarrior(\n  id: string,\n  name: WarriorName,\n  cost: Map,\n  strengthPoints?: number,\n  celebrationPoints?: number\n): DevelopmentCard {\n  const warrior = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Warrior\n  );\n  warrior.strengthPoints = strengthPoints;\n  warrior.celebrationPoints = celebrationPoints;\n  return warrior;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isDevelopmentCard(obj: any): obj is DevelopmentCard {\n  return obj !== undefined && obj.interface === DEVELOPMENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiceComponent.html":{"url":"components/DiceComponent.html","title":"component - DiceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/dice/dice/dice.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-dice\n            \n\n\n\n            \n                styleUrls\n                ./dice.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                RESOURCE_VALUES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventDie\n                            \n                            \n                                getNextProductionDie\n                            \n                            \n                                getProductionDie\n                            \n                            \n                                onThrow\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                throwDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEventDie\n                        \n                    \n                \n            \n            \n                \ngetEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextProductionDie\n                        \n                    \n                \n            \n            \n                \ngetNextProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductionDie\n                        \n                    \n                \n            \n            \n                \ngetProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onThrow\n                        \n                    \n                \n            \n            \n                \nonThrow()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDisabled\n                        \n                    \n                \n            \n            \n                \nthrowDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RESOURCE_VALUES\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameFacade } from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  EventValue,\n  GamePhase,\n  ResourceValue,\n  RESOURCE_VALUES,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-dice',\n  templateUrl: './dice.component.html',\n  styleUrls: ['./dice.component.css'],\n})\nexport class DiceComponent {\n  RESOURCE_VALUES = RESOURCE_VALUES;\n\n  constructor(private game: GameFacade, private gameRules: GameRulesService) {}\n\n  throwDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map(\n        (phase) =>\n          phase !== GamePhase.InitialThrow && phase !== GamePhase.LoopThrow\n      )\n    );\n  }\n\n  onThrow(): void {\n    this.gameRules.throwDice();\n  }\n\n  getProductionDie(): Observable {\n    return this.game.productionDie$;\n  }\n\n  getEventDie(): Observable {\n    return this.game.eventDie$;\n  }\n\n  getNextProductionDie(): Observable {\n    return this.game.nextProductionDie$;\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.game.setNextProductionDie(value);\n  }\n}\n\n    \n\n    \n        \n  \n    Next Production Die:\n    \n      \n        {{ value }}\n    \n  \n  \n    throw\n  \n  Production: {{ value }}\n  Event: {{ value }}\n\n\n    \n\n    \n                \n                    ./dice.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Next Production Die:                  {{ value }}            throw    Production: {{ value }}  Event: {{ value }}'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiceModule.html":{"url":"modules/DiceModule.html","title":"module - DiceModule","body":"\n                   \n\n\n\n\n    Modules\n    DiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_declarations\n\n\n\ncluster_DiceModule_exports\n\n\n\n\nDiceComponent\n\nDiceComponent\n\n\n\nDiceModule\n\nDiceModule\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/dice/dice.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DiceComponent } from './dice/dice.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [DiceComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [DiceComponent],\n})\nexport class DiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsEffects.html":{"url":"injectables/DiscardPileCardsEffects.html","title":"injectable - DiscardPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCard$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { fetch } from '@ngrx/router-store/data-persistence';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { createDiscardPileCardsEntity } from './discard-pile-cards.models';\n\n@Injectable()\nexport class DiscardPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsEntity.html":{"url":"interfaces/DiscardPileCardsEntity.html","title":"interface - DiscardPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DiscardPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DiscardPileCardsEntity {\n  id: string; // Primary ID\n  cardType: string;\n  cardId: string;\n}\n\nexport const createDiscardPileCardsEntity = (\n  id: string,\n  cardType: string,\n  cardId: string\n): DiscardPileCardsEntity => ({\n  id,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsFacade.html":{"url":"injectables/DiscardPileCardsFacade.html","title":"injectable - DiscardPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDiscardPileCards$\n                            \n                            \n                                allDiscardPileCardsReverse$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDiscardPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardToDiscardPile\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardToDiscardPile\n                        \n                    \n                \n            \n            \n                \naddCardToDiscardPile(card: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:39\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCardsReverse$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport * as DiscardPileCardsFeature from './discard-pile-cards.reducer';\nimport * as DiscardPileCardsSelectors from './discard-pile-cards.selectors';\n\n@Injectable()\nexport class DiscardPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  );\n  allDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  );\n  allDiscardPileCardsReverse$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  );\n  selectedDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DiscardPileCardsActions.initDiscardPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      DiscardPileCardsActions.initDiscardPileCardsSavedGame()\n    );\n  }\n\n  addCardToDiscardPile(card: {\n    type:\n      | typeof ACTION_CARD_INTERFACE_NAME\n      | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n    id: string;\n  }): void {\n    this.store.dispatch(DiscardPileCardsActions.addCardToDiscardPile({ card }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsPartialState.html":{"url":"interfaces/DiscardPileCardsPartialState.html","title":"interface - DiscardPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DISCARD_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DISCARD_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DISCARD_PILE_CARDS_FEATURE_KEY:         DiscardPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DiscardPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsState.html":{"url":"interfaces/DiscardPileCardsState.html","title":"interface - DiscardPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Domain.html":{"url":"interfaces/Domain.html","title":"interface - Domain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Domain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/domain.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Domains\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Domains\n */\nexport interface Domain extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createDomain = (id: string, color: DomainColor): Domain => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DomainComponent.html":{"url":"components/DomainComponent.html","title":"component - DomainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DomainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/domain/domain/domain.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-domain\n            \n\n\n\n            \n                styleUrls\n                ./domain.component.css\n            \n\n\n\n            \n                templateUrl\n                ./domain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AGGLOMERATION_CARD_INTERFACE_NAME\n                            \n                            \n                                AVAILABLE_AGGLOMERATION_SLOT\n                            \n                            \n                                AVAILABLE_DEVELOPMENT_SLOT\n                            \n                            \n                                AVAILABLE_LAND_SLOT\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                            \n                                LAND_CARD_INTERFACE_NAME\n                            \n                            \n                                mapDieToIconNameFront\n                            \n                            \n                                mapTypeToIconNameFront\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAgglomerationCard\n                            \n                            \n                                getCelebrationPoints\n                            \n                            \n                                getColumnsTemplate\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getDomain\n                            \n                            \n                                getDomainsCards\n                            \n                            \n                                getLandCard\n                            \n                            \n                                getRowsTemplate\n                            \n                            \n                                getShipsCount\n                            \n                            \n                                getStrengthMastery\n                            \n                            \n                                getTradeMastery\n                            \n                            \n                                getVictoryPoints\n                            \n                            \n                                increaseResources\n                            \n                            \n                                isDomainCardSelected\n                            \n                            \n                                lockResource\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                domainId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domainsCards: DomainsCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        domainId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAgglomerationCard\n                        \n                    \n                \n            \n            \n                \ngetAgglomerationCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPoints\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsTemplate\n                        \n                    \n                \n            \n            \n                \ngetColumnsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n            \n                \ngetDomain()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Domain | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainsCards\n                        \n                    \n                \n            \n            \n                \ngetDomainsCards(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLandCard\n                        \n                    \n                \n            \n            \n                \ngetLandCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRowsTemplate\n                        \n                    \n                \n            \n            \n                \ngetRowsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShipsCount\n                        \n                    \n                \n            \n            \n                \ngetShipsCount(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStrengthMastery\n                        \n                    \n                \n            \n            \n                \ngetStrengthMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTradeMastery\n                        \n                    \n                \n            \n            \n                \ngetTradeMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPoints\n                        \n                    \n                \n            \n            \n                \ngetVictoryPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDomainCardSelected\n                        \n                    \n                \n            \n            \n                \nisDomainCardSelected(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AGGLOMERATION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AGGLOMERATION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_AGGLOMERATION_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_AGGLOMERATION_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_DEVELOPMENT_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_DEVELOPMENT_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_LAND_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_LAND_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LAND_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LAND_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDieToIconNameFront\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mapDieToIconNameFront\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapTypeToIconNameFront\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mapTypeToIconNameFront\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  agglomerationCards,\n  developmentCards,\n  domains,\n  landCards,\n} from '@taormina/shared-constants';\nimport {\n  AgglomerationCard,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Domain,\n  LandCard,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport {\n  mapDieToIconNameFront,\n  mapTypeToIconNameFront,\n} from '@taormina/shared-utils';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-domain',\n  templateUrl: './domain.component.html',\n  styleUrls: ['./domain.component.css'],\n})\nexport class DomainComponent {\n  @Input() domainId!: string;\n\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n  AGGLOMERATION_CARD_INTERFACE_NAME = AGGLOMERATION_CARD_INTERFACE_NAME;\n  LAND_CARD_INTERFACE_NAME = LAND_CARD_INTERFACE_NAME;\n  AVAILABLE_AGGLOMERATION_SLOT = AVAILABLE_AGGLOMERATION_SLOT;\n  AVAILABLE_DEVELOPMENT_SLOT = AVAILABLE_DEVELOPMENT_SLOT;\n  AVAILABLE_LAND_SLOT = AVAILABLE_LAND_SLOT;\n\n  mapTypeToIconNameFront = mapTypeToIconNameFront;\n  mapDieToIconNameFront = mapDieToIconNameFront;\n\n  constructor(\n    private domainsCards: DomainsCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  getDomain(): Domain | undefined {\n    return domains.get(this.domainId);\n  }\n\n  getShipsCount(domainId: string): Observable {\n    return this.domainsCards.getMerchantShipCountForDomain(domainId);\n  }\n\n  getCelebrationPoints(domainId: string): Observable {\n    return this.domainsCards.getCelebrationPointsForDomain(domainId);\n  }\n\n  getStrengthMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Strength)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getTradeMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Trade)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getVictoryPoints(domainId: string): Observable {\n    return this.gameRules.getVictoryPointsForDomain(domainId);\n  }\n\n  getColumnsTemplate(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getDomainMinCol(domainId),\n      this.domainsCards.getDomainMaxCol(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return combineLatest([\n      this.domainsCards.getDomainMinRow(domainId),\n      this.domainsCards.getDomainMaxRow(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return this.domainsCards.allDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.filter((domainCard) => domainCard.domainId === domainId)\n      )\n    );\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  getAgglomerationCard(cardId: string): AgglomerationCard | undefined {\n    return agglomerationCards.get(cardId);\n  }\n\n  getLandCard(cardId: string): LandCard | undefined {\n    return landCards.get(cardId);\n  }\n\n  isDomainCardSelected(pivotId: string): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.map((domainsCard) => domainsCard.id).includes(pivotId)\n      )\n    );\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.domainsCards.toggleDomainCardSelection(pivotId);\n  }\n\n  lockResource(pivotId: string): void {\n    this.domainsCards.lockResource(pivotId);\n  }\n\n  unlockResources(pivotId: string): void {\n    this.domainsCards.unlockResources(pivotId);\n  }\n\n  increaseResources(pivotId: string): void {\n    this.domainsCards.increaseResources(pivotId);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ domain.color }}\n     - Ships count: {{ getShipsCount(domain.id) | async }}\n    \n      - Celebration points: {{ getCelebrationPoints(domain.id) | async }}\n     - Trade Mastery\n    \n      - Strength Mastery\n     - Victory points: {{ getVictoryPoints(domain.id) | async }}\n  \n  \n    \n      \n        \n          {{ development.name }}\n        \n      \n      \n        \n          \n          \n            {{\n              (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select'\n            }}\n           -->\n        \n      \n      \n        \n          \n          \n          {{ land.die }}\n          Available: {{ pivot.availableResources }}\n          locked: {{ pivot.lockedResources }}\n          Lock\n          \n            Unlock\n          \n            Increase\n           -->\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./domain.component.css\n                \n                .grid-container {\n  display: grid;\n  grid-gap: 2rem;\n}\n\n.grid-cell {\n  border: 1px solid black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ domain.color }}     - Ships count: {{ getShipsCount(domain.id) | async }}          - Celebration points: {{ getCelebrationPoints(domain.id) | async }}     - Trade Mastery          - Strength Mastery     - Victory points: {{ getVictoryPoints(domain.id) | async }}                                {{ development.name }}                                                            {{              (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\'            }}           -->                                                          {{ land.die }}          Available: {{ pivot.availableResources }}          locked: {{ pivot.lockedResources }}          Lock                      Unlock                      Increase           -->                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                    '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DomainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DomainModule.html":{"url":"modules/DomainModule.html","title":"module - DomainModule","body":"\n                   \n\n\n\n\n    Modules\n    DomainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_DomainModule_imports\n\n\n\ncluster_DomainModule_declarations\n\n\n\n\nDomainComponent\n\nDomainComponent\n\n\n\nDomainModule\n\nDomainModule\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nDomainModule -->\n\nUiCardModule->DomainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/domain/domain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomainComponent } from './domain/domain.component';\nimport { UiCardModule } from '@taormina/ui-card';\n\n@NgModule({\n  declarations: [DomainComponent],\n  imports: [CommonModule, UiCardModule],\n  exports: [DomainComponent],\n})\nexport class DomainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsEffects.html":{"url":"injectables/DomainsCardsEffects.html","title":"injectable - DomainsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countStealResources$\n                            \n                            \n                                createCard$\n                            \n                            \n                                giveLockedResources$\n                            \n                            \n                                increaseResources$\n                            \n                            \n                                increaseResourcesAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                lockResource$\n                            \n                            \n                                putCardInPivot$\n                            \n                            \n                                unlockResources$\n                            \n                            \n                                    Private\n                                updatesAvailableResources\n                            \n                            \n                                useLockedResources$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLandCardFromPivot\n                            \n                            \n                                    Private\n                                takeOneDefinedPivotOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, domainsCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:422\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCardsStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getLandCardFromPivot\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLandCardFromPivot(pivot: DomainsCardsEntity)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:488\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivot\n                                    \n                                                DomainsCardsEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        takeOneDefinedPivotOrThrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    takeOneDefinedPivotOrThrow(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:429\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countStealResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:381\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:364\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:235\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:317\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInPivot$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:348\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updatesAvailableResources\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:444\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:212\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@ngrx/router-store/data-persistence';\nimport { landCards } from '@taormina/shared-constants';\nimport {\n  LandCard,\n  ResourceCount,\n  RESOURCE_COUNTS,\n} from '@taormina/shared-models';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  map,\n  take,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport {\n  createDomainsCardsEntity,\n  createInitialDomainsCards,\n  DomainsCardsEntity,\n} from './domains-cards.models';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  increaseResourcesForDie$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  );\n\n  increaseResourcesAuspiciousYear$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  );\n\n  lockResource$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  unlockResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  useLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  giveLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  increaseResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  putCardInPivot$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  );\n\n  createCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  );\n\n  countStealResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private domainsCardsStore: Store\n  ) {}\n\n  private takeOneDefinedPivotOrThrow(\n    id: string\n  ): Observable {\n    return this.domainsCardsStore.pipe(\n      select(DomainsCardsSelectors.getLandCardPivotById(id)),\n      map((pivot) => {\n        if (pivot === undefined) {\n          throw new Error(`Couldn't find land card pivot for id.`);\n        }\n        return pivot;\n      }),\n      take(1)\n    );\n  }\n\n  private updatesAvailableResources = (\n    domainsCards: DomainsCardsEntity[],\n    resourceIncrement: number\n  ): {\n    id: string;\n    changes: {\n      availableResources: ResourceCount;\n    };\n  }[] => {\n    const belowMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: (pivot.availableResources +\n              resourceIncrement) as ResourceCount,\n          },\n        };\n      });\n\n    const atMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources >=\n            Math.max(...RESOURCE_COUNTS) - resourceIncrement &&\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: Math.max(...RESOURCE_COUNTS) as ResourceCount,\n          },\n        };\n      });\n\n    return [...belowMax, ...atMax];\n  };\n\n  private getLandCardFromPivot(pivot: DomainsCardsEntity): LandCard {\n    if (pivot.cardId === undefined) {\n      throw new Error(\n        `Something went wrong, cardId shouldn't be undefined at this point.`\n      );\n    }\n    const land = landCards.get(pivot.cardId);\n    if (land === undefined) {\n      throw new Error(\n        `Something went wrong, land shouldn't be undefined at this point.`\n      );\n    }\n    return land;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsEntity.html":{"url":"interfaces/DomainsCardsEntity.html","title":"interface - DomainsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DomainsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            availableResources\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            domainId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lockedResources\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         DomainCardType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainCardType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        domainId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lockedResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lockedResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         RowValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ID_CLAY_PIT_BLUE,\n  ID_CLAY_PIT_RED,\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_FIELD_BLUE,\n  ID_FIELD_RED,\n  ID_FOREST_BLUE,\n  ID_FOREST_RED,\n  ID_GOLD_MINE_BLUE,\n  ID_GOLD_MINE_RED,\n  ID_HAMLET_BLUE_1,\n  ID_HAMLET_BLUE_2,\n  ID_HAMLET_RED_1,\n  ID_HAMLET_RED_2,\n  ID_PASTURE_BLUE,\n  ID_PASTURE_RED,\n  ID_ROAD_BLUE,\n  ID_ROAD_RED,\n  ID_STONE_QUARRY_BLUE,\n  ID_STONE_QUARRY_RED,\n} from '@taormina/shared-constants';\nimport {\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  DomainCardType,\n  LAND_CARD_INTERFACE_NAME,\n  ResourceCount,\n  RowValue,\n} from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'DomainsCards' data\n */\nexport interface DomainsCardsEntity {\n  id: string; // Primary ID\n  domainId: string; // Foreign key to domains\n  cardType: DomainCardType;\n  cardId?: string; // Foreign key to cards\n  col: number;\n  row: RowValue;\n  availableResources: ResourceCount;\n  lockedResources: ResourceCount;\n}\n\nexport const createDomainsCardsEntity = (\n  id: string,\n  domainId: string,\n  cardType: DomainCardType,\n  cardId: string | undefined,\n  col: number,\n  row: RowValue,\n  availableResources = 0 as ResourceCount,\n  lockedResources = 0 as ResourceCount\n): DomainsCardsEntity => ({\n  id,\n  domainId,\n  cardType,\n  cardId,\n  col,\n  row,\n  availableResources,\n  lockedResources,\n});\n\n/* eslint-disable no-magic-numbers */\nexport const createInitialDomainsCards = (): DomainsCardsEntity[] => {\n  const initialDomainsCards: DomainsCardsEntity[] = [\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_RED,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_RED,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_RED,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_RED,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_RED,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_RED,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_RED,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_BLUE,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_BLUE,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_BLUE,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_BLUE,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_BLUE,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_BLUE,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_BLUE,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n  ];\n  return initialDomainsCards;\n};\n/* eslint-enable no-magic-numbers */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsFacade.html":{"url":"injectables/DomainsCardsFacade.html","title":"injectable - DomainsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDomainsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDomainsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                countAndStealUnprotectedGoldAndWool\n                            \n                            \n                                createAvailableDomainCard\n                            \n                            \n                                getCardsVictoryPointsForDomain\n                            \n                            \n                                getCelebrationPointsForDomain\n                            \n                            \n                                getDomainMaxCol\n                            \n                            \n                                getDomainMaxRow\n                            \n                            \n                                getDomainMinCol\n                            \n                            \n                                getDomainMinRow\n                            \n                            \n                                getMasteryDomainForType\n                            \n                            \n                                getMerchantShipCountForDomain\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                hasDomainCommunityCenter\n                            \n                            \n                                increaseResources\n                            \n                            \n                                increaseResourcesForAuspiciousYear\n                            \n                            \n                                increaseResourcesForDie\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                lockResource\n                            \n                            \n                                putCardInSlot\n                            \n                            \n                                removeDomainCard\n                            \n                            \n                                swapSelectedCards\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                            \n                                useLockedResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndStealUnprotectedGoldAndWool\n                        \n                    \n                \n            \n            \n                \ncountAndStealUnprotectedGoldAndWool()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAvailableDomainCard\n                        \n                    \n                \n            \n            \n                \ncreateAvailableDomainCard(domainId: string, cardType: DomainCardType, col: number, row: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCardsVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMinCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMinRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMasteryDomainForType\n                        \n                    \n                \n            \n            \n                \ngetMasteryDomainForType(type: MasteryPointsType)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                MasteryPointsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMerchantShipCountForDomain\n                        \n                    \n                \n            \n            \n                \ngetMerchantShipCountForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDomainCommunityCenter\n                        \n                    \n                \n            \n            \n                \nhasDomainCommunityCenter(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForAuspiciousYear()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForDie(value: DiceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:38\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInSlot\n                        \n                    \n                \n            \n            \n                \nputCardInSlot(pivotId: string, cardType: DomainCardType, cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeDomainCard\n                        \n                    \n                \n            \n            \n                \nremoveDomainCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources\n                        \n                    \n                \n            \n            \n                \nuseLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  DiceValue,\n  DomainCardType,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  );\n  allDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  );\n  selectedDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsSavedGame());\n  }\n\n  lockResource(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.lockResource({ id: pivotId }));\n  }\n\n  unlockResources(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.unlockResources({ id: pivotId }));\n  }\n\n  increaseResources(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResources({ id: pivotId })\n    );\n  }\n\n  increaseResourcesForDie(value: DiceValue): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForDie({ die: value })\n    );\n  }\n\n  increaseResourcesForAuspiciousYear(): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear()\n    );\n  }\n\n  useLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.useLockedResources());\n  }\n\n  giveLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.giveLockedResources());\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.toggleDomainCardSelection({ id: pivotId })\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.store.dispatch(DomainsCardsActions.clearDomainCardSelection());\n  }\n\n  putCardInSlot(\n    pivotId: string,\n    cardType: DomainCardType,\n    cardId: string\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.putCardInPivot({\n        id: pivotId,\n        cardType,\n        cardId,\n      })\n    );\n  }\n\n  createAvailableDomainCard(\n    domainId: string,\n    cardType: DomainCardType,\n    col: number,\n    row: number\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.createDomainCard({\n        domainId,\n        cardType,\n        cardId: undefined,\n        col,\n        row,\n      })\n    );\n  }\n\n  countAndStealUnprotectedGoldAndWool(): void {\n    this.store.dispatch(\n      DomainsCardsActions.countAndStealUnprotectedGoldAndWool()\n    );\n  }\n\n  swapSelectedCards(): void {\n    this.store.dispatch(DomainsCardsActions.swapSelectedCards());\n  }\n\n  removeDomainCard(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.removeDomainCard({ id: pivotId }));\n  }\n\n  getDomainMinCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinCol(domainId));\n  }\n\n  getDomainMaxCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxCol(domainId));\n  }\n\n  getDomainMinRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinRow(domainId));\n  }\n\n  getDomainMaxRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxRow(domainId));\n  }\n\n  getMasteryDomainForType(\n    type: MasteryPointsType\n  ): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMasteryDomainForType(type)\n    );\n  }\n\n  getCardsVictoryPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCardsVictoryPointsForDomain(domainId)\n    );\n  }\n\n  getMerchantShipCountForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMerchantShipCountForDomain(domainId)\n    );\n  }\n\n  getCelebrationPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCelebrationPointsForDomain(domainId)\n    );\n  }\n\n  hasDomainCommunityCenter(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.hasDomainCommunityCenter(domainId)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsPartialState.html":{"url":"interfaces/DomainsCardsPartialState.html","title":"interface - DomainsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DOMAINS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DOMAINS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DOMAINS_CARDS_FEATURE_KEY:         DomainsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsState.html":{"url":"interfaces/DomainsCardsState.html","title":"interface - DomainsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            selectedIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventCard.html":{"url":"interfaces/EventCard.html","title":"interface - EventCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/event.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Event Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         EventName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { EventName } from '../types/event';\n\nexport const EVENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\n/**\n * Interface for the Event Cards\n */\nexport interface EventCard extends HasId, HasName, HasRules {\n  interface: typeof EVENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: EventName;\n  ruleIds: string[];\n}\n\nexport const createEventCard = (\n  id: string,\n  name: EventName,\n  ruleIds: string[]\n): EventCard => ({ interface: EVENT_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isEventCard(obj: any): obj is EventCard {\n  return obj !== undefined && obj.interface === EVENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsEffects.html":{"url":"injectables/EventsPileCardsEffects.html","title":"injectable - EventsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                resetPileAndSelectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, eventsPileCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPileAndSelectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { fetch } from '@ngrx/router-store/data-persistence';\nimport { map } from 'rxjs/operators';\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { createInitialEventsPileCards } from './events-pile-cards.models';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\n\n@Injectable()\nexport class EventsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  resetPileAndSelectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private eventsPileCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsEntity.html":{"url":"interfaces/EventsPileCardsEntity.html","title":"interface - EventsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'EventsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { eventCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'EventsPileCards' data\n */\nexport interface EventsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createEventsPileCardsEntity = (\n  id: string,\n  cardId: string\n): EventsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialEventsPileCards = (): EventsPileCardsEntity[] => {\n  const numberOfCardsBelowFestival = 3;\n  const shuffled = arrayShuffle(Array.from(eventCards.keys()).slice(1));\n  shuffled.splice(-numberOfCardsBelowFestival, 0, 'EVENT_0');\n  const entities = shuffled.map((cardId) =>\n    createEventsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsFacade.html":{"url":"injectables/EventsPileCardsFacade.html","title":"injectable - EventsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allEventsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedEventsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeSelected\n                            \n                            \n                                resetEventsPile\n                            \n                            \n                                selectFirst\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPile\n                        \n                    \n                \n            \n            \n                \nresetEventsPile()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst\n                        \n                    \n                \n            \n            \n                \nselectFirst()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\nimport * as EventsPileCardsSelectors from './events-pile-cards.selectors';\n\n@Injectable()\nexport class EventsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  );\n  allEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  );\n  selectedEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsSavedGame());\n  }\n\n  resetEventsPile(): void {\n    this.store.dispatch(EventsPileCardsActions.resetEventsPile());\n  }\n\n  selectFirst(): void {\n    this.store.dispatch(EventsPileCardsActions.selectFirstEventsPileCard());\n  }\n\n  removeSelected(): void {\n    this.store.dispatch(EventsPileCardsActions.removeSelectedEventsPileCard());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsPartialState.html":{"url":"interfaces/EventsPileCardsPartialState.html","title":"interface - EventsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            EVENTS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EVENTS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        EVENTS_PILE_CARDS_FEATURE_KEY:         EventsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsState.html":{"url":"interfaces/EventsPileCardsState.html","title":"interface - EventsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureEngineModule.html":{"url":"modules/FeatureEngineModule.html","title":"module - FeatureEngineModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureEngineModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-engine/src/lib/feature-engine.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class FeatureEngineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureGameModule.html":{"url":"modules/FeatureGameModule.html","title":"module - FeatureGameModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\ncluster_FeatureGameModule_imports\n\n\n\n\nBoardModule\n\nBoardModule\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/feature-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BoardModule } from './board/board.module';\n\n@NgModule({\n  imports: [CommonModule, BoardModule],\n  exports: [BoardModule],\n})\nexport class FeatureGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameEffects.html":{"url":"injectables/GameEffects.html","title":"injectable - GameEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                throwDice$\n                            \n                            \n                                throwEvent$\n                            \n                            \n                                throwProduction$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, gameStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProduction$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport {\n  getRandomEventDieValue,\n  getRandomProductionDieValue,\n} from '@taormina/shared-utils';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameEffects {\n  throwDice$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  );\n\n  throwProduction$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  );\n\n  throwEvent$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private gameStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameFacade.html":{"url":"injectables/GameFacade.html","title":"injectable - GameFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action$\n                            \n                            \n                                eventDie$\n                            \n                            \n                                nextProductionDie$\n                            \n                            \n                                phase$\n                            \n                            \n                                player$\n                            \n                            \n                                productionDie$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                setAction\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                throwDice\n                            \n                            \n                                throwEventDie\n                            \n                            \n                                throwProductionDie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:35\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAction\n                        \n                    \n                \n            \n            \n                \nsetAction(action: ActionName | undefined)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionName | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEventDie\n                        \n                    \n                \n            \n            \n                \nthrowEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProductionDie\n                        \n                    \n                \n            \n            \n                \nthrowProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameAction))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameEventDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextProductionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phase$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePhase))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePlayer))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameProductionDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  productionDie$ = this.store.pipe(select(GameSelectors.getGameProductionDie));\n  nextProductionDie$ = this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  );\n  eventDie$ = this.store.pipe(select(GameSelectors.getGameEventDie));\n  phase$ = this.store.pipe(select(GameSelectors.getGamePhase));\n  player$ = this.store.pipe(select(GameSelectors.getGamePlayer));\n  action$ = this.store.pipe(select(GameSelectors.getGameAction));\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(GameActions.initNewGame());\n  }\n\n  throwDice(): void {\n    this.store.dispatch(GameActions.throwDice());\n  }\n\n  throwProductionDie(): void {\n    this.store.dispatch(GameActions.throwProductionDie());\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.store.dispatch(GameActions.setNextProductionDie({ value }));\n  }\n\n  throwEventDie(): void {\n    this.store.dispatch(GameActions.throwEventDie());\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.store.dispatch(GameActions.setPhase({ phase }));\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.store.dispatch(GameActions.setPlayer({ player }));\n  }\n\n  setAction(action: ActionName | undefined): void {\n    this.store.dispatch(GameActions.setAction({ action }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamePartialState.html":{"url":"interfaces/GamePartialState.html","title":"interface - GamePartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamePartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            GAME_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        GAME_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GAME_FEATURE_KEY:         GameState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameRulesService.html":{"url":"injectables/GameRulesService.html","title":"injectable - GameRulesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameRulesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/feature-engine/src/lib/game-rules.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auspiciousYear$\n                            \n                            \n                                countAndSteal$\n                            \n                            \n                                event$\n                            \n                            \n                                festival$\n                            \n                            \n                                gameEnded$\n                            \n                            \n                                increaseResourcesForAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                resetEventsPileOnFestival$\n                            \n                            \n                                selectFirstEvent$\n                            \n                            \n                                thieves$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawCardFromStockToHand\n                            \n                            \n                                drawFirstCardsFromStockToHand\n                            \n                            \n                                getVictoryPointsForDomain\n                            \n                            \n                                initNewGame\n                            \n                            \n                                putBackFromDomainToStockPile\n                            \n                            \n                                putBackFromHandToStockPile\n                            \n                            \n                                putLandsPileCardInSlot\n                            \n                            \n                                throwDice\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useResourcesToPutAgglomerationPileCardInSlot\n                            \n                            \n                                useResourcesToPutHandCardInSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, agglomerationPilesCards: AgglomerationPilesCardsFacade, landsPileCards: LandsPileCardsFacade, stockPilesCards: StockPilesCardsFacade, eventsPileCards: EventsPileCardsFacade, discardPileCards: DiscardPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCards\n                                                  \n                                                        \n                                                                        AgglomerationPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCards\n                                                  \n                                                        \n                                                                        StockPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discardPileCards\n                                                  \n                                                        \n                                                                        DiscardPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drawCardFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawCardFromStockToHand(pileId: string, cardId: string, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawFirstCardsFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawFirstCardsFromStockToHand(pileId: string, cardsCount: number, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardsCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromDomainToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromDomainToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:378\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromHandToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromHandToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:357\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLandsPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nputLandsPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:426\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutAgglomerationPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutAgglomerationPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutHandCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutHandCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndSteal$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        event$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(filter((die) => die === EventValue.Event))\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        festival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameEnded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPileOnFestival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thieves$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  DiscardPileCardsFacade,\n  DomainsCardsFacade,\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  AgglomerationPilesCardsFacade,\n  GameFacade,\n  HandsCardsFacade,\n  LandsPileCardsFacade,\n  StockPilesCardsFacade,\n} from '@taormina/data-access-game';\nimport {\n  actionCards,\n  eventCards,\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  DiceValue,\n  EventName,\n  EventValue,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n  RowValue,\n} from '@taormina/shared-models';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameRulesService {\n  gameEnded$ = new Subject();\n\n  event$ = this.game.eventDie$.pipe(filter((die) => die === EventValue.Event));\n\n  thieves$ = this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  );\n\n  countAndSteal$ = this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  );\n\n  selectFirstEvent$ = this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  );\n\n  auspiciousYear$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  );\n\n  festival$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  );\n\n  increaseResourcesForDie$ = this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  );\n\n  increaseResourcesForAuspiciousYear$ = this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  );\n\n  resetEventsPileOnFestival$ = this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  );\n\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private agglomerationPilesCards: AgglomerationPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private stockPilesCards: StockPilesCardsFacade,\n    private eventsPileCards: EventsPileCardsFacade,\n    private discardPileCards: DiscardPileCardsFacade\n  ) {}\n\n  initNewGame(): void {\n    this.gameEnded$.next();\n    this.countAndSteal$.subscribe();\n    this.selectFirstEvent$.subscribe();\n    this.increaseResourcesForDie$.subscribe();\n    this.increaseResourcesForAuspiciousYear$.subscribe();\n    this.resetEventsPileOnFestival$.subscribe();\n\n    this.game.initNewGame();\n    this.domainsCards.initNewGame();\n    this.handsCards.initNewGame();\n    this.agglomerationPilesCards.initNewGame();\n    this.landsPileCards.initNewGame();\n    this.stockPilesCards.initNewGame();\n    this.eventsPileCards.initNewGame();\n    this.discardPileCards.initNewGame();\n  }\n\n  getVictoryPointsForDomain(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getCardsVictoryPointsForDomain(domainId),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Trade),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Strength),\n    ]).pipe(\n      map(\n        ([\n          cardsVictoryPoints,\n          tradeMasteryDomainId,\n          strengthMasteryDomainId,\n        ]) => {\n          return (\n            cardsVictoryPoints +\n            (tradeMasteryDomainId === domainId ? 1 : 0) +\n            (strengthMasteryDomainId === domainId ? 1 : 0)\n          );\n        }\n      )\n    );\n  }\n\n  drawFirstCardsFromStockToHand(\n    pileId: string,\n    cardsCount: number,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          return stockPilesCards\n            .filter((stockPileCard) => stockPileCard.pileId === pileId)\n            .slice(0, cardsCount)\n            .map((stockPileCard) => {\n              return {\n                type: stockPileCard.cardType,\n                id: stockPileCard.cardId,\n              };\n            });\n        })\n      )\n      .subscribe((cards) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, cards);\n        this.handsCards.addCardsToHand(handId, cards);\n      });\n  }\n\n  drawCardFromStockToHand(\n    pileId: string,\n    cardId: string,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          const card = stockPilesCards.find(\n            (stockPileCard) =>\n              stockPileCard.pileId === pileId && stockPileCard.cardId === cardId\n          );\n          if (card === undefined) {\n            throw new Error(\n              `Something went wrong, card shouldn't be undefined at this point.`\n            );\n          }\n          return {\n            type: card.cardType,\n            id: card.cardId,\n          };\n        })\n      )\n      .subscribe((card) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, [card]);\n        this.handsCards.addCardsToHand(handId, [card]);\n      });\n  }\n\n  throwDice(): void {\n    this.game.throwEventDie();\n    this.game.phase$.pipe(take(1)).subscribe((phase) => {\n      if (phase !== GamePhase.InitialThrow) {\n        this.game.throwProductionDie();\n      }\n    });\n  }\n\n  useResourcesToPutAgglomerationPileCardInSlot(): void {\n    this.domainsCards.useLockedResources();\n\n    combineLatest([\n      this.agglomerationPilesCards.selectedAgglomerationPilesCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([agglomerationPileCard, domainCards]) => {\n          if (agglomerationPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.agglomerationPilesCards.removeAgglomerationPileCard(\n            agglomerationPileCard.id\n          );\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            AGGLOMERATION_CARD_INTERFACE_NAME,\n            agglomerationPileCard.cardId\n          );\n\n          if (agglomerationPileCard.pileId === ID_AGGLOMERATION_TOWN) {\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Lower\n            );\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Upper\n            );\n          } else {\n            const availableCol =\n              domainCard.col  {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.handsCards.removeHandCard(handCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            DEVELOPMENT_CARD_INTERFACE_NAME,\n            handCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putLandsPileCardInSlot(): void {\n    combineLatest([\n      this.landsPileCards.selectedLandsPileCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([landsPileCard, domainCards]) => {\n          if (landsPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.landsPileCards.removeLandsPileCard(landsPileCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            LAND_CARD_INTERFACE_NAME,\n            landsPileCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromHandToStockPile(pileId: string): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type: handCard.cardType,\n              id: handCard.cardId,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromDomainToStockPile(pileId: string): void {\n    this.domainsCards.selectedDomainsCards$\n      .pipe(\n        take(1),\n        map((domainCards) => {\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in pile if no card or more than one card selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n          const type = domainCard.cardType;\n          if (type !== DEVELOPMENT_CARD_INTERFACE_NAME) {\n            throw new Error(\n              `Can't put back card of type other than development.`\n            );\n          }\n          const id = domainCard.cardId;\n          if (id === undefined) {\n            throw new Error(\n              `Something went wrong, cardId shouldn't be undefined at this point.`\n            );\n          }\n\n          this.domainsCards.removeDomainCard(domainCard.id);\n          this.domainsCards.createAvailableDomainCard(\n            domainCard.domainId,\n            AVAILABLE_DEVELOPMENT_SLOT,\n            domainCard.col,\n            domainCard.row\n          );\n          this.domainsCards.clearDomainCardSelection();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type,\n              id,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  useActionCard(): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          if (\n            handCard.cardType !== ACTION_CARD_INTERFACE_NAME ||\n            handCard.cardId === undefined\n          ) {\n            throw new Error(`Can't use card other than action.`);\n          }\n          const action = actionCards.get(handCard.cardId);\n          if (action === undefined) {\n            throw new Error(\n              `Something went wrong, action shouldn't be undefined at this point.`\n            );\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.game.setAction(action.name);\n          this.discardPileCards.addCardToDiscardPile({\n            type: handCard.cardType,\n            id: handCard.cardId,\n          });\n        })\n      )\n      .subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            eventDie\n                                        \n                                \n                                \n                                        \n                                            nextProductionDie\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            productionDie\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionName | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventDie:         EventValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextProductionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextProductionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         GamePhase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GamePhase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hand.html":{"url":"interfaces/Hand.html","title":"interface - Hand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/hand.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Hands\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Hands\n */\nexport interface Hand extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createHand = (id: string, color: DomainColor): Hand => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HandComponent.html":{"url":"components/HandComponent.html","title":"component - HandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/hand/hand/hand.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-hand\n            \n\n\n\n            \n                styleUrls\n                ./hand.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hand.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ACTION_CARD_INTERFACE_NAME\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionCard\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getHand\n                            \n                            \n                                getHandsCards\n                            \n                            \n                                selectHandCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                handId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(handsCards: HandsCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        handId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActionCard\n                        \n                    \n                \n            \n            \n                \ngetActionCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHand\n                        \n                    \n                \n            \n            \n                \ngetHand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Hand | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandsCards\n                        \n                    \n                \n            \n            \n                \ngetHandsCards(handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ACTION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ACTION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { HandsCardsEntity, HandsCardsFacade } from '@taormina/data-access-game';\nimport {\n  actionCards,\n  developmentCards,\n  hands,\n} from '@taormina/shared-constants';\nimport {\n  ActionCard,\n  ACTION_CARD_INTERFACE_NAME,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Hand,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-hand',\n  templateUrl: './hand.component.html',\n  styleUrls: ['./hand.component.css'],\n})\nexport class HandComponent {\n  @Input() handId!: string;\n\n  ACTION_CARD_INTERFACE_NAME = ACTION_CARD_INTERFACE_NAME;\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n\n  constructor(private handsCards: HandsCardsFacade) {}\n\n  getHand(): Hand | undefined {\n    return hands.get(this.handId);\n  }\n\n  getHandsCards(handId: string): Observable {\n    return this.handsCards.allHandsCards$.pipe(\n      map((handsCards) =>\n        handsCards.filter((handCard) => handCard.handId === handId)\n      )\n    );\n  }\n\n  getActionCard(cardId: string): ActionCard | undefined {\n    return actionCards.get(cardId);\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.handsCards.selectHandCard(pivotId);\n  }\n}\n\n    \n\n    \n        \n  {{ hand.color }}\n  \n    \n      \n        {{ action.name }}\n        Select\n      \n    \n    \n      \n        {{ development.name }}\n        Select\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./hand.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ hand.color }}                    {{ action.name }}        Select                            {{ development.name }}        Select            '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HandModule.html":{"url":"modules/HandModule.html","title":"module - HandModule","body":"\n                   \n\n\n\n\n    Modules\n    HandModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HandModule\n\n\n\ncluster_HandModule_declarations\n\n\n\ncluster_HandModule_exports\n\n\n\n\nHandComponent\n\nHandComponent\n\n\n\nHandModule\n\nHandModule\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/hand/hand.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HandComponent } from './hand/hand.component';\n\n@NgModule({\n  declarations: [HandComponent],\n  imports: [CommonModule],\n  exports: [HandComponent],\n})\nexport class HandModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsEffects.html":{"url":"injectables/HandsCardsEffects.html","title":"injectable - HandsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@ngrx/router-store/data-persistence';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { createHandsCardsEntity } from './hands-cards.models';\n\n@Injectable()\nexport class HandsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsEntity.html":{"url":"interfaces/HandsCardsEntity.html","title":"interface - HandsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'HandsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            handId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\n/**\n * Interface for the 'HandsCards' data\n */\nexport interface HandsCardsEntity {\n  id: string; // Primary ID\n  handId: string; // Foreign key to hands\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createHandsCardsEntity = (\n  id: string,\n  handId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): HandsCardsEntity => ({\n  id,\n  handId,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsFacade.html":{"url":"injectables/HandsCardsFacade.html","title":"injectable - HandsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allHandsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedHandsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToHand\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeHandCard\n                            \n                            \n                                selectHandCard\n                            \n                            \n                                unselectHandCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToHand\n                        \n                    \n                \n            \n            \n                \naddCardsToHand(handId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeHandCard\n                        \n                    \n                \n            \n            \n                \nremoveHandCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unselectHandCard\n                        \n                    \n                \n            \n            \n                \nunselectHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport * as HandsCardsFeature from './hands-cards.reducer';\nimport * as HandsCardsSelectors from './hands-cards.selectors';\n\n@Injectable()\nexport class HandsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded));\n  allHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  );\n  selectedHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  );\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsSavedGame());\n  }\n\n  addCardsToHand(\n    handId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(HandsCardsActions.addCardsToHand({ handId, cards }));\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.store.dispatch(HandsCardsActions.selectHandCard({ id: pivotId }));\n  }\n\n  unselectHandCard(): void {\n    this.store.dispatch(HandsCardsActions.unselectHandCard());\n  }\n\n  removeHandCard(id: string): void {\n    this.store.dispatch(HandsCardsActions.removeHandCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsPartialState.html":{"url":"interfaces/HandsCardsPartialState.html","title":"interface - HandsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            HANDS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HANDS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HANDS_CARDS_FEATURE_KEY:         HandsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsState.html":{"url":"interfaces/HandsCardsState.html","title":"interface - HandsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasColor.html":{"url":"interfaces/HasColor.html","title":"interface - HasColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/color.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DomainColor } from '../types/domain';\n\nexport interface HasColor {\n  color?: DomainColor;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasCost.html":{"url":"interfaces/HasCost.html","title":"interface - HasCost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasCost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/cost.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResourceType } from '../types/resources';\n\nexport interface HasCost {\n  cost: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasId.html":{"url":"interfaces/HasId.html","title":"interface - HasId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasId {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasName.html":{"url":"interfaces/HasName.html","title":"interface - HasName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/name.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasName {\n  name: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isHasName(obj: any): obj is HasName {\n  return typeof obj.name === 'string';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasRules.html":{"url":"interfaces/HasRules.html","title":"interface - HasRules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasRules\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/rules.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasRules {\n  ruleIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasVictoryPoints.html":{"url":"interfaces/HasVictoryPoints.html","title":"interface - HasVictoryPoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasVictoryPoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/victory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVictoryPoints {\n  victoryPoints?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandCard.html":{"url":"interfaces/LandCard.html","title":"interface - LandCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/land.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Land Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            die\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        die\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        die:         ResourceValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         LandType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { ResourceValue } from '../types/dice';\nimport { DomainColor } from '../types/domain';\nimport { LandType } from '../types/resources';\n\nexport const LAND_CARD_INTERFACE_NAME = 'LandCard';\n\nexport const AVAILABLE_LAND_SLOT = 'AvailableLandSlot';\n\n/**\n * Interface for the Land Cards\n */\nexport interface LandCard extends HasId, HasColor, CanPrint {\n  interface: typeof LAND_CARD_INTERFACE_NAME;\n  id: string;\n  type: LandType;\n  die: ResourceValue;\n  color?: DomainColor;\n}\n\nexport const createLandCard = (\n  id: string,\n  type: LandType,\n  die: ResourceValue,\n  color?: DomainColor\n): LandCard => ({\n  interface: LAND_CARD_INTERFACE_NAME,\n  id,\n  type,\n  die,\n  color,\n  print: (): string => `${type}`,\n});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isLandCard(obj: any): obj is LandCard {\n  return obj !== undefined && obj.interface === LAND_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsEffects.html":{"url":"injectables/LandsPileCardsEffects.html","title":"injectable - LandsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@ngrx/router-store/data-persistence';\nimport { map } from 'rxjs/operators';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { createInitialLandsPileCards } from './lands-pile-cards.models';\n\n@Injectable()\nexport class LandsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsEntity.html":{"url":"interfaces/LandsPileCardsEntity.html","title":"interface - LandsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'LandsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { landCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'LandsPileCards' data\n */\nexport interface LandsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createLandsPileCardsEntity = (\n  id: string,\n  cardId: string\n): LandsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialLandsPileCards = (): LandsPileCardsEntity[] => {\n  const shuffled = arrayShuffle(Array.from(landCards.keys()));\n  const entities = shuffled.map((cardId) =>\n    createLandsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsFacade.html":{"url":"injectables/LandsPileCardsFacade.html","title":"injectable - LandsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allLandsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedLandsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeLandsPileCard\n                            \n                            \n                                selectLandsPileCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLandsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveLandsPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLandsPileCard\n                        \n                    \n                \n            \n            \n                \nselectLandsPileCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport * as LandsPileCardsFeature from './lands-pile-cards.reducer';\nimport * as LandsPileCardsSelectors from './lands-pile-cards.selectors';\n\n@Injectable()\nexport class LandsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  );\n  allLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  );\n  selectedLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsSavedGame());\n  }\n\n  selectLandsPileCard(pivotId: string): void {\n    this.store.dispatch(\n      LandsPileCardsActions.selectLandsPileCard({ id: pivotId })\n    );\n  }\n\n  removeLandsPileCard(id: string): void {\n    this.store.dispatch(LandsPileCardsActions.removeLandsPileCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsPartialState.html":{"url":"interfaces/LandsPileCardsPartialState.html","title":"interface - LandsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            LANDS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LANDS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LANDS_PILE_CARDS_FEATURE_KEY:         LandsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsState.html":{"url":"interfaces/LandsPileCardsState.html","title":"interface - LandsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhasesComponent.html":{"url":"components/PhasesComponent.html","title":"component - PhasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/phases/phases/phases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-phases\n            \n\n\n\n            \n                styleUrls\n                ./phases.component.css\n            \n\n\n\n            \n                templateUrl\n                ./phases.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DomainColor\n                            \n                            \n                                GamePhase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAction\n                            \n                            \n                                getEventCard\n                            \n                            \n                                getPhase\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getSelectedEventsPileCard\n                            \n                            \n                                removeSelectedEventsPileCard\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                unsetAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, eventsPileCards: EventsPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAction\n                        \n                    \n                \n            \n            \n                \ngetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventCard\n                        \n                    \n                \n            \n            \n                \ngetEventCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetAction\n                        \n                    \n                \n            \n            \n                \nunsetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DomainColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DomainColor\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GamePhase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GamePhase\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  GameFacade,\n} from '@taormina/data-access-game';\nimport { eventCards } from '@taormina/shared-constants';\nimport {\n  ActionName,\n  DomainColor,\n  EventCard,\n  GamePhase,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'taormina-phases',\n  templateUrl: './phases.component.html',\n  styleUrls: ['./phases.component.css'],\n})\nexport class PhasesComponent {\n  GamePhase = GamePhase;\n  DomainColor = DomainColor;\n\n  constructor(\n    private game: GameFacade,\n    private eventsPileCards: EventsPileCardsFacade\n  ) {}\n\n  getPhase(): Observable {\n    return this.game.phase$;\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.game.setPhase(phase);\n  }\n\n  getPlayer(): Observable {\n    return this.game.player$;\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.game.setPlayer(player);\n  }\n\n  getEventCard(cardId: string): EventCard | undefined {\n    return eventCards.get(cardId);\n  }\n\n  getSelectedEventsPileCard(): Observable {\n    return this.eventsPileCards.selectedEventsPileCards$;\n  }\n\n  removeSelectedEventsPileCard(): void {\n    this.eventsPileCards.removeSelected();\n  }\n\n  getAction(): Observable {\n    return this.game.action$;\n  }\n\n  unsetAction(): void {\n    this.game.setAction(undefined);\n  }\n}\n\n    \n\n    \n        \n  \n    Current Player:\n    \n      \n        {{ player.key }}\n    \n  \n  \n    Current Phase:\n    \n      \n        {{ phase.key }}\n    \n  \n  \n    Current event:\n    \n      \n        {{ event.name }}\n      \n    \n    \n    \n      Finish event\n    \n  \n  \n    Current action:\n    \n      {{ action }}\n    \n    \n    Finish action\n  \n\n\n    \n\n    \n                \n                    ./phases.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Current Player:                  {{ player.key }}            Current Phase:                  {{ phase.key }}            Current event:                  {{ event.name }}                        Finish event            Current action:          {{ action }}            Finish action  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhasesModule.html":{"url":"modules/PhasesModule.html","title":"module - PhasesModule","body":"\n                   \n\n\n\n\n    Modules\n    PhasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_declarations\n\n\n\ncluster_PhasesModule_exports\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\n\n\nPhasesModule\n\nPhasesModule\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/phases/phases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PhasesComponent } from './phases/phases.component';\n\n@NgModule({\n  declarations: [PhasesComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [PhasesComponent],\n})\nexport class PhasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PilesModule.html":{"url":"modules/PilesModule.html","title":"module - PilesModule","body":"\n                   \n\n\n\n\n    Modules\n    PilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_imports\n\n\n\ncluster_PilesModule_exports\n\n\n\ncluster_PilesModule_declarations\n\n\n\n\nPilesComponent\n\nPilesComponent\n\n\n\nPilesModule\n\nPilesModule\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nPilesModule -->\n\nUiCardModule->PilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/piles/piles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiCardModule } from '@taormina/ui-card';\nimport { PilesComponent } from './piles/piles.component';\n\n@NgModule({\n  declarations: [PilesComponent],\n  imports: [CommonModule, UiCardModule],\n  exports: [PilesComponent],\n})\nexport class PilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsEffects.html":{"url":"injectables/StockPilesCardsEffects.html","title":"injectable - StockPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                removeCards$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, stockPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@ngrx/router-store/data-persistence';\nimport { forkJoin } from 'rxjs';\nimport { map, mergeMap, take } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport {\n  createInitialStockPilesCards,\n  createStockPilesCardsEntity,\n  StockPilesCardsEntity,\n} from './stock-piles-cards.models';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  removeCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private stockPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsEntity.html":{"url":"interfaces/StockPilesCardsEntity.html","title":"interface - StockPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'StockPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  actionCards,\n  developmentCards,\n  stockPiles,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'StockPilesCards' data\n */\nexport interface StockPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string; // Foreign key to stock piles\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createStockPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): StockPilesCardsEntity =>\n  ({\n    id,\n    pileId,\n    cardType,\n    cardId,\n  } as StockPilesCardsEntity);\n\nexport const createInitialStockPilesCards = (): StockPilesCardsEntity[] => {\n  const stockPilesCards: StockPilesCardsEntity[] = [];\n\n  const shuffledCards = arrayShuffle([\n    ...Array.from(actionCards.values()),\n    ...Array.from(developmentCards.values()),\n  ]);\n\n  for (let i = 0; i = shuffledCards.length) break;\n      stockPilesCards.push(\n        createStockPilesCardsEntity(\n          uuidv4(),\n          stockPiles[i],\n          shuffledCards[cardIndex].interface,\n          shuffledCards[cardIndex].id\n        )\n      );\n    }\n  }\n\n  return stockPilesCards;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsFacade.html":{"url":"injectables/StockPilesCardsFacade.html","title":"injectable - StockPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allStockPilesCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedStockPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToStockPileBottom\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeCardsFromStockPileTop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToStockPileBottom\n                        \n                    \n                \n            \n            \n                \naddCardsToStockPileBottom(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:36\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCardsFromStockPileTop\n                        \n                    \n                \n            \n            \n                \nremoveCardsFromStockPileTop(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  );\n  allStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  );\n  selectedStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsSavedGame());\n  }\n\n  removeCardsFromStockPileTop(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.removeCardsFromStockPileTop({ pileId, cards })\n    );\n  }\n\n  addCardsToStockPileBottom(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.addCardsToStockPileBottom({ pileId, cards })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsPartialState.html":{"url":"interfaces/StockPilesCardsPartialState.html","title":"interface - StockPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            STOCK_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        STOCK_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STOCK_PILES_CARDS_FEATURE_KEY:         StockPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsState.html":{"url":"interfaces/StockPilesCardsState.html","title":"interface - StockPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiCardModule.html":{"url":"modules/UiCardModule.html","title":"module - UiCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UiCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_imports\n\n\n\ncluster_UiCardModule_exports\n\n\n\n\nCardBackModule\n\nCardBackModule\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardBackModule->UiCardModule\n\n\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nUiCardModule -->\n\nCardFrontModule->UiCardModule\n\n\n\n\n\nCardBackModule \n\nCardBackModule \n\nCardBackModule  -->\n\nUiCardModule->CardBackModule \n\n\n\n\n\nCardFrontModule \n\nCardFrontModule \n\nCardFrontModule  -->\n\nUiCardModule->CardFrontModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/ui-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CardBackModule\n                        \n                        \n                            CardFrontModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardBackModule\n                        \n                        \n                            CardFrontModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CardBackModule } from './card-back/card-back.module';\nimport { CardFrontModule } from './card-front/card-front.module';\n\n@NgModule({\n  imports: [CommonModule, CardBackModule, CardFrontModule],\n  exports: [CardBackModule, CardFrontModule],\n})\nexport class UiCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 16.2.4\n        \n            @angular/cdk : 16.2.2\n        \n            @angular/common : 16.2.4\n        \n            @angular/compiler : 16.2.4\n        \n            @angular/core : 16.2.4\n        \n            @angular/forms : 16.2.4\n        \n            @angular/material : 16.2.2\n        \n            @angular/platform-browser : 16.2.4\n        \n            @angular/platform-browser-dynamic : 16.2.4\n        \n            @angular/router : 16.2.4\n        \n            @ngrx/effects : ^16.2.0\n        \n            @ngrx/entity : ^16.2.0\n        \n            @ngrx/router-store : ^16.2.0\n        \n            @ngrx/store : ^16.2.0\n        \n            @nx/angular : ^16.8.0\n        \n            @storybook/core-server : ^8.2.9\n        \n            array-shuffle : ^2.0.0\n        \n            eslint-plugin-html : ^6.1.1\n        \n            rxjs : ^7.8.1\n        \n            tslib : ^2.6.2\n        \n            uuid : ^8.3.2\n        \n            zone.js : 0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionName   (libs/.../action.ts)\n                        \n                        \n                            AgglomerationType   (libs/.../agglomeration.ts)\n                        \n                        \n                            BuildingName   (libs/.../development.ts)\n                        \n                        \n                            DevelopmentType   (libs/.../development.ts)\n                        \n                        \n                            DiceId   (libs/.../dice.ts)\n                        \n                        \n                            DomainColor   (libs/.../domain.ts)\n                        \n                        \n                            EventName   (libs/.../event.ts)\n                        \n                        \n                            EventValue   (libs/.../dice.ts)\n                        \n                        \n                            GamePhase   (libs/.../phase.ts)\n                        \n                        \n                            LandType   (libs/.../resources.ts)\n                        \n                        \n                            MasteryPointsType   (libs/.../development.ts)\n                        \n                        \n                            ResourceType   (libs/.../resources.ts)\n                        \n                        \n                            RowValue   (libs/.../domain.ts)\n                        \n                        \n                            WarriorName   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/action.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionName\n                    \n                \n                        \n                            \n                                 Soothsayer\n                            \n                        \n                        \n                            \n                                Value : Soothsayer\n                            \n                        \n                        \n                            \n                                 Pathfinder\n                            \n                        \n                        \n                            \n                                Value : Pathfinder\n                            \n                        \n                        \n                            \n                                 Goldsmith\n                            \n                        \n                        \n                            \n                                Value : Goldsmith\n                            \n                        \n                        \n                            \n                                 TradeRoute\n                            \n                        \n                        \n                            \n                                Value : Trade route\n                            \n                        \n                        \n                            \n                                 Relocation\n                            \n                        \n                        \n                            \n                                Value : Relocation\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/agglomeration.ts\n    \n        \n            \n                \n                    \n                        \n                        AgglomerationType\n                    \n                \n                        \n                            \n                                 Road\n                            \n                        \n                        \n                            \n                                Value : ROAD\n                            \n                        \n                        \n                            \n                                 Hamlet\n                            \n                        \n                        \n                            \n                                Value : HAMLET\n                            \n                        \n                        \n                            \n                                 Town\n                            \n                        \n                        \n                            \n                                Value : TOWN\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/development.ts\n    \n        \n            \n                \n                    \n                        \n                        BuildingName\n                    \n                \n                        \n                            \n                                 Brickyard\n                            \n                        \n                        \n                            \n                                Value : Brickyard\n                            \n                        \n                        \n                            \n                                 Sawmill\n                            \n                        \n                        \n                            \n                                Value : Sawmill\n                            \n                        \n                        \n                            \n                                 Mill\n                            \n                        \n                        \n                            \n                                Value : Mill\n                            \n                        \n                        \n                            \n                                 Foundry\n                            \n                        \n                        \n                            \n                                Value : Foundry\n                            \n                        \n                        \n                            \n                                 Weaving\n                            \n                        \n                        \n                            \n                                Value : Weaving\n                            \n                        \n                        \n                            \n                                 Warehouse\n                            \n                        \n                        \n                            \n                                Value : Warehouse\n                            \n                        \n                        \n                            \n                                 Market\n                            \n                        \n                        \n                            \n                                Value : Market\n                            \n                        \n                        \n                            \n                                 TollBridge\n                            \n                        \n                        \n                            \n                                Value : Toll bridge\n                            \n                        \n                        \n                            \n                                 Monastery\n                            \n                        \n                        \n                            \n                                Value : Monastery\n                            \n                        \n                        \n                            \n                                 CommunityCenter\n                            \n                        \n                        \n                            \n                                Value : Community center\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DevelopmentType\n                    \n                \n                        \n                            \n                                 Building\n                            \n                        \n                        \n                            \n                                Value : BUILDING\n                            \n                        \n                        \n                            \n                                 Ship\n                            \n                        \n                        \n                            \n                                Value : SHIP\n                            \n                        \n                        \n                            \n                                 Warrior\n                            \n                        \n                        \n                            \n                                Value : WARRIOR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MasteryPointsType\n                    \n                \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Strength\n                            \n                        \n                        \n                            \n                                Value : STRENGTH\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        WarriorName\n                    \n                \n                        \n                            \n                                 Altair\n                            \n                        \n                        \n                            \n                                Value : Altaïr\n                            \n                        \n                        \n                            \n                                 Ezio\n                            \n                        \n                        \n                            \n                                Value : Ezio\n                            \n                        \n                        \n                            \n                                 Evie\n                            \n                        \n                        \n                            \n                                Value : Evie\n                            \n                        \n                        \n                            \n                                 Jacob\n                            \n                        \n                        \n                            \n                                Value : Jacob\n                            \n                        \n                        \n                            \n                                 Kassandra\n                            \n                        \n                        \n                            \n                                Value : Kassandra\n                            \n                        \n                        \n                            \n                                 Alexios\n                            \n                        \n                        \n                            \n                                Value : Alexios\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/dice.ts\n    \n        \n            \n                \n                    \n                        \n                        DiceId\n                    \n                \n                        \n                            \n                                 Resource\n                            \n                        \n                        \n                            \n                                Value : RESOURCE\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventValue\n                    \n                \n                        \n                            \n                                 Thieves\n                            \n                        \n                        \n                            \n                                Value : THIEVES\n                            \n                        \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Celebration\n                            \n                        \n                        \n                            \n                                Value : CELEBRATION\n                            \n                        \n                        \n                            \n                                 Harvest\n                            \n                        \n                        \n                            \n                                Value : HARVEST\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/domain.ts\n    \n        \n            \n                \n                    \n                        \n                        DomainColor\n                    \n                \n                        \n                            \n                                 Red\n                            \n                        \n                        \n                            \n                                Value : RED\n                            \n                        \n                        \n                            \n                                 Blue\n                            \n                        \n                        \n                            \n                                Value : BLUE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RowValue\n                    \n                \n                        \n                            \n                                 Lower\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Middle\n                            \n                        \n                        \n                            \n                                 Up\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Upper\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/event.ts\n    \n        \n            \n                \n                    \n                        \n                        EventName\n                    \n                \n                        \n                            \n                                 Festival\n                            \n                        \n                        \n                            \n                                Value : Festival\n                            \n                        \n                        \n                            \n                                 AuspiciousYear\n                            \n                        \n                        \n                            \n                                Value : Auspicious year\n                            \n                        \n                        \n                            \n                                 Hawker\n                            \n                        \n                        \n                            \n                                Value : Hawker\n                            \n                        \n                        \n                            \n                                 Invention\n                            \n                        \n                        \n                            \n                                Value : Invention\n                            \n                        \n                        \n                            \n                                 MerchantShipTravel\n                            \n                        \n                        \n                            \n                                Value : Merchant ship travel\n                            \n                        \n                        \n                            \n                                 Quarrel\n                            \n                        \n                        \n                            \n                                Value : Quarrel\n                            \n                        \n                        \n                            \n                                 SiblingRivalry\n                            \n                        \n                        \n                            \n                                Value : Sibling rivalry\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/phase.ts\n    \n        \n            \n                \n                    \n                        \n                        GamePhase\n                    \n                \n                        \n                            \n                                 InitialThrow\n                            \n                        \n                        \n                            \n                                Value : INITIAL THROW\n                            \n                        \n                        \n                            \n                                 InitialDraw\n                            \n                        \n                        \n                            \n                                Value : INITIAL DRAW\n                            \n                        \n                        \n                            \n                                 LoopThrow\n                            \n                        \n                        \n                            \n                                Value : LOOP THROW\n                            \n                        \n                        \n                            \n                                 LoopActions\n                            \n                        \n                        \n                            \n                                Value : LOOP ACTIONS\n                            \n                        \n                        \n                            \n                                 LoopDraw\n                            \n                        \n                        \n                            \n                                Value : LOOP DRAW\n                            \n                        \n                        \n                            \n                                 LoopExchange\n                            \n                        \n                        \n                            \n                                Value : LOOP EXCHANGE\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/resources.ts\n    \n        \n            \n                \n                    \n                        \n                        LandType\n                    \n                \n                        \n                            \n                                 ClayPit\n                            \n                        \n                        \n                            \n                                Value : CLAYPIT\n                            \n                        \n                        \n                            \n                                 Forest\n                            \n                        \n                        \n                            \n                                Value : FOREST\n                            \n                        \n                        \n                            \n                                 GoldMine\n                            \n                        \n                        \n                            \n                                Value : GOLDMINE\n                            \n                        \n                        \n                            \n                                 Field\n                            \n                        \n                        \n                            \n                                Value : FIELD\n                            \n                        \n                        \n                            \n                                 StoneQuarry\n                            \n                        \n                        \n                            \n                                Value : STONEQUARRY\n                            \n                        \n                        \n                            \n                                 Pasture\n                            \n                        \n                        \n                            \n                                Value : PASTURE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 Clay\n                            \n                        \n                        \n                            \n                                Value : CLAY\n                            \n                        \n                        \n                            \n                                 Wood\n                            \n                        \n                        \n                            \n                                Value : WOOD\n                            \n                        \n                        \n                            \n                                 Gold\n                            \n                        \n                        \n                            \n                                Value : GOLD\n                            \n                        \n                        \n                            \n                                 Wheat\n                            \n                        \n                        \n                            \n                                Value : WHEAT\n                            \n                        \n                        \n                            \n                                 Stone\n                            \n                        \n                        \n                            \n                                Value : STONE\n                            \n                        \n                        \n                            \n                                 Wool\n                            \n                        \n                        \n                            \n                                Value : WOOL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBuilding   (libs/.../development.ts)\n                        \n                        \n                            createHamlet   (libs/.../agglomeration.ts)\n                        \n                        \n                            createRoad   (libs/.../agglomeration.ts)\n                        \n                        \n                            createShip   (libs/.../development.ts)\n                        \n                        \n                            createTown   (libs/.../agglomeration.ts)\n                        \n                        \n                            createWarrior   (libs/.../development.ts)\n                        \n                        \n                            eventFromValue   (libs/.../dice.ts)\n                        \n                        \n                            getImgSrc   (libs/.../assets.ts)\n                        \n                        \n                            getRandomEventDieValue   (libs/.../dice.ts)\n                        \n                        \n                            getRandomProductionDieValue   (libs/.../dice.ts)\n                        \n                        \n                            isActionCard   (libs/.../action.ts)\n                        \n                        \n                            isAgglomerationCard   (libs/.../agglomeration.ts)\n                        \n                        \n                            isCanPrint   (libs/.../print.ts)\n                        \n                        \n                            isDevelopmentCard   (libs/.../development.ts)\n                        \n                        \n                            isEventCard   (libs/.../event.ts)\n                        \n                        \n                            isHasName   (libs/.../name.ts)\n                        \n                        \n                            isLandCard   (libs/.../land.ts)\n                        \n                        \n                            mapDieToIconNameFront   (libs/.../assets.ts)\n                        \n                        \n                            mapDomainColorToDomainId   (libs/.../domain.ts)\n                        \n                        \n                            mapDomainColorToHandId   (libs/.../domain.ts)\n                        \n                        \n                            mapTypeToIconNameFront   (libs/.../assets.ts)\n                        \n                        \n                            randomDiceValue   (libs/.../dice.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/structures/development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBuilding\n                        \n                    \n                \n            \n            \n                \ncreateBuilding(id: string, name: BuildingName, cost: Map, tradePoints?: number, givesKnowledge?: boolean, noDuplicate?: boolean, victoryPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                BuildingName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tradePoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    givesKnowledge\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    noDuplicate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    victoryPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShip\n                        \n                    \n                \n            \n            \n                \ncreateShip(id: string, type: ShipNameKey)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                ShipNameKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWarrior\n                        \n                    \n                \n            \n            \n                \ncreateWarrior(id: string, name: WarriorName, cost: Map, strengthPoints?: number, celebrationPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                WarriorName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    strengthPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    celebrationPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDevelopmentCard\n                        \n                    \n                \n            \n            \n                \nisDevelopmentCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/agglomeration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createHamlet\n                        \n                    \n                \n            \n            \n                \ncreateHamlet(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRoad\n                        \n                    \n                \n            \n            \n                \ncreateRoad(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTown\n                        \n                    \n                \n            \n            \n                \ncreateTown(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAgglomerationCard\n                        \n                    \n                \n            \n            \n                \nisAgglomerationCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/dice.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eventFromValue\n                        \n                    \n                \n            \n            \n                \neventFromValue(value: DiceValue)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomEventDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomEventDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         EventValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomProductionDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomProductionDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         ResourceValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomDiceValue\n                        \n                    \n                \n            \n            \n                \nrandomDiceValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         DiceValue\n\n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/assets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n            \n                \ngetImgSrc(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDieToIconNameFront\n                        \n                    \n                \n            \n            \n                \nmapDieToIconNameFront(die: ResourceValue)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    die\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapTypeToIconNameFront\n                        \n                    \n                \n            \n            \n                \nmapTypeToIconNameFront(type: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isActionCard\n                        \n                    \n                \n            \n            \n                \nisActionCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/print.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCanPrint\n                        \n                    \n                \n            \n            \n                \nisCanPrint(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CanPrint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/event.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isEventCard\n                        \n                    \n                \n            \n            \n                \nisEventCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isHasName\n                        \n                    \n                \n            \n            \n                \nisHasName(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HasName\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/land.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLandCard\n                        \n                    \n                \n            \n            \n                \nisLandCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/domain.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapDomainColorToDomainId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToDomainId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDomainColorToHandId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToHandId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nTaormina\nThis project was generated using Nx.\nEnvironment\nGlobally installed packages\n├── @angular/cli@14.0.5\n├── corepack@0.10.0\n├── npm@8.13.2\n├── nx@14.4.2\n└── updtr@4.0.0Node version\nv16.16.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Laure-Hélène Bruneton\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardBackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardFrontModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataAccessGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DomainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureEngineModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HandModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_CardBackModule\n\n\n\ncluster_CardBackModule_declarations\n\n\n\ncluster_CardBackModule_exports\n\n\n\ncluster_CardFrontModule\n\n\n\ncluster_CardFrontModule_declarations\n\n\n\ncluster_CardFrontModule_exports\n\n\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_declarations\n\n\n\ncluster_DiceModule_exports\n\n\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_declarations\n\n\n\ncluster_DomainModule_imports\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\ncluster_HandModule\n\n\n\ncluster_HandModule_declarations\n\n\n\ncluster_HandModule_exports\n\n\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_declarations\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_declarations\n\n\n\ncluster_PilesModule_exports\n\n\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nCardBackComponent\n\nCardBackComponent\n\n\n\nCardBackModule\n\nCardBackModule\n\nCardBackModule -->\n\nCardBackComponent->CardBackModule\n\n\n\n\n\nCardBackComponent \n\nCardBackComponent \n\nCardBackComponent  -->\n\nCardBackModule->CardBackComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardBackModule->UiCardModule\n\n\n\n\n\nCardFrontComponent\n\nCardFrontComponent\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nCardFrontModule -->\n\nCardFrontComponent->CardFrontModule\n\n\n\n\n\nCardFrontComponent \n\nCardFrontComponent \n\nCardFrontComponent  -->\n\nCardFrontModule->CardFrontComponent \n\n\n\nUiCardModule -->\n\nCardFrontModule->UiCardModule\n\n\n\n\n\nAgglomerationPilesCardsFacade\n\nAgglomerationPilesCardsFacade\n\nDataAccessGameModule -->\n\nAgglomerationPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiceComponent\n\nDiceComponent\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDomainComponent\n\nDomainComponent\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\nDomainModule -->\n\nUiCardModule->DomainModule\n\n\n\nPilesModule -->\n\nUiCardModule->PilesModule\n\n\n\n\n\nCardBackModule \n\nCardBackModule \n\nCardBackModule  -->\n\nUiCardModule->CardBackModule \n\n\n\n\n\nCardFrontModule \n\nCardFrontModule \n\nCardFrontModule  -->\n\nUiCardModule->CardFrontModule \n\n\n\n\n\nHandComponent\n\nHandComponent\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPilesComponent\n\nPilesComponent\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0-0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs\n\n\n\nFilename\nline #\nTODO\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n617\ntest actions order: event > steal on thieves > production\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n71\nthrow error instead of filtering out undefined ?\n\n\n\nFIXMEs\n\n\n\nFilename\nline #\nFIXME\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n935\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n986\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1054\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1171\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1216\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1321\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1362\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1450\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1552\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1603\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1707\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1755\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1803\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1851\nshould test error thrown\n\n\n\nESLINT-DISABLE-NEXT-LINEs\n\n\n\nFilename\nline #\nESLINT-DISABLE-NEXT-LINE\n\n\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n812\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n818\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/shared-models/src/lib/interfaces/name.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/interfaces/print.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/action.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/agglomeration.ts\n95\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/development.ts\n111\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/event.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/land.ts\n37\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/types/dice.ts\n1\nno-magic-numbers\n\n\nlibs/shared-models/src/lib/types/resources.ts\n19\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n80\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n114\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n119\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n53\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n66\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n74\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n96\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n100\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n122\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n126\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n188\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n192\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n226\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n230\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n255\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n259\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n291\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n295\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n330\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n334\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n368\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n372\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n397\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n401\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n910\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n914\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n948\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n952\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n977\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n981\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1073\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1131\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n87\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n106\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n220\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n243\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n394\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n73\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n85\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n138\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n155\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n165\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n175\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n185\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n195\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n234\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n379\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n391\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n395\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n404\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n413\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n424\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n431\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n443\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n452\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/game/game.effects.ts\n32\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.spec.ts\n82\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.selectors.ts\n49\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n60\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n73\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n99\nindent\n\n\n\nPRETTIER-IGNOREs\n\n\n\nFilename\nline #\nPRETTIER-IGNORE\n\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n159\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n161\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n332\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DiceValue   (libs/.../dice.ts)\n                        \n                        \n                            DomainCardType   (libs/.../domain.ts)\n                        \n                        \n                            ResourceCount   (libs/.../resources.ts)\n                        \n                        \n                            ResourceValue   (libs/.../dice.ts)\n                        \n                        \n                            ShipNameKey   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/dice.ts\n    \n    \n        \n            \n                \n                    \n                    DiceValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceValue\n                \n            \n            \n                \n                            DiceValue\n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/domain.ts\n    \n    \n        \n            \n                \n                    \n                    DomainCardType\n                \n            \n            \n                \n                         |  |  |  |  | \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/resources.ts\n    \n    \n        \n            \n                \n                    \n                    ResourceCount\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/development.ts\n    \n    \n        \n            \n                \n                    \n                    ShipNameKey\n                \n            \n            \n                \n                            ResourceType | \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
