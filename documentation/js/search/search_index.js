var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCard.html",[0,0.105,1,3.023]],["body/interfaces/ActionCard.html",[0,0.206,1,5.632,2,0.943,3,0.159,4,0.159,5,0.159,6,1.909,7,3.962,8,2.209,9,2.137,10,2.831,11,2.209,12,4.275,13,0.313,14,0.574,15,1.857,16,1.916,17,6.252,18,1.255,19,0.522,20,0.012,21,4.933,22,0.44,23,3.404,24,4.099,25,3.962,26,4.68,27,4.376,28,5.006,29,0.285,30,1.556,31,4.073,32,2.607,33,5.006,34,1.667,35,1.667,36,1.723,37,1.782,38,2.392,39,2.392,40,2.868,41,2.868,42,4.376,43,3.675,44,1.214,45,1.14,46,3.404,47,0.009,48,0.009]],["title/components/ActionsComponent.html",[49,1.697,50,2.066]],["body/components/ActionsComponent.html",[3,0.066,4,0.066,5,0.066,9,1.635,10,2.166,13,0.13,16,1.035,19,0.154,20,0.013,22,0.34,29,0.08,31,1.846,44,1.755,47,0.005,48,0.005,49,1.747,50,2.446,51,1.846,52,1.196,53,1.26,54,1.196,55,1.196,56,3.07,57,1.825,58,1.196,59,3.942,60,3.753,61,1.686,62,2.043,63,4.268,64,1.938,65,3.384,66,1.246,67,4.908,68,4.908,69,4.908,70,4.291,71,4.908,72,4.908,73,4.908,74,4.908,75,4.908,76,4.908,77,4.908,78,4.908,79,4.908,80,4.908,81,4.908,82,3.884,83,4.908,84,4.908,85,4.291,86,4.908,87,1.091,88,1.523,89,2.812,90,2.576,91,2.963,92,2.576,93,2.963,94,2.726,95,3.136,96,2.726,97,3.136,98,3.113,99,3.136,100,2.192,101,2.087,102,0.611,103,0.406,104,2.222,105,2.087,106,2.732,107,2.859,108,2.087,109,2.087,110,4.563,111,2.087,112,2.087,113,2.087,114,2.087,115,2.087,116,2.087,117,2.087,118,2.087,119,2.087,120,2.087,121,2.087,122,2.087,123,2.087,124,2.087,125,2.087,126,2.087,127,2.087,128,0.419,129,1.26,130,1.419,131,1.334,132,1.419,133,1.26,134,0.3,135,1.419,136,1.523,137,2.301,138,2.301,139,2.301,140,2.468,141,2.222,142,1.196,143,2.301,144,0.673,145,0.796,146,1.04,147,2.301,148,0.824,149,0.958,150,0.433,151,2.365,152,2.958,153,3.384,154,2.043,155,3.384,156,2.087,157,1.825,158,5.049,159,5.049,160,5.776,161,3.928,162,5.776,163,2.087,164,3.384,165,1.825,166,3.384,167,2.087,168,2.087,169,2.087,170,2.087,171,1.825,172,1.825,173,1.825,174,2.087,175,4.908,176,5.539,177,1.747,178,6.152,179,3.853,180,3.384,181,4.621,182,6.727,183,7.016,184,7.016,185,7.016,186,4.621,187,5.014,188,2.468,189,5.049,190,1.686,191,2.958,192,5.014,193,2.958,194,2.678,195,2.958,196,3.384,197,1.938,198,3.384,199,3.384,200,2.678,201,1.523,202,1.523,203,1.652,204,1.523,205,1.523,206,1.196,207,1.846,208,1.762,209,1.196,210,2.812,211,1.196,212,1.196,213,1.04,214,1.196,215,1.04,216,1.196,217,1.04,218,1.196,219,1.04,220,1.196,221,1.04,222,1.196,223,1.04,224,1.196,225,1.04,226,1.196,227,1.087,228,0.743,229,1.196,230,1.196]],["title/modules/ActionsModule.html",[231,1.98,232,2.818]],["body/modules/ActionsModule.html",[3,0.185,4,0.185,5,0.185,20,0.012,22,0.447,29,0.223,47,0.01,48,0.01,50,4.262,56,2.301,128,1.17,150,1.207,232,5.644,233,2.475,234,3.112,235,5.092,236,5.092,237,5.092,238,3.37,239,2.783,240,2.475,241,5.825,242,3.846,243,4.039,244,3.37,245,3.514,246,2.783,247,5.825,248,2.783]],["title/interfaces/AgglomerationCard.html",[0,0.105,249,2.818]],["body/interfaces/AgglomerationCard.html",[0,0.194,2,0.716,3,0.12,4,0.12,5,0.12,6,1.45,8,1.678,10,2.354,11,1.837,12,3.72,13,0.238,14,0.477,15,1.85,18,1.179,19,0.596,20,0.012,22,0.45,23,2.586,29,0.292,30,1.494,32,1.98,34,2.343,35,2.052,36,1.309,37,1.354,38,1.817,39,1.817,40,2.178,41,3.826,43,3.056,44,1.62,45,0.866,46,2.586,47,0.008,48,0.008,103,1.299,137,4.543,138,2.586,148,2.958,176,4.664,249,5.198,250,3.009,251,5.13,252,5.32,253,5.32,254,3.809,255,5.567,256,3.826,257,3.408,258,2.774,259,3.891,260,3.325,261,3.628,262,3.325,263,3.891,264,3.325,265,3.803,266,2.586,267,2.586,268,2.774,269,3.803,270,6.68,271,3.009,272,4.873,273,4.873,274,3.325,275,3.53,276,4.664,277,4.178,278,5.335,279,4.495,280,3.325,281,2.296,282,4.664,283,3.325,284,3.325,285,5.335,286,3.325,287,3.325,288,3.803,289,3.325,290,3.325,291,3.325]],["title/components/AppComponent.html",[49,1.697,213,2.066]],["body/components/AppComponent.html",[3,0.153,4,0.199,5,0.153,13,0.303,16,1.691,19,0.357,20,0.012,22,0.37,29,0.185,35,1.614,47,0.009,48,0.009,49,2.855,50,2.415,51,3.427,52,2.775,53,2.925,54,2.775,55,2.775,58,2.775,59,4.752,60,4.525,62,3.792,64,3.599,66,2.314,87,1.562,98,4.583,99,4.713,100,1.782,102,1.419,103,0.942,104,3.272,106,1.725,107,2.481,128,0.973,135,3.295,136,3.534,150,1.004,206,2.775,207,3.427,208,3.272,209,2.775,210,4.226,211,2.775,212,2.775,213,3.676,214,2.775,215,2.415,216,2.775,217,2.415,218,2.775,219,2.415,220,2.775,221,2.415,222,2.775,223,2.415,224,2.775,225,2.415,226,2.775,227,2.523,228,1.725,229,2.775,230,2.775,275,3.599,292,5.517,293,4.845,294,5.492,295,6.972,296,6.283,297,7.377,298,4.845,299,4.845,300,4.845,301,2.775,302,4.845,303,4.845,304,4.236]],["title/modules/AppModule.html",[231,1.98,305,3.023]],["body/modules/AppModule.html",[3,0.152,4,0.152,5,0.152,20,0.012,22,0.484,29,0.183,47,0.009,48,0.009,104,3.248,128,0.962,133,2.892,134,0.689,135,3.258,150,0.993,213,4.153,233,2.035,234,2.752,238,2.98,239,2.289,240,2.035,242,3.402,244,2.98,248,2.98,292,3.791,305,6.11,306,4.188,307,4.188,308,4.188,309,4.188,310,6.027,311,5.309,312,5.309,313,4.791,314,6.237,315,6.237,316,5.452,317,3.791,318,6.237,319,4.791,320,4.188,321,2.388,322,4.188,323,1.512,324,4.791,325,4.791,326,4.791,327,4.791,328,4.791,329,4.791,330,6.237,331,4.791,332,4.791,333,2.65,334,4.791,335,4.791,336,4.791,337,4.188]],["title/components/BoardComponent.html",[49,1.697,215,2.066]],["body/components/BoardComponent.html",[3,0.151,4,0.151,5,0.151,13,0.298,14,0.556,16,1.507,20,0.012,22,0.366,29,0.182,47,0.009,48,0.009,49,2.832,50,2.374,51,3.389,52,2.729,53,2.876,54,2.729,55,2.729,56,3.003,58,2.729,59,4.74,60,4.513,62,3.751,64,3.56,100,2.079,128,0.957,144,1.536,150,0.987,206,2.729,207,3.389,208,3.236,209,2.729,210,4.198,211,2.729,212,2.729,213,2.374,214,2.729,215,3.653,216,2.729,217,2.374,218,2.729,219,2.374,220,2.729,221,2.374,222,2.729,223,2.374,224,2.729,225,2.374,226,2.729,227,2.481,228,1.696,229,2.729,230,2.729,338,4.764,339,6.214,340,6.916,341,6.214,342,6.815,343,6.815,344,7.796,345,7.796,346,2.441,347,2.146,348,4.764,349,4.764,350,4.764,351,4.764,352,2.276]],["title/modules/BoardModule.html",[231,1.98,353,2.818]],["body/modules/BoardModule.html",[3,0.156,4,0.156,5,0.156,20,0.012,22,0.482,29,0.188,47,0.009,48,0.009,56,1.939,128,0.986,150,1.018,215,4.167,232,5.345,233,2.086,234,2.796,238,3.028,239,2.346,240,2.086,242,3.456,243,3.63,244,3.028,245,3.158,246,2.346,248,3.028,353,5.823,354,4.293,355,4.293,356,4.293,357,4.293,358,5.345,359,5.345,360,5.345,361,5.345,362,5.345,363,4.91,364,4.91,365,4.91,366,4.91,367,4.91,368,4.91,369,4.91,370,4.91]],["title/interfaces/CanPrint.html",[0,0.105,261,2.818]],["body/interfaces/CanPrint.html",[0,0.153,2,1.136,3,0.191,4,0.191,5,0.191,6,2.745,13,0.377,18,1.111,20,0.012,29,0.275,32,3.141,34,2.009,35,2.009,36,2.076,37,2.147,38,2.882,39,2.882,40,3.454,41,4.124,43,3.454,44,1.462,47,0.01,48,0.01,66,2.652,100,1.711,106,2.147,261,5.235,271,6.31,371,4.772,372,6.031,373,5.272,374,6.031]],["title/components/CardComponent.html",[49,1.697,217,2.066]],["body/components/CardComponent.html",[3,0.171,4,0.171,5,0.171,16,1.634,20,0.012,22,0.318,29,0.207,47,0.01,48,0.01,49,3.005,50,2.695,51,3.674,52,3.097,54,3.097,55,3.097,58,3.097,59,4.831,60,4.6,64,3.859,128,1.086,150,1.121,179,4.4,206,3.097,207,3.674,208,3.508,209,3.097,210,4.4,211,3.097,212,3.097,213,2.695,214,3.097,215,2.695,216,3.097,217,3.828,218,3.097,219,2.695,220,3.097,221,2.695,222,3.097,223,2.695,224,3.097,225,2.695,226,3.097,227,2.816,228,1.925,229,3.097,230,3.097,375,4.727,376,5.407,377,6.737,378,6.737]],["title/interfaces/Chainable.html",[0,0.105,379,3.023]],["body/interfaces/Chainable.html",[0,0.131,2,0.971,3,0.163,4,0.163,5,0.163,13,0.322,16,1.251,18,1.228,19,0.38,20,0.012,34,1.718,35,1.718,36,1.775,37,1.836,38,2.464,39,2.464,47,0.009,48,0.009,66,2.408,100,1.463,102,1.51,103,1.272,106,1.836,107,2.583,208,2.686,292,5.175,379,4.77,380,6.539,381,4.508,382,6.277,383,5.717,384,6.812,385,4.508,386,6.277,387,4.508,388,4.508,389,4.508,390,3.507,391,3.507,392,4.508,393,6.812,394,4.508,395,4.508,396,4.508,397,4.508,398,4.508,399,5.717,400,4.77,401,6.277,402,4.508,403,4.508,404,4.508,405,4.508,406,4.508,407,4.508,408,4.508]],["title/interfaces/Chainable-1.html",[0,0.088,277,1.981,379,2.523]],["body/interfaces/Chainable-1.html",[0,0.131,2,0.971,3,0.163,4,0.163,5,0.163,13,0.322,16,1.251,18,1.228,19,0.38,20,0.012,34,1.718,35,1.718,36,1.775,37,1.836,38,2.464,39,2.464,47,0.009,48,0.009,66,2.408,100,1.463,102,1.51,103,1.272,106,1.836,107,2.583,179,3.746,208,2.686,379,4.77,381,4.508,382,6.277,383,5.717,384,6.812,385,4.508,386,6.277,387,4.508,388,4.508,389,4.508,390,3.507,391,3.507,392,4.508,393,6.812,394,4.508,395,4.508,396,4.508,397,4.508,398,4.508,399,5.717,400,4.77,401,6.277,402,4.508,403,4.508,404,4.508,405,4.508,406,4.508,407,4.508,408,4.508,409,6.539]],["title/modules/DataAccessGameModule.html",[231,1.98,311,2.818]],["body/modules/DataAccessGameModule.html",[3,0.112,4,0.112,5,0.112,20,0.012,22,0.499,29,0.135,47,0.007,48,0.007,89,4.079,91,4.298,93,4.298,95,4.549,97,4.549,128,0.71,134,0.729,150,0.733,177,2.931,228,2.821,233,1.502,234,2.235,238,2.421,239,1.689,240,1.502,244,2.421,245,2.525,246,1.689,248,1.689,311,5.644,320,3.091,321,1.762,322,3.091,323,0.857,337,4.429,410,3.091,411,3.091,412,4.842,413,4.549,414,4.842,415,0.645,416,3.535,417,3.091,418,2.798,419,5.92,420,3.574,421,7.334,422,7.334,423,3.535,424,3.504,425,2.798,426,5.92,427,3.574,428,3.535,429,2.798,430,5.92,431,3.574,432,3.535,433,2.798,434,5.92,435,4.079,436,3.574,437,3.535,438,2.798,439,3.535,440,3.535,441,3.535,442,3.535,443,2.798,444,5.92,445,3.782,446,3.535,447,2.798,448,5.92,449,3.782,450,3.535,451,2.798,452,5.92,453,3.574,454,3.535,455,3.535,456,3.535,457,3.535,458,7.334,459,3.535,460,3.535,461,3.535,462,3.535,463,3.535,464,3.535,465,3.535,466,3.535,467,3.535,468,3.535,469,3.535,470,3.535,471,3.535,472,3.535,473,3.535,474,3.535,475,3.535,476,3.535,477,3.535,478,3.535,479,3.535]],["title/interfaces/DevelopmentCard.html",[0,0.105,480,2.648]],["body/interfaces/DevelopmentCard.html",[0,0.189,2,0.649,3,0.109,4,0.109,5,0.109,6,1.314,8,1.52,10,2.194,11,1.712,12,3.522,13,0.215,14,0.445,15,1.834,16,1.945,18,1.204,19,0.61,20,0.012,22,0.416,23,2.343,24,3.177,25,2.726,29,0.278,30,1.765,32,1.794,34,1.147,35,1.147,36,1.186,37,1.226,38,1.646,39,1.646,40,1.973,41,3.66,43,2.848,44,1.549,45,1.133,46,2.343,47,0.007,48,0.007,103,1.56,139,2.343,141,3.327,148,2.874,187,3.935,252,5.621,253,5.149,256,4.654,259,3.627,260,3.012,263,3.627,264,3.012,267,2.343,268,2.513,275,2.848,276,3.012,277,3.342,284,3.012,480,4.759,481,2.726,482,6.171,483,6.171,484,6.389,485,6.171,486,6.171,487,6.171,488,3.195,489,5.922,490,3.935,491,3.445,492,3.935,493,3.935,494,3.445,495,3.445,496,6.389,497,3.012,498,4.347,499,3.445,500,3.445,501,3.445,502,3.445,503,3.445,504,3.012,505,3.445,506,1.794,507,2.726,508,3.012,509,5.101,510,3.445,511,3.445,512,3.012,513,4.347,514,3.445,515,3.445,516,3.445,517,3.012]],["title/components/DiceComponent.html",[49,1.697,219,2.066]],["body/components/DiceComponent.html",[3,0.116,4,0.116,5,0.116,13,0.229,14,0.465,16,1.594,19,0.383,20,0.012,22,0.424,29,0.14,36,1.79,44,1.594,47,0.007,48,0.007,49,2.474,50,1.827,51,2.836,52,2.1,53,2.213,54,2.1,55,2.1,56,3.043,58,2.1,59,4.526,60,4.31,62,3.139,64,2.978,66,1.915,87,1.182,88,2.675,89,3.765,98,4.407,99,4.199,100,2.148,102,1.522,103,1.011,104,3.146,106,2.566,107,2.596,110,4.413,128,0.736,133,2.213,134,0.528,135,2.494,136,2.675,142,2.1,144,1.182,145,1.398,146,1.827,148,2.054,149,1.683,150,0.76,151,1.501,152,3.206,154,3.647,200,4.115,201,2.675,202,2.675,203,2.902,204,2.675,205,2.675,206,2.1,207,2.836,208,2.708,209,2.1,210,3.765,211,2.1,212,2.1,213,1.827,214,2.1,215,1.827,216,2.1,217,1.827,218,2.1,219,3.276,220,2.1,221,1.827,222,2.1,223,1.827,224,2.1,225,1.827,226,2.1,227,1.91,228,1.305,229,2.1,230,2.1,301,2.1,346,1.221,347,2.217,506,2.708,518,3.667,519,5.2,520,6.041,521,5.2,522,7.208,523,6.573,524,6.573,525,6.573,526,6.573,527,4.545,528,6.573,529,5.2,530,3.667,531,3.667,532,3.667,533,3.667,534,4.545,535,3.968,536,3.667,537,3.667,538,2.343,539,2.675,540,3.667,541,3.667,542,3.667,543,3.667,544,3.667,545,3.667,546,5.746,547,3.793,548,3.139]],["title/modules/DiceModule.html",[231,1.98,358,2.818]],["body/modules/DiceModule.html",[3,0.182,4,0.182,5,0.182,20,0.012,22,0.462,29,0.22,47,0.01,48,0.01,56,2.27,128,1.154,150,1.191,219,4.255,233,2.442,234,3.086,238,3.342,239,2.746,240,2.442,242,3.815,243,4.006,244,3.342,245,3.486,246,2.746,248,2.746,358,5.629,549,5.024,550,5.024,551,5.024,552,5.747,553,5.747,554,6.114,555,4.548]],["title/injectables/DiscardPileCardsEffects.html",[418,3.28,556,0.944]],["body/injectables/DiscardPileCardsEffects.html",[3,0.124,4,0.124,5,0.124,9,1.811,13,0.244,14,0.486,16,0.948,19,0.288,20,0.012,22,0.444,29,0.149,44,1.784,47,0.008,48,0.008,61,3.666,87,1.26,100,1.917,102,1.144,103,0.76,128,0.785,134,1.023,148,2.806,149,1.793,150,0.81,177,2.872,179,3.114,301,2.238,321,1.947,346,2.082,347,1.83,415,1.295,418,4.302,420,4.289,556,1.238,557,1.49,558,4.539,559,2.238,560,6.252,561,2.56,562,2.759,563,2.238,564,3.907,565,4.323,566,4.214,567,5.437,568,5.437,569,4.302,570,4.302,571,5.437,572,5.437,573,4.302,574,3.416,575,5.437,576,4.302,577,4.597,578,3.092,579,5.437,580,3.774,581,3.282,582,3.282,583,3.282,584,3.282,585,3.282,586,3.282,587,3.282,588,3.282,589,3.282,590,4.302,591,3.282,592,3.282,593,2.371,594,3.282,595,4.302,596,3.416,597,2.238,598,2.238,599,2.131,600,2.131,601,2.035,602,2.85,603,3.966,604,1.074,605,3.416,606,1.345]],["title/interfaces/DiscardPileCardsEntity.html",[0,0.105,607,3.023]],["body/interfaces/DiscardPileCardsEntity.html",[0,0.176,2,1.068,3,0.18,4,0.18,5,0.18,8,2.502,13,0.354,14,0.621,15,1.94,18,1.315,19,0.552,20,0.012,29,0.265,30,1.375,47,0.01,48,0.01,134,0.816,177,2.47,415,1.034,420,3.423,558,3.623,577,3.856,605,4.957,607,5.468,608,3.423,609,3.423,610,3.597,611,4.92,612,3.093]],["title/injectables/DiscardPileCardsFacade.html",[412,2.818,556,0.944]],["body/injectables/DiscardPileCardsFacade.html",[3,0.121,4,0.121,5,0.121,9,1.784,13,0.239,14,0.479,15,0.899,16,1.299,18,0.59,19,0.52,20,0.012,22,0.43,29,0.146,31,2.922,32,2.79,47,0.008,48,0.008,66,1.973,87,1.727,100,2.171,102,1.568,103,1.042,106,2.201,107,2.886,128,0.768,134,1.119,141,2.79,144,1.233,145,1.459,150,0.793,151,1.566,177,2.99,179,3.069,190,2.67,323,0.928,346,2.231,347,1.961,412,3.643,415,1.418,420,4.696,424,1.828,556,1.22,557,1.459,558,4.97,561,2.742,562,2.955,602,2.791,603,4.509,604,1.051,613,2.309,614,6.182,615,6.182,616,2.128,617,6.182,618,5.357,619,2.191,620,3.224,621,3.826,622,5.357,623,5.357,624,3.826,625,3.826,626,3.069,627,3.069,628,2.79,629,2.79,630,3.069,631,3.069,632,3.826,633,4.385,634,5.357,635,3.344,636,5.357,637,3.027,638,5.357,639,3.027,640,3.069,641,3.069,642,1.672,643,2.922,644,3.069,645,3.069,646,3.069,647,3.069,648,3.069,649,5.357,650,3.826,651,1.755,652,3.826,653,3.826,654,1.992,655,3.826,656,2.601,657,3.826,658,3.826]],["title/interfaces/DiscardPileCardsPartialState.html",[0,0.105,659,3.28]],["body/interfaces/DiscardPileCardsPartialState.html",[0,0.152,2,0.853,3,0.143,4,0.143,5,0.143,11,1.559,13,0.283,14,0.604,18,0.927,19,0.334,20,0.012,22,0.423,29,0.294,30,1.743,34,1.508,35,1.508,36,1.559,37,1.612,45,1.032,47,0.009,48,0.009,134,0.652,177,2.558,323,1.098,333,2.553,415,0.826,420,2.734,488,2.461,558,2.893,573,3.584,576,3.584,577,4.587,590,3.584,593,2.316,595,3.584,602,3.303,603,4.384,604,1.245,606,1.559,607,3.303,616,2.474,642,2.607,659,4.756,660,1.924,661,6.537,662,5.918,663,2.652,664,2.652,665,2.652,666,1.924,667,2.461,668,1.998,669,3.171,670,3.171,671,1.854,672,2.358,673,2.47,674,3.959,675,5.254,676,3.959,677,2.078,678,2.078,679,2.164,680,3.171,681,3.959,682,3.959,683,3.959,684,5.254,685,3.959,686,3.959,687,3.959]],["title/interfaces/DiscardPileCardsState.html",[0,0.105,662,3.28]],["body/interfaces/DiscardPileCardsState.html",[0,0.148,2,0.814,3,0.137,4,0.137,5,0.137,11,2.006,13,0.27,14,0.59,18,1.17,19,0.52,20,0.012,22,0.415,29,0.29,30,1.71,34,1.44,35,1.44,36,1.488,37,1.539,45,0.985,47,0.008,48,0.008,103,1.371,134,0.622,177,2.511,323,1.048,333,2.475,415,0.788,420,2.609,488,3.106,558,2.761,573,3.42,576,3.42,577,4.481,590,3.42,593,2.273,595,3.42,602,3.153,603,4.25,604,1.188,606,1.488,607,3.153,616,2.669,642,2.591,659,3.42,660,1.836,661,5.093,662,5.581,663,2.571,664,2.571,665,2.908,666,1.836,667,2.385,668,3.112,669,3.421,670,3.421,671,1.77,672,2.251,673,2.357,674,3.779,675,5.093,676,3.779,677,1.983,678,1.983,679,2.065,680,3.112,681,3.779,682,3.779,683,3.779,684,5.093,685,3.779,686,3.779,687,3.779]],["title/interfaces/Domain.html",[0,0.105,186,3.023]],["body/interfaces/Domain.html",[0,0.19,2,1.07,3,0.18,4,0.18,5,0.18,6,2.167,8,2.508,11,2.392,13,0.355,14,0.621,15,1.941,18,1.206,19,0.512,20,0.012,22,0.409,29,0.265,30,1.378,47,0.01,48,0.01,186,5.473,197,3.979,251,5.21,254,3.995,257,4.793,258,4.146,266,3.865,612,3.1,688,5.683,689,5.683]],["title/components/DomainComponent.html",[49,1.697,221,2.066]],["body/components/DomainComponent.html",[3,0.063,4,0.063,5,0.063,13,0.124,14,0.29,16,1.829,18,1.284,19,0.551,20,0.012,22,0.351,29,0.076,44,1.706,45,1.415,47,0.005,48,0.005,49,1.687,50,0.989,51,1.771,52,2.361,53,1.198,54,1.136,55,1.136,56,3.109,58,1.136,59,3.881,60,3.695,62,1.96,64,1.86,66,1.196,87,1.047,90,1.96,91,2.875,98,3.006,99,3.043,100,2.222,102,2.168,103,1.44,104,1.033,106,2.637,107,2.454,110,4.243,128,0.398,129,1.198,133,1.198,134,0.286,135,1.349,136,1.447,137,3.835,138,3.835,139,3.835,140,4.114,141,2.937,143,3.835,144,1.047,145,0.756,146,0.989,148,0.784,149,0.91,150,0.411,151,1.329,158,1.734,181,2.368,186,3.832,194,2.569,197,1.136,201,1.447,202,1.447,204,1.447,205,1.447,206,1.136,207,1.771,208,1.691,209,1.136,210,2.728,211,1.136,212,1.136,213,0.989,214,1.136,215,0.989,216,1.136,217,0.989,218,1.136,219,0.989,220,1.136,221,2.373,222,1.136,223,0.989,224,1.136,225,0.989,226,1.136,227,1.033,228,0.706,229,1.136,230,1.136,249,2.803,346,1.879,347,1.651,352,0.948,480,2.633,610,1.819,651,2.851,672,1.691,690,1.984,691,4.121,692,3.247,693,3.247,694,3.247,695,3.247,696,2.838,697,4.763,698,3.247,699,3.247,700,3.247,701,3.247,702,3.247,703,3.247,704,3.247,705,2.569,706,3.247,707,2.569,708,2.838,709,2.569,710,2.838,711,4.859,712,1.984,713,3.247,714,1.984,715,3.247,716,1.984,717,3.247,718,1.984,719,3.247,720,1.984,721,2.838,722,1.984,723,1.984,724,1.984,725,1.984,726,3.247,727,1.984,728,2.803,729,1.984,730,1.984,731,3.247,732,1.984,733,3.247,734,1.984,735,3.247,736,1.984,737,3.247,738,1.984,739,2.838,740,1.984,741,3.572,742,3.247,743,1.984,744,2.838,745,1.984,746,2.838,747,1.984,748,2.838,749,1.984,750,1.984,751,1.984,752,1.984,753,1.984,754,1.984,755,2.838,756,1.734,757,1.57,758,1.57,759,1.447,760,3.603,761,1.984,762,1.984,763,1.984,764,3.247,765,1.984,766,3.247,767,3.247,768,1.984,769,1.984,770,1.984,771,1.984,772,2.838,773,3.247,774,3.247,775,1.984,776,1.984,777,1.984,778,3.247,779,1.984,780,1.734,781,1.734,782,1.984,783,1.984,784,1.984,785,1.984,786,1.984,787,1.984,788,1.984,789,1.984,790,3.247,791,3.247,792,2.838,793,3.247,794,7.145,795,2.838,796,4.763,797,3.247,798,2.838,799,4.763,800,2.838,801,3.247,802,3.247,803,2.838,804,3.247,805,6.213,806,6.213,807,2.838,808,3.247,809,2.838,810,2.838,811,2.838,812,3.247,813,2.838,814,4.763,815,1.984,816,1.984,817,1.984,818,1.984,819,1.984]],["title/modules/DomainModule.html",[231,1.98,359,2.818]],["body/modules/DomainModule.html",[3,0.185,4,0.185,5,0.185,20,0.012,22,0.447,29,0.223,47,0.01,48,0.01,56,2.301,128,1.17,150,1.207,221,4.262,233,2.475,234,3.112,238,3.37,239,2.783,240,2.475,242,3.846,243,4.039,244,3.37,245,3.514,246,2.783,248,2.783,359,5.644,820,5.092,821,5.092,822,5.092,823,5.825,824,5.825]],["title/injectables/DomainsCardsEffects.html",[425,3.28,556,0.944]],["body/injectables/DomainsCardsEffects.html",[3,0.033,4,0.033,5,0.033,9,0.626,13,0.066,14,0.168,15,1.566,16,0.619,18,0.479,19,0.263,20,0.013,22,0.334,29,0.04,30,1.868,34,1.7,35,1.7,36,1.757,37,1.817,38,2.203,39,2.203,44,1.838,45,0.814,47,0.003,48,0.003,61,1.979,66,0.693,82,2.02,87,0.606,90,2.603,100,1.725,102,0.747,103,0.496,106,0.669,110,1.462,128,0.211,129,2.603,134,0.892,144,0.606,145,0.401,146,0.524,147,1.279,148,2.098,149,0.482,150,0.218,151,2.175,161,2.113,178,2.459,179,0.602,181,1.372,189,0.919,192,3.413,193,4.462,194,4.35,195,5.512,197,1.78,256,0.602,272,1.372,273,1.372,275,3.77,277,2.924,279,1.372,281,3.511,321,0.524,323,0.255,346,1.887,347,1.658,352,0.502,390,3.135,391,3.135,415,1.13,424,0.502,425,1.488,427,3.742,506,3.428,508,0.919,556,0.428,557,0.401,559,0.602,561,1.045,562,1.126,563,0.602,565,3.936,566,3.899,580,1.541,581,1.135,582,1.135,583,1.135,584,1.135,585,1.135,586,1.135,587,1.135,588,1.135,589,1.135,591,1.135,592,2.397,593,2.359,594,1.135,597,0.602,598,0.602,599,0.573,600,1.392,601,0.547,604,0.289,606,0.362,610,1.903,611,2.397,620,1.371,628,0.979,629,1.618,651,1.64,654,0.547,705,2.02,707,2.02,709,2.02,711,2.113,728,1.736,758,0.832,792,3.471,807,1.644,809,5.317,810,4.462,811,3.471,813,1.644,825,3.96,826,2.552,827,2.552,828,2.552,829,2.02,830,2.552,831,2.552,832,2.231,833,1.881,834,2.552,835,2.552,836,1.051,837,1.881,838,1.051,839,5.272,840,1.051,841,1.051,842,1.881,843,4.26,844,5.105,845,1.881,846,1.881,847,3.107,848,3.107,849,3.107,850,3.107,851,3.97,852,1.881,853,6.082,854,1.881,855,4.603,856,3.107,857,5.824,858,6.405,859,4.952,860,5.272,861,5.105,862,1.051,863,1.881,864,2.113,865,2.113,866,2.231,867,1.881,868,1.051,869,1.881,870,3.107,871,1.881,872,1.881,873,4.313,874,1.644,875,3.146,876,1.881,877,1.881,878,5.317,879,1.881,880,1.881,881,1.881,882,1.881,883,1.881,884,1.881,885,3.107,886,3.107,887,1.881,888,3.107,889,1.881,890,4.031,891,1.881,892,1.881,893,1.881,894,1.881,895,1.881,896,1.881,897,3.97,898,1.881,899,5.105,900,3.107,901,3.107,902,1.881,903,4.031,904,4.611,905,4.031,906,1.051,907,1.881,908,4.031,909,3.97,910,3.77,911,1.881,912,1.881,913,4.813,914,3.471,915,3.471,916,4.611,917,1.051,918,1.881,919,1.881,920,4.611,921,4.611,922,3.107,923,3.107,924,4.611,925,4.611,926,1.881,927,4.611,928,1.881,929,3.107,930,1.881,931,3.107,932,1.881,933,1.051,934,1.881,935,2.231,936,1.881,937,3.107,938,1.881,939,1.881,940,1.881,941,1.051,942,1.881,943,1.488,944,2.231,945,1.051,946,1.881,947,1.881,948,1.881,949,1.051,950,1.881,951,1.881,952,1.644,953,1.051,954,1.881,955,1.881,956,1.881,957,1.881,958,1.881,959,1.051,960,1.881,961,2.266,962,1.051,963,1.051,964,1.881,965,1.644,966,1.051,967,1.051,968,0.919,969,0.919,970,0.767,971,0.767,972,0.919,973,0.919,974,1.051,975,1.051,976,2.552,977,1.881,978,1.881,979,1.372,980,1.372,981,1.372,982,1.372,983,1.051]],["title/interfaces/DomainsCardsEntity.html",[0,0.105,129,2.502]],["body/interfaces/DomainsCardsEntity.html",[0,0.136,2,0.564,3,0.095,4,0.095,5,0.095,8,1.321,10,1.321,13,0.187,14,0.401,15,1.636,18,1.183,19,0.528,20,0.012,22,0.317,29,0.205,30,1.304,34,1.494,35,0.997,44,0.726,45,1.766,47,0.006,48,0.006,90,2.707,103,0.872,129,3.861,134,0.431,137,4.733,138,4.349,139,4.978,143,5.271,144,1.446,145,1.142,197,1.715,256,3.421,272,3.272,273,3.272,277,4.886,279,5.592,281,4.906,282,2.618,342,6.948,343,6.948,352,1.431,415,0.546,427,1.808,599,1.633,600,4.579,601,1.559,608,1.808,609,2.707,610,2.963,611,4.053,612,1.633,711,4.565,825,1.913,859,5.869,860,5.793,864,4.565,865,4.565,866,7.34,890,5.869,944,2.618,984,5.061,985,5.061,986,4.485,987,4.485,988,4.485,989,4.485,990,4.485,991,4.485,992,4.485,993,4.485,994,4.485,995,4.485,996,4.485,997,4.485,998,4.485,999,4.485,1000,4.485,1001,4.485,1002,4.485,1003,4.485,1004,3.549,1005,3.549,1006,4.485]],["title/injectables/DomainsCardsFacade.html",[91,2.502,556,0.944]],["body/injectables/DomainsCardsFacade.html",[3,0.066,4,0.066,5,0.066,9,1.12,13,0.13,14,0.301,15,1.353,16,1.83,18,1.289,19,0.565,20,0.012,22,0.357,29,0.079,44,1.584,45,0.472,47,0.005,48,0.005,66,1.239,70,4.273,82,3.868,87,1.084,91,2.031,100,2.274,102,2.209,103,1.467,106,2.808,107,3.197,110,4.358,128,0.416,134,1.158,144,0.668,145,0.79,146,1.033,150,0.429,151,0.848,190,1.676,197,2.432,256,3.297,323,0.503,346,1.414,347,1.573,415,1.467,424,0.99,427,4.856,547,1.511,556,0.766,557,0.79,561,2.001,562,2.157,604,0.57,610,2.371,611,3.814,613,1.251,616,1.462,619,1.187,620,2.54,626,1.927,627,1.927,628,1.752,629,1.752,630,1.927,631,1.927,633,3.297,640,1.927,641,1.927,642,1.05,643,1.835,644,1.927,645,1.927,646,1.927,647,1.927,648,1.927,651,0.951,654,1.079,656,4.124,705,2.662,707,2.662,708,2.941,709,2.662,711,4.669,739,2.941,741,4.841,744,2.941,746,2.941,748,2.941,759,3.565,825,5.14,829,2.662,832,4.273,864,3.324,865,3.324,874,2.941,971,1.511,972,1.811,973,1.811,984,4.799,1007,4.246,1008,4.246,1009,4.887,1010,4.246,1011,3.364,1012,3.364,1013,3.364,1014,3.364,1015,3.364,1016,3.364,1017,4.246,1018,3.364,1019,3.364,1020,4.273,1021,4.246,1022,3.364,1023,4.887,1024,1.811,1025,2.072,1026,2.072,1027,2.072,1028,2.072,1029,3.364,1030,2.072,1031,3.364,1032,2.072,1033,3.364,1034,2.072,1035,3.364,1036,2.072,1037,3.364,1038,2.072,1039,3.364,1040,2.072,1041,2.072,1042,2.072,1043,3.364,1044,2.072,1045,2.072,1046,3.364,1047,2.072,1048,1.811,1049,2.072,1050,3.364,1051,3.565,1052,1.811,1053,2.072,1054,2.072,1055,1.64,1056,2.072,1057,2.072,1058,3.364,1059,2.072,1060,2.072,1061,2.072,1062,1.811,1063,2.072,1064,3.364,1065,2.072,1066,3.364,1067,1.64,1068,1.811,1069,2.072,1070,2.072,1071,2.072,1072,2.072,1073,2.072,1074,2.072,1075,2.072,1076,2.072,1077,2.072,1078,2.072,1079,2.072,1080,2.072,1081,2.072,1082,2.072,1083,2.072,1084,2.072,1085,2.072,1086,2.072,1087,2.072,1088,2.072,1089,4.698,1090,2.072,1091,2.072,1092,2.072,1093,2.072,1094,2.072]],["title/interfaces/DomainsCardsPartialState.html",[0,0.105,1095,3.28]],["body/interfaces/DomainsCardsPartialState.html",[0,0.132,2,0.694,3,0.117,4,0.117,5,0.117,11,1.27,13,0.231,14,0.467,15,1.549,18,0.805,19,0.272,20,0.013,22,0.388,29,0.276,30,1.871,44,1.266,45,1.584,47,0.007,48,0.007,90,3.658,129,2.226,134,0.531,161,2.508,197,2.99,275,2.113,323,0.894,333,2.218,415,0.672,427,2.226,488,2.138,506,1.921,593,2.242,604,1.014,606,1.27,616,2.269,642,2.643,660,1.567,663,2.304,664,2.304,665,2.304,666,1.567,667,2.138,668,2.674,669,2.908,670,2.908,671,1.51,680,2.908,825,2.356,855,2.918,864,3.55,865,3.55,913,2.918,943,2.918,961,2.69,971,2.69,979,2.69,980,2.69,981,2.69,982,2.69,1095,4.131,1096,6.08,1097,5.504,1098,5.761,1099,3.224,1100,4.564,1101,3.224,1102,3.224,1103,3.224,1104,3.224,1105,3.224,1106,4.564,1107,3.224,1108,3.224,1109,3.224,1110,3.224,1111,3.224,1112,3.224,1113,3.224,1114,3.224,1115,5.298,1116,3.224,1117,5.761,1118,3.224,1119,3.224,1120,3.224,1121,3.224,1122,5.761,1123,3.224,1124,5.761,1125,3.224,1126,4.564,1127,3.224,1128,3.224,1129,4.564,1130,3.224,1131,3.224,1132,2.69,1133,3.224,1134,3.224,1135,3.224,1136,3.224,1137,3.224,1138,3.224]],["title/interfaces/DomainsCardsState.html",[0,0.105,1097,3.28]],["body/interfaces/DomainsCardsState.html",[0,0.129,2,0.67,3,0.113,4,0.113,5,0.113,11,1.753,13,0.223,14,0.455,15,1.524,18,1.101,19,0.478,20,0.013,22,0.382,29,0.273,30,1.855,44,1.235,45,1.563,47,0.007,48,0.007,90,3.587,103,0.99,129,2.149,134,0.512,161,2.421,197,2.916,275,2.039,323,0.863,333,2.163,415,0.649,427,2.149,488,2.922,506,1.854,593,2.212,604,0.978,606,1.226,616,2.53,642,2.635,660,1.512,663,2.247,664,2.247,665,2.623,666,1.512,667,2.085,668,2.623,669,3.243,670,3.243,671,1.458,680,2.862,825,2.274,855,2.817,864,3.462,865,3.462,913,2.817,943,2.817,961,2.597,971,2.597,979,2.597,980,2.597,981,2.597,982,2.597,1095,2.817,1096,4.451,1097,5.132,1098,6.424,1099,3.112,1100,4.451,1101,3.112,1102,3.112,1103,3.112,1104,3.112,1105,3.112,1106,4.451,1107,3.112,1108,3.112,1109,3.112,1110,3.112,1111,3.112,1112,3.112,1113,3.112,1114,3.112,1115,5.195,1116,3.112,1117,5.67,1118,3.112,1119,3.112,1120,3.112,1121,3.112,1122,5.67,1123,3.112,1124,5.67,1125,3.112,1126,4.451,1127,3.112,1128,3.112,1129,4.451,1130,3.112,1131,3.112,1132,2.597,1133,3.112,1134,3.112,1135,3.112,1136,3.112,1137,3.112,1138,3.112]],["title/interfaces/EventCard.html",[0,0.105,1139,3.023]],["body/interfaces/EventCard.html",[0,0.206,2,0.943,3,0.159,4,0.159,5,0.159,6,1.909,8,2.209,10,2.831,11,2.209,12,4.275,13,0.313,14,0.574,15,1.857,16,1.916,17,6.252,18,1.255,19,0.522,20,0.012,22,0.44,23,3.404,24,4.099,25,3.962,26,4.68,27,4.376,29,0.285,30,1.556,32,2.607,34,1.667,35,1.667,36,1.723,37,1.782,38,2.392,39,2.392,40,2.868,41,2.868,43,3.675,44,1.214,45,1.14,46,3.404,47,0.009,48,0.009,480,3.198,548,3.873,1139,5.448,1140,3.962,1141,6.11,1142,5.006,1143,7.468,1144,5.006,1145,4.376]],["title/injectables/EventsPileCardsEffects.html",[429,3.28,556,0.944]],["body/injectables/EventsPileCardsEffects.html",[3,0.124,4,0.124,5,0.124,9,1.811,13,0.244,14,0.486,16,0.948,19,0.288,20,0.012,22,0.453,29,0.149,44,1.784,47,0.008,48,0.008,61,3.666,87,1.753,100,1.917,102,1.144,103,0.76,128,0.785,134,1.023,148,2.806,149,1.793,150,0.81,151,2.226,177,2.894,321,1.947,323,0.948,346,2.082,347,1.83,415,1.295,424,1.867,429,4.302,431,4.289,556,1.238,557,1.49,559,2.238,561,2.56,562,2.759,563,2.238,565,4.323,566,4.214,574,3.416,578,3.092,580,3.774,581,3.282,582,3.282,583,3.282,584,3.282,585,3.282,586,3.282,587,3.282,588,3.282,589,3.282,591,3.282,592,3.282,593,2.371,594,3.282,596,3.416,597,2.238,598,2.238,604,1.074,606,1.345,620,2.983,1146,4.539,1147,6.252,1148,6.252,1149,3.907,1150,5.437,1151,4.302,1152,4.7,1153,6.211,1154,5.437,1155,4.302,1156,5.437,1157,5.437,1158,4.302,1159,2.85,1160,4.561,1161,3.416]],["title/interfaces/EventsPileCardsEntity.html",[0,0.105,1162,2.648]],["body/interfaces/EventsPileCardsEntity.html",[0,0.182,2,0.979,3,0.165,4,0.165,5,0.165,8,2.294,13,0.325,14,0.588,15,1.904,18,1.265,19,0.484,20,0.012,22,0.424,29,0.275,30,1.894,44,1.261,47,0.009,48,0.009,134,0.748,144,1.676,177,2.34,281,3.138,289,4.545,352,2.484,415,0.948,431,3.138,599,2.836,600,2.836,601,2.707,608,3.138,609,3.968,610,3.575,612,2.836,1132,4.794,1146,3.322,1152,4.199,1153,4.545,1162,4.838,1163,4.114,1164,4.114,1165,3.322,1166,3.792,1167,5.199,1168,6.573,1169,4.545,1170,5.199,1171,5.199,1172,5.199,1173,4.545,1174,5.199]],["title/injectables/EventsPileCardsFacade.html",[413,2.648,556,0.944]],["body/injectables/EventsPileCardsFacade.html",[3,0.124,4,0.124,5,0.124,9,1.813,13,0.245,14,0.487,16,0.949,19,0.288,20,0.012,22,0.419,29,0.149,47,0.008,48,0.008,66,2.004,87,1.754,100,2.218,102,1.146,103,0.761,106,2.531,107,3.127,128,0.786,134,1.139,150,0.811,151,1.602,177,3.012,190,2.712,323,0.949,346,2.084,347,1.832,413,3.477,415,1.443,424,1.87,431,4.779,556,1.24,557,1.492,561,2.769,562,2.985,604,1.076,613,2.362,616,2.154,619,2.242,620,3.248,626,3.117,627,3.117,628,2.834,629,2.834,630,3.117,631,3.117,633,4.216,640,3.117,641,3.117,642,1.699,643,2.968,644,3.117,645,3.117,646,3.117,647,3.117,648,3.117,651,1.796,654,2.038,1067,3.097,1146,5.058,1159,2.854,1160,4.564,1161,3.421,1175,6.257,1176,6.257,1177,6.764,1178,6.764,1179,5.913,1180,2.854,1181,3.097,1182,2.661,1183,3.913,1184,2.854,1185,3.421,1186,5.442,1187,3.421,1188,5.442,1189,3.421,1190,5.442,1191,3.913,1192,3.913,1193,3.913,1194,3.913,1195,3.913,1196,3.913]],["title/interfaces/EventsPileCardsPartialState.html",[0,0.105,1197,3.28]],["body/interfaces/EventsPileCardsPartialState.html",[0,0.145,2,0.793,3,0.133,4,0.133,5,0.133,11,1.449,13,0.263,14,0.582,18,1.003,19,0.31,20,0.012,22,0.411,29,0.287,30,1.769,34,1.402,35,1.402,36,1.449,37,1.498,44,1.388,45,1.589,47,0.008,48,0.008,134,0.606,177,2.483,323,1.021,333,2.431,415,0.767,431,2.541,488,2.343,593,2.249,604,1.157,606,1.449,616,2.401,642,2.624,660,1.788,663,2.525,664,2.525,665,2.525,666,1.788,667,2.343,668,3.219,669,3.078,670,3.078,671,1.723,672,2.192,673,2.296,677,1.931,678,1.931,679,2.011,680,3.078,1146,2.689,1151,3.331,1152,4.456,1155,3.331,1158,3.331,1159,3.07,1160,4.174,1162,2.689,1197,4.528,1198,6.377,1199,5.773,1200,3.679,1201,5.002,1202,3.679,1203,3.679,1204,3.679,1205,3.679,1206,5.683,1207,3.679,1208,3.679,1209,3.679,1210,3.679,1211,3.679,1212,3.679,1213,5.683,1214,5.002,1215,3.679]],["title/interfaces/EventsPileCardsState.html",[0,0.105,1199,3.28]],["body/interfaces/EventsPileCardsState.html",[0,0.141,2,0.759,3,0.128,4,0.128,5,0.128,11,1.912,13,0.252,14,0.569,18,1.174,19,0.505,20,0.012,22,0.403,29,0.284,30,1.742,34,1.342,35,1.342,36,1.387,37,1.435,44,1.347,45,1.56,47,0.008,48,0.008,103,1.332,134,0.58,177,2.438,323,0.977,333,2.36,415,0.735,431,2.433,488,3.041,593,2.208,604,1.108,606,1.387,616,2.62,642,2.611,660,1.712,663,2.451,664,2.451,665,2.805,666,1.712,667,2.274,668,3.422,669,3.358,670,3.358,671,1.65,672,2.099,673,2.198,677,1.849,678,1.849,679,1.926,680,3.023,1146,2.575,1151,3.189,1152,4.376,1155,3.189,1158,3.189,1159,2.94,1160,4.052,1162,2.575,1197,3.189,1198,4.856,1199,5.42,1200,3.523,1201,4.856,1202,3.523,1203,3.523,1204,3.523,1205,3.523,1206,5.556,1207,3.523,1208,3.523,1209,3.523,1210,3.523,1211,3.523,1212,3.523,1213,5.556,1214,4.856,1215,3.523]],["title/injectables/FaceUpPilesCardsEffects.html",[433,3.28,556,0.944]],["body/injectables/FaceUpPilesCardsEffects.html",[3,0.107,4,0.107,5,0.107,9,1.634,13,0.211,14,0.439,15,1.153,16,0.82,19,0.249,20,0.012,22,0.452,29,0.129,44,1.797,45,1.118,47,0.007,48,0.007,61,3.495,87,1.581,94,4.046,100,1.796,102,0.99,103,0.658,128,0.679,134,0.968,146,1.685,148,2.28,149,1.552,150,0.701,151,2.009,177,1.746,179,2.81,228,2.846,275,2.81,304,4.289,321,1.685,323,0.82,346,1.923,347,1.69,415,1.226,424,1.616,433,3.882,435,4.641,436,4.059,506,2.555,507,3.882,556,1.118,557,1.289,559,1.937,561,2.364,562,2.548,563,1.937,565,4.145,566,4.018,580,3.485,581,2.961,582,2.961,583,2.961,584,2.961,585,2.961,586,2.961,587,2.961,588,2.961,589,2.961,591,2.961,592,2.961,593,2.389,594,2.961,597,1.937,598,1.937,604,0.929,606,1.164,620,2.795,651,2.649,654,1.761,839,5.012,857,4.289,875,3.579,903,4.289,905,4.289,908,4.289,910,5.537,968,2.956,969,2.956,970,2.467,1179,5.047,1216,4.296,1217,5.774,1218,3.382,1219,4.906,1220,3.882,1221,5.047,1222,3.382,1223,4.906,1224,3.882,1225,3.882,1226,3.382,1227,4.906,1228,4.906,1229,4.906,1230,4.906,1231,5.116,1232,4.906,1233,4.906,1234,3.382,1235,2.467,1236,2.956,1237,2.956]],["title/interfaces/FaceUpPilesCardsEntity.html",[0,0.105,130,2.818]],["body/interfaces/FaceUpPilesCardsEntity.html",[0,0.172,2,0.867,3,0.146,4,0.146,5,0.146,8,2.031,13,0.288,14,0.543,15,1.851,18,1.278,19,0.501,20,0.012,22,0.4,29,0.26,30,1.823,44,1.116,45,1.549,47,0.009,48,0.009,94,3.881,130,4.917,134,0.662,144,1.958,145,1.755,147,4.624,228,2.162,249,4.624,255,3.641,280,4.023,286,4.023,290,4.023,352,2.199,415,0.839,435,3.479,436,2.778,599,2.51,600,2.51,601,2.396,608,2.778,609,3.667,610,3.407,612,2.51,756,4.023,1216,2.94,1221,4.023,1238,4.933,1239,4.807,1240,5.31,1241,4.807,1242,4.602,1243,6.074,1244,6.8,1245,6.8,1246,6.8,1247,6.8,1248,6.8,1249,6.8,1250,6.074,1251,6.074]],["title/injectables/FaceUpPilesCardsFacade.html",[95,2.648,556,0.944]],["body/injectables/FaceUpPilesCardsFacade.html",[3,0.107,4,0.107,5,0.107,9,1.634,13,0.211,14,0.439,15,1.153,16,1.4,18,1.082,19,0.425,20,0.012,22,0.413,29,0.129,47,0.007,48,0.007,66,1.807,87,1.581,95,3.134,100,2.205,102,1.69,103,1.123,106,2.255,107,2.927,128,0.679,134,1.131,144,1.09,150,0.701,151,1.385,190,2.445,228,2.998,323,0.82,346,2.336,347,2.053,352,1.616,415,1.432,424,1.616,435,4.824,436,4.743,556,1.118,557,1.289,561,2.593,562,2.795,604,0.929,613,2.041,616,1.988,619,1.937,620,3.095,626,2.81,627,2.81,628,2.555,629,2.555,630,2.81,631,2.81,633,4.018,640,2.81,641,2.81,642,1.531,643,2.676,644,2.81,645,2.81,646,2.81,647,2.81,648,2.81,651,1.552,654,1.761,656,2.299,1024,2.956,1048,2.956,1055,2.676,1062,2.956,1089,6.131,1180,2.467,1182,2.299,1216,5.02,1231,4.211,1235,2.467,1236,2.956,1237,2.956,1238,3.134,1239,2.676,1240,2.956,1241,2.676,1252,5.774,1253,5.774,1254,5.774,1255,5.774,1256,5.774,1257,4.906,1258,4.906,1259,4.906,1260,4.906,1261,2.956,1262,4.906,1263,4.906,1264,3.382,1265,4.906,1266,4.906,1267,3.382,1268,4.906,1269,2.956,1270,4.906,1271,3.382,1272,3.382,1273,3.382,1274,3.382,1275,3.382]],["title/interfaces/FaceUpPilesCardsPartialState.html",[0,0.105,1276,3.28]],["body/interfaces/FaceUpPilesCardsPartialState.html",[0,0.148,2,0.817,3,0.137,4,0.137,5,0.137,11,1.493,13,0.271,14,0.591,15,1.552,18,0.901,19,0.32,20,0.012,22,0.416,29,0.29,30,1.713,34,1.445,35,1.445,36,1.493,37,1.544,45,1.33,47,0.008,48,0.008,94,4.217,130,2.949,134,0.624,228,2.514,323,1.052,333,2.481,415,0.791,435,4.045,436,2.618,488,2.391,593,2.276,604,1.192,606,1.493,616,2.431,642,2.633,660,1.843,663,2.577,664,2.577,665,2.577,666,1.843,667,2.391,668,2.913,669,3.116,670,3.116,671,1.776,672,2.259,673,2.365,677,1.99,678,1.99,679,2.072,680,3.116,1216,2.771,1220,3.432,1224,3.432,1225,3.432,1231,4.259,1235,3.164,1276,4.621,1277,6.444,1278,5.833,1279,3.791,1280,5.105,1281,3.791,1282,3.791,1283,3.791,1284,3.791,1285,5.105,1286,3.791,1287,3.791,1288,3.791,1289,3.791,1290,3.791]],["title/interfaces/FaceUpPilesCardsState.html",[0,0.105,1278,3.28]],["body/interfaces/FaceUpPilesCardsState.html",[0,0.143,2,0.781,3,0.131,4,0.131,5,0.131,11,1.95,13,0.259,14,0.577,15,1.516,18,1.156,19,0.511,20,0.012,22,0.408,29,0.286,30,1.681,34,1.381,35,1.381,36,1.428,37,1.476,45,1.29,47,0.008,48,0.008,94,4.122,103,1.348,130,2.82,134,0.597,228,2.468,323,1.006,333,2.407,415,0.756,435,3.971,436,2.504,488,3.068,593,2.235,604,1.14,606,1.428,616,2.64,642,2.62,660,1.762,663,2.5,664,2.5,665,2.847,666,1.762,667,2.319,668,3.306,669,3.384,670,3.384,671,1.698,672,2.16,673,2.262,677,1.903,678,1.903,679,1.982,680,3.059,1216,2.65,1220,3.282,1224,3.282,1225,3.282,1231,4.132,1235,3.025,1276,3.282,1277,4.952,1278,5.486,1279,3.626,1280,4.952,1281,3.626,1282,3.626,1283,3.626,1284,3.626,1285,4.952,1286,3.626,1287,3.626,1288,3.626,1289,3.626,1290,3.626]],["title/modules/FeatureEngineModule.html",[231,1.98,1291,3.28]],["body/modules/FeatureEngineModule.html",[3,0.2,4,0.2,5,0.2,20,0.012,22,0.436,29,0.242,47,0.011,48,0.011,56,2.5,128,1.271,150,1.312,233,2.689,244,3.54,245,3.692,246,3.024,248,3.024,1291,5.863,1292,6.329,1293,6.329]],["title/modules/FeatureGameModule.html",[231,1.98,312,2.818]],["body/modules/FeatureGameModule.html",[3,0.185,4,0.185,5,0.185,20,0.012,22,0.447,29,0.223,47,0.01,48,0.01,56,2.301,128,1.17,150,1.207,233,2.475,234,3.112,238,3.37,239,2.783,240,2.475,243,4.039,244,3.37,245,3.514,246,2.783,248,3.37,312,5.644,353,5.816,417,5.092,1294,5.092,1295,5.092,1296,5.825,1297,5.825,1298,5.825]],["title/injectables/GameEffects.html",[438,3.28,556,0.944]],["body/injectables/GameEffects.html",[3,0.117,4,0.117,5,0.117,13,0.231,14,0.468,16,0.896,19,0.272,20,0.013,22,0.447,29,0.141,34,1.741,35,1.741,36,1.799,37,1.86,38,2.497,39,2.497,44,1.599,45,1.82,47,0.007,48,0.007,61,3.601,87,1.685,100,1.87,102,1.081,103,0.718,128,0.742,134,1.001,144,1.191,148,2.395,149,1.695,150,0.765,151,2.14,321,1.841,323,0.896,346,2.02,347,2.414,390,3.554,391,3.554,415,1.269,438,4.135,556,1.19,557,1.408,563,2.116,565,4.255,566,4.138,597,2.116,620,2.91,677,3.026,843,5.302,965,4.569,1299,3.229,1300,4.799,1301,6.065,1302,6.065,1303,6.065,1304,3.693,1305,5.226,1306,6.065,1307,5.226,1308,5.226,1309,3.693,1310,5.226,1311,5.302,1312,6.594,1313,6.594,1314,6.594,1315,6.594,1316,6.594,1317,6.594,1318,3.693,1319,5.226,1320,5.226,1321,5.27,1322,5.302,1323,6.594,1324,5.226,1325,3.693,1326,3.693,1327,2.694,1328,2.694,1329,2.512,1330,3.229,1331,3.229,1332,3.229]],["title/injectables/GameFacade.html",[89,2.374,556,0.944]],["body/injectables/GameFacade.html",[3,0.109,4,0.109,5,0.109,9,2.425,13,0.216,14,0.445,16,1.644,19,0.5,20,0.012,21,4.084,22,0.416,29,0.132,45,1.33,47,0.007,48,0.007,66,1.833,87,1.112,89,2.851,100,2.291,102,1.984,103,1.318,106,2.653,107,3.209,128,0.693,134,1.169,142,3.662,144,1.112,145,1.315,150,0.715,154,4.092,190,2.481,254,3.186,301,1.976,323,0.837,346,2.352,347,2.182,415,1.481,527,4.351,534,4.351,535,3.859,556,1.134,557,1.315,561,2.618,619,1.976,620,3.116,626,2.851,627,2.851,628,2.592,629,2.592,630,2.851,631,2.851,633,2.851,640,2.851,641,2.851,642,1.553,643,2.715,644,2.851,645,2.851,646,2.851,647,2.851,648,2.851,651,1.583,1300,5.059,1321,4.259,1327,2.516,1328,2.516,1329,2.346,1330,3.016,1331,3.016,1332,3.016,1333,3.45,1334,4.621,1335,4.944,1336,4.621,1337,4.977,1338,4.351,1339,4.351,1340,6.393,1341,6.393,1342,4.977,1343,3.45,1344,4.977,1345,3.45,1346,3.45,1347,4.351,1348,3.45,1349,4.351,1350,3.45,1351,3.45,1352,3.45,1353,3.45,1354,4.977,1355,4.977,1356,3.45,1357,4.977,1358,3.45,1359,4.977,1360,3.45,1361,4.977,1362,3.45,1363,4.977,1364,3.45,1365,3.45,1366,3.45,1367,3.45,1368,3.45,1369,3.45,1370,3.45,1371,3.45,1372,3.45]],["title/interfaces/GamePartialState.html",[0,0.105,1329,2.818]],["body/interfaces/GamePartialState.html",[0,0.155,2,0.879,3,0.148,4,0.148,5,0.148,9,2.422,13,0.292,14,0.549,19,0.344,20,0.012,21,3.918,22,0.403,29,0.289,30,1.661,45,1.826,47,0.009,48,0.009,104,2.431,134,0.672,142,3.513,144,1.505,145,1.78,154,4.39,254,3.056,323,1.132,347,2.27,415,0.851,535,4.134,538,3.918,539,3.406,642,2.591,667,2.511,671,1.912,1321,4.995,1327,3.406,1328,3.406,1329,4.17,1334,5.419,1335,5.305,1336,5.419,1373,4.081,1374,6.603,1375,5.977,1376,5.987,1377,4.081,1378,4.081,1379,4.081,1380,4.081,1381,4.081,1382,4.081,1383,4.081,1384,4.081,1385,4.081]],["title/injectables/GameRulesService.html",[99,2.648,556,0.944]],["body/injectables/GameRulesService.html",[3,0.05,4,0.05,5,0.05,9,1.382,10,1.192,13,0.099,14,0.242,15,1.265,16,1.225,18,1.156,19,0.495,20,0.012,22,0.297,29,0.061,30,1.432,31,1.473,44,1.127,45,1.728,47,0.004,48,0.004,56,2.939,66,0.995,85,3.626,87,0.871,88,1.161,89,2.376,90,2.124,91,2.504,92,2.124,93,2.504,94,2.249,95,2.65,96,2.249,97,2.65,99,1.726,100,2.094,102,1.478,103,0.982,104,1.833,106,2.24,107,2.839,110,2.016,128,0.319,133,0.96,134,0.229,137,1.837,138,1.082,139,2.821,140,1.161,141,1.833,142,0.911,143,1.837,144,0.871,145,0.607,146,0.793,147,2.393,148,2.414,149,0.73,150,0.33,151,2.32,154,0.96,157,1.391,159,1.391,161,4.387,165,3.077,171,1.391,172,2.361,173,3.077,177,1.253,178,4.673,179,4.262,187,1.259,190,0.793,191,5.343,256,2.016,275,4.158,277,2.892,281,1.63,294,1.391,346,2.036,347,1.967,352,0.76,400,2.567,412,2.821,413,2.65,414,2.821,506,3.703,507,3.996,538,1.017,539,1.161,547,3.026,548,2.124,556,0.615,557,0.607,561,1.698,577,2.393,593,2.08,610,2.05,628,2.16,629,2.16,711,2.393,759,1.161,760,3.626,772,4.953,780,3.077,829,2.785,839,4.837,875,3.927,878,4.061,961,3.927,970,1.161,979,3.927,980,3.927,981,3.927,982,3.927,985,1.259,1020,3.077,1051,2.567,1141,1.259,1152,2.249,1162,2.968,1163,1.259,1238,3.619,1239,1.259,1241,2.137,1300,3.282,1386,6.504,1387,1.591,1388,3.077,1389,3.52,1390,3.077,1391,3.52,1392,3.52,1393,3.52,1394,2.785,1395,3.52,1396,3.52,1397,2.701,1398,2.701,1399,2.701,1400,4.148,1401,4.148,1402,3.52,1403,2.821,1404,1.591,1405,1.591,1406,3.434,1407,1.591,1408,1.591,1409,4.148,1410,1.591,1411,2.701,1412,1.591,1413,1.591,1414,2.701,1415,1.591,1416,2.701,1417,1.591,1418,1.591,1419,1.591,1420,1.591,1421,1.591,1422,1.591,1423,4.148,1424,5.05,1425,4.148,1426,2.701,1427,1.591,1428,2.701,1429,6.112,1430,2.701,1431,1.591,1432,2.701,1433,2.701,1434,1.591,1435,2.701,1436,1.591,1437,1.591,1438,2.701,1439,2.701,1440,1.591,1441,2.701,1442,2.701,1443,2.701,1444,2.701,1445,1.591,1446,2.701,1447,2.701,1448,1.591,1449,2.701,1450,2.701,1451,1.591,1452,2.701,1453,2.701,1454,2.701,1455,1.591,1456,1.259,1457,1.591,1458,1.591,1459,1.591,1460,1.591,1461,1.591,1462,1.591,1463,1.591,1464,1.591,1465,1.591,1466,1.591,1467,1.591,1468,1.591,1469,1.591,1470,1.591,1471,1.591,1472,1.591,1473,1.591,1474,1.591,1475,1.591,1476,2.701,1477,2.701,1478,2.701,1479,2.701,1480,2.361,1481,1.591,1482,2.701,1483,1.591,1484,1.391,1485,1.591,1486,2.701,1487,1.591,1488,2.701,1489,2.701,1490,1.591,1491,1.391,1492,1.591,1493,1.591,1494,1.591,1495,1.591,1496,1.591,1497,1.591,1498,1.591,1499,3.52,1500,1.591,1501,2.701,1502,1.591,1503,6.452,1504,4.148,1505,4.148,1506,1.591,1507,3.52,1508,3.52,1509,1.591,1510,1.591,1511,3.52,1512,4.148,1513,1.591,1514,1.591,1515,1.591,1516,3.52,1517,4.148,1518,4.646,1519,1.591,1520,1.591,1521,1.591,1522,1.591,1523,2.701,1524,2.701,1525,2.701,1526,3.52,1527,1.591,1528,1.591,1529,1.591,1530,1.591,1531,1.591,1532,1.591,1533,1.591,1534,1.591]],["title/interfaces/GameState.html",[0,0.105,1375,3.28]],["body/interfaces/GameState.html",[0,0.146,2,0.804,3,0.135,4,0.135,5,0.135,9,2.574,13,0.267,14,0.517,19,0.557,20,0.012,21,4.484,22,0.386,29,0.28,30,1.589,45,1.905,47,0.008,48,0.008,104,2.225,134,0.615,142,4.02,144,1.377,145,1.629,154,4.665,254,3.498,323,1.036,347,2.213,415,0.779,535,4.665,538,4.484,539,3.116,642,2.556,667,2.367,671,1.749,1321,5.513,1327,3.116,1328,3.116,1329,2.905,1334,5.981,1335,5.637,1336,5.981,1373,3.735,1374,5.053,1375,5.554,1376,5.726,1377,3.735,1378,3.735,1379,3.735,1380,3.735,1381,3.735,1382,3.735,1383,3.735,1384,3.735,1385,3.735]],["title/interfaces/Hand.html",[0,0.105,188,3.023]],["body/interfaces/Hand.html",[0,0.19,2,1.07,3,0.18,4,0.18,5,0.18,6,2.167,8,2.508,11,2.392,13,0.355,14,0.621,15,1.941,18,1.206,19,0.512,20,0.012,22,0.409,29,0.265,30,1.378,47,0.01,48,0.01,188,5.473,251,5.21,254,3.995,257,4.793,258,4.146,266,3.865,612,3.1,1535,5.683,1536,4.193,1537,5.683]],["title/components/HandComponent.html",[49,1.697,223,2.066]],["body/components/HandComponent.html",[1,4.308,3,0.112,4,0.112,5,0.112,13,0.22,14,0.452,16,1.776,18,1.242,19,0.524,20,0.012,22,0.419,29,0.134,31,3.879,44,1.565,45,1.62,47,0.007,48,0.007,49,2.418,50,1.755,51,2.755,52,2.017,53,2.125,54,2.017,55,2.017,56,3.058,58,2.017,59,4.489,60,4.275,62,3.049,64,2.893,66,1.86,87,1.135,92,3.049,93,3.895,100,2.164,102,2,103,1.329,104,1.834,106,2.432,107,1.995,110,3.383,128,0.707,131,2.249,133,2.125,134,0.507,141,3.703,144,1.628,145,1.342,146,1.755,148,1.391,149,1.616,150,0.73,188,4.984,206,2.017,207,2.755,208,2.63,209,2.017,210,3.696,211,2.017,212,2.017,213,1.755,214,2.017,215,1.755,216,2.017,217,1.755,218,2.017,219,1.755,220,2.017,221,1.755,222,2.017,223,3.216,224,2.017,225,1.755,226,2.017,227,1.834,228,1.253,229,2.017,230,2.017,301,2.017,346,1.682,347,1.479,352,1.682,480,3.774,610,2.229,651,2.961,696,4.416,710,4.416,721,4.416,741,2.394,755,4.416,757,2.786,781,3.078,803,4.416,1406,4.646,1456,2.786,1536,2.125,1538,3.521,1539,5.907,1540,5.051,1541,5.051,1542,6.453,1543,5.051,1544,4.416,1545,3.521,1546,5.051,1547,3.521,1548,5.051,1549,3.521,1550,3.521,1551,3.521,1552,5.051,1553,3.521,1554,4.416,1555,3.521,1556,3.521,1557,3.521,1558,3.521,1559,3.078,1560,3.521,1561,3.521,1562,3.521,1563,3.521,1564,5.051,1565,5.051]],["title/modules/HandModule.html",[231,1.98,360,2.818]],["body/modules/HandModule.html",[3,0.185,4,0.185,5,0.185,20,0.012,22,0.447,29,0.223,47,0.01,48,0.01,56,2.301,128,1.17,150,1.207,223,4.262,233,2.475,234,3.112,238,3.37,239,2.783,240,2.475,242,3.846,243,4.039,244,3.37,245,3.514,246,2.783,248,2.783,360,5.644,1566,5.092,1567,5.092,1568,5.092,1569,5.825,1570,5.825]],["title/injectables/HandsCardsEffects.html",[443,3.28,556,0.944]],["body/injectables/HandsCardsEffects.html",[3,0.125,4,0.125,5,0.125,9,1.822,10,2.414,13,0.246,14,0.489,16,0.956,19,0.291,20,0.012,22,0.445,29,0.151,44,1.789,47,0.008,48,0.008,61,3.677,87,1.271,92,4.453,100,1.925,102,1.154,103,0.767,128,0.792,134,1.026,148,2.816,149,1.809,150,0.817,301,2.259,321,1.965,346,2.093,347,1.839,415,1.3,443,4.33,445,4.554,556,1.246,557,1.503,559,2.259,561,2.573,562,2.773,563,2.259,565,4.334,566,4.226,569,4.33,570,4.33,578,3.12,580,3.793,581,3.303,582,3.303,583,3.303,584,3.303,585,3.303,586,3.303,587,3.303,588,3.303,589,3.303,591,3.303,592,3.303,593,2.378,594,3.303,597,2.259,598,2.259,599,2.151,600,2.151,601,2.054,604,1.084,606,1.358,1406,4.615,1536,3.303,1559,4.783,1571,4.848,1572,5.493,1573,3.943,1574,5.471,1575,4.783,1576,5.471,1577,5.471,1578,3.943,1579,5.471,1580,5.471,1581,5.471,1582,5.471,1583,5.471,1584,3.943,1585,2.876,1586,3.447]],["title/interfaces/HandsCardsEntity.html",[0,0.105,131,2.648]],["body/interfaces/HandsCardsEntity.html",[0,0.182,2,0.979,3,0.165,4,0.165,5,0.165,8,2.294,10,2.294,13,0.325,14,0.588,15,1.904,18,1.3,19,0.558,20,0.012,22,0.306,29,0.251,30,1.261,31,3.931,32,3.944,47,0.009,48,0.009,92,3.968,131,4.605,134,0.748,141,3.753,144,1.676,145,1.982,415,0.948,445,3.322,608,3.138,609,3.968,610,3.52,611,4.816,612,2.836,1004,5.201,1005,5.201,1406,5.425,1536,3.138,1571,3.535,1586,4.545]],["title/injectables/HandsCardsFacade.html",[93,2.502,556,0.944]],["body/injectables/HandsCardsFacade.html",[3,0.117,4,0.117,5,0.117,9,1.742,10,2.912,13,0.231,14,0.468,15,1.427,16,1.6,18,1.191,19,0.486,20,0.012,22,0.426,29,0.141,31,2.017,47,0.007,48,0.007,66,1.927,87,1.192,93,3.158,100,2.22,102,1.932,103,1.283,106,2.573,107,3.156,128,0.743,134,1.139,141,1.926,144,1.192,145,1.41,150,0.767,190,2.607,301,2.119,323,0.897,346,2.022,347,1.777,415,1.443,424,1.767,445,5.057,556,1.192,557,1.41,561,2.702,562,2.912,604,1.017,613,2.233,616,2.09,619,2.119,620,3.19,626,2.997,627,2.997,628,2.724,629,2.724,630,2.997,631,2.997,633,3.78,637,2.927,639,2.927,640,2.997,641,2.997,642,1.633,643,2.853,644,2.997,645,2.997,646,2.997,647,2.997,648,2.997,651,1.697,654,1.926,741,3.557,1052,3.233,1165,3.878,1180,2.698,1181,2.927,1182,2.515,1184,2.698,1269,3.233,1406,4.128,1536,3.664,1544,4.573,1554,4.573,1571,5.382,1585,2.698,1587,6.07,1588,6.07,1589,6.07,1590,5.231,1591,6.598,1592,3.699,1593,5.231,1594,3.699,1595,3.699,1596,5.231,1597,5.231,1598,5.231,1599,3.699,1600,3.699,1601,3.699,1602,3.699,1603,3.699,1604,3.699,1605,3.699,1606,3.699]],["title/interfaces/HandsCardsPartialState.html",[0,0.105,1607,3.28]],["body/interfaces/HandsCardsPartialState.html",[0,0.149,2,0.826,3,0.139,4,0.139,5,0.139,11,1.511,13,0.274,14,0.594,15,1.561,18,0.908,19,0.323,20,0.012,22,0.418,29,0.291,30,1.721,45,1.341,47,0.008,48,0.008,92,4.284,131,2.804,134,0.632,323,1.064,333,2.501,415,0.8,445,2.804,488,2.41,593,2.288,604,1.206,606,1.511,616,2.443,642,2.651,660,1.865,663,2.597,664,2.597,665,2.597,666,1.865,667,2.41,668,2.931,669,3.131,670,3.131,671,1.797,677,2.014,678,2.014,679,2.097,680,3.131,1536,3.553,1571,2.985,1585,3.201,1607,4.658,1608,6.47,1609,5.856,1610,3.837,1611,5.146,1612,3.837,1613,3.837,1614,3.837,1615,3.837,1616,3.837,1617,5.146,1618,3.837,1619,3.837,1620,3.837,1621,3.837,1622,3.837,1623,3.837,1624,3.837,1625,3.837,1626,3.837]],["title/interfaces/HandsCardsState.html",[0,0.105,1609,3.28]],["body/interfaces/HandsCardsState.html",[0,0.145,2,0.79,3,0.133,4,0.133,5,0.133,11,1.965,13,0.262,14,0.581,15,1.525,18,1.16,19,0.513,20,0.012,22,0.41,29,0.287,30,1.689,45,1.3,47,0.008,48,0.008,92,4.205,103,1.355,131,2.68,134,0.604,323,1.017,333,2.425,415,0.765,445,2.68,488,3.078,593,2.246,604,1.153,606,1.444,616,2.648,642,2.639,660,1.782,663,2.519,664,2.519,665,2.864,666,1.782,667,2.338,668,3.317,669,3.394,670,3.394,671,1.718,677,1.925,678,1.925,679,2.004,680,3.074,1536,3.446,1571,2.853,1585,3.06,1607,3.32,1608,4.991,1609,5.512,1610,3.667,1611,4.991,1612,3.667,1613,3.667,1614,3.667,1615,3.667,1616,3.667,1617,4.991,1618,3.667,1619,3.667,1620,3.667,1621,3.667,1622,3.667,1623,3.667,1624,3.667,1625,3.667,1626,3.667]],["title/interfaces/HasColor.html",[0,0.105,257,2.648]],["body/interfaces/HasColor.html",[0,0.158,2,1.177,3,0.198,4,0.198,5,0.198,6,2.384,13,0.391,14,0.658,19,0.461,20,0.012,22,0.368,29,0.239,47,0.01,48,0.01,103,1.43,251,5.154,254,4.021,257,4.699,266,4.251,1627,6.251]],["title/interfaces/HasCost.html",[0,0.105,259,3.023]],["body/interfaces/HasCost.html",[0,0.159,2,1.183,3,0.199,4,0.199,5,0.199,6,2.395,13,0.393,14,0.66,19,0.463,20,0.012,22,0.37,29,0.24,47,0.01,48,0.01,148,3.093,252,5.894,259,5.381,267,4.272,268,4.582,1628,6.282]],["title/interfaces/HasId.html",[0,0.105,12,2.502]],["body/interfaces/HasId.html",[0,0.161,2,1.198,3,0.201,4,0.201,5,0.201,6,2.425,12,4.485,13,0.398,14,0.665,15,1.907,18,1.214,19,0.469,20,0.012,29,0.243,47,0.011,48,0.011,1629,6.36]],["title/interfaces/HasName.html",[0,0.105,24,2.648]],["body/interfaces/HasName.html",[0,0.153,2,1.141,3,0.192,4,0.192,5,0.192,6,2.31,13,0.379,14,0.646,16,1.937,18,1.232,19,0.447,20,0.012,24,4.928,29,0.276,32,3.155,34,2.018,35,2.018,36,2.086,37,2.157,38,2.895,39,2.895,40,3.471,41,3.471,43,3.471,44,1.469,47,0.01,48,0.01,1630,4.795,1631,5.297,1632,6.059]],["title/interfaces/HasRules.html",[0,0.105,26,3.023]],["body/interfaces/HasRules.html",[0,0.161,2,1.198,3,0.201,4,0.201,5,0.201,6,2.425,13,0.398,14,0.665,17,6.42,18,1.214,19,0.469,20,0.012,26,5.42,29,0.243,47,0.011,48,0.011,1633,6.36]],["title/interfaces/HasVictoryPoints.html",[0,0.105,263,3.023]],["body/interfaces/HasVictoryPoints.html",[0,0.16,2,1.192,3,0.2,4,0.2,5,0.2,6,2.413,13,0.396,14,0.663,19,0.466,20,0.012,29,0.242,47,0.011,48,0.011,103,1.441,253,5.908,256,4.5,263,5.404,1634,6.329]],["title/interfaces/LandCard.html",[0,0.105,728,2.818]],["body/interfaces/LandCard.html",[0,0.203,2,0.884,3,0.149,4,0.149,5,0.149,6,1.79,8,2.072,10,2.716,11,2.119,12,4.145,13,0.293,14,0.551,15,1.825,18,1.167,19,0.608,20,0.012,22,0.457,23,3.192,29,0.289,30,1.665,32,2.445,34,1.564,35,1.564,36,1.616,37,1.671,38,2.243,39,2.243,40,2.689,41,2.689,43,3.525,44,1.138,45,1.069,46,3.192,47,0.009,48,0.009,103,1.197,140,3.424,143,4.956,192,4.87,251,4.961,254,3.771,257,3.932,258,3.424,261,4.185,262,4.104,266,3.192,268,3.424,271,3.715,535,4.567,547,5.664,728,5.145,1635,3.715,1636,6.615,1637,4.694,1638,4.694,1639,4.694,1640,4.104]],["title/injectables/LandsPileCardsEffects.html",[447,3.28,556,0.944]],["body/injectables/LandsPileCardsEffects.html",[3,0.136,4,0.136,5,0.136,9,1.936,13,0.269,14,0.52,16,1.045,19,0.317,20,0.012,22,0.446,29,0.165,44,1.837,47,0.008,48,0.008,61,3.776,87,1.389,96,4.499,100,1.866,102,1.261,103,0.838,128,0.865,134,1.014,148,2.598,149,1.977,150,0.893,177,2.872,301,2.468,321,2.147,346,1.936,347,1.702,415,1.284,447,4.6,449,4.499,556,1.324,557,1.642,559,2.468,561,2.694,562,2.903,563,2.468,565,4.212,566,4.034,580,3.971,581,3.509,582,3.509,583,3.509,584,3.509,585,3.509,586,3.509,587,3.509,588,3.509,589,3.509,591,3.509,592,3.509,593,2.443,594,3.509,597,2.468,598,2.468,604,1.184,606,1.483,1641,4.789,1642,4.308,1643,5.813,1644,4.6,1645,5.751,1646,4.308,1647,5.813,1648,4.6,1649,5.813,1650,4.308,1651,3.142,1652,4.24]],["title/interfaces/LandsPileCardsEntity.html",[0,0.105,132,2.818]],["body/interfaces/LandsPileCardsEntity.html",[0,0.184,2,0.995,3,0.167,4,0.167,5,0.167,8,2.332,13,0.33,14,0.594,15,1.911,18,1.269,19,0.489,20,0.012,22,0.428,29,0.277,30,1.847,44,1.282,47,0.009,48,0.009,96,4.243,132,5.181,134,0.761,144,1.704,177,2.364,352,2.525,415,0.963,449,3.376,599,2.882,600,2.882,601,2.752,608,3.19,609,4.009,610,3.588,612,2.882,758,4.182,1132,4.844,1164,4.182,1165,3.376,1166,3.855,1169,4.62,1173,4.62,1641,3.594,1645,4.62,1653,5.285,1654,5.285,1655,5.285]],["title/injectables/LandsPileCardsFacade.html",[97,2.648,556,0.944]],["body/injectables/LandsPileCardsFacade.html",[3,0.123,4,0.123,5,0.123,9,1.801,13,0.242,14,0.484,15,1.464,16,1.51,18,1.132,19,0.459,20,0.012,22,0.417,29,0.148,47,0.008,48,0.008,66,1.992,87,1.743,97,3.455,100,2.179,102,1.823,103,1.211,106,2.398,107,3.034,128,0.779,134,1.123,150,0.804,151,1.588,177,2.994,190,2.695,323,0.94,346,2.074,347,1.823,415,1.422,424,1.853,449,4.985,556,1.232,557,1.478,561,2.759,562,2.973,604,1.066,613,2.341,616,2.144,619,2.221,620,3.238,626,3.098,627,3.098,628,2.816,629,2.816,630,3.098,631,3.098,633,4.204,640,3.098,641,3.098,642,1.688,643,2.95,644,3.098,645,3.098,646,3.098,647,3.098,648,3.098,651,1.779,654,2.019,656,2.637,741,3.677,1055,3.069,1067,3.069,1180,2.829,1181,3.069,1182,2.637,1184,2.829,1187,3.39,1189,3.39,1641,5.306,1651,2.829,1652,4.542,1656,6.227,1657,6.227,1658,5.408,1659,5.408,1660,5.408,1661,5.408,1662,5.408,1663,5.408,1664,5.408,1665,3.878,1666,3.878,1667,3.878,1668,3.878,1669,3.878,1670,3.878]],["title/interfaces/LandsPileCardsPartialState.html",[0,0.105,1671,3.28]],["body/interfaces/LandsPileCardsPartialState.html",[0,0.151,2,0.845,3,0.142,4,0.142,5,0.142,11,1.545,13,0.281,14,0.601,15,1.579,18,0.922,19,0.331,20,0.012,22,0.422,29,0.293,30,1.736,45,1.023,47,0.008,48,0.008,96,4.291,132,3.053,134,0.646,177,2.549,323,1.089,333,2.539,415,0.818,449,2.868,488,2.447,593,2.308,604,1.234,606,1.545,616,2.465,642,2.625,660,1.907,663,2.637,664,2.637,665,2.637,666,1.907,667,2.447,668,2.637,669,3.16,670,3.16,671,1.838,677,2.06,678,2.06,679,2.145,680,3.16,1641,3.053,1644,3.552,1648,3.552,1651,3.274,1652,4.359,1671,4.728,1672,6.518,1673,5.901,1674,3.924,1675,5.223,1676,3.924,1677,3.924,1678,3.924,1679,3.924,1680,5.223,1681,3.924,1682,3.924,1683,3.924,1684,3.924,1685,3.924]],["title/interfaces/LandsPileCardsState.html",[0,0.105,1673,3.28]],["body/interfaces/LandsPileCardsState.html",[0,0.147,2,0.807,3,0.136,4,0.136,5,0.136,11,1.994,13,0.268,14,0.587,15,1.542,18,1.167,19,0.518,20,0.012,22,0.414,29,0.289,30,1.704,45,0.976,47,0.008,48,0.008,96,4.192,103,1.367,132,2.915,134,0.617,177,2.502,323,1.039,333,2.461,415,0.781,449,2.738,488,3.098,593,2.266,604,1.178,606,1.476,616,2.663,642,2.611,660,1.821,663,2.556,664,2.556,665,2.896,666,1.821,667,2.372,668,3.239,669,3.413,670,3.413,671,1.755,677,1.967,678,1.967,679,2.048,680,3.101,1641,2.915,1644,3.392,1648,3.392,1651,3.127,1652,4.226,1671,3.392,1672,5.064,1673,5.562,1674,3.747,1675,5.064,1676,3.747,1677,3.747,1678,3.747,1679,3.747,1680,5.064,1681,3.747,1682,3.747,1683,3.747,1684,3.747,1685,3.747]],["title/components/PhasesComponent.html",[49,1.697,225,2.066]],["body/components/PhasesComponent.html",[3,0.104,4,0.104,5,0.104,9,2.311,13,0.205,14,0.429,16,1.682,18,0.875,19,0.46,20,0.012,21,2.094,22,0.391,29,0.125,44,1.611,45,1.092,47,0.007,48,0.007,49,2.322,50,1.634,51,2.616,52,1.878,53,1.979,54,1.878,55,1.878,56,3.115,58,1.878,59,4.423,60,4.212,62,2.895,64,2.747,66,1.766,87,1.546,88,2.391,89,3.575,100,2.215,102,1.827,103,1.214,104,2.953,106,2.669,107,2.902,110,4.294,128,0.658,133,1.979,134,0.472,142,4.294,144,1.546,145,1.25,146,1.634,150,0.679,151,1.964,154,3.423,200,3.795,201,2.391,202,2.391,203,2.594,204,2.391,205,2.391,206,1.878,207,2.616,208,2.497,209,1.878,210,3.575,211,1.878,212,1.878,213,1.634,214,1.878,215,1.634,216,1.878,217,1.634,218,1.878,219,1.634,220,1.878,221,1.634,222,1.878,223,1.634,224,1.878,225,3.11,226,1.878,227,1.707,228,1.167,229,1.878,230,1.878,254,3.736,346,1.597,347,1.404,352,1.566,413,3.987,548,3.767,610,1.446,1139,4.137,1152,3.623,1162,2.094,1163,2.594,1335,4.137,1338,4.192,1339,4.192,1347,4.192,1349,4.192,1686,3.278,1687,4.796,1688,5.671,1689,4.796,1690,6.241,1691,4.796,1692,6.241,1693,6.241,1694,6.241,1695,6.241,1696,6.241,1697,4.796,1698,3.278,1699,4.796,1700,3.278,1701,3.278,1702,3.278,1703,3.278,1704,3.278,1705,3.278,1706,3.278,1707,3.278,1708,3.278,1709,3.278,1710,3.278,1711,3.278,1712,3.278,1713,3.278,1714,3.278,1715,3.278,1716,3.278,1717,3.278,1718,7.348,1719,4.796,1720,4.796,1721,4.796,1722,6.241]],["title/modules/PhasesModule.html",[231,1.98,361,2.818]],["body/modules/PhasesModule.html",[3,0.182,4,0.182,5,0.182,20,0.012,22,0.462,29,0.22,47,0.01,48,0.01,56,2.27,128,1.154,150,1.191,225,4.255,233,2.442,234,3.086,238,3.342,239,2.746,240,2.442,242,3.815,243,4.006,244,3.342,245,3.486,246,2.746,248,2.746,361,5.629,554,6.114,555,4.548,1723,5.024,1724,5.024,1725,5.024,1726,5.747,1727,5.747]],["title/modules/PilesModule.html",[231,1.98,362,2.818]],["body/modules/PilesModule.html",[3,0.185,4,0.185,5,0.185,20,0.012,22,0.447,29,0.223,47,0.01,48,0.01,56,2.301,128,1.17,150,1.207,227,4.454,233,2.475,234,3.112,238,3.37,239,2.783,240,2.475,242,3.846,243,4.039,244,3.37,245,3.514,246,2.783,248,2.783,362,5.644,1728,5.092,1729,5.092,1730,5.092,1731,5.825,1732,5.825]],["title/injectables/StockPilesCardsEffects.html",[451,3.28,556,0.944]],["body/injectables/StockPilesCardsEffects.html",[3,0.097,4,0.097,5,0.097,9,1.522,10,2.016,13,0.192,14,0.409,15,1.074,16,0.744,19,0.402,20,0.013,22,0.448,29,0.117,44,1.643,45,1.377,47,0.006,48,0.006,61,3.377,87,1.473,100,1.833,102,0.899,103,0.597,128,0.616,134,0.975,146,1.53,147,3.107,148,2.553,149,1.409,150,0.636,151,1.871,228,2.841,240,1.941,321,1.53,323,0.744,346,2.014,347,1.77,415,1.235,424,1.467,451,3.616,453,4.09,506,2.38,556,1.041,557,1.17,559,1.758,561,2.235,562,2.408,563,1.758,565,4.221,566,4.131,569,3.616,570,3.616,580,3.295,581,2.758,582,2.758,583,2.758,584,2.758,585,2.758,586,2.758,587,2.758,588,2.758,589,2.758,591,2.758,592,2.758,593,2.325,594,2.758,597,1.758,598,1.758,599,1.674,600,1.674,601,1.599,604,0.844,606,1.057,610,2.668,611,3.65,620,2.668,651,2.505,654,1.599,875,3.333,935,4.771,970,2.239,1238,3.863,1403,4.904,1480,5.285,1484,3.994,1491,5.923,1572,4.771,1575,3.994,1733,4.329,1734,5.458,1735,5.458,1736,3.07,1737,4.569,1738,4.569,1739,4.569,1740,3.07,1741,4.569,1742,3.616,1743,4.771,1744,3.07,1745,4.569,1746,3.616,1747,4.569,1748,3.07,1749,4.569,1750,4.569,1751,4.569,1752,4.569,1753,4.569,1754,4.569,1755,3.616,1756,3.994,1757,3.994,1758,3.712,1759,4.569,1760,4.569,1761,4.569,1762,3.616,1763,3.07,1764,3.07,1765,2.239,1766,4.111,1767,2.684,1768,2.684,1769,2.684]],["title/interfaces/StockPilesCardsEntity.html",[0,0.105,1758,2.818]],["body/interfaces/StockPilesCardsEntity.html",[0,0.173,2,0.873,3,0.147,4,0.147,5,0.147,8,2.045,10,2.045,13,0.29,14,0.546,15,1.854,18,1.279,19,0.534,20,0.012,22,0.427,29,0.261,30,1.759,31,3.722,32,3.776,44,1.124,47,0.009,48,0.009,134,0.667,141,3.554,144,1.967,145,1.767,228,2.429,281,2.798,352,2.215,415,0.845,453,2.798,599,2.528,600,3.329,601,2.414,608,2.798,609,3.684,610,3.414,611,4.67,612,2.528,757,3.668,1004,4.83,1005,4.83,1164,4.83,1165,2.961,1166,3.381,1238,4.943,1403,4.931,1456,3.668,1733,2.961,1743,4.052,1758,5.261,1766,3.152,1767,5.335,1770,4.635,1771,4.635,1772,4.635,1773,4.635,1774,4.635,1775,4.635,1776,4.635,1777,4.635,1778,4.635,1779,4.635]],["title/injectables/StockPilesCardsFacade.html",[414,2.818,556,0.944]],["body/injectables/StockPilesCardsFacade.html",[3,0.118,4,0.118,5,0.118,9,1.753,10,3.357,13,0.233,14,0.471,16,1.479,18,1.118,19,0.449,20,0.012,22,0.427,29,0.143,31,2.035,47,0.007,48,0.007,66,1.939,87,1.697,100,2.158,102,1.785,103,1.186,106,2.358,107,3.005,128,0.749,134,1.113,141,1.943,144,1.203,145,1.423,150,0.773,151,1.528,190,2.623,228,2.982,323,0.905,346,2.031,347,1.785,414,3.579,415,1.41,424,1.783,453,4.669,556,1.199,557,1.423,561,2.712,562,2.923,604,1.025,613,2.252,616,2.1,619,2.137,620,3.199,626,3.015,627,3.015,628,2.741,629,2.741,630,3.015,631,3.015,633,4.152,635,3.262,637,2.952,639,2.952,640,3.015,641,3.015,642,1.643,643,2.871,644,3.015,645,3.015,646,3.015,647,3.015,648,3.015,651,1.712,654,1.943,656,3.579,1068,3.262,1165,4.631,1182,2.537,1184,2.722,1185,3.262,1238,4.631,1261,3.262,1733,4.942,1765,2.722,1766,4.147,1768,3.262,1769,3.262,1780,6.099,1781,6.099,1782,6.099,1783,6.099,1784,3.731,1785,3.731,1786,5.264,1787,5.264,1788,5.264,1789,3.731,1790,3.731,1791,3.731,1792,3.731]],["title/interfaces/StockPilesCardsPartialState.html",[0,0.105,1793,3.28]],["body/interfaces/StockPilesCardsPartialState.html",[0,0.15,2,0.838,3,0.141,4,0.141,5,0.141,11,1.532,13,0.278,14,0.598,18,0.917,19,0.328,20,0.012,22,0.42,29,0.292,30,1.73,34,1.482,35,1.482,36,1.532,37,1.584,45,1.014,47,0.008,48,0.008,134,0.64,228,2.54,323,1.079,333,2.524,415,0.811,453,2.686,488,2.432,593,2.3,604,1.223,606,1.532,616,2.457,642,2.623,660,1.891,663,2.621,664,2.621,665,2.621,666,1.891,667,2.432,668,1.964,669,3.149,670,3.149,671,1.822,672,2.317,673,2.427,677,2.042,678,2.042,679,2.126,680,3.149,1403,4.852,1733,2.843,1742,3.521,1746,3.521,1758,3.026,1762,3.521,1765,3.246,1766,4.04,1793,4.701,1794,6.5,1795,5.883,1796,3.89,1797,5.193,1798,3.89,1799,3.89,1800,3.89,1801,3.89,1802,5.193,1803,3.89,1804,3.89,1805,3.89,1806,3.89,1807,3.89,1808,3.89]],["title/interfaces/StockPilesCardsState.html",[0,0.105,1795,3.28]],["body/interfaces/StockPilesCardsState.html",[0,0.146,2,0.8,3,0.135,4,0.135,5,0.135,11,1.983,13,0.266,14,0.585,18,1.164,19,0.516,20,0.012,22,0.412,29,0.288,30,1.699,34,1.416,35,1.416,36,1.463,37,1.513,45,0.968,47,0.008,48,0.008,103,1.362,134,0.612,228,2.493,323,1.031,333,2.447,415,0.775,453,2.566,488,3.09,593,2.258,604,1.168,606,1.463,616,2.657,642,2.608,660,1.806,663,2.542,664,2.542,665,2.883,666,1.806,667,2.359,668,3.091,669,3.406,670,3.406,671,1.74,672,2.214,673,2.318,677,1.951,678,1.951,679,2.031,680,3.091,1403,4.763,1733,2.716,1742,3.364,1746,3.364,1758,2.891,1762,3.364,1765,3.101,1766,3.917,1793,3.364,1794,5.036,1795,5.543,1796,3.716,1797,5.036,1798,3.716,1799,3.716,1800,3.716,1801,3.716,1802,5.036,1803,3.716,1804,3.716,1805,3.716,1806,3.716,1807,3.716,1808,3.716]],["title/modules/UiCardModule.html",[231,1.98,1809,3.023]],["body/modules/UiCardModule.html",[3,0.189,4,0.189,5,0.189,20,0.012,22,0.451,29,0.228,47,0.01,48,0.01,128,1.197,150,1.235,217,4.11,233,2.532,234,3.155,238,3.417,239,2.848,240,2.532,242,3.9,244,3.417,245,3.563,246,2.848,248,2.848,375,5.211,1809,6.016,1810,5.211,1811,5.211,1812,5.961,1813,5.961,1814,5.961]],["title/dependencies.html",[234,2.2,1815,3.023]],["body/dependencies.html",[20,0.012,34,1.88,47,0.01,48,0.01,128,1.134,146,2.814,207,3.079,234,2.491,246,2.698,316,6.048,317,5.475,321,2.814,323,1.369,555,4.468,598,3.234,601,2.94,620,2.491,666,2.399,1165,3.607,1166,4.118,1816,5.646,1817,8.441,1818,5.646,1819,5.646,1820,5.646,1821,5.646,1822,5.646,1823,7.798,1824,5.646,1825,5.646,1826,5.646,1827,5.646,1828,5.646,1829,5.646,1830,5.646,1831,5.646,1832,5.646,1833,5.646,1834,5.646,1835,5.646,1836,5.646,1837,5.646]],["title/miscellaneous/enumerations.html",[1838,2.21,1839,4.359]],["body/miscellaneous/enumerations.html",[6,2.87,13,0.224,20,0.012,21,3.266,47,0.007,48,0.007,61,1.784,142,2.928,254,2.547,255,4.045,267,3.476,277,2.051,279,2.611,347,2.556,435,2.051,489,4.468,490,4.045,493,4.045,498,4.468,506,2.662,509,5.212,513,4.468,538,3.266,548,3.925,678,2.345,759,3.728,795,4.468,798,6.011,800,4.468,952,4.468,985,4.045,1141,4.045,1388,3.13,1390,4.468,1394,4.045,1636,4.468,1838,2.287,1839,3.13,1840,3.13,1841,3.13,1842,5.145,1843,5.111,1844,4.045,1845,4.045,1846,3.13,1847,3.58,1848,4.468,1849,3.58,1850,5.111,1851,5.111,1852,5.111,1853,3.58,1854,3.58,1855,5.111,1856,3.58,1857,5.111,1858,5.111,1859,5.111,1860,3.13,1861,5.111,1862,5.111,1863,5.111,1864,5.111,1865,5.111,1866,5.111,1867,5.111,1868,3.58,1869,3.58,1870,3.58,1871,5.111,1872,3.58,1873,3.58,1874,3.58,1875,3.58,1876,3.58,1877,5.111,1878,5.111,1879,5.111,1880,5.111,1881,5.111,1882,2.833,1883,5.111,1884,3.13,1885,5.111,1886,5.111,1887,3.58,1888,3.58,1889,3.58,1890,3.58,1891,3.58,1892,3.58,1893,3.58,1894,5.111,1895,5.111,1896,3.58,1897,3.58,1898,3.58,1899,5.111,1900,3.58,1901,3.58,1902,3.58,1903,3.58,1904,3.58,1905,3.58,1906,5.111,1907,3.58,1908,6.502,1909,3.58,1910,3.58,1911,3.58,1912,3.58,1913,2.833,1914,5.111,1915,5.111,1916,5.111,1917,5.111,1918,5.111,1919,5.111,1920,5.111,1921,5.111,1922,5.111,1923,5.111,1924,5.111,1925,5.111]],["title/miscellaneous/functions.html",[1838,2.21,1926,4.359]],["body/miscellaneous/functions.html",[1,2.622,6,2.924,7,2.845,13,0.225,15,1.683,16,2.017,18,1.246,19,0.608,20,0.012,24,2.297,42,3.143,43,4.221,47,0.007,48,0.007,102,2.393,103,1.59,106,2.95,148,2.573,249,4.43,250,2.845,251,4.575,252,4.752,253,3.74,254,3.962,256,4.316,261,2.445,274,3.143,283,4.482,287,3.143,291,3.143,347,1.052,371,2.845,373,3.143,480,4.162,481,2.845,482,4.482,483,4.482,485,4.482,486,4.482,487,4.482,488,2.667,490,4.057,492,2.845,493,4.057,497,4.482,504,3.143,512,4.482,517,3.143,535,2.17,538,3.275,728,2.445,1051,4.359,1139,2.622,1140,2.845,1145,3.143,1311,5.224,1322,5.224,1630,2.845,1631,3.143,1635,2.845,1640,3.143,1838,2.297,1840,3.143,1841,5.695,1842,5.155,1844,5.155,1845,4.057,1846,3.143,1926,3.143,1927,5.127,1928,5.127,1929,5.127,1930,5.127,1931,5.127,1932,5.127,1933,5.127,1934,3.595,1935,5.127,1936,5.127,1937,5.127,1938,3.595,1939,5.127,1940,3.595,1941,5.127,1942,5.127,1943,5.975,1944,3.595,1945,7.668,1946,3.595,1947,3.595,1948,3.595,1949,3.595,1950,3.595,1951,3.595,1952,3.595,1953,3.595,1954,3.595]],["title/index.html",[13,0.216,1955,2.737,1956,2.737]],["body/index.html",[20,0.012,47,0.011,48,0.011,60,3.495,310,5.071,643,3.495,1957,6.408,1958,6.408,1959,6.408,1960,6.408,1961,6.408,1962,6.408,1963,6.408,1964,6.408,1965,6.408,1966,6.408,1967,6.408,1968,5.602,1969,6.408]],["title/license.html",[1955,2.737,1956,2.737,1970,2.737]],["body/license.html",[9,1.805,20,0.01,47,0.01,48,0.01,190,3.362,240,2.302,400,3.953,548,3.271,1970,4.288,1971,4.737,1972,7.345,1973,5.419,1974,5.419,1975,5.419,1976,5.419,1977,5.419,1978,6.746,1979,5.419,1980,5.419,1981,5.419,1982,5.419,1983,5.419,1984,5.419,1985,6.746,1986,8.333,1987,5.419,1988,5.419,1989,5.419,1990,5.419,1991,7.345,1992,5.419,1993,6.746,1994,5.419,1995,5.419,1996,5.419,1997,5.419,1998,5.419,1999,5.419,2000,5.419,2001,5.419,2002,5.419,2003,6.746,2004,5.419,2005,5.419,2006,5.419,2007,5.419,2008,5.419,2009,5.419,2010,6.746,2011,6.746,2012,5.419,2013,5.419,2014,5.419,2015,5.419,2016,5.419,2017,5.419,2018,5.419,2019,5.419,2020,5.419,2021,5.419,2022,5.419,2023,5.419,2024,5.419,2025,5.419,2026,5.419,2027,5.419,2028,5.419,2029,5.419,2030,5.419,2031,5.419,2032,5.419,2033,5.419,2034,5.419,2035,5.419,2036,5.419,2037,5.419,2038,5.419,2039,5.419]],["title/modules.html",[233,2.406]],["body/modules.html",[20,0.01,47,0.01,48,0.01,181,4.259,232,3.97,233,2.48,305,4.259,311,3.97,312,3.97,317,6.744,353,3.97,358,3.97,359,3.97,360,3.97,361,3.97,362,3.97,1291,4.62,1809,4.259,2040,8.522,2041,8.522,2042,8.555,2043,5.839]],["title/overview.html",[2044,4.95]],["body/overview.html",[2,0.747,20,0.012,47,0.008,48,0.008,50,3.777,51,2.164,89,3.611,91,3.805,93,3.805,95,4.027,97,4.027,213,3.777,215,3.777,217,3.141,219,3.777,221,3.777,223,3.777,225,3.777,227,3.946,232,5.026,233,1.686,234,2.425,235,3.469,236,3.469,237,3.469,238,2.626,239,1.896,240,1.686,305,5.85,306,3.469,307,3.469,308,3.469,309,3.469,310,4.988,311,5.699,312,5.026,353,5.748,354,3.469,355,3.469,356,3.469,357,3.469,358,5.026,359,5.026,360,5.026,361,5.026,362,5.026,410,3.469,411,3.469,412,4.287,413,4.027,414,4.287,549,3.469,550,3.469,551,3.469,557,1.513,820,3.469,821,3.469,822,3.469,1294,3.469,1295,3.469,1566,3.469,1567,3.469,1568,3.469,1723,3.469,1724,3.469,1725,3.469,1728,3.469,1729,3.469,1730,3.469,1809,4.963,1810,3.469,1811,3.469,2044,3.469,2045,3.968,2046,3.968,2047,3.968,2048,3.968]],["title/properties.html",[14,0.446,1815,3.023]],["body/properties.html",[14,0.593,20,0.012,47,0.011,48,0.011,281,3.998,1968,5.79,1970,5.241,1971,5.79,2049,6.623]],["title/todo.html",[1755,2.737,1955,2.737,1956,2.737]],["body/todo.html",[6,2.447,7,1.561,19,0.539,20,0.009,34,1.077,35,1.077,36,1.113,37,1.865,38,4.045,39,3.976,40,3.402,41,4.193,44,1.775,45,0.449,47,0.005,48,0.005,56,2.95,57,3.589,61,0.983,134,1.222,177,1.69,228,2.741,240,0.838,250,1.561,272,3.821,273,3.821,277,1.13,371,1.561,390,5.488,391,5.488,415,1.548,420,1.191,427,5.05,431,1.191,435,4.087,436,3.586,453,2.866,481,1.561,506,1.028,546,1.725,548,1.191,558,1.261,559,3.676,593,2.331,660,2.017,672,2.472,673,2.589,825,5.345,914,2.826,915,1.725,1140,1.561,1146,1.261,1216,3.795,1299,1.725,1386,6.323,1394,1.561,1630,1.561,1635,1.561,1733,3.033,1755,1.561,1756,1.725,1757,1.725,1882,1.561,1913,1.561,2050,1.973,2051,4.747,2052,7.232,2053,1.973,2054,7.232,2055,1.973,2056,1.973,2057,3.232,2058,1.973,2059,1.973,2060,1.973,2061,7.135,2062,3.232,2063,1.973,2064,1.973,2065,1.973,2066,1.973,2067,1.973,2068,1.973,2069,1.973,2070,1.973,2071,1.973,2072,1.973,2073,1.973,2074,1.973,2075,1.973,2076,3.232,2077,3.232,2078,1.973,2079,6.2,2080,6.2,2081,6.2,2082,1.973,2083,3.232,2084,3.232,2085,1.973,2086,1.973,2087,1.973,2088,1.973,2089,4.747,2090,7.993,2091,1.973,2092,3.232,2093,1.973,2094,1.973,2095,1.973,2096,3.232,2097,1.973,2098,1.973,2099,1.973,2100,1.973,2101,1.973,2102,1.973,2103,1.973,2104,1.973,2105,1.973,2106,1.973,2107,1.973,2108,3.232,2109,1.973,2110,1.973,2111,1.973,2112,1.973,2113,1.973,2114,1.973,2115,1.973,2116,1.973,2117,1.973,2118,1.973,2119,1.973,2120,1.973,2121,7.699,2122,1.973,2123,7.319,2124,3.232,2125,1.973,2126,1.973,2127,1.973,2128,1.973,2129,1.973,2130,1.973,2131,1.973,2132,1.973,2133,1.973,2134,1.973,2135,1.973,2136,1.973,2137,1.973,2138,1.973,2139,1.973,2140,1.973,2141,1.973,2142,1.973,2143,1.973,2144,1.973,2145,1.973,2146,1.973,2147,4.106,2148,1.973,2149,1.973,2150,1.973,2151,1.973,2152,1.973]],["title/miscellaneous/typealiases.html",[1838,2.21,2153,4.986]],["body/miscellaneous/typealiases.html",[6,3.066,13,0.387,19,0.456,20,0.012,47,0.01,48,0.01,267,4.21,492,5.787,535,4.415,860,5.787,984,5.787,1051,5.678,1838,3.955,1842,4.899,1844,5.787,1845,4.899,1848,5.412,1860,5.412,1882,4.899,1884,5.412,1913,4.899,2154,6.191]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":281,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/StockPilesCardsEntity.html":{},"properties.html":{}}}],["0.11.4",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2049,"title":{},"body":{"properties.html":{}}}],["1",{"_index":277,"title":{"interfaces/Chainable-1.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["103",{"_index":2092,"title":{},"body":{"todo.html":{}}}],["1052",{"_index":2063,"title":{},"body":{"todo.html":{}}}],["106",{"_index":2117,"title":{},"body":{"todo.html":{}}}],["107",{"_index":2140,"title":{},"body":{"todo.html":{}}}],["1076",{"_index":2114,"title":{},"body":{"todo.html":{}}}],["111",{"_index":2086,"title":{},"body":{"todo.html":{}}}],["1134",{"_index":2115,"title":{},"body":{"todo.html":{}}}],["1169",{"_index":2064,"title":{},"body":{"todo.html":{}}}],["12",{"_index":2045,"title":{},"body":{"overview.html":{}}}],["1214",{"_index":2065,"title":{},"body":{"todo.html":{}}}],["125",{"_index":2093,"title":{},"body":{"todo.html":{}}}],["129",{"_index":2094,"title":{},"body":{"todo.html":{}}}],["1319",{"_index":2066,"title":{},"body":{"todo.html":{}}}],["1360",{"_index":2067,"title":{},"body":{"todo.html":{}}}],["138",{"_index":2125,"title":{},"body":{"todo.html":{}}}],["14.0.1",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["14.0.4",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["14.4.0",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["1448",{"_index":2068,"title":{},"body":{"todo.html":{}}}],["155",{"_index":2126,"title":{},"body":{"todo.html":{}}}],["1550",{"_index":2069,"title":{},"body":{"todo.html":{}}}],["159",{"_index":2150,"title":{},"body":{"todo.html":{}}}],["1601",{"_index":2070,"title":{},"body":{"todo.html":{}}}],["161",{"_index":2151,"title":{},"body":{"todo.html":{}}}],["165",{"_index":2127,"title":{},"body":{"todo.html":{}}}],["17",{"_index":2047,"title":{},"body":{"overview.html":{}}}],["1705",{"_index":2071,"title":{},"body":{"todo.html":{}}}],["175",{"_index":2128,"title":{},"body":{"todo.html":{}}}],["1753",{"_index":2072,"title":{},"body":{"todo.html":{}}}],["1801",{"_index":2073,"title":{},"body":{"todo.html":{}}}],["1849",{"_index":2074,"title":{},"body":{"todo.html":{}}}],["185",{"_index":2129,"title":{},"body":{"todo.html":{}}}],["19",{"_index":2088,"title":{},"body":{"todo.html":{}}}],["191",{"_index":2095,"title":{},"body":{"todo.html":{}}}],["195",{"_index":2096,"title":{},"body":{"todo.html":{}}}],["1px",{"_index":817,"title":{},"body":{"components/DomainComponent.html":{}}}],["2",{"_index":279,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["2021",{"_index":1974,"title":{},"body":{"license.html":{}}}],["20px",{"_index":205,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["21",{"_index":2089,"title":{},"body":{"todo.html":{}}}],["220",{"_index":2118,"title":{},"body":{"todo.html":{}}}],["229",{"_index":2097,"title":{},"body":{"todo.html":{}}}],["233",{"_index":2098,"title":{},"body":{"todo.html":{}}}],["234",{"_index":2130,"title":{},"body":{"todo.html":{}}}],["24",{"_index":2084,"title":{},"body":{"todo.html":{}}}],["243",{"_index":2119,"title":{},"body":{"todo.html":{}}}],["258",{"_index":2099,"title":{},"body":{"todo.html":{}}}],["262",{"_index":2100,"title":{},"body":{"todo.html":{}}}],["294",{"_index":2101,"title":{},"body":{"todo.html":{}}}],["298",{"_index":2102,"title":{},"body":{"todo.html":{}}}],["3",{"_index":289,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["32",{"_index":2144,"title":{},"body":{"todo.html":{}}}],["332",{"_index":2152,"title":{},"body":{"todo.html":{}}}],["333",{"_index":2103,"title":{},"body":{"todo.html":{}}}],["337",{"_index":2104,"title":{},"body":{"todo.html":{}}}],["37",{"_index":2087,"title":{},"body":{"todo.html":{}}}],["371",{"_index":2105,"title":{},"body":{"todo.html":{}}}],["375",{"_index":2106,"title":{},"body":{"todo.html":{}}}],["379",{"_index":2131,"title":{},"body":{"todo.html":{}}}],["39",{"_index":2048,"title":{},"body":{"overview.html":{}}}],["391",{"_index":2132,"title":{},"body":{"todo.html":{}}}],["394",{"_index":2120,"title":{},"body":{"todo.html":{}}}],["395",{"_index":2133,"title":{},"body":{"todo.html":{}}}],["400",{"_index":2107,"title":{},"body":{"todo.html":{}}}],["404",{"_index":2108,"title":{},"body":{"todo.html":{}}}],["413",{"_index":2134,"title":{},"body":{"todo.html":{}}}],["424",{"_index":2135,"title":{},"body":{"todo.html":{}}}],["431",{"_index":2136,"title":{},"body":{"todo.html":{}}}],["443",{"_index":2137,"title":{},"body":{"todo.html":{}}}],["452",{"_index":2138,"title":{},"body":{"todo.html":{}}}],["49",{"_index":2145,"title":{},"body":{"todo.html":{}}}],["5",{"_index":2083,"title":{},"body":{"todo.html":{}}}],["50",{"_index":2141,"title":{},"body":{"todo.html":{}}}],["58",{"_index":2146,"title":{},"body":{"todo.html":{}}}],["6.1.1",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["6.4.22",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["61",{"_index":2142,"title":{},"body":{"todo.html":{}}}],["615",{"_index":2053,"title":{},"body":{"todo.html":{}}}],["67",{"_index":2143,"title":{},"body":{"todo.html":{}}}],["7",{"_index":852,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["71",{"_index":2057,"title":{},"body":{"todo.html":{}}}],["73",{"_index":2122,"title":{},"body":{"todo.html":{}}}],["75",{"_index":2139,"title":{},"body":{"todo.html":{}}}],["8.3.2",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["812",{"_index":2078,"title":{},"body":{"todo.html":{}}}],["818",{"_index":2082,"title":{},"body":{"todo.html":{}}}],["85",{"_index":2124,"title":{},"body":{"todo.html":{}}}],["87",{"_index":2116,"title":{},"body":{"todo.html":{}}}],["9",{"_index":2046,"title":{},"body":{"overview.html":{}}}],["913",{"_index":2109,"title":{},"body":{"todo.html":{}}}],["917",{"_index":2110,"title":{},"body":{"todo.html":{}}}],["933",{"_index":2060,"title":{},"body":{"todo.html":{}}}],["95",{"_index":2085,"title":{},"body":{"todo.html":{}}}],["951",{"_index":2111,"title":{},"body":{"todo.html":{}}}],["955",{"_index":2112,"title":{},"body":{"todo.html":{}}}],["97",{"_index":2148,"title":{},"body":{"todo.html":{}}}],["980",{"_index":2113,"title":{},"body":{"todo.html":{}}}],["984",{"_index":2062,"title":{},"body":{"todo.html":{}}}],["99",{"_index":2091,"title":{},"body":{"todo.html":{}}}],["_action",{"_index":592,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["above",{"_index":2009,"title":{},"body":{"license.html":{}}}],["access",{"_index":134,"title":{},"body":{"components/ActionsComponent.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["action.cardid",{"_index":958,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.cards.map",{"_index":1751,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["action.cardtype",{"_index":957,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.die",{"_index":937,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.id",{"_index":956,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.name",{"_index":1565,"title":{},"body":{"components/HandComponent.html":{}}}],["action.pileid",{"_index":1754,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["action_card_interface_name",{"_index":31,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["actioncard",{"_index":1,"title":{"interfaces/ActionCard.html":{}},"body":{"interfaces/ActionCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["actioncards",{"_index":1456,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["actioncards.get(cardid",{"_index":1562,"title":{},"body":{"components/HandComponent.html":{}}}],["actioncards.get(handcard.cardid",{"_index":1532,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["actionname",{"_index":21,"title":{},"body":{"interfaces/ActionCard.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actions",{"_index":61,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["actions'},{'name",{"_index":212,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["actions.component.css",{"_index":63,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions.component.html",{"_index":65,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions/actions.component",{"_index":247,"title":{},"body":{"modules/ActionsModule.html":{}}}],["actions/actions.module",{"_index":365,"title":{},"body":{"modules/BoardModule.html":{}}}],["actionscomponent",{"_index":50,"title":{"components/ActionsComponent.html":{}},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["actionsmodule",{"_index":232,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["actual_component",{"_index":230,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["addcard",{"_index":560,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["addcards",{"_index":1572,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["addcardstohand",{"_index":1589,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstohand(handid",{"_index":1592,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstostockpilebottom",{"_index":1782,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardstostockpilebottom(pileid",{"_index":1784,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardtodiscardpile",{"_index":618,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["addcardtodiscardpile(card",{"_index":622,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["agglomeration",{"_index":176,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{}}}],["agglomeration.type",{"_index":804,"title":{},"body":{"components/DomainComponent.html":{}}}],["agglomeration_card_interface_name",{"_index":137,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["agglomerationcard",{"_index":249,"title":{"interfaces/AgglomerationCard.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"miscellaneous/functions.html":{}}}],["agglomerationcard.color",{"_index":1246,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["agglomerationcard.type",{"_index":1245,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["agglomerationcards",{"_index":756,"title":{},"body":{"components/DomainComponent.html":{},"interfaces/FaceUpPilesCardsEntity.html":{}}}],["agglomerationcards.get(cardid",{"_index":782,"title":{},"body":{"components/DomainComponent.html":{}}}],["agglomerationtype",{"_index":255,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["agglomerationtype.hamlet",{"_index":286,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/FaceUpPilesCardsEntity.html":{}}}],["agglomerationtype.road",{"_index":280,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/FaceUpPilesCardsEntity.html":{}}}],["agglomerationtype.town",{"_index":290,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/FaceUpPilesCardsEntity.html":{}}}],["alexios",{"_index":1881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alldiscardpilecards",{"_index":614,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldiscardpilecardsreverse",{"_index":615,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldomainscards",{"_index":1007,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["alleventspilecards",{"_index":1175,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["allfaceuppilescards",{"_index":1252,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["allhamletpivots",{"_index":1253,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["allhandscards",{"_index":1587,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["alllandspilecards",{"_index":1656,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["allroadpivots",{"_index":1254,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["allstockpilescards",{"_index":1780,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["alltownpivots",{"_index":1255,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["altair",{"_index":1875,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altaïr",{"_index":1876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":2001,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["angular/cli@14.0.5",{"_index":1963,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":246,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":555,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["app.component",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":213,"title":{"components/AppComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["appmodule",{"_index":305,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/taormina",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Chainable.html":{}}}],["apps/ui",{"_index":409,"title":{},"body":{"interfaces/Chainable-1.html":{}}}],["arising",{"_index":2037,"title":{},"body":{"license.html":{}}}],["array",{"_index":1165,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["array.from(actioncards.values",{"_index":1772,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["array.from(agglomerationcards.values",{"_index":1244,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["array.from(developmentcards.values",{"_index":1773,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle",{"_index":1164,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle(array.from(eventcards.keys()).slice(1",{"_index":1170,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["arrayshuffle(array.from(landcards.keys",{"_index":1654,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["assertion",{"_index":2081,"title":{},"body":{"todo.html":{}}}],["associated",{"_index":1987,"title":{},"body":{"license.html":{}}}],["async",{"_index":794,"title":{},"body":{"components/DomainComponent.html":{}}}],["atmax",{"_index":978,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["auspicious",{"_index":1892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auspiciousyear",{"_index":1388,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["authors",{"_index":2027,"title":{},"body":{"license.html":{}}}],["available",{"_index":181,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"modules.html":{}}}],["available_agglomeration_slot",{"_index":138,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_development_slot",{"_index":139,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_land_slot",{"_index":140,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["availableagglomerationslot",{"_index":269,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["availablecol",{"_index":1515,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["availabledevelopmentslot",{"_index":495,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["availablelandslot",{"_index":1638,"title":{},"body":{"interfaces/LandCard.html":{}}}],["availableresources",{"_index":859,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["back",{"_index":1528,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["belowmax",{"_index":977,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["beyond",{"_index":911,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["black",{"_index":819,"title":{},"body":{"components/DomainComponent.html":{}}}],["blue",{"_index":1886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bluegoldminesandpastures",{"_index":850,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["blueresourcecount",{"_index":848,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["board",{"_index":339,"title":{},"body":{"components/BoardComponent.html":{}}}],["board'},{'name",{"_index":216,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["board.component.css",{"_index":340,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":341,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.component",{"_index":364,"title":{},"body":{"modules/BoardModule.html":{}}}],["board/board.module",{"_index":1298,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["boardcomponent",{"_index":215,"title":{"components/BoardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["boardmodule",{"_index":353,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":488,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":816,"title":{},"body":{"components/DomainComponent.html":{}}}],["break",{"_index":1775,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["brickyard",{"_index":1861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bridge",{"_index":1870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2042,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["bruneton",{"_index":1977,"title":{},"body":{"license.html":{}}}],["building",{"_index":498,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["building.givesknowledge",{"_index":501,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.noduplicate",{"_index":502,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.tradepoints",{"_index":500,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.victorypoints",{"_index":503,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["buildingname",{"_index":490,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["buy",{"_index":175,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buyagglomeration",{"_index":67,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydevelopment",{"_index":68,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydisabled",{"_index":69,"title":{},"body":{"components/ActionsComponent.html":{}}}],["c",{"_index":1973,"title":{},"body":{"license.html":{}}}],["can't",{"_index":878,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["canprint",{"_index":261,"title":{"interfaces/CanPrint.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["card",{"_index":179,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardComponent.html":{},"interfaces/Chainable-1.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["card'},{'name",{"_index":218,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["card.cardid",{"_index":1493,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.cardtype",{"_index":1492,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.component.html",{"_index":377,"title":{},"body":{"components/CardComponent.html":{}}}],["card.id",{"_index":570,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card.module.ts",{"_index":1813,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card.type",{"_index":569,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card/card.component",{"_index":1814,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card/src/lib/card/card.component.ts",{"_index":376,"title":{},"body":{"components/CardComponent.html":{}}}],["card/src/lib/ui",{"_index":1812,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card0",{"_index":1122,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.col",{"_index":1130,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.id",{"_index":1134,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.row",{"_index":1131,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1",{"_index":1124,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.col",{"_index":1127,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.id",{"_index":1135,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.row",{"_index":1128,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["cardcomponent",{"_index":217,"title":{"components/CardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["cardid",{"_index":610,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards",{"_index":10,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandCard.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.actions",{"_index":604,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.effects",{"_index":421,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.effects.spec.ts",{"_index":2090,"title":{},"body":{"todo.html":{}}}],["cards.effects.ts",{"_index":559,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["cards.effects.ts:11",{"_index":1646,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:12",{"_index":578,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:139",{"_index":953,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:15",{"_index":1222,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["cards.effects.ts:177",{"_index":962,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:19",{"_index":1584,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:20",{"_index":1744,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:212",{"_index":966,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:22",{"_index":1650,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:23",{"_index":596,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:235",{"_index":906,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:26",{"_index":1226,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["cards.effects.ts:31",{"_index":1748,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:317",{"_index":917,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:32",{"_index":945,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:348",{"_index":959,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:36",{"_index":1578,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:364",{"_index":868,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:381",{"_index":862,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:39",{"_index":1642,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:42",{"_index":574,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:422",{"_index":836,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:429",{"_index":841,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:43",{"_index":949,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:444",{"_index":963,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:45",{"_index":1234,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["cards.effects.ts:46",{"_index":1573,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:488",{"_index":838,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:50",{"_index":1763,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:51",{"_index":1149,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:52",{"_index":564,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["cards.effects.ts:62",{"_index":941,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:75",{"_index":1218,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["cards.effects.ts:82",{"_index":1740,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:94",{"_index":1736,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:96",{"_index":933,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.facade",{"_index":422,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.facade.ts",{"_index":613,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:104",{"_index":1028,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:121",{"_index":1026,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:127",{"_index":1060,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:131",{"_index":1059,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:135",{"_index":1038,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:139",{"_index":1034,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:14",{"_index":1189,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:143",{"_index":1040,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:147",{"_index":1036,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:151",{"_index":1042,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:159",{"_index":1030,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:165",{"_index":1044,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:17",{"_index":1187,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:171",{"_index":1032,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:177",{"_index":1047,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:18",{"_index":639,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:19",{"_index":1269,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:20",{"_index":1067,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:21",{"_index":635,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:22",{"_index":1180,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:23",{"_index":1065,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:24",{"_index":637,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:25",{"_index":1271,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["cards.facade.ts:26",{"_index":1068,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:27",{"_index":650,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:28",{"_index":1024,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{}}}],["cards.facade.ts:29",{"_index":621,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:31",{"_index":1264,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["cards.facade.ts:32",{"_index":1181,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:34",{"_index":1267,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["cards.facade.ts:36",{"_index":1182,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:38",{"_index":1053,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:39",{"_index":625,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:40",{"_index":1184,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:42",{"_index":1054,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:43",{"_index":632,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:44",{"_index":1185,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:46",{"_index":1055,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:48",{"_index":1183,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["cards.facade.ts:49",{"_index":624,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:50",{"_index":1062,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{}}}],["cards.facade.ts:52",{"_index":1594,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:54",{"_index":1048,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{}}}],["cards.facade.ts:56",{"_index":1595,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:58",{"_index":1261,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:60",{"_index":1052,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:66",{"_index":1049,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:72",{"_index":1063,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:76",{"_index":1045,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:80",{"_index":1061,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:86",{"_index":1025,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:90",{"_index":1057,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.map((card",{"_index":1575,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cards.models",{"_index":606,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.models.ts",{"_index":608,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards.reducer",{"_index":424,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.reducer.ts",{"_index":660,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cards.selectors",{"_index":654,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.selectors.ts",{"_index":2121,"title":{},"body":{"todo.html":{}}}],["cards.ts",{"_index":2077,"title":{},"body":{"todo.html":{}}}],["cards/discard",{"_index":420,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["cards/domains",{"_index":427,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["cards/events",{"_index":431,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["cards/face",{"_index":436,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"todo.html":{}}}],["cards/hands",{"_index":445,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["cards/lands",{"_index":449,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["cards/stock",{"_index":453,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cardscount",{"_index":1409,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardsvictorypoints",{"_index":1476,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardtype",{"_index":611,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["catcherror",{"_index":968,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["catcherror((error",{"_index":903,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["celebration",{"_index":795,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["celebrationpoints",{"_index":482,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":815,"title":{},"body":{"components/DomainComponent.html":{}}}],["center",{"_index":1874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chainable",{"_index":379,"title":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["change",{"_index":1314,"title":{},"body":{"injectables/GameEffects.html":{}}}],["changes",{"_index":858,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["charge",{"_index":1982,"title":{},"body":{"license.html":{}}}],["child",{"_index":397,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["claim",{"_index":2030,"title":{},"body":{"license.html":{}}}],["class",{"_index":150,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{}}}],["clay",{"_index":1920,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["claypit",{"_index":1914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clear",{"_index":198,"title":{},"body":{"components/ActionsComponent.html":{}}}],["cleardomaincardselection",{"_index":70,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cluster_actionsmodule",{"_index":235,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declarations",{"_index":236,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_exports",{"_index":237,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":354,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":356,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_exports",{"_index":357,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":355,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule",{"_index":410,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule_providers",{"_index":411,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dicemodule",{"_index":549,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_declarations",{"_index":551,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_exports",{"_index":550,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_domainmodule",{"_index":820,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_declarations",{"_index":822,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_exports",{"_index":821,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule",{"_index":1294,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_exports",{"_index":1295,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_imports",{"_index":1296,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["cluster_handmodule",{"_index":1566,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_declarations",{"_index":1568,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_exports",{"_index":1567,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_phasesmodule",{"_index":1723,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_declarations",{"_index":1725,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_exports",{"_index":1724,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule",{"_index":1728,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_declarations",{"_index":1729,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_exports",{"_index":1730,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_uicardmodule",{"_index":1810,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_declarations",{"_index":1811,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["col",{"_index":864,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["color",{"_index":251,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":203,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["combine",{"_index":640,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["combinelatest",{"_index":760,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["command",{"_index":393,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["commonmodule",{"_index":245,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["community",{"_index":1873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["communitycenter",{"_index":1872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["component",{"_index":49,"title":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["component_template",{"_index":211,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["components",{"_index":51,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":969,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["concatmap(([_action",{"_index":871,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["concatmap((action",{"_index":908,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["conditions",{"_index":2008,"title":{},"body":{"license.html":{}}}],["connection",{"_index":2038,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":594,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["console.log('custom",{"_index":395,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["constants",{"_index":352,"title":{},"body":{"components/BoardComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["constructor(actions",{"_index":563,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["constructor(domainscards",{"_index":712,"title":{},"body":{"components/DomainComponent.html":{}}}],["constructor(game",{"_index":88,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["constructor(gamerules",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(handscards",{"_index":1545,"title":{},"body":{"components/HandComponent.html":{}}}],["constructor(private",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["constructor(store",{"_index":619,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["container",{"_index":201,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["contract",{"_index":2034,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2003,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1985,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1972,"title":{},"body":{"license.html":{}}}],["corepack@0.10.0",{"_index":1964,"title":{},"body":{"index.html":{}}}],["cost",{"_index":252,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":792,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["countandsteal",{"_index":1389,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["countandstealunprotectedgoldandwool",{"_index":1009,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["countstealresources",{"_index":826,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createactioncard",{"_index":33,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["createagglomerationcard",{"_index":270,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["createavailabledomaincard",{"_index":1010,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createavailabledomaincard(domainid",{"_index":1027,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createbuilding",{"_index":497,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createbuilding(id",{"_index":1944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcard",{"_index":827,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createdevelopmentcard",{"_index":496,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["creatediscardpilecardsentity",{"_index":605,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{}}}],["creatediscardpilecardsentity(uuidv4",{"_index":568,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["createdomain",{"_index":689,"title":{},"body":{"interfaces/Domain.html":{}}}],["createdomainscardsentity",{"_index":866,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createeffect",{"_index":565,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["createentityadapter",{"_index":663,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createeventcard",{"_index":1144,"title":{},"body":{"interfaces/EventCard.html":{}}}],["createeventspilecardsentity",{"_index":1167,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createeventspilecardsentity(uuidv4",{"_index":1174,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createfaceuppilescardsentity",{"_index":1242,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["createfaceuppilescardsentity(uuidv4",{"_index":1248,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["createhamlet",{"_index":283,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createhamlet(id",{"_index":1949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createhand",{"_index":1537,"title":{},"body":{"interfaces/Hand.html":{}}}],["createhandscardsentity",{"_index":1586,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{}}}],["createhandscardsentity(uuidv4",{"_index":1576,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["createinitialdomainscards",{"_index":944,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createinitialeventspilecards",{"_index":1153,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["createinitialfaceuppilescards",{"_index":1221,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{}}}],["createinitiallandspilecards",{"_index":1645,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["createinitialstockpilescards",{"_index":1743,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createlandcard",{"_index":1639,"title":{},"body":{"interfaces/LandCard.html":{}}}],["createlandspilecardsentity",{"_index":1653,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createlandspilecardsentity(uuidv4",{"_index":1655,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createreducer",{"_index":667,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createroad",{"_index":1927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createroad(id",{"_index":274,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createselector",{"_index":644,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["createship",{"_index":1928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createship(id",{"_index":504,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createstockpilescardsentity",{"_index":1767,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createstockpilescardsentity(uuidv4",{"_index":1738,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["createtown",{"_index":1929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtown(id",{"_index":287,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior",{"_index":512,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior(id",{"_index":1948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":1718,"title":{},"body":{"components/PhasesComponent.html":{}}}],["custom",{"_index":582,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cypress",{"_index":389,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":403,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"drag",{"_index":398,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add('login",{"_index":394,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":406,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["damages",{"_index":2031,"title":{},"body":{"license.html":{}}}],["data",{"_index":609,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["dataaccessgamemodule",{"_index":311,"title":{"modules/DataAccessGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"modules.html":{},"overview.html":{}}}],["deal",{"_index":1990,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2039,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":242,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["declare",{"_index":387,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["default",{"_index":346,"title":{},"body":{"components/BoardComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["defined",{"_index":100,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["dependencies",{"_index":234,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["development",{"_index":187,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["development.name",{"_index":803,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["development_card_interface_name",{"_index":141,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["developmentcard",{"_index":480,"title":{"interfaces/DevelopmentCard.html":{}},"body":{"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/EventCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["developmentcards",{"_index":757,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["developmentcards.get(cardid",{"_index":781,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["developmenttype",{"_index":489,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["developmenttype.building",{"_index":499,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.ship",{"_index":510,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.warrior",{"_index":514,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["devtools",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["dice",{"_index":519,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice'},{'name",{"_index":220,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["dice.component.css",{"_index":520,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice.component.html",{"_index":521,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice/dice.component",{"_index":553,"title":{},"body":{"modules/DiceModule.html":{}}}],["dice/dice.module",{"_index":366,"title":{},"body":{"modules/BoardModule.html":{}}}],["dicecomponent",{"_index":219,"title":{"components/DiceComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["diceid",{"_index":1843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dicemodule",{"_index":358,"title":{"modules/DiceModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DiceModule.html":{},"modules.html":{},"overview.html":{}}}],["dicevalue",{"_index":1051,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["die",{"_index":547,"title":{},"body":{"components/DiceComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["different",{"_index":886,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["directive",{"_index":209,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["directives",{"_index":229,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["disable",{"_index":35,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["discard",{"_index":603,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discard_pile_cards_feature_key",{"_index":661,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecard",{"_index":573,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecards",{"_index":577,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/GameRulesService.html":{}}}],["discardpilecardsactions",{"_index":602,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.adddiscardpilecard",{"_index":572,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":657,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsactions.loaddiscardpilecardsfailure",{"_index":595,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.loaddiscardpilecardssuccess",{"_index":590,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.setdiscardpilecardsinitialized",{"_index":576,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter",{"_index":674,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.addone(discardpilecard",{"_index":686,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.getinitialstate",{"_index":676,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.setall(discardpilecards",{"_index":684,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardseffects",{"_index":418,"title":{"injectables/DiscardPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsentity",{"_index":607,"title":{"interfaces/DiscardPileCardsEntity.html":{}},"body":{"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsfacade",{"_index":412,"title":{"injectables/DiscardPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["discardpilecardsfeature",{"_index":652,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardspartialstate",{"_index":659,"title":{"interfaces/DiscardPileCardsPartialState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsreducer",{"_index":681,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsselectors",{"_index":653,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsstate",{"_index":662,"title":{"interfaces/DiscardPileCardsState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["display",{"_index":202,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["distribute",{"_index":1999,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1988,"title":{},"body":{"license.html":{}}}],["dom",{"_index":54,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain",{"_index":186,"title":{"interfaces/Domain.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{}}}],["domain'},{'name",{"_index":222,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain.color",{"_index":790,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.css",{"_index":691,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.html",{"_index":692,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain/domain.component",{"_index":824,"title":{},"body":{"modules/DomainModule.html":{}}}],["domain/domain.module",{"_index":367,"title":{},"body":{"modules/BoardModule.html":{}}}],["domaincard",{"_index":161,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.cardid",{"_index":1529,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.cardtype",{"_index":1527,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.col",{"_index":1512,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.domainid",{"_index":780,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.id",{"_index":1508,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.row",{"_index":1531,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard?.cardtype",{"_index":162,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards",{"_index":1501,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards.filter",{"_index":160,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards.length",{"_index":1504,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards[0",{"_index":1505,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincardtype",{"_index":984,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"miscellaneous/typealiases.html":{}}}],["domaincolor",{"_index":254,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["domaincolor.red",{"_index":1377,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["domaincomponent",{"_index":221,"title":{"components/DomainComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["domainid",{"_index":711,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["domainmodule",{"_index":359,"title":{"modules/DomainModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DomainModule.html":{},"modules.html":{},"overview.html":{}}}],["domains",{"_index":197,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domains.get(this.domainid",{"_index":761,"title":{},"body":{"components/DomainComponent.html":{}}}],["domains_cards_feature_key",{"_index":1096,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscard.id).includes(pivotid",{"_index":785,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards",{"_index":90,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domainscards.filter((domaincard",{"_index":779,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards.map((domainscard",{"_index":784,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscardsactions",{"_index":971,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.adddomaincard",{"_index":867,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.countandstealunprotectedgoldandwool",{"_index":1082,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.createdomaincard",{"_index":1081,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresources",{"_index":1073,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1075,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesfordie",{"_index":1074,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.loaddomainscardsfailure",{"_index":948,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.loaddomainscardssuccess",{"_index":947,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.putcardinpivot",{"_index":1080,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.setdomainscardserror",{"_index":904,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.setdomainscardsinitialized",{"_index":943,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.toggledomaincardselection",{"_index":1078,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.updatedomaincard",{"_index":916,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.updatedomainscards",{"_index":861,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsadapter",{"_index":1099,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.addone(domaincard",{"_index":1113,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.getinitialstate",{"_index":1101,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.removeone(id",{"_index":1137,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.setall(domainscards",{"_index":1106,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updatemany(updates",{"_index":1111,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updateone(update",{"_index":1109,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardseffects",{"_index":425,"title":{"injectables/DomainsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{}}}],["domainscardsentity",{"_index":129,"title":{"interfaces/DomainsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsfacade",{"_index":91,"title":{"injectables/DomainsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["domainscardsfeature",{"_index":972,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardspartialstate",{"_index":1095,"title":{"interfaces/DomainsCardsPartialState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsreducer",{"_index":1102,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsselectors",{"_index":973,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.count_1",{"_index":926,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_2",{"_index":928,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_3",{"_index":930,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_4",{"_index":932,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getcardsvictorypointsfordomain(domainid",{"_index":1091,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getcelebrationpointsfordomain(domainid",{"_index":1093,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getdomainresourcecountseenbythieves",{"_index":845,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getdomainunprotectedgoldminesandpastures",{"_index":846,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardpivotwithlockedresources",{"_index":870,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseauspiciousyear",{"_index":919,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseoneproduction",{"_index":936,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreasetwoproduction",{"_index":938,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getmasterydomainfortype(type",{"_index":1090,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getmerchantshipcountfordomain(domainid",{"_index":1092,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.hasdomaincommunitycenter(domainid",{"_index":1094,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsstate",{"_index":1097,"title":{"interfaces/DomainsCardsState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsstore",{"_index":835,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["draw",{"_index":1906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drawcardfromstocktohand",{"_index":1395,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawcardfromstocktohand(pileid",{"_index":1405,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand",{"_index":1396,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand(pileid",{"_index":1408,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["dual",{"_index":402,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["duel",{"_index":380,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duel/src/app/app.component.ts",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:12",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:9",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.module.ts",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/commands.ts",{"_index":381,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["e2e/src/support/commands.ts:15",{"_index":385,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["effects",{"_index":631,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["effectsmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([discardpilecardseffects",{"_index":479,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([domainscardseffects",{"_index":461,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([eventspilecardseffects",{"_index":467,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([faceuppilescardseffects",{"_index":470,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([gameeffects",{"_index":457,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([handscardseffects",{"_index":464,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([landspilecardseffects",{"_index":476,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([stockpilescardseffects",{"_index":473,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forroot",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":208,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["email",{"_index":386,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["empty",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["enable",{"_index":282,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["engine",{"_index":136,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["engine.module.ts",{"_index":1293,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/feature",{"_index":1292,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/game",{"_index":1386,"title":{},"body":{"injectables/GameRulesService.html":{},"todo.html":{}}}],["entities",{"_index":1132,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["entityadapter",{"_index":664,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["entitystate",{"_index":665,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["enumerations",{"_index":1839,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["environment.production",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":593,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["error(`can't",{"_index":507,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["error(`couldn't",{"_index":975,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["error.message",{"_index":905,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["errormsg",{"_index":670,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["eslint",{"_index":34,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{},"todo.html":{}}}],["eslint/explicit",{"_index":2123,"title":{},"body":{"todo.html":{}}}],["eslint/no",{"_index":39,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["event",{"_index":548,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{}}}],["event.name",{"_index":1721,"title":{},"body":{"components/PhasesComponent.html":{}}}],["event_0",{"_index":1172,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["event_card_interface_name",{"_index":1143,"title":{},"body":{"interfaces/EventCard.html":{}}}],["eventcard",{"_index":1139,"title":{"interfaces/EventCard.html":{}},"body":{"interfaces/EventCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/functions.html":{}}}],["eventcards",{"_index":1163,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventcards.get(cardid",{"_index":1713,"title":{},"body":{"components/PhasesComponent.html":{}}}],["eventcards.get(pivot.cardid)?.name",{"_index":1425,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventdie",{"_index":1334,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["eventfromvalue",{"_index":1930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventfromvalue(value",{"_index":1951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventname",{"_index":1141,"title":{},"body":{"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["eventname.auspiciousyear",{"_index":1426,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventname.festival",{"_index":1435,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["events",{"_index":1160,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["events_pile_cards_feature_key",{"_index":1198,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecards",{"_index":1152,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecards[0].id",{"_index":1209,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions",{"_index":1159,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.loadeventspilecardsfailure",{"_index":1156,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsactions.loadeventspilecardssuccess",{"_index":1155,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesinitializedeventspilecards",{"_index":1151,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesselectfirsteventspilecards",{"_index":1158,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter",{"_index":1200,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.getinitialstate",{"_index":1202,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.removeone",{"_index":1215,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.setall(eventspilecards",{"_index":1206,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardseffects",{"_index":429,"title":{"injectables/EventsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsentity",{"_index":1162,"title":{"interfaces/EventsPileCardsEntity.html":{}},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecardsfacade",{"_index":413,"title":{"injectables/EventsPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["eventspilecardsfeature",{"_index":1161,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardspartialstate",{"_index":1197,"title":{"interfaces/EventsPileCardsPartialState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsreducer",{"_index":1203,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsselectors",{"_index":1191,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardsstate",{"_index":1199,"title":{"interfaces/EventsPileCardsState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsstore",{"_index":1148,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventvalue",{"_index":538,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["eventvalue.event",{"_index":1433,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventvalue.thieves",{"_index":1454,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["evie",{"_index":1878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["example",{"_index":396,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["exchange",{"_index":1912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["existing",{"_index":405,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["explicit",{"_index":40,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["exports",{"_index":243,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{}}}],["expose",{"_index":645,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["express",{"_index":2018,"title":{},"body":{"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ezio",{"_index":1877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade",{"_index":648,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["face",{"_index":1231,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["face_up_piles_cards_feature_key",{"_index":1277,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilecard",{"_index":1502,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["faceuppilecard.cardid",{"_index":1509,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["faceuppilecard.pileid",{"_index":1510,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["faceuppilescards",{"_index":94,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameRulesService.html":{}}}],["faceuppilescardsactions",{"_index":1235,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsactions.loadfaceuppilescardsfailure",{"_index":1225,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsactions.loadfaceuppilescardssuccess",{"_index":1224,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsactions.selectfaceuppilecard",{"_index":1232,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["faceuppilescardsactions.selectfirstcardfromfaceuppile",{"_index":1275,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["faceuppilescardsactions.setfaceuppilescardserror",{"_index":1233,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["faceuppilescardsactions.setfaceuppilescardsinitialized",{"_index":1220,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsadapter",{"_index":1279,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsadapter.getinitialstate",{"_index":1281,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsadapter.removeone(id",{"_index":1289,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsadapter.setall(faceuppilescards",{"_index":1285,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardseffects",{"_index":433,"title":{"injectables/FaceUpPilesCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["faceuppilescardsentity",{"_index":130,"title":{"interfaces/FaceUpPilesCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsfacade",{"_index":95,"title":{"injectables/FaceUpPilesCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["faceuppilescardsfeature",{"_index":1236,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{}}}],["faceuppilescardspartialstate",{"_index":1276,"title":{"interfaces/FaceUpPilesCardsPartialState.html":{}},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsreducer",{"_index":1282,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsselectors",{"_index":1237,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{}}}],["faceuppilescardsselectors.getcardpivotsforpile(id_face_up_hamlet",{"_index":1263,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["faceuppilescardsselectors.getcardpivotsforpile(id_face_up_road",{"_index":1265,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["faceuppilescardsselectors.getcardpivotsforpile(id_face_up_town",{"_index":1266,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["faceuppilescardsselectors.getfirstcardpivotforpile(action.pileid",{"_index":1229,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["faceuppilescardsstate",{"_index":1278,"title":{"interfaces/FaceUpPilesCardsState.html":{}},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["faceuppilescardsstore",{"_index":1217,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["false",{"_index":680,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["featureenginemodule",{"_index":1291,"title":{"modules/FeatureEngineModule.html":{}},"body":{"modules/FeatureEngineModule.html":{},"modules.html":{}}}],["featuregamemodule",{"_index":312,"title":{"modules/FeatureGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["festival",{"_index":1390,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":580,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["field",{"_index":1917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["filename",{"_index":2051,"title":{},"body":{"todo.html":{}}}],["files",{"_index":1989,"title":{},"body":{"license.html":{}}}],["filter",{"_index":147,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["filter((die",{"_index":1453,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((handcard",{"_index":168,"title":{},"body":{"components/ActionsComponent.html":{}}}],["filter((pivot",{"_index":1424,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((stockpilecard",{"_index":1481,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((value",{"_index":1442,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filtering",{"_index":1757,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["find",{"_index":508,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{}}}],["finish",{"_index":1722,"title":{},"body":{"components/PhasesComponent.html":{}}}],["first",{"_index":1230,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["firstland",{"_index":881,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstland.type",{"_index":885,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstpivot",{"_index":879,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["fitness",{"_index":2023,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":2059,"title":{},"body":{"todo.html":{}}}],["fixmes",{"_index":2058,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":200,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["following",{"_index":2007,"title":{},"body":{"license.html":{}}}],["force",{"_index":1313,"title":{},"body":{"injectables/GameEffects.html":{}}}],["foreign",{"_index":1004,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["forest",{"_index":1915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":935,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["formsmodule",{"_index":554,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{}}}],["foundid",{"_index":1115,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["foundry",{"_index":1864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["free",{"_index":1981,"title":{},"body":{"license.html":{}}}],["fromdiscardpilecards",{"_index":423,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discard_pile_cards_feature_key",{"_index":477,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discardpilecardsreducer",{"_index":478,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards",{"_index":428,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domains_cards_feature_key",{"_index":459,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domainscardsreducer",{"_index":460,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards",{"_index":432,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.events_pile_cards_feature_key",{"_index":474,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.eventspilecardsreducer",{"_index":475,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromfaceuppilescards",{"_index":437,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromfaceuppilescards.face_up_piles_cards_feature_key",{"_index":465,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromfaceuppilescards.faceuppilescardsreducer",{"_index":466,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame",{"_index":441,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame.gamereducer",{"_index":456,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards",{"_index":446,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.hands_cards_feature_key",{"_index":462,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.handscardsreducer",{"_index":463,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards",{"_index":450,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.lands_pile_cards_feature_key",{"_index":468,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.landspilecardsreducer",{"_index":469,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards",{"_index":454,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stock_piles_cards_feature_key",{"_index":471,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stockpilescardsreducer",{"_index":472,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["function",{"_index":41,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["functions",{"_index":1926,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2006,"title":{},"body":{"license.html":{}}}],["game",{"_index":104,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["game.actions",{"_index":1328,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game.module.ts",{"_index":417,"title":{},"body":{"modules/DataAccessGameModule.html":{},"modules/FeatureGameModule.html":{}}}],["game.reducer",{"_index":1330,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game.selectors",{"_index":1332,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game/src/lib/+state/discard",{"_index":558,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/domains",{"_index":825,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/events",{"_index":1146,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/face",{"_index":1216,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts",{"_index":1299,"title":{},"body":{"injectables/GameEffects.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts:16",{"_index":1309,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:26",{"_index":1325,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:49",{"_index":1318,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:59",{"_index":1304,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.facade.ts",{"_index":1333,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:20",{"_index":1364,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:21",{"_index":1358,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:24",{"_index":1356,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:25",{"_index":1360,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:26",{"_index":1362,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:27",{"_index":1342,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:35",{"_index":1343,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:39",{"_index":1351,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:43",{"_index":1353,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:47",{"_index":1346,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:51",{"_index":1352,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:55",{"_index":1348,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:59",{"_index":1350,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:63",{"_index":1345,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.reducer.ts",{"_index":1373,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game/src/lib/+state/hands",{"_index":1571,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["game/src/lib/+state/lands",{"_index":1641,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["game/src/lib/+state/stock",{"_index":1733,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/actions/actions.module.ts",{"_index":241,"title":{},"body":{"modules/ActionsModule.html":{}}}],["game/src/lib/actions/actions/actions.component.ts",{"_index":57,"title":{},"body":{"components/ActionsComponent.html":{},"todo.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:108",{"_index":113,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:119",{"_index":127,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:127",{"_index":126,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:131",{"_index":117,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:137",{"_index":124,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:141",{"_index":123,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:145",{"_index":116,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:149",{"_index":122,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:153",{"_index":120,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:163",{"_index":114,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:173",{"_index":111,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:177",{"_index":125,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:32",{"_index":101,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:42",{"_index":109,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:48",{"_index":105,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:52",{"_index":121,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:56",{"_index":118,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:69",{"_index":112,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:83",{"_index":108,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:87",{"_index":115,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:95",{"_index":119,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/board/board.module.ts",{"_index":363,"title":{},"body":{"modules/BoardModule.html":{}}}],["game/src/lib/board/board/board.component.ts",{"_index":338,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:15",{"_index":351,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:16",{"_index":350,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:17",{"_index":349,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:18",{"_index":348,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/data",{"_index":416,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["game/src/lib/dice/dice.module.ts",{"_index":552,"title":{},"body":{"modules/DiceModule.html":{}}}],["game/src/lib/dice/dice/dice.component.ts",{"_index":518,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:19",{"_index":529,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:23",{"_index":537,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:32",{"_index":533,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:36",{"_index":532,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:40",{"_index":530,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:44",{"_index":531,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:48",{"_index":536,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/domain/domain.module.ts",{"_index":823,"title":{},"body":{"modules/DomainModule.html":{}}}],["game/src/lib/domain/domain/domain.component.ts",{"_index":690,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:107",{"_index":725,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:115",{"_index":722,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:119",{"_index":716,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:123",{"_index":727,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:127",{"_index":743,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:135",{"_index":747,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:139",{"_index":745,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:143",{"_index":749,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:147",{"_index":740,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:35",{"_index":714,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:37",{"_index":753,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:38",{"_index":750,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:39",{"_index":754,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:40",{"_index":751,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:41",{"_index":752,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:42",{"_index":713,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:49",{"_index":723,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:53",{"_index":732,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:57",{"_index":718,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:61",{"_index":734,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:67",{"_index":736,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:73",{"_index":738,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:77",{"_index":720,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:92",{"_index":730,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/feature",{"_index":1297,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["game/src/lib/hand/hand.module.ts",{"_index":1569,"title":{},"body":{"modules/HandModule.html":{}}}],["game/src/lib/hand/hand/hand.component.ts",{"_index":1538,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:24",{"_index":1547,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:26",{"_index":1556,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:27",{"_index":1546,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:31",{"_index":1551,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:35",{"_index":1553,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:43",{"_index":1549,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:47",{"_index":1550,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:51",{"_index":1555,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/phases/phases.module.ts",{"_index":1726,"title":{},"body":{"modules/PhasesModule.html":{}}}],["game/src/lib/phases/phases/phases.component.ts",{"_index":1686,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:22",{"_index":1708,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:23",{"_index":1697,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:30",{"_index":1701,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:34",{"_index":1705,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:38",{"_index":1702,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:42",{"_index":1706,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:46",{"_index":1700,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:50",{"_index":1703,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:54",{"_index":1704,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:58",{"_index":1698,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:62",{"_index":1707,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/piles/piles.module.ts",{"_index":1731,"title":{},"body":{"modules/PilesModule.html":{}}}],["game/src/test/fixtures/domains",{"_index":2076,"title":{},"body":{"todo.html":{}}}],["game_feature_key",{"_index":1374,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions",{"_index":1327,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions.seteventdie",{"_index":1317,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setnextproductiondie",{"_index":1324,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setproductiondie",{"_index":1323,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throweventdie",{"_index":1307,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throwproductiondie",{"_index":1308,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameeffects",{"_index":438,"title":{"injectables/GameEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameEffects.html":{}}}],["gameended",{"_index":1391,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["gamefacade",{"_index":89,"title":{"injectables/GameFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["gamepartialstate",{"_index":1329,"title":{"interfaces/GamePartialState.html":{}},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamephase",{"_index":142,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamephase.initialthrow",{"_index":539,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{}}}],["gamephase.loopactions",{"_index":155,"title":{},"body":{"components/ActionsComponent.html":{}}}],["gamephase.loopthrow",{"_index":540,"title":{},"body":{"components/DiceComponent.html":{}}}],["gamereducer",{"_index":1378,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamerules",{"_index":98,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["gamerulesservice",{"_index":99,"title":{"injectables/GameRulesService.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["gameselectors",{"_index":1331,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["gamestate",{"_index":1375,"title":{"interfaces/GameState.html":{}},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamestore",{"_index":1303,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gap",{"_index":204,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["generated",{"_index":1958,"title":{},"body":{"index.html":{}}}],["getaction",{"_index":1690,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getactioncard",{"_index":1541,"title":{},"body":{"components/HandComponent.html":{}}}],["getactioncard(cardid",{"_index":1548,"title":{},"body":{"components/HandComponent.html":{}}}],["getagglomerationcard",{"_index":693,"title":{},"body":{"components/DomainComponent.html":{}}}],["getagglomerationcard(cardid",{"_index":715,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcardsvictorypointsfordomain",{"_index":1011,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcardsvictorypointsfordomain(domainid",{"_index":1029,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpoints",{"_index":694,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domain.id",{"_index":797,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domainid",{"_index":717,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpointsfordomain",{"_index":1012,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpointsfordomain(domainid",{"_index":1031,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcolumnstemplate",{"_index":695,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcolumnstemplate(domainid",{"_index":719,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdevelopmentcard",{"_index":696,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdevelopmentcard(cardid",{"_index":721,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdomain",{"_index":697,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainmaxcol",{"_index":1013,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxcol(domainid",{"_index":1033,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow",{"_index":1014,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow(domainid",{"_index":1035,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol",{"_index":1015,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol(domainid",{"_index":1037,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow",{"_index":1016,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow(domainid",{"_index":1039,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainscards",{"_index":698,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainscards(domainid",{"_index":724,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainselectedagglomerationslots",{"_index":71,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselecteddevelopmentcards",{"_index":72,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselectedlandcards",{"_index":73,"title":{},"body":{"components/ActionsComponent.html":{}}}],["geteventcard",{"_index":1691,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventcard(cardid",{"_index":1699,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventdie",{"_index":523,"title":{},"body":{"components/DiceComponent.html":{}}}],["gethand",{"_index":1542,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards",{"_index":1543,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards(handid",{"_index":1552,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandselecteddevelopmentcard",{"_index":74,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getlandcard",{"_index":699,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcard(cardid",{"_index":726,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcardfrompivot",{"_index":833,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getlandcardfrompivot(pivot",{"_index":837,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getmasterydomainfortype",{"_index":1017,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmasterydomainfortype(masterypointstype.strength",{"_index":765,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(masterypointstype.trade",{"_index":768,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(type",{"_index":1041,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain",{"_index":1018,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain(domainid",{"_index":1043,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getnextproductiondie",{"_index":524,"title":{},"body":{"components/DiceComponent.html":{}}}],["getphase",{"_index":1692,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getpileselectedlandcard",{"_index":75,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getplayer",{"_index":1693,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getproductiondie",{"_index":525,"title":{},"body":{"components/DiceComponent.html":{}}}],["getrandomeventdievalue",{"_index":1311,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrandomproductiondievalue",{"_index":1322,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrowstemplate",{"_index":700,"title":{},"body":{"components/DomainComponent.html":{}}}],["getrowstemplate(domainid",{"_index":729,"title":{},"body":{"components/DomainComponent.html":{}}}],["getselectedactioncard",{"_index":76,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailableagglomerationslots",{"_index":77,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailabledevelopmentslots",{"_index":78,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailablelandslots",{"_index":79,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedeventspilecard",{"_index":1694,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getselectedfaceuppilecard",{"_index":80,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedhandcard",{"_index":81,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getshipscount",{"_index":701,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domain.id",{"_index":793,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domainid",{"_index":731,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery",{"_index":702,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery(domainid",{"_index":733,"title":{},"body":{"components/DomainComponent.html":{}}}],["getting",{"_index":1955,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettrademastery",{"_index":703,"title":{},"body":{"components/DomainComponent.html":{}}}],["gettrademastery(domainid",{"_index":735,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints",{"_index":704,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domain.id",{"_index":802,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domainid",{"_index":737,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypointsfordomain",{"_index":1397,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["getvictorypointsfordomain(domainid",{"_index":1411,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["give",{"_index":193,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["givelockedresources",{"_index":82,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["givesknowledge",{"_index":483,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["globally",{"_index":1960,"title":{},"body":{"index.html":{}}}],["goes",{"_index":586,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["gold",{"_index":1922,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldmine",{"_index":1916,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldsmith",{"_index":1852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["granted",{"_index":1980,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2043,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":814,"title":{},"body":{"components/DomainComponent.html":{}}}],["hamlet",{"_index":1858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hamletentities",{"_index":1250,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["hand",{"_index":188,"title":{"interfaces/Hand.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{}}}],["hand'},{'name",{"_index":224,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["hand.color",{"_index":1564,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.css",{"_index":1539,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.html",{"_index":1540,"title":{},"body":{"components/HandComponent.html":{}}}],["hand/hand.component",{"_index":1570,"title":{},"body":{"modules/HandModule.html":{}}}],["hand/hand.module",{"_index":368,"title":{},"body":{"modules/BoardModule.html":{}}}],["handcard",{"_index":165,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["handcard.cardid",{"_index":1517,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.cardtype",{"_index":1526,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.handid",{"_index":1561,"title":{},"body":{"components/HandComponent.html":{}}}],["handcard?.cardtype",{"_index":166,"title":{},"body":{"components/ActionsComponent.html":{}}}],["handcomponent",{"_index":223,"title":{"components/HandComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["handid",{"_index":1406,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{}}}],["handmodule",{"_index":360,"title":{"modules/HandModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/HandModule.html":{},"modules.html":{},"overview.html":{}}}],["hands",{"_index":1536,"title":{},"body":{"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["hands.get(this.handid",{"_index":1557,"title":{},"body":{"components/HandComponent.html":{}}}],["hands_cards_feature_key",{"_index":1608,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards",{"_index":92,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards.filter((handcard",{"_index":1560,"title":{},"body":{"components/HandComponent.html":{}}}],["handscardsactions",{"_index":1585,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsactions.addhandscards",{"_index":1577,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardsfailure",{"_index":1583,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardssuccess",{"_index":1582,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.sethandscardsinitialized",{"_index":1580,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsadapter",{"_index":1610,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.addmany(handscards",{"_index":1621,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.getinitialstate",{"_index":1612,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.removeone(id",{"_index":1626,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.setall(handscards",{"_index":1617,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardseffects",{"_index":443,"title":{"injectables/HandsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{}}}],["handscardsentity",{"_index":131,"title":{"interfaces/HandsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsfacade",{"_index":93,"title":{"injectables/HandsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"overview.html":{}}}],["handscardsfeature",{"_index":1599,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardspartialstate",{"_index":1607,"title":{"interfaces/HandsCardsPartialState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsreducer",{"_index":1613,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsselectors",{"_index":1600,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardsstate",{"_index":1609,"title":{"interfaces/HandsCardsState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["harvest",{"_index":1883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hascolor",{"_index":257,"title":{"interfaces/HasColor.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["hascost",{"_index":259,"title":{"interfaces/HasCost.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{}}}],["hasdomaincommunitycenter",{"_index":1019,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasdomaincommunitycenter(domainid",{"_index":1046,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasid",{"_index":12,"title":{"interfaces/HasId.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{}}}],["hasname",{"_index":24,"title":{"interfaces/HasName.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["hasrules",{"_index":26,"title":{"interfaces/HasRules.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["hasvictorypoints",{"_index":263,"title":{"interfaces/HasVictoryPoints.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{}}}],["hawker",{"_index":1894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["here",{"_index":587,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["hereby",{"_index":1979,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2028,"title":{},"body":{"license.html":{}}}],["html",{"_index":207,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"dependencies.html":{}}}],["hélène",{"_index":1976,"title":{},"body":{"license.html":{}}}],["id",{"_index":15,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"miscellaneous/functions.html":{}}}],["id_clay_pit_blue",{"_index":986,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_clay_pit_red",{"_index":987,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_blue",{"_index":342,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_red",{"_index":343,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_face_up_hamlet",{"_index":1239,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_face_up_road",{"_index":1240,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{}}}],["id_face_up_town",{"_index":1241,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_field_blue",{"_index":988,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_field_red",{"_index":989,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_blue",{"_index":990,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_red",{"_index":991,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_blue",{"_index":992,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_red",{"_index":993,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_1",{"_index":994,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_2",{"_index":995,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_1",{"_index":996,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_2",{"_index":997,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hand_blue",{"_index":344,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_hand_red",{"_index":345,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_pasture_blue",{"_index":998,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_pasture_red",{"_index":999,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_blue",{"_index":1000,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_red",{"_index":1001,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_blue",{"_index":1002,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_red",{"_index":1003,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["ids",{"_index":1762,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ignore",{"_index":915,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["ignores",{"_index":2149,"title":{},"body":{"todo.html":{}}}],["implied",{"_index":2019,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["imports",{"_index":248,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["included",{"_index":2012,"title":{},"body":{"license.html":{}}}],["including",{"_index":1993,"title":{},"body":{"license.html":{}}}],["increase",{"_index":813,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["increasefour",{"_index":923,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseone",{"_index":920,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresources",{"_index":705,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresources(pivotid",{"_index":739,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresourcesauspiciousyear",{"_index":828,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresourcesforauspiciousyear",{"_index":1020,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie",{"_index":829,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie(value",{"_index":1050,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["increasethree",{"_index":922,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increasetwo",{"_index":921,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["indent",{"_index":2147,"title":{},"body":{"todo.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["initial",{"_index":678,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{}}}],["initialdiscardpilecardsstate",{"_index":675,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["initialdomainscards",{"_index":1006,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["initialdomainscardsstate",{"_index":1100,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["initialdraw",{"_index":1905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initialeventspilecardsstate",{"_index":1201,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["initialfaceuppilescardsstate",{"_index":1280,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["initialgamestate",{"_index":1376,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["initialhandscardsstate",{"_index":1611,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["initialization",{"_index":626,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initialized",{"_index":669,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initiallandspilecardsstate",{"_index":1675,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["initialstockpilescardsstate",{"_index":1797,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initialthrow",{"_index":1904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initnewgame",{"_index":561,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initsavedgame",{"_index":562,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectable",{"_index":556,"title":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectables",{"_index":557,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["input",{"_index":755,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inputs",{"_index":710,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["installed",{"_index":1961,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1756,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"overview.html":{}}}],["interfaces/color",{"_index":258,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/LandCard.html":{}}}],["interfaces/cost",{"_index":260,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["interfaces/entity",{"_index":23,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/name",{"_index":25,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/print",{"_index":262,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/rules",{"_index":27,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/victory",{"_index":264,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["invention",{"_index":1895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactioncard",{"_index":1931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isactioncard(obj",{"_index":42,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{}}}],["isagglomerationcard",{"_index":1932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isagglomerationcard(obj",{"_index":291,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["iscanprint",{"_index":1933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iscanprint(obj",{"_index":373,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{}}}],["isdevelopmentcard",{"_index":1935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdevelopmentcard(obj",{"_index":517,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["isdomaincardselected",{"_index":706,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivot.id",{"_index":805,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivotid",{"_index":742,"title":{},"body":{"components/DomainComponent.html":{}}}],["iseventcard",{"_index":1936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iseventcard(obj",{"_index":1145,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{}}}],["ishasname",{"_index":1937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishasname(obj",{"_index":1631,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["islandcard",{"_index":1939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["islandcard(obj",{"_index":1640,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["jacob",{"_index":1879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kassandra",{"_index":1880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":1005,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["kind",{"_index":2017,"title":{},"body":{"license.html":{}}}],["land",{"_index":192,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{}}}],["land.die",{"_index":808,"title":{},"body":{"components/DomainComponent.html":{}}}],["land.type",{"_index":807,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["land_card_interface_name",{"_index":143,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["landcard",{"_index":728,"title":{"interfaces/LandCard.html":{}},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["landcards",{"_index":758,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["landcards.get(cardid",{"_index":783,"title":{},"body":{"components/DomainComponent.html":{}}}],["landcards.get(pivot.cardid",{"_index":983,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["lands",{"_index":1652,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["lands_pile_cards_feature_key",{"_index":1672,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecard",{"_index":1520,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecard.cardid",{"_index":1522,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecards",{"_index":96,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions",{"_index":1651,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.loadlandspilecardsfailure",{"_index":1649,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsactions.loadlandspilecardssuccess",{"_index":1648,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.selectlandspilecard",{"_index":1669,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsactions.setlandspilecardsinitialized",{"_index":1644,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter",{"_index":1674,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.getinitialstate",{"_index":1676,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.removeone(id",{"_index":1685,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.setall(landspilecards",{"_index":1680,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardseffects",{"_index":447,"title":{"injectables/LandsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsentity",{"_index":132,"title":{"interfaces/LandsPileCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsfacade",{"_index":97,"title":{"injectables/LandsPileCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"overview.html":{}}}],["landspilecardsfeature",{"_index":1665,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardspartialstate",{"_index":1671,"title":{"interfaces/LandsPileCardsPartialState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsreducer",{"_index":1677,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsselectors",{"_index":1666,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsstate",{"_index":1673,"title":{"interfaces/LandsPileCardsState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landtype",{"_index":1636,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{}}}],["laure",{"_index":1975,"title":{},"body":{"license.html":{}}}],["legend",{"_index":206,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["len",{"_index":673,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["liability",{"_index":2032,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2029,"title":{},"body":{"license.html":{}}}],["libs/.../action.ts",{"_index":1840,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../agglomeration.ts",{"_index":1841,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../development.ts",{"_index":1842,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../dice.ts",{"_index":1844,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../domain.ts",{"_index":1845,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../event.ts",{"_index":1846,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../land.ts",{"_index":1940,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../name.ts",{"_index":1938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../phase.ts",{"_index":1847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../print.ts",{"_index":1934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../resources.ts",{"_index":1848,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/data",{"_index":415,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["libs/feature",{"_index":56,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"todo.html":{}}}],["libs/shared",{"_index":6,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/Domain.html":{},"interfaces/EventCard.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["libs/ui",{"_index":375,"title":{},"body":{"components/CardComponent.html":{},"modules/UiCardModule.html":{}}}],["license",{"_index":1970,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":1994,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2020,"title":{},"body":{"license.html":{}}}],["line",{"_index":37,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["lines",{"_index":2075,"title":{},"body":{"todo.html":{}}}],["literal",{"_index":623,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["load",{"_index":584,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["loaded",{"_index":616,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["lock",{"_index":811,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["locked",{"_index":194,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["lockedresources",{"_index":890,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["lockresource",{"_index":707,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["lockresource(pivotid",{"_index":744,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["logic",{"_index":585,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["login",{"_index":382,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["login(email",{"_index":383,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["loop",{"_index":1908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopactions",{"_index":1909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopdraw",{"_index":1910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopexchange",{"_index":1911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopthrow",{"_index":1907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["low",{"_index":1888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lower",{"_index":1887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["magic",{"_index":272,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["many",{"_index":900,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map",{"_index":148,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasCost.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/functions.html":{}}}],["map(([_action",{"_index":965,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["map(([faceuppilecard",{"_index":1500,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([landspilecard",{"_index":1519,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([min",{"_index":773,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((action",{"_index":955,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((discardpilecard",{"_index":571,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["map((domaincards",{"_index":159,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["map((domainscards",{"_index":778,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((handcard",{"_index":1523,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map((handscards",{"_index":1559,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{}}}],["map((ids",{"_index":1760,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["map((phase",{"_index":153,"title":{},"body":{"components/ActionsComponent.html":{}}}],["map((pivot",{"_index":910,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["map((pivots",{"_index":854,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((pivotsselected",{"_index":876,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((roadcard",{"_index":1247,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["map((stockpilecard",{"_index":1484,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((stockpilescards",{"_index":1480,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((value",{"_index":1443,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["mapdomaincolortodomainid",{"_index":1941,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortodomainid(domaincolor",{"_index":1953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid",{"_index":1942,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid(domaincolor",{"_index":1954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["market",{"_index":1867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mastery",{"_index":799,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterydomainid",{"_index":767,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterypointstype",{"_index":759,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":48,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(...resource_counts",{"_index":899,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["max",{"_index":672,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["maximum",{"_index":912,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["merchant",{"_index":1897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":2022,"title":{},"body":{"license.html":{}}}],["merchantshiptravel",{"_index":1896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merge",{"_index":1997,"title":{},"body":{"license.html":{}}}],["mergemap",{"_index":1764,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["mergemap((action",{"_index":1750,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["metareducers",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":66,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["middle",{"_index":1889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mill",{"_index":1863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":774,"title":{},"body":{"components/DomainComponent.html":{}}}],["miscellaneous",{"_index":1838,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":1971,"title":{},"body":{"license.html":{},"properties.html":{}}}],["models",{"_index":145,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["models/src/lib/interfaces/color.ts",{"_index":1627,"title":{},"body":{"interfaces/HasColor.html":{}}}],["models/src/lib/interfaces/cost.ts",{"_index":1628,"title":{},"body":{"interfaces/HasCost.html":{}}}],["models/src/lib/interfaces/entity.ts",{"_index":1629,"title":{},"body":{"interfaces/HasId.html":{}}}],["models/src/lib/interfaces/name.ts",{"_index":1630,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts",{"_index":371,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts:2",{"_index":372,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["models/src/lib/interfaces/rules.ts",{"_index":1633,"title":{},"body":{"interfaces/HasRules.html":{}}}],["models/src/lib/interfaces/victory.ts",{"_index":1634,"title":{},"body":{"interfaces/HasVictoryPoints.html":{}}}],["models/src/lib/structures/action.ts",{"_index":7,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/agglomeration.ts",{"_index":250,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/development.ts",{"_index":481,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/domain.ts",{"_index":688,"title":{},"body":{"interfaces/Domain.html":{}}}],["models/src/lib/structures/event.ts",{"_index":1140,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/hand.ts",{"_index":1535,"title":{},"body":{"interfaces/Hand.html":{}}}],["models/src/lib/structures/land.ts",{"_index":1635,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/types/action.ts",{"_index":1849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/agglomeration.ts",{"_index":1856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/development.ts",{"_index":1860,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/dice.ts",{"_index":1882,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/domain.ts",{"_index":1884,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/event.ts",{"_index":1891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/phase.ts",{"_index":1903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/resources.ts",{"_index":1913,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["modify",{"_index":1996,"title":{},"body":{"license.html":{}}}],["module",{"_index":231,"title":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}},"body":{}}],["modules",{"_index":233,"title":{"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["monastery",{"_index":1871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":629,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["name",{"_index":16,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HasName.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":388,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["needstown",{"_index":484,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["new",{"_index":275,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["newcard0",{"_index":1126,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newcard1",{"_index":1129,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newselectedids",{"_index":1117,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["next",{"_index":36,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["nextproductiondie",{"_index":1321,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["ngmodule",{"_index":244,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["ngrx/effects",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":666,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["noduplicate",{"_index":485,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["non",{"_index":2079,"title":{},"body":{"todo.html":{}}}],["noninfringement",{"_index":2026,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2010,"title":{},"body":{"license.html":{}}}],["now",{"_index":588,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["npm@8.13.2",{"_index":1965,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":598,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["null",{"_index":2080,"title":{},"body":{"todo.html":{}}}],["number",{"_index":256,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["numberofcardsbelowfestival",{"_index":1168,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["numbers",{"_index":273,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["nx",{"_index":1959,"title":{},"body":{"index.html":{}}}],["nx@14.4.2",{"_index":1966,"title":{},"body":{"index.html":{}}}],["obj",{"_index":43,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["obj.interface",{"_index":46,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["obj.name",{"_index":1632,"title":{},"body":{"interfaces/HasName.html":{}}}],["obj.print",{"_index":374,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["observable",{"_index":110,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["observables",{"_index":646,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["obtaining",{"_index":1984,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":597,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["oftype(discardpilecardsactions.addcardtodiscardpile",{"_index":567,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":575,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":579,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(domainscardsactions.countandstealunprotectedgoldandwool",{"_index":842,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.createdomaincard",{"_index":863,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.givelockedresources",{"_index":869,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresources",{"_index":907,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":918,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesfordie",{"_index":934,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardsnewgame",{"_index":942,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardssavedgame",{"_index":946,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.lockresource",{"_index":950,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.putcardinpivot",{"_index":954,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.unlockresources",{"_index":960,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.uselockedresources",{"_index":964,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1150,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1154,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.reseteventspile",{"_index":1157,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(faceuppilescardsactions.initfaceupnewgame",{"_index":1219,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["oftype(faceuppilescardsactions.initfaceupsavedgame",{"_index":1223,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["oftype(faceuppilescardsactions.selectfirstcardfromfaceuppile",{"_index":1227,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["oftype(gameactions.throwdice",{"_index":1305,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throweventdie",{"_index":1310,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throwproductiondie",{"_index":1319,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(handscardsactions.addcardstohand",{"_index":1574,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardsnewgame",{"_index":1579,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardssavedgame",{"_index":1581,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardsnewgame",{"_index":1643,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardssavedgame",{"_index":1647,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(stockpilescardsactions.addcardstostockpilebottom",{"_index":1737,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1741,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1745,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.removecardsfromstockpiletop",{"_index":1749,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["on(discardpilecardsactions.adddiscardpilecard",{"_index":685,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":682,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":683,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.setdiscardpilecardserror",{"_index":687,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(domainscardsactions.adddomaincard",{"_index":1112,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.cleardomaincardselection",{"_index":1120,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardsnewgame",{"_index":1103,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardssavedgame",{"_index":1104,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardsfailure",{"_index":1107,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardssuccess",{"_index":1105,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.removedomaincard",{"_index":1136,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.setdomainscardserror",{"_index":1138,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.swapselectedcards",{"_index":1121,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.toggledomaincardselection",{"_index":1114,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomaincard",{"_index":1108,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomainscards",{"_index":1110,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1204,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1205,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.loadeventspilecardsfailure",{"_index":1207,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.removeselectedeventspilecard",{"_index":1212,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.selectfirsteventspilecard",{"_index":1210,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.seteventspilecardserror",{"_index":1208,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(faceuppilescardsactions.initfaceupnewgame",{"_index":1283,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["on(faceuppilescardsactions.initfaceupsavedgame",{"_index":1284,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["on(faceuppilescardsactions.removefaceuppilecard",{"_index":1288,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["on(faceuppilescardsactions.selectfaceuppilecard",{"_index":1286,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["on(faceuppilescardsactions.setfaceuppilescardserror",{"_index":1290,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["on(faceuppilescardsactions.unselectfaceuppilecard",{"_index":1287,"title":{},"body":{"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{}}}],["on(gameactions.initnewgame",{"_index":1379,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setaction",{"_index":1385,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.seteventdie",{"_index":1382,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setnextproductiondie",{"_index":1381,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setphase",{"_index":1383,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setplayer",{"_index":1384,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setproductiondie",{"_index":1380,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(handscardsactions.addhandscards",{"_index":1620,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardsnewgame",{"_index":1614,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardssavedgame",{"_index":1615,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardsfailure",{"_index":1618,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardssuccess",{"_index":1616,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.removehandcard",{"_index":1625,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.selecthandcard",{"_index":1623,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardserror",{"_index":1622,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardsinitialized",{"_index":1619,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.unselecthandcard",{"_index":1624,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardsnewgame",{"_index":1678,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardssavedgame",{"_index":1679,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.loadlandspilecardsfailure",{"_index":1681,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.removelandspilecard",{"_index":1684,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.selectlandspilecard",{"_index":1683,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.setlandspilecardserror",{"_index":1682,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(stockpilescardsactions.addstockpilescards",{"_index":1806,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1800,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1801,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.loadstockpilescardsfailure",{"_index":1803,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.removestockpilescards",{"_index":1804,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.setstockpilescardserror",{"_index":1808,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["one",{"_index":628,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["onerror",{"_index":591,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["onthrow",{"_index":526,"title":{},"body":{"components/DiceComponent.html":{}}}],["optional",{"_index":103,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":401,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["order",{"_index":2055,"title":{},"body":{"todo.html":{}}}],["originalfn",{"_index":407,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["otherwise",{"_index":2036,"title":{},"body":{"license.html":{}}}],["out",{"_index":240,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"modules/UiCardModule.html":{},"license.html":{},"overview.html":{},"todo.html":{}}}],["overview",{"_index":2044,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":404,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["package",{"_index":1815,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":1962,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":392,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["particular",{"_index":2024,"title":{},"body":{"license.html":{}}}],["password",{"_index":384,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["pasture",{"_index":1919,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pathfinder",{"_index":1851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":627,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["permission",{"_index":1978,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2004,"title":{},"body":{"license.html":{}}}],["person",{"_index":1983,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2005,"title":{},"body":{"license.html":{}}}],["phase",{"_index":154,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["phase.key",{"_index":1720,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases",{"_index":1687,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases'},{'name",{"_index":226,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["phases.component.css",{"_index":1688,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases.component.html",{"_index":1689,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases/phases.component",{"_index":1727,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phases/phases.module",{"_index":369,"title":{},"body":{"modules/BoardModule.html":{}}}],["phasescomponent",{"_index":225,"title":{"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"overview.html":{}}}],["phasesmodule",{"_index":361,"title":{"modules/PhasesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PhasesModule.html":{},"modules.html":{},"overview.html":{}}}],["pieces",{"_index":641,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["pile",{"_index":177,"title":{},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"todo.html":{}}}],["pileid",{"_index":1238,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["piles",{"_index":228,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["piles/piles.component",{"_index":1732,"title":{},"body":{"modules/PilesModule.html":{}}}],["piles/piles.module",{"_index":370,"title":{},"body":{"modules/BoardModule.html":{}}}],["pilescomponent",{"_index":227,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"overview.html":{}}}],["pilesmodule",{"_index":362,"title":{"modules/PilesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PilesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipe",{"_index":772,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["pipe(map((masterydomainid",{"_index":766,"title":{},"body":{"components/DomainComponent.html":{}}}],["pivot",{"_index":839,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["pivot.availableresources",{"_index":809,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.cardid",{"_index":189,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.col",{"_index":184,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.domainid",{"_index":183,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.id",{"_index":857,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["pivot.lockedresources",{"_index":810,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.pileid",{"_index":180,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.row",{"_index":185,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivotid",{"_index":741,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["pivots",{"_index":853,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivots.map((pivot",{"_index":856,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected.length",{"_index":891,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected[0",{"_index":893,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources",{"_index":872,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.foreach((pivot",{"_index":883,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.length",{"_index":877,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.map((pivot",{"_index":889,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources[0",{"_index":880,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["player",{"_index":1335,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["player.key",{"_index":1719,"title":{},"body":{"components/PhasesComponent.html":{}}}],["plugin",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["point",{"_index":982,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["points",{"_index":796,"title":{},"body":{"components/DomainComponent.html":{}}}],["portions",{"_index":2014,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":914,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["previous",{"_index":1316,"title":{},"body":{"injectables/GameEffects.html":{}}}],["prevsubject",{"_index":399,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["primary",{"_index":612,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["print",{"_index":271,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{}}}],["private",{"_index":151,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["production",{"_index":546,"title":{},"body":{"components/DiceComponent.html":{},"todo.html":{}}}],["productiondie",{"_index":1336,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["project",{"_index":1957,"title":{},"body":{"index.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"components/BoardComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"properties.html":{}}}],["provided",{"_index":2015,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":1458,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["providers",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["publish",{"_index":1998,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2025,"title":{},"body":{"license.html":{}}}],["put",{"_index":191,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile",{"_index":1398,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile(pileid",{"_index":1414,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile",{"_index":1399,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile(pileid",{"_index":1416,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putcardinpivot",{"_index":830,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["putcardinslot",{"_index":1021,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putcardinslot(pivotid",{"_index":1056,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putland",{"_index":83,"title":{},"body":{"components/ActionsComponent.html":{}}}],["putlandspilecardinslot",{"_index":1400,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["quarrel",{"_index":1899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["randomdicevalue",{"_index":1943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":671,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["red",{"_index":1885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redgoldminesandpastures",{"_index":849,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["redresourcecount",{"_index":847,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["relocation",{"_index":1855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["removecards",{"_index":1734,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["removecardsfromstockpiletop",{"_index":1783,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removecardsfromstockpiletop(pileid",{"_index":1785,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removedomaincard",{"_index":1022,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removedomaincard(pivotid",{"_index":1058,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removefaceuppilecard",{"_index":1257,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["removefaceuppilecard(id",{"_index":1259,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["removehandcard",{"_index":1590,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removehandcard(id",{"_index":1593,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removelandspilecard",{"_index":1658,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removelandspilecard(id",{"_index":1660,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removeselected",{"_index":1177,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["removeselectedeventspilecard",{"_index":1695,"title":{},"body":{"components/PhasesComponent.html":{}}}],["required",{"_index":679,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["reset",{"_index":239,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["reseteventspile",{"_index":1178,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["reseteventspileonfestival",{"_index":1392,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["resetpileandselectfirst",{"_index":1147,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["resource",{"_index":952,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["resource_counts",{"_index":967,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resource_values",{"_index":522,"title":{},"body":{"components/DiceComponent.html":{}}}],["resourcecount",{"_index":860,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/typealiases.html":{}}}],["resourceincrement",{"_index":976,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resources",{"_index":195,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["resourcetype",{"_index":267,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resourcetype.clay",{"_index":278,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.stone",{"_index":288,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wheat",{"_index":285,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wood",{"_index":276,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcetype.wool",{"_index":284,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcevalue",{"_index":535,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["restriction",{"_index":1992,"title":{},"body":{"license.html":{}}}],["results",{"_index":47,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":44,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"todo.html":{}}}],["returns",{"_index":106,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1995,"title":{},"body":{"license.html":{}}}],["rivalry",{"_index":1902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["road",{"_index":1857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roadcard.id",{"_index":1249,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["roadentities",{"_index":1243,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["root",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameRulesService.html":{}}}],["root'},{'name",{"_index":214,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["route",{"_index":1854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["row",{"_index":865,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["rowvalue",{"_index":985,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["rowvalue.lower",{"_index":1513,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rowvalue.upper",{"_index":1514,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["ruleids",{"_index":17,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["rules.service.spec.ts",{"_index":2052,"title":{},"body":{"todo.html":{}}}],["rules.service.ts",{"_index":1387,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:102",{"_index":1413,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:120",{"_index":1412,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:142",{"_index":1410,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:168",{"_index":1407,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:198",{"_index":1419,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:207",{"_index":1421,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:283",{"_index":1422,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:320",{"_index":1418,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:355",{"_index":1417,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:376",{"_index":1415,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:41",{"_index":1437,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:424",{"_index":1420,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:43",{"_index":1434,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:45",{"_index":1455,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:49",{"_index":1431,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:56",{"_index":1451,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:63",{"_index":1427,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:70",{"_index":1436,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:75",{"_index":1445,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:81",{"_index":1440,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:86",{"_index":1448,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:89",{"_index":1404,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["run",{"_index":581,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["runtimechecks",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":146,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["s/shipname.html",{"_index":1946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["same",{"_index":1315,"title":{},"body":{"injectables/GameEffects.html":{}}}],["sawmill",{"_index":1862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["select",{"_index":651,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecards",{"_index":634,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecardsreverse",{"_index":636,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsloaded",{"_index":638,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsselected",{"_index":649,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(domainscardsselectors.getalldomainscards",{"_index":1064,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsloaded",{"_index":1066,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsselected",{"_index":874,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getlandcardpivotbyid(id",{"_index":974,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["select(eventspilecardsselectors.getalleventspilecards",{"_index":1186,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsloaded",{"_index":1188,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsselected",{"_index":1190,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(faceuppilescardsselectors.getallfaceuppilescards",{"_index":1262,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["select(faceuppilescardsselectors.getfaceuppilescardsloaded",{"_index":1268,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["select(faceuppilescardsselectors.getfaceupselected",{"_index":1270,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["select(gameselectors.getgamenextproductiondie",{"_index":1357,"title":{},"body":{"injectables/GameFacade.html":{}}}],["select(handscardsselectors.getallhandscards",{"_index":1596,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(handscardsselectors.gethandscardsselected",{"_index":1598,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(landspilecardsselectors.getalllandspilecards",{"_index":1662,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsloaded",{"_index":1663,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsselected",{"_index":1664,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(stockpilescardsselectors.getallstockpilescards",{"_index":1786,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsloaded",{"_index":1787,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsselected",{"_index":1788,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selected",{"_index":178,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["selecteddiscardpilecards",{"_index":617,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["selecteddomainscards",{"_index":1008,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["selectedeventspilecards",{"_index":1176,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["selectedfaceuppilescards",{"_index":1256,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["selectedhandscards",{"_index":1588,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["selectedid",{"_index":668,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["selectedids",{"_index":1098,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["selectedland",{"_index":894,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedland.type",{"_index":896,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedlandspilecards",{"_index":1657,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectedpivot",{"_index":892,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.availableresources",{"_index":898,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.id",{"_index":902,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedstockpilescards",{"_index":1781,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selectfirst",{"_index":1179,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{}}}],["selectfirstcardfromfaceuppile",{"_index":1258,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["selectfirstcardfromfaceuppile(pileid",{"_index":1260,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["selectfirstevent",{"_index":1393,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["selecthandcard",{"_index":1544,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selecthandcard(pivotid",{"_index":1554,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selection",{"_index":199,"title":{},"body":{"components/ActionsComponent.html":{}}}],["selectlandspilecard",{"_index":1659,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectlandspilecard(pivotid",{"_index":1661,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["sell",{"_index":2002,"title":{},"body":{"license.html":{}}}],["server",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":583,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["set",{"_index":677,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["setaction",{"_index":1337,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setaction(action",{"_index":1344,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setnextproductiondie",{"_index":527,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setnextproductiondie(value",{"_index":534,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setphase",{"_index":1338,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setphase(phase",{"_index":1347,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer",{"_index":1339,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer(player",{"_index":1349,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["shall",{"_index":2011,"title":{},"body":{"license.html":{}}}],["ship",{"_index":509,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["ship.tradepoints",{"_index":511,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname",{"_index":491,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname.get(type",{"_index":505,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipnamekey",{"_index":492,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ships",{"_index":791,"title":{},"body":{"components/DomainComponent.html":{}}}],["shouldn't",{"_index":961,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["shuffle",{"_index":1166,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["shuffled",{"_index":1169,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.map((cardid",{"_index":1173,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.splice",{"_index":1171,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["shuffledcards",{"_index":1771,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards.length",{"_index":1774,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].id",{"_index":1779,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].interface",{"_index":1778,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["sibling",{"_index":1901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["siblingrivalry",{"_index":1900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slice(0",{"_index":1483,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slot",{"_index":1503,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slots",{"_index":182,"title":{},"body":{"components/ActionsComponent.html":{}}}],["software",{"_index":1986,"title":{},"body":{"license.html":{}}}],["solid",{"_index":818,"title":{},"body":{"components/DomainComponent.html":{}}}],["something",{"_index":979,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["soothsayer",{"_index":1850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["started",{"_index":1956,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startnewgame",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":642,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["state.entities",{"_index":1133,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[0",{"_index":1123,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[1",{"_index":1125,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.ids[0",{"_index":1211,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedid",{"_index":1214,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedids",{"_index":1118,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.filter",{"_index":1119,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.find((selectedid",{"_index":1116,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state/discard",{"_index":419,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/domains",{"_index":426,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/events",{"_index":430,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/face",{"_index":434,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.effects",{"_index":439,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.facade",{"_index":440,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.reducer",{"_index":442,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/hands",{"_index":444,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/lands",{"_index":448,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/stock",{"_index":452,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["steal",{"_index":2056,"title":{},"body":{"todo.html":{}}}],["stock",{"_index":1766,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stock_piles_cards_feature_key",{"_index":1794,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilecard",{"_index":1491,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.cardid",{"_index":1486,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.cardtype",{"_index":1485,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.id",{"_index":1759,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.pileid",{"_index":1482,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpiles",{"_index":1770,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpiles[i",{"_index":1777,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescards",{"_index":1403,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescards.find",{"_index":1490,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilescards.push",{"_index":1776,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescardsactions",{"_index":1765,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.addcardstostockpilebottom",{"_index":1792,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.addstockpilescards",{"_index":1739,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardsfailure",{"_index":1747,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardssuccess",{"_index":1746,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.removecardsfromstockpiletop",{"_index":1791,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.removestockpilescards",{"_index":1761,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.setstockpilescardsinitialized",{"_index":1742,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter",{"_index":1796,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.addmany(stockpilescards",{"_index":1807,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.getinitialstate",{"_index":1798,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.removemany(ids",{"_index":1805,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.setall(stockpilescards",{"_index":1802,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardseffects",{"_index":451,"title":{"injectables/StockPilesCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsentity",{"_index":1758,"title":{"interfaces/StockPilesCardsEntity.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsfacade",{"_index":414,"title":{"injectables/StockPilesCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["stockpilescardsfeature",{"_index":1768,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardspartialstate",{"_index":1793,"title":{"interfaces/StockPilesCardsPartialState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsreducer",{"_index":1799,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsselectors",{"_index":1769,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsselectors.getstockpilecardentitybypivot",{"_index":1753,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsstate",{"_index":1795,"title":{"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsstore",{"_index":1735,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stone",{"_index":1924,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stonequarry",{"_index":1918,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["store",{"_index":620,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["storedevtoolsmodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature",{"_index":458,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature(fromgame.game_feature_key",{"_index":455,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forroot",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["storybook/core",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["strength",{"_index":800,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["strengthmasterydomainid",{"_index":1478,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["strengthpoints",{"_index":486,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["strictactionimmutability",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["strictstateimmutability",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["stylelint",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":53,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["styleurls",{"_index":62,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["subject",{"_index":400,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/GameRulesService.html":{},"license.html":{}}}],["sublicense",{"_index":2000,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1518,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((card",{"_index":1494,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((cards",{"_index":1487,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["substantial",{"_index":2013,"title":{},"body":{"license.html":{}}}],["success",{"_index":589,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["sumresources",{"_index":897,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["support",{"_index":2040,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2041,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":196,"title":{},"body":{"components/ActionsComponent.html":{}}}],["swapselectedcards",{"_index":1023,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["swapselecteddomainscards",{"_index":84,"title":{},"body":{"components/ActionsComponent.html":{}}}],["switchmap",{"_index":1306,"title":{},"body":{"injectables/GameEffects.html":{}}}],["switchmap((value",{"_index":1312,"title":{},"body":{"injectables/GameEffects.html":{}}}],["take",{"_index":970,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["take(1",{"_index":875,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["takeonedefinedpivotorthrow",{"_index":834,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeonedefinedpivotorthrow(id",{"_index":840,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeuntil",{"_index":1457,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["takeuntil(this.gameended",{"_index":1429,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["taormina",{"_index":60,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"index.html":{}}}],["taormina/data",{"_index":133,"title":{},"body":{"components/ActionsComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["taormina/feature",{"_index":135,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["taormina/shared",{"_index":144,"title":{},"body":{"components/ActionsComponent.html":{},"components/BoardComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["target=\"_self\">shipnamekey",{"_index":1947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tasks",{"_index":630,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["templateurl",{"_index":64,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["test",{"_index":2054,"title":{},"body":{"todo.html":{}}}],["thieves",{"_index":1394,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["thievesresourcecountthreshold",{"_index":851,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.actions$.pipe",{"_index":566,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["this.auspiciousyear$.pipe",{"_index":1438,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.countandsteal$.subscribe",{"_index":1460,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.addcardtodiscardpile",{"_index":1534,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.initnewgame",{"_index":1472,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards",{"_index":764,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.alldomainscards$.pipe",{"_index":777,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.cleardomaincardselection",{"_index":173,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.domainscards.countandstealunprotectedgoldandwool",{"_index":1430,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.createavailabledomaincard",{"_index":1511,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcardsvictorypointsfordomain(domainid",{"_index":1473,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcelebrationpointsfordomain(domainid",{"_index":763,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxcol(domainid",{"_index":771,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxrow(domainid",{"_index":776,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmincol(domainid",{"_index":770,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainminrow(domainid",{"_index":775,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.strength",{"_index":1475,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.trade",{"_index":1474,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmerchantshipcountfordomain(domainid",{"_index":762,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.givelockedresources",{"_index":170,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.increaseresources(pivotid",{"_index":789,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.increaseresourcesforauspiciousyear",{"_index":1439,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.increaseresourcesfordie(value",{"_index":1444,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.initnewgame",{"_index":1466,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.lockresource(pivotid",{"_index":787,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.putcardinslot",{"_index":1507,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.removedomaincard(domaincard.id",{"_index":1530,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards",{"_index":1499,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards$.pipe",{"_index":158,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{}}}],["this.domainscards.swapselectedcards",{"_index":174,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.toggledomaincardselection(pivotid",{"_index":786,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.unlockresources(pivotid",{"_index":788,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.uselockedresources",{"_index":1498,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscardsstore.pipe",{"_index":873,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.domainscardsstore.select",{"_index":844,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.event$.pipe",{"_index":1449,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.initnewgame",{"_index":1471,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.removeselected",{"_index":1715,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.reseteventspile",{"_index":1447,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectedeventspilecards",{"_index":1714,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.selectedeventspilecards$.pipe",{"_index":1423,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectfirst",{"_index":1450,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.faceuppilescards.initnewgame",{"_index":1468,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.faceuppilescards.removefaceuppilecard(faceuppilecard.id",{"_index":1506,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.faceuppilescards.selectedfaceuppilescards",{"_index":157,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.faceuppilescardsstore.pipe",{"_index":1228,"title":{},"body":{"injectables/FaceUpPilesCardsEffects.html":{}}}],["this.festival$.pipe",{"_index":1446,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.action",{"_index":1716,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.eventdie",{"_index":543,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.eventdie$.pipe",{"_index":1452,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.eventdie$.pipe(filter((die",{"_index":1432,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.initnewgame",{"_index":1465,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.nextproductiondie",{"_index":544,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.phase",{"_index":1709,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.phase$.pipe",{"_index":152,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{}}}],["this.game.phase$.pipe(take(1)).subscribe((phase",{"_index":1496,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.player",{"_index":1711,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.productiondie",{"_index":542,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.productiondie$.pipe",{"_index":1441,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(action.name",{"_index":1533,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(undefined",{"_index":1717,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setnextproductiondie(value",{"_index":545,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.setphase(phase",{"_index":1710,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setplayer(player",{"_index":1712,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.throweventdie",{"_index":1495,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.throwproductiondie",{"_index":1497,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gameended$.next",{"_index":1459,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gamerules.getvictorypointsfordomain(domainid",{"_index":769,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.gamerules.initnewgame",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gamerules.putlandspilecardinslot",{"_index":169,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.throwdice",{"_index":541,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.gamerules.useactioncard",{"_index":167,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputfaceuppilecardinslot",{"_index":156,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputhandcardinslot",{"_index":163,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamestore.select(gameselectors.getgamenextproductiondie",{"_index":1320,"title":{},"body":{"injectables/GameEffects.html":{}}}],["this.getlandcardfrompivot(firstpivot",{"_index":882,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(pivot",{"_index":884,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(selectedpivot",{"_index":895,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.handscards.addcardstohand(handid",{"_index":1489,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.allhandscards$.pipe",{"_index":1558,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.initnewgame",{"_index":1467,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.removehandcard(handcard.id",{"_index":1516,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards",{"_index":172,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards$.pipe",{"_index":164,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.handscards.selecthandcard(pivotid",{"_index":1563,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.unselecthandcard",{"_index":1524,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesforauspiciousyear$.subscribe",{"_index":1463,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesfordie$.subscribe",{"_index":1462,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.initnewgame",{"_index":1469,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.removelandspilecard(landspilecard.id",{"_index":1521,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.selectedlandspilecards",{"_index":171,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.reseteventspileonfestival$.subscribe",{"_index":1464,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.selectfirstevent$.subscribe",{"_index":1461,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.addcardstostockpilebottom(pileid",{"_index":1525,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.allstockpilescards",{"_index":1479,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.initnewgame",{"_index":1470,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.removecardsfromstockpiletop(pileid",{"_index":1488,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescardsstore.pipe",{"_index":1752,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["this.store.dispatch",{"_index":656,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.addcardtodiscardpile",{"_index":658,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":655,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.cleardomaincardselection",{"_index":1079,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.givelockedresources",{"_index":1077,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardsnewgame",{"_index":1069,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardssavedgame",{"_index":1070,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.lockresource",{"_index":1071,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.removedomaincard",{"_index":1084,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.swapselectedcards",{"_index":1083,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.unlockresources",{"_index":1072,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.uselockedresources",{"_index":1076,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1192,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1193,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.removeselectedeventspilecard",{"_index":1196,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.reseteventspile",{"_index":1194,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.selectfirsteventspilecard",{"_index":1195,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(faceuppilescardsactions.initfaceupnewgame",{"_index":1272,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["this.store.dispatch(faceuppilescardsactions.initfaceupsavedgame",{"_index":1273,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["this.store.dispatch(faceuppilescardsactions.removefaceuppilecard",{"_index":1274,"title":{},"body":{"injectables/FaceUpPilesCardsFacade.html":{}}}],["this.store.dispatch(gameactions.initnewgame",{"_index":1365,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setaction",{"_index":1372,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setnextproductiondie",{"_index":1368,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setphase",{"_index":1370,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setplayer",{"_index":1371,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwdice",{"_index":1366,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throweventdie",{"_index":1369,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwproductiondie",{"_index":1367,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(handscardsactions.addcardstohand",{"_index":1603,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardsnewgame",{"_index":1601,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardssavedgame",{"_index":1602,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.removehandcard",{"_index":1606,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.selecthandcard",{"_index":1604,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.unselecthandcard",{"_index":1605,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardsnewgame",{"_index":1667,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardssavedgame",{"_index":1668,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.removelandspilecard",{"_index":1670,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1789,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1790,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe",{"_index":633,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameaction",{"_index":1354,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameeventdie",{"_index":1355,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgamephase",{"_index":1359,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameplayer",{"_index":1361,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameproductiondie",{"_index":1363,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(handscardsselectors.gethandscardsloaded",{"_index":1597,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.select",{"_index":1089,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxcol(domainid",{"_index":1086,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxrow(domainid",{"_index":1088,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmincol(domainid",{"_index":1085,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainminrow(domainid",{"_index":1087,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.takeonedefinedpivotorthrow(action.id).pipe",{"_index":909,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.thieves$.pipe",{"_index":1428,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.updatesavailableresources",{"_index":925,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increaseone",{"_index":939,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increasetwo",{"_index":940,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["through",{"_index":647,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["throw",{"_index":506,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["throwdice",{"_index":1300,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{}}}],["throwdisabled",{"_index":528,"title":{},"body":{"components/DiceComponent.html":{}}}],["throwevent",{"_index":1301,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throweventdie",{"_index":1340,"title":{},"body":{"injectables/GameFacade.html":{}}}],["thrown",{"_index":2061,"title":{},"body":{"todo.html":{}}}],["throwproduction",{"_index":1302,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throwproductiondie",{"_index":1341,"title":{},"body":{"injectables/GameFacade.html":{}}}],["todo",{"_index":1755,"title":{"todo.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["todos",{"_index":2050,"title":{},"body":{"todo.html":{}}}],["toggledomaincardselection",{"_index":708,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toggledomaincardselection(pivotid",{"_index":746,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toll",{"_index":1869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tollbridge",{"_index":1868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tort",{"_index":2035,"title":{},"body":{"license.html":{}}}],["town",{"_index":1859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["townentities",{"_index":1251,"title":{},"body":{"interfaces/FaceUpPilesCardsEntity.html":{}}}],["trade",{"_index":798,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["trademasterydomainid",{"_index":1477,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["tradepoints",{"_index":487,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["traderoute",{"_index":1853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["travel",{"_index":1898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tree",{"_index":55,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["true",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["tslib",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2153,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":32,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/EventCard.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["types",{"_index":887,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["types/action",{"_index":28,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["types/agglomeration",{"_index":265,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["types/development",{"_index":494,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["types/dice",{"_index":1637,"title":{},"body":{"interfaces/LandCard.html":{}}}],["types/domain",{"_index":266,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["types/event",{"_index":1142,"title":{},"body":{"interfaces/EventCard.html":{}}}],["types/resources",{"_index":268,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{}}}],["typescript",{"_index":38,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["uicardmodule",{"_index":1809,"title":{"modules/UiCardModule.html":{}},"body":{"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["unavailable",{"_index":951,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["undefined",{"_index":45,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["unlock",{"_index":812,"title":{},"body":{"components/DomainComponent.html":{}}}],["unlockresources",{"_index":709,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unlockresources(pivotid",{"_index":748,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unselect",{"_index":806,"title":{},"body":{"components/DomainComponent.html":{}}}],["unselectedstate",{"_index":1213,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["unselecthandcard",{"_index":1591,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["unsetaction",{"_index":1696,"title":{},"body":{"components/PhasesComponent.html":{}}}],["unused",{"_index":390,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["up",{"_index":435,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"interfaces/FaceUpPilesCardsPartialState.html":{},"interfaces/FaceUpPilesCardsState.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["update",{"_index":913,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updateavailable",{"_index":901,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updates",{"_index":855,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updatesavailableresources",{"_index":831,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesfour",{"_index":931,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updateslocked",{"_index":888,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesone",{"_index":924,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesthree",{"_index":929,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatestwo",{"_index":927,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updtr@4.0.0node",{"_index":1967,"title":{},"body":{"index.html":{}}}],["upper",{"_index":1890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url",{"_index":408,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["use",{"_index":190,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["useactioncard",{"_index":85,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["useactioncarddisabled",{"_index":86,"title":{},"body":{"components/ActionsComponent.html":{}}}],["uselockedresources",{"_index":832,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["useresourcestoputfaceuppilecardinslot",{"_index":1401,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["useresourcestoputhandcardinslot",{"_index":1402,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["using",{"_index":643,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"index.html":{}}}],["utils",{"_index":1326,"title":{},"body":{"injectables/GameEffects.html":{}}}],["utils/src/lib/dice.ts",{"_index":1950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/domain.ts",{"_index":1952,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uuid",{"_index":601,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":600,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["v16.16.0",{"_index":1969,"title":{},"body":{"index.html":{}}}],["v4",{"_index":599,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/FaceUpPilesCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["value",{"_index":347,"title":{},"body":{"components/BoardComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsEffects.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":210,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["vars",{"_index":391,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["version",{"_index":1968,"title":{},"body":{"index.html":{},"properties.html":{}}}],["victory",{"_index":801,"title":{},"body":{"components/DomainComponent.html":{}}}],["victorypoints",{"_index":253,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/FaceUpPilesCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["warehouse",{"_index":1866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":2021,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2016,"title":{},"body":{"license.html":{}}}],["warrior",{"_index":513,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["warrior.celebrationpoints",{"_index":516,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warrior.strengthpoints",{"_index":515,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warriorname",{"_index":493,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["weaving",{"_index":1865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["went",{"_index":980,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["wheat",{"_index":1923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":2033,"title":{},"body":{"license.html":{}}}],["withlatestfrom",{"_index":843,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["without",{"_index":1991,"title":{},"body":{"license.html":{}}}],["wood",{"_index":1921,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wool",{"_index":1925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["works",{"_index":378,"title":{},"body":{"components/CardComponent.html":{}}}],["wrong",{"_index":981,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["year",{"_index":1893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":1945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":238,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCard.html":{"url":"interfaces/ActionCard.html","title":"interface - ActionCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/action.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Action Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         ActionName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { ActionName } from '../types/action';\n\nexport const ACTION_CARD_INTERFACE_NAME = 'ActionCard';\n\n/**\n * Interface for the Action Cards\n */\nexport interface ActionCard extends HasId, HasName, HasRules {\n  interface: typeof ACTION_CARD_INTERFACE_NAME;\n  id: string;\n  name: ActionName;\n  ruleIds: string[];\n}\n\nexport const createActionCard = (\n  id: string,\n  name: ActionName,\n  ruleIds: string[]\n): ActionCard => ({ interface: ACTION_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isActionCard(obj: any): obj is ActionCard {\n  return obj !== undefined && obj.interface === ACTION_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionsComponent.html":{"url":"components/ActionsComponent.html","title":"component - ActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/actions/actions/actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-actions\n            \n\n            \n                styleUrls\n                ./actions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./actions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyAgglomeration\n                            \n                            \n                                buyDevelopment\n                            \n                            \n                                buyDisabled\n                            \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                getDomainSelectedAgglomerationSlots\n                            \n                            \n                                getDomainSelectedDevelopmentCards\n                            \n                            \n                                getDomainSelectedLandCards\n                            \n                            \n                                getHandSelectedDevelopmentCard\n                            \n                            \n                                getPileSelectedLandCard\n                            \n                            \n                                getSelectedActionCard\n                            \n                            \n                                getSelectedAvailableAgglomerationSlots\n                            \n                            \n                                getSelectedAvailableDevelopmentSlots\n                            \n                            \n                                getSelectedAvailableLandSlots\n                            \n                            \n                                getSelectedFaceUpPileCard\n                            \n                            \n                                getSelectedHandCard\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                putLand\n                            \n                            \n                                swapSelectedDomainsCards\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useActionCardDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, faceUpPilesCards: FaceUpPilesCardsFacade, landsPileCards: LandsPileCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        faceUpPilesCards\n                                                  \n                                                        \n                                                                        FaceUpPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyAgglomeration\n                        \n                    \n                \n            \n            \n                \nbuyAgglomeration()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDevelopment\n                        \n                    \n                \n            \n            \n                \nbuyDevelopment()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDisabled\n                        \n                    \n                \n            \n            \n                \nbuyDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedDevelopmentCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedDevelopmentCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedLandCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedLandCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandSelectedDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetHandSelectedDevelopmentCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPileSelectedLandCard\n                        \n                    \n                \n            \n            \n                \ngetPileSelectedLandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedActionCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableDevelopmentSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableDevelopmentSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableLandSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableLandSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedFaceUpPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedFaceUpPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedHandCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLand\n                        \n                    \n                \n            \n            \n                \nputLand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedDomainsCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedDomainsCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCardDisabled\n                        \n                    \n                \n            \n            \n                \nuseActionCardDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n  FaceUpPilesCardsEntity,\n  FaceUpPilesCardsFacade,\n  GameFacade,\n  HandsCardsEntity,\n  HandsCardsFacade,\n  LandsPileCardsEntity,\n  LandsPileCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-actions',\n  templateUrl: './actions.component.html',\n  styleUrls: ['./actions.component.css'],\n})\nexport class ActionsComponent {\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private faceUpPilesCards: FaceUpPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  buyDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => phase !== GamePhase.LoopActions)\n    );\n  }\n\n  buyAgglomeration(): void {\n    this.gameRules.useResourcesToPutFaceUpPileCardInSlot();\n  }\n\n  getSelectedFaceUpPileCard(): Observable {\n    return this.faceUpPilesCards.selectedFaceUpPilesCards$;\n  }\n\n  getSelectedAvailableAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_AGGLOMERATION_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === AGGLOMERATION_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  buyDevelopment(): void {\n    this.gameRules.useResourcesToPutHandCardInSlot();\n  }\n\n  getHandSelectedDevelopmentCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter(\n        (handCard) => handCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n      )\n    );\n  }\n\n  getSelectedAvailableDevelopmentSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_DEVELOPMENT_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedDevelopmentCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  useActionCardDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => {\n        return phase !== GamePhase.LoopActions;\n      })\n    );\n  }\n\n  useActionCard(): void {\n    this.gameRules.useActionCard();\n  }\n\n  getSelectedActionCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter((handCard) => handCard?.cardType === ACTION_CARD_INTERFACE_NAME)\n    );\n  }\n\n  putLand(): void {\n    this.gameRules.putLandsPileCardInSlot();\n  }\n\n  giveLockedResources(): void {\n    this.domainsCards.giveLockedResources();\n  }\n\n  getPileSelectedLandCard(): Observable {\n    return this.landsPileCards.selectedLandsPileCards$;\n  }\n\n  getSelectedHandCard(): Observable {\n    return this.handsCards.selectedHandsCards$;\n  }\n\n  getSelectedAvailableLandSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_LAND_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedLandCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === LAND_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.domainsCards.clearDomainCardSelection();\n  }\n\n  swapSelectedDomainsCards(): void {\n    this.domainsCards.swapSelectedCards();\n  }\n}\n\n    \n\n    \n        \n  \n    buy agglomeration\n  \n  \n    Pile Selected Agglomeration Card:\n    \n      {{ pivot.pileId }}\n    \n  \n  \n    Selected Available Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    buy development\n  \n  \n    Hand Selected Development Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Development Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Development Cards:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    Use action card\n  \n  \n    Selected Action Card:\n    \n      {{ pivot.cardId }}\n    \n  \n\n\n\n  put land\n  \n    Give locked resources\n  \n  \n    Pile Selected Land Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    swap selected domains cards\n  \n    clear domain selection\n  \n\n\n    \n\n    \n                \n                    ./actions.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      buy agglomeration        Pile Selected Agglomeration Card:          {{ pivot.pileId }}            Selected Available Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            buy development        Hand Selected Development Card:          {{ pivot.cardId }}            Selected Available Development Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Development Cards:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Use action card        Selected Action Card:          {{ pivot.cardId }}        put land      Give locked resources        Pile Selected Land Card:          {{ pivot.cardId }}            Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            swap selected domains cards      clear domain selection  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/actions/actions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionsComponent } from './actions/actions.component';\n\n@NgModule({\n  declarations: [ActionsComponent],\n  imports: [CommonModule],\n  exports: [ActionsComponent],\n})\nexport class ActionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationCard.html":{"url":"interfaces/AgglomerationCard.html","title":"interface - AgglomerationCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/agglomeration.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Agglomeration Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         AgglomerationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport { AgglomerationType } from '../types/agglomeration';\nimport { DomainColor } from '../types/domain';\nimport { ResourceType } from '../types/resources';\n\nexport const AGGLOMERATION_CARD_INTERFACE_NAME = 'AgglomerationCard';\n\nexport const AVAILABLE_AGGLOMERATION_SLOT = 'AvailableAgglomerationSlot';\n\n/**\n * Interface for the Agglomeration Cards\n */\nexport interface AgglomerationCard\n  extends HasId,\n    HasCost,\n    HasVictoryPoints,\n    HasColor,\n    CanPrint {\n  interface: typeof AGGLOMERATION_CARD_INTERFACE_NAME;\n  id: string;\n  cost: Map;\n  type: AgglomerationType;\n  victoryPoints?: number;\n  color?: DomainColor;\n}\n\nexport const createAgglomerationCard = (\n  id: string,\n  cost: Map,\n  type: AgglomerationType,\n  victoryPoints?: number,\n  color?: DomainColor\n): AgglomerationCard => ({\n  interface: AGGLOMERATION_CARD_INTERFACE_NAME,\n  id,\n  cost,\n  type,\n  victoryPoints,\n  color,\n  print: (): string => `type: ${type}`,\n});\n\n/* eslint-disable no-magic-numbers */\nexport function createRoad(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 2],\n    ]),\n    AgglomerationType.Road,\n    0,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\nexport function createHamlet(\n  id: string,\n  color?: DomainColor\n): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 1],\n      [ResourceType.Wool, 1],\n      [ResourceType.Wheat, 1],\n    ]),\n    AgglomerationType.Hamlet,\n    1,\n    color\n  );\n}\n\n/* eslint-disable no-magic-numbers */\nexport function createTown(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wheat, 2],\n      [ResourceType.Stone, 3],\n    ]),\n    AgglomerationType.Town,\n    2,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isAgglomerationCard(obj: any): obj is AgglomerationCard {\n  return (\n    obj !== undefined && obj.interface === AGGLOMERATION_CARD_INTERFACE_NAME\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/taormina-duel/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startNewGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in apps/taormina-duel/src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startNewGame\n                        \n                    \n                \n            \n            \n                \nstartNewGame()\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel/src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameRulesService } from '@taormina/feature-engine';\n\n@Component({\n  selector: 'taormina-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(private gameRules: GameRulesService) {}\n\n  startNewGame(): void {\n    this.gameRules.initNewGame();\n  }\n}\n\n    \n\n    \n        New Game !\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                /* stylelint-disable no-empty-source */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New Game !'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/taormina-duel/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            DataAccessGameModule\n                        \n                        \n                            FeatureGameModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { DataAccessGameModule } from '@taormina/data-access-game';\nimport { FeatureGameModule } from '@taormina/feature-game';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(\n      {},\n      {\n        metaReducers: !environment.production ? [] : [],\n        runtimeChecks: {\n          strictActionImmutability: true,\n          strictStateImmutability: true,\n        },\n      }\n    ),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    DataAccessGameModule,\n    FeatureGameModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/board/board/board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ID_DOMAIN_BLUE\n                            \n                            \n                                ID_DOMAIN_RED\n                            \n                            \n                                ID_HAND_BLUE\n                            \n                            \n                                ID_HAND_RED\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_HAND_BLUE,\n  ID_HAND_RED,\n} from '@taormina/shared-constants';\n\n@Component({\n  selector: 'taormina-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent {\n  ID_HAND_RED = ID_HAND_RED;\n  ID_HAND_BLUE = ID_HAND_BLUE;\n  ID_DOMAIN_RED = ID_DOMAIN_RED;\n  ID_DOMAIN_BLUE = ID_DOMAIN_BLUE;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_exports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/board/board.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DiceModule\n                        \n                        \n                            DomainModule\n                        \n                        \n                            HandModule\n                        \n                        \n                            PhasesModule\n                        \n                        \n                            PilesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardComponent } from './board/board.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DiceModule } from '../dice/dice.module';\nimport { DomainModule } from '../domain/domain.module';\nimport { HandModule } from '../hand/hand.module';\nimport { PhasesModule } from '../phases/phases.module';\nimport { PilesModule } from '../piles/piles.module';\n\n@NgModule({\n  declarations: [BoardComponent],\n  imports: [\n    CommonModule,\n    ActionsModule,\n    DiceModule,\n    DomainModule,\n    HandModule,\n    PhasesModule,\n    PilesModule,\n  ],\n  exports: [BoardComponent],\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanPrint.html":{"url":"interfaces/CanPrint.html","title":"interface - CanPrint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CanPrint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/print.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        print\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        print\n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n            \n                \n                    Defined in libs/shared-models/src/lib/interfaces/print.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface CanPrint {\n  print(): string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isCanPrint(obj: any): obj is CanPrint {\n  return typeof obj.print === 'function';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card\n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'taormina-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent {}\n\n    \n\n    \n        card works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'card works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/taormina-duel-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable-1.html":{"url":"interfaces/Chainable-1.html","title":"interface - Chainable-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ui-card-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ui-card-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataAccessGameModule.html":{"url":"modules/DataAccessGameModule.html","title":"module - DataAccessGameModule","body":"\n                   \n\n\n\n\n    Modules\n    DataAccessGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nFaceUpPilesCardsFacade\n\nFaceUpPilesCardsFacade\n\nDataAccessGameModule -->\n\nFaceUpPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/data-access-game/src/lib/data-access-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiscardPileCardsFacade\n                        \n                        \n                            DomainsCardsFacade\n                        \n                        \n                            EventsPileCardsFacade\n                        \n                        \n                            FaceUpPilesCardsFacade\n                        \n                        \n                            GameFacade\n                        \n                        \n                            HandsCardsFacade\n                        \n                        \n                            LandsPileCardsFacade\n                        \n                        \n                            StockPilesCardsFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { DiscardPileCardsEffects } from './+state/discard-pile-cards/discard-pile-cards.effects';\nimport { DiscardPileCardsFacade } from './+state/discard-pile-cards/discard-pile-cards.facade';\nimport * as fromDiscardPileCards from './+state/discard-pile-cards/discard-pile-cards.reducer';\nimport { DomainsCardsEffects } from './+state/domains-cards/domains-cards.effects';\nimport { DomainsCardsFacade } from './+state/domains-cards/domains-cards.facade';\nimport * as fromDomainsCards from './+state/domains-cards/domains-cards.reducer';\nimport { EventsPileCardsEffects } from './+state/events-pile-cards/events-pile-cards.effects';\nimport { EventsPileCardsFacade } from './+state/events-pile-cards/events-pile-cards.facade';\nimport * as fromEventsPileCards from './+state/events-pile-cards/events-pile-cards.reducer';\nimport { FaceUpPilesCardsEffects } from './+state/face-up-piles-cards/face-up-piles-cards.effects';\nimport { FaceUpPilesCardsFacade } from './+state/face-up-piles-cards/face-up-piles-cards.facade';\nimport * as fromFaceUpPilesCards from './+state/face-up-piles-cards/face-up-piles-cards.reducer';\nimport { GameEffects } from './+state/game/game.effects';\nimport { GameFacade } from './+state/game/game.facade';\nimport * as fromGame from './+state/game/game.reducer';\nimport { HandsCardsEffects } from './+state/hands-cards/hands-cards.effects';\nimport { HandsCardsFacade } from './+state/hands-cards/hands-cards.facade';\nimport * as fromHandsCards from './+state/hands-cards/hands-cards.reducer';\nimport { LandsPileCardsEffects } from './+state/lands-pile-cards/lands-pile-cards.effects';\nimport { LandsPileCardsFacade } from './+state/lands-pile-cards/lands-pile-cards.facade';\nimport * as fromLandsPileCards from './+state/lands-pile-cards/lands-pile-cards.reducer';\nimport { StockPilesCardsEffects } from './+state/stock-piles-cards/stock-piles-cards.effects';\nimport { StockPilesCardsFacade } from './+state/stock-piles-cards/stock-piles-cards.facade';\nimport * as fromStockPilesCards from './+state/stock-piles-cards/stock-piles-cards.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromGame.GAME_FEATURE_KEY, fromGame.gameReducer),\n    EffectsModule.forFeature([GameEffects]),\n    StoreModule.forFeature(\n      fromDomainsCards.DOMAINS_CARDS_FEATURE_KEY,\n      fromDomainsCards.domainsCardsReducer\n    ),\n    EffectsModule.forFeature([DomainsCardsEffects]),\n    StoreModule.forFeature(\n      fromHandsCards.HANDS_CARDS_FEATURE_KEY,\n      fromHandsCards.handsCardsReducer\n    ),\n    EffectsModule.forFeature([HandsCardsEffects]),\n    StoreModule.forFeature(\n      fromFaceUpPilesCards.FACE_UP_PILES_CARDS_FEATURE_KEY,\n      fromFaceUpPilesCards.faceUpPilesCardsReducer\n    ),\n    EffectsModule.forFeature([EventsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromLandsPileCards.LANDS_PILE_CARDS_FEATURE_KEY,\n      fromLandsPileCards.landsPileCardsReducer\n    ),\n    EffectsModule.forFeature([FaceUpPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromStockPilesCards.STOCK_PILES_CARDS_FEATURE_KEY,\n      fromStockPilesCards.stockPilesCardsReducer\n    ),\n    EffectsModule.forFeature([StockPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromEventsPileCards.EVENTS_PILE_CARDS_FEATURE_KEY,\n      fromEventsPileCards.eventsPileCardsReducer\n    ),\n    EffectsModule.forFeature([LandsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromDiscardPileCards.DISCARD_PILE_CARDS_FEATURE_KEY,\n      fromDiscardPileCards.discardPileCardsReducer\n    ),\n    EffectsModule.forFeature([DiscardPileCardsEffects]),\n  ],\n  providers: [\n    GameFacade,\n    DomainsCardsFacade,\n    HandsCardsFacade,\n    FaceUpPilesCardsFacade,\n    LandsPileCardsFacade,\n    StockPilesCardsFacade,\n    EventsPileCardsFacade,\n    DiscardPileCardsFacade,\n  ],\n})\nexport class DataAccessGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DevelopmentCard.html":{"url":"interfaces/DevelopmentCard.html","title":"interface - DevelopmentCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DevelopmentCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/development.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Development Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            celebrationPoints\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            givesKnowledge\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            needsTown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noDuplicate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strengthPoints\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tradePoints\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        celebrationPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        celebrationPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        givesKnowledge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        givesKnowledge:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsTown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsTown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strengthPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strengthPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tradePoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tradePoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DevelopmentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DevelopmentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport {\n  BuildingName,\n  DevelopmentType,\n  ShipName,\n  ShipNameKey,\n  WarriorName,\n} from '../types/development';\nimport { ResourceType } from '../types/resources';\n\nexport const DEVELOPMENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\nexport const AVAILABLE_DEVELOPMENT_SLOT = 'AvailableDevelopmentSlot';\n\n/**\n * Interface for the Development Cards\n */\nexport interface DevelopmentCard\n  extends HasId,\n    HasName,\n    HasCost,\n    HasVictoryPoints {\n  interface: typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: string;\n  cost: Map;\n  type: DevelopmentType;\n  tradePoints?: number;\n  strengthPoints?: number;\n  celebrationPoints?: number;\n  givesKnowledge?: boolean;\n  noDuplicate?: boolean;\n  needsTown?: boolean;\n  victoryPoints?: number;\n}\n\nconst createDevelopmentCard = (\n  id: string,\n  name: string,\n  cost: Map,\n  type: DevelopmentType\n): DevelopmentCard => ({\n  interface: DEVELOPMENT_CARD_INTERFACE_NAME,\n  id,\n  name,\n  cost,\n  type,\n});\n\nexport function createBuilding(\n  id: string,\n  name: BuildingName,\n  cost: Map,\n  tradePoints?: number,\n  givesKnowledge?: boolean,\n  noDuplicate?: boolean,\n  victoryPoints?: number\n): DevelopmentCard {\n  const building = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Building\n  );\n  building.tradePoints = tradePoints;\n  building.givesKnowledge = givesKnowledge;\n  building.noDuplicate = noDuplicate;\n  building.victoryPoints = victoryPoints;\n  return building;\n}\n\nexport function createShip(id: string, type: ShipNameKey): DevelopmentCard {\n  const name = ShipName.get(type);\n  if (name === undefined) {\n    throw new Error(`Can't find ship name for type ${type}`);\n  }\n  const ship = createDevelopmentCard(\n    id,\n    name,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Wool, 1],\n    ]),\n    DevelopmentType.Ship\n  );\n  ship.tradePoints = 1;\n  return ship;\n}\n\nexport function createWarrior(\n  id: string,\n  name: WarriorName,\n  cost: Map,\n  strengthPoints?: number,\n  celebrationPoints?: number\n): DevelopmentCard {\n  const warrior = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Warrior\n  );\n  warrior.strengthPoints = strengthPoints;\n  warrior.celebrationPoints = celebrationPoints;\n  return warrior;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isDevelopmentCard(obj: any): obj is DevelopmentCard {\n  return obj !== undefined && obj.interface === DEVELOPMENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiceComponent.html":{"url":"components/DiceComponent.html","title":"component - DiceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/dice/dice/dice.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-dice\n            \n\n            \n                styleUrls\n                ./dice.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                RESOURCE_VALUES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventDie\n                            \n                            \n                                getNextProductionDie\n                            \n                            \n                                getProductionDie\n                            \n                            \n                                onThrow\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                throwDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEventDie\n                        \n                    \n                \n            \n            \n                \ngetEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextProductionDie\n                        \n                    \n                \n            \n            \n                \ngetNextProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductionDie\n                        \n                    \n                \n            \n            \n                \ngetProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onThrow\n                        \n                    \n                \n            \n            \n                \nonThrow()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDisabled\n                        \n                    \n                \n            \n            \n                \nthrowDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RESOURCE_VALUES\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameFacade } from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  EventValue,\n  GamePhase,\n  ResourceValue,\n  RESOURCE_VALUES,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-dice',\n  templateUrl: './dice.component.html',\n  styleUrls: ['./dice.component.css'],\n})\nexport class DiceComponent {\n  RESOURCE_VALUES = RESOURCE_VALUES;\n\n  constructor(private game: GameFacade, private gameRules: GameRulesService) {}\n\n  throwDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map(\n        (phase) =>\n          phase !== GamePhase.InitialThrow && phase !== GamePhase.LoopThrow\n      )\n    );\n  }\n\n  onThrow(): void {\n    this.gameRules.throwDice();\n  }\n\n  getProductionDie(): Observable {\n    return this.game.productionDie$;\n  }\n\n  getEventDie(): Observable {\n    return this.game.eventDie$;\n  }\n\n  getNextProductionDie(): Observable {\n    return this.game.nextProductionDie$;\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.game.setNextProductionDie(value);\n  }\n}\n\n    \n\n    \n        \n  \n    Next Production Die:\n    \n      \n        {{ value }}\n    \n  \n  \n    throw\n  \n  Production: {{ value }}\n  Event: {{ value }}\n\n\n    \n\n    \n                \n                    ./dice.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Next Production Die:                  {{ value }}            throw    Production: {{ value }}  Event: {{ value }}'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiceModule.html":{"url":"modules/DiceModule.html","title":"module - DiceModule","body":"\n                   \n\n\n\n\n    Modules\n    DiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_exports\n\n\n\ncluster_DiceModule_declarations\n\n\n\n\nDiceComponent\n\nDiceComponent\n\n\n\nDiceModule\n\nDiceModule\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/dice/dice.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DiceComponent } from './dice/dice.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [DiceComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [DiceComponent],\n})\nexport class DiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsEffects.html":{"url":"injectables/DiscardPileCardsEffects.html","title":"injectable - DiscardPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCard$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { createDiscardPileCardsEntity } from './discard-pile-cards.models';\n\n@Injectable()\nexport class DiscardPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsEntity.html":{"url":"interfaces/DiscardPileCardsEntity.html","title":"interface - DiscardPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DiscardPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DiscardPileCardsEntity {\n  id: string; // Primary ID\n  cardType: string;\n  cardId: string;\n}\n\nexport const createDiscardPileCardsEntity = (\n  id: string,\n  cardType: string,\n  cardId: string\n): DiscardPileCardsEntity => ({\n  id,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsFacade.html":{"url":"injectables/DiscardPileCardsFacade.html","title":"injectable - DiscardPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDiscardPileCards$\n                            \n                            \n                                allDiscardPileCardsReverse$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDiscardPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardToDiscardPile\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardToDiscardPile\n                        \n                    \n                \n            \n            \n                \naddCardToDiscardPile(card: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:39\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCardsReverse$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport * as DiscardPileCardsFeature from './discard-pile-cards.reducer';\nimport * as DiscardPileCardsSelectors from './discard-pile-cards.selectors';\n\n@Injectable()\nexport class DiscardPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  );\n  allDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  );\n  allDiscardPileCardsReverse$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  );\n  selectedDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DiscardPileCardsActions.initDiscardPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      DiscardPileCardsActions.initDiscardPileCardsSavedGame()\n    );\n  }\n\n  addCardToDiscardPile(card: {\n    type:\n      | typeof ACTION_CARD_INTERFACE_NAME\n      | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n    id: string;\n  }): void {\n    this.store.dispatch(DiscardPileCardsActions.addCardToDiscardPile({ card }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsPartialState.html":{"url":"interfaces/DiscardPileCardsPartialState.html","title":"interface - DiscardPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DISCARD_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DISCARD_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DISCARD_PILE_CARDS_FEATURE_KEY:         DiscardPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DiscardPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsState.html":{"url":"interfaces/DiscardPileCardsState.html","title":"interface - DiscardPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Domain.html":{"url":"interfaces/Domain.html","title":"interface - Domain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Domain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/domain.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Domains\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Domains\n */\nexport interface Domain extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createDomain = (id: string, color: DomainColor): Domain => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DomainComponent.html":{"url":"components/DomainComponent.html","title":"component - DomainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DomainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/domain/domain/domain.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-domain\n            \n\n            \n                styleUrls\n                ./domain.component.css\n            \n\n\n\n            \n                templateUrl\n                ./domain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AGGLOMERATION_CARD_INTERFACE_NAME\n                            \n                            \n                                AVAILABLE_AGGLOMERATION_SLOT\n                            \n                            \n                                AVAILABLE_DEVELOPMENT_SLOT\n                            \n                            \n                                AVAILABLE_LAND_SLOT\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                            \n                                LAND_CARD_INTERFACE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAgglomerationCard\n                            \n                            \n                                getCelebrationPoints\n                            \n                            \n                                getColumnsTemplate\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getDomain\n                            \n                            \n                                getDomainsCards\n                            \n                            \n                                getLandCard\n                            \n                            \n                                getRowsTemplate\n                            \n                            \n                                getShipsCount\n                            \n                            \n                                getStrengthMastery\n                            \n                            \n                                getTradeMastery\n                            \n                            \n                                getVictoryPoints\n                            \n                            \n                                increaseResources\n                            \n                            \n                                isDomainCardSelected\n                            \n                            \n                                lockResource\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                domainId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domainsCards: DomainsCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        domainId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAgglomerationCard\n                        \n                    \n                \n            \n            \n                \ngetAgglomerationCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPoints\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsTemplate\n                        \n                    \n                \n            \n            \n                \ngetColumnsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n            \n                \ngetDomain()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Domain | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainsCards\n                        \n                    \n                \n            \n            \n                \ngetDomainsCards(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLandCard\n                        \n                    \n                \n            \n            \n                \ngetLandCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRowsTemplate\n                        \n                    \n                \n            \n            \n                \ngetRowsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShipsCount\n                        \n                    \n                \n            \n            \n                \ngetShipsCount(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStrengthMastery\n                        \n                    \n                \n            \n            \n                \ngetStrengthMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTradeMastery\n                        \n                    \n                \n            \n            \n                \ngetTradeMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPoints\n                        \n                    \n                \n            \n            \n                \ngetVictoryPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDomainCardSelected\n                        \n                    \n                \n            \n            \n                \nisDomainCardSelected(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AGGLOMERATION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AGGLOMERATION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_AGGLOMERATION_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_AGGLOMERATION_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_DEVELOPMENT_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_DEVELOPMENT_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_LAND_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_LAND_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LAND_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LAND_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  agglomerationCards,\n  developmentCards,\n  domains,\n  landCards,\n} from '@taormina/shared-constants';\nimport {\n  AgglomerationCard,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Domain,\n  LandCard,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-domain',\n  templateUrl: './domain.component.html',\n  styleUrls: ['./domain.component.css'],\n})\nexport class DomainComponent {\n  @Input() domainId!: string;\n\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n  AGGLOMERATION_CARD_INTERFACE_NAME = AGGLOMERATION_CARD_INTERFACE_NAME;\n  LAND_CARD_INTERFACE_NAME = LAND_CARD_INTERFACE_NAME;\n  AVAILABLE_AGGLOMERATION_SLOT = AVAILABLE_AGGLOMERATION_SLOT;\n  AVAILABLE_DEVELOPMENT_SLOT = AVAILABLE_DEVELOPMENT_SLOT;\n  AVAILABLE_LAND_SLOT = AVAILABLE_LAND_SLOT;\n\n  constructor(\n    private domainsCards: DomainsCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  getDomain(): Domain | undefined {\n    return domains.get(this.domainId);\n  }\n\n  getShipsCount(domainId: string): Observable {\n    return this.domainsCards.getMerchantShipCountForDomain(domainId);\n  }\n\n  getCelebrationPoints(domainId: string): Observable {\n    return this.domainsCards.getCelebrationPointsForDomain(domainId);\n  }\n\n  getStrengthMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Strength)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getTradeMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Trade)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getVictoryPoints(domainId: string): Observable {\n    return this.gameRules.getVictoryPointsForDomain(domainId);\n  }\n\n  getColumnsTemplate(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getDomainMinCol(domainId),\n      this.domainsCards.getDomainMaxCol(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return combineLatest([\n      this.domainsCards.getDomainMinRow(domainId),\n      this.domainsCards.getDomainMaxRow(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return this.domainsCards.allDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.filter((domainCard) => domainCard.domainId === domainId)\n      )\n    );\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  getAgglomerationCard(cardId: string): AgglomerationCard | undefined {\n    return agglomerationCards.get(cardId);\n  }\n\n  getLandCard(cardId: string): LandCard | undefined {\n    return landCards.get(cardId);\n  }\n\n  isDomainCardSelected(pivotId: string): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.map((domainsCard) => domainsCard.id).includes(pivotId)\n      )\n    );\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.domainsCards.toggleDomainCardSelection(pivotId);\n  }\n\n  lockResource(pivotId: string): void {\n    this.domainsCards.lockResource(pivotId);\n  }\n\n  unlockResources(pivotId: string): void {\n    this.domainsCards.unlockResources(pivotId);\n  }\n\n  increaseResources(pivotId: string): void {\n    this.domainsCards.increaseResources(pivotId);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ domain.color }}\n     - Ships count: {{ getShipsCount(domain.id) | async }}\n    \n      - Celebration points: {{ getCelebrationPoints(domain.id) | async }}\n     - Trade Mastery\n    \n      - Strength Mastery\n     - Victory points: {{ getVictoryPoints(domain.id) | async }}\n  \n  \n    \n      \n        \n          {{ development.name }}\n        \n      \n      \n        \n          {{ agglomeration.type }}\n          \n            {{\n              (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select'\n            }}\n          \n        \n      \n      \n        \n          {{ land.type }}\n          {{ land.die }}\n          Available: {{ pivot.availableResources }}\n          locked: {{ pivot.lockedResources }}\n          Lock\n          \n            Unlock\n          \n            Increase\n          \n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./domain.component.css\n                \n                .grid-container {\n  display: grid;\n  grid-gap: 20px;\n}\n\n.grid-cell {\n  border: 1px solid black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ domain.color }}     - Ships count: {{ getShipsCount(domain.id) | async }}          - Celebration points: {{ getCelebrationPoints(domain.id) | async }}     - Trade Mastery          - Strength Mastery     - Victory points: {{ getVictoryPoints(domain.id) | async }}                                {{ development.name }}                                      {{ agglomeration.type }}                      {{              (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\'            }}                                                {{ land.type }}          {{ land.die }}          Available: {{ pivot.availableResources }}          locked: {{ pivot.lockedResources }}          Lock                      Unlock                      Increase                                                {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                    '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DomainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DomainModule.html":{"url":"modules/DomainModule.html","title":"module - DomainModule","body":"\n                   \n\n\n\n\n    Modules\n    DomainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_DomainModule_declarations\n\n\n\n\nDomainComponent\n\nDomainComponent\n\n\n\nDomainModule\n\nDomainModule\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/domain/domain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomainComponent } from './domain/domain.component';\n\n@NgModule({\n  declarations: [DomainComponent],\n  imports: [CommonModule],\n  exports: [DomainComponent],\n})\nexport class DomainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsEffects.html":{"url":"injectables/DomainsCardsEffects.html","title":"injectable - DomainsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countStealResources$\n                            \n                            \n                                createCard$\n                            \n                            \n                                giveLockedResources$\n                            \n                            \n                                increaseResources$\n                            \n                            \n                                increaseResourcesAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                lockResource$\n                            \n                            \n                                putCardInPivot$\n                            \n                            \n                                unlockResources$\n                            \n                            \n                                    Private\n                                updatesAvailableResources\n                            \n                            \n                                useLockedResources$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLandCardFromPivot\n                            \n                            \n                                    Private\n                                takeOneDefinedPivotOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, domainsCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:422\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCardsStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getLandCardFromPivot\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLandCardFromPivot(pivot: DomainsCardsEntity)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:488\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivot\n                                    \n                                                DomainsCardsEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        takeOneDefinedPivotOrThrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    takeOneDefinedPivotOrThrow(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:429\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countStealResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:381\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:364\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:235\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:317\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInPivot$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:348\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updatesAvailableResources\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:444\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:212\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { landCards } from '@taormina/shared-constants';\nimport {\n  LandCard,\n  ResourceCount,\n  RESOURCE_COUNTS,\n} from '@taormina/shared-models';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  map,\n  take,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport {\n  createDomainsCardsEntity,\n  createInitialDomainsCards,\n  DomainsCardsEntity,\n} from './domains-cards.models';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  increaseResourcesForDie$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  );\n\n  increaseResourcesAuspiciousYear$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  );\n\n  lockResource$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  unlockResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  useLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  giveLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  increaseResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  putCardInPivot$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  );\n\n  createCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  );\n\n  countStealResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private domainsCardsStore: Store\n  ) {}\n\n  private takeOneDefinedPivotOrThrow(\n    id: string\n  ): Observable {\n    return this.domainsCardsStore.pipe(\n      select(DomainsCardsSelectors.getLandCardPivotById(id)),\n      map((pivot) => {\n        if (pivot === undefined) {\n          throw new Error(`Couldn't find land card pivot for id.`);\n        }\n        return pivot;\n      }),\n      take(1)\n    );\n  }\n\n  private updatesAvailableResources = (\n    domainsCards: DomainsCardsEntity[],\n    resourceIncrement: number\n  ): {\n    id: string;\n    changes: {\n      availableResources: ResourceCount;\n    };\n  }[] => {\n    const belowMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: (pivot.availableResources +\n              resourceIncrement) as ResourceCount,\n          },\n        };\n      });\n\n    const atMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources >=\n            Math.max(...RESOURCE_COUNTS) - resourceIncrement &&\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: Math.max(...RESOURCE_COUNTS) as ResourceCount,\n          },\n        };\n      });\n\n    return [...belowMax, ...atMax];\n  };\n\n  private getLandCardFromPivot(pivot: DomainsCardsEntity): LandCard {\n    if (pivot.cardId === undefined) {\n      throw new Error(\n        `Something went wrong, cardId shouldn't be undefined at this point.`\n      );\n    }\n    const land = landCards.get(pivot.cardId);\n    if (land === undefined) {\n      throw new Error(\n        `Something went wrong, land shouldn't be undefined at this point.`\n      );\n    }\n    return land;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsEntity.html":{"url":"interfaces/DomainsCardsEntity.html","title":"interface - DomainsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DomainsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            availableResources\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            domainId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lockedResources\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         DomainCardType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainCardType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        domainId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lockedResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lockedResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         RowValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ID_CLAY_PIT_BLUE,\n  ID_CLAY_PIT_RED,\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_FIELD_BLUE,\n  ID_FIELD_RED,\n  ID_FOREST_BLUE,\n  ID_FOREST_RED,\n  ID_GOLD_MINE_BLUE,\n  ID_GOLD_MINE_RED,\n  ID_HAMLET_BLUE_1,\n  ID_HAMLET_BLUE_2,\n  ID_HAMLET_RED_1,\n  ID_HAMLET_RED_2,\n  ID_PASTURE_BLUE,\n  ID_PASTURE_RED,\n  ID_ROAD_BLUE,\n  ID_ROAD_RED,\n  ID_STONE_QUARRY_BLUE,\n  ID_STONE_QUARRY_RED,\n} from '@taormina/shared-constants';\nimport {\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  DomainCardType,\n  LAND_CARD_INTERFACE_NAME,\n  ResourceCount,\n  RowValue,\n} from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'DomainsCards' data\n */\nexport interface DomainsCardsEntity {\n  id: string; // Primary ID\n  domainId: string; // Foreign key to domains\n  cardType: DomainCardType;\n  cardId?: string; // Foreign key to cards\n  col: number;\n  row: RowValue;\n  availableResources: ResourceCount;\n  lockedResources: ResourceCount;\n}\n\nexport const createDomainsCardsEntity = (\n  id: string,\n  domainId: string,\n  cardType: DomainCardType,\n  cardId: string | undefined,\n  col: number,\n  row: RowValue,\n  availableResources = 0 as ResourceCount,\n  lockedResources = 0 as ResourceCount\n): DomainsCardsEntity => ({\n  id,\n  domainId,\n  cardType,\n  cardId,\n  col,\n  row,\n  availableResources,\n  lockedResources,\n});\n\n/* eslint-disable no-magic-numbers */\nexport const createInitialDomainsCards = (): DomainsCardsEntity[] => {\n  const initialDomainsCards: DomainsCardsEntity[] = [\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_RED,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_RED,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_RED,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_RED,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_RED,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_RED,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_RED,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_BLUE,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_BLUE,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_BLUE,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_BLUE,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_BLUE,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_BLUE,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_BLUE,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n  ];\n  return initialDomainsCards;\n};\n/* eslint-enable no-magic-numbers */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsFacade.html":{"url":"injectables/DomainsCardsFacade.html","title":"injectable - DomainsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDomainsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDomainsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                countAndStealUnprotectedGoldAndWool\n                            \n                            \n                                createAvailableDomainCard\n                            \n                            \n                                getCardsVictoryPointsForDomain\n                            \n                            \n                                getCelebrationPointsForDomain\n                            \n                            \n                                getDomainMaxCol\n                            \n                            \n                                getDomainMaxRow\n                            \n                            \n                                getDomainMinCol\n                            \n                            \n                                getDomainMinRow\n                            \n                            \n                                getMasteryDomainForType\n                            \n                            \n                                getMerchantShipCountForDomain\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                hasDomainCommunityCenter\n                            \n                            \n                                increaseResources\n                            \n                            \n                                increaseResourcesForAuspiciousYear\n                            \n                            \n                                increaseResourcesForDie\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                lockResource\n                            \n                            \n                                putCardInSlot\n                            \n                            \n                                removeDomainCard\n                            \n                            \n                                swapSelectedCards\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                            \n                                useLockedResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndStealUnprotectedGoldAndWool\n                        \n                    \n                \n            \n            \n                \ncountAndStealUnprotectedGoldAndWool()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAvailableDomainCard\n                        \n                    \n                \n            \n            \n                \ncreateAvailableDomainCard(domainId: string, cardType: DomainCardType, col: number, row: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCardsVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMinCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMinRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMasteryDomainForType\n                        \n                    \n                \n            \n            \n                \ngetMasteryDomainForType(type: MasteryPointsType)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                MasteryPointsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMerchantShipCountForDomain\n                        \n                    \n                \n            \n            \n                \ngetMerchantShipCountForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDomainCommunityCenter\n                        \n                    \n                \n            \n            \n                \nhasDomainCommunityCenter(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForAuspiciousYear()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForDie(value: DiceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:38\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInSlot\n                        \n                    \n                \n            \n            \n                \nputCardInSlot(pivotId: string, cardType: DomainCardType, cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeDomainCard\n                        \n                    \n                \n            \n            \n                \nremoveDomainCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources\n                        \n                    \n                \n            \n            \n                \nuseLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  DiceValue,\n  DomainCardType,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  );\n  allDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  );\n  selectedDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsSavedGame());\n  }\n\n  lockResource(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.lockResource({ id: pivotId }));\n  }\n\n  unlockResources(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.unlockResources({ id: pivotId }));\n  }\n\n  increaseResources(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResources({ id: pivotId })\n    );\n  }\n\n  increaseResourcesForDie(value: DiceValue): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForDie({ die: value })\n    );\n  }\n\n  increaseResourcesForAuspiciousYear(): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear()\n    );\n  }\n\n  useLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.useLockedResources());\n  }\n\n  giveLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.giveLockedResources());\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.toggleDomainCardSelection({ id: pivotId })\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.store.dispatch(DomainsCardsActions.clearDomainCardSelection());\n  }\n\n  putCardInSlot(\n    pivotId: string,\n    cardType: DomainCardType,\n    cardId: string\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.putCardInPivot({\n        id: pivotId,\n        cardType,\n        cardId,\n      })\n    );\n  }\n\n  createAvailableDomainCard(\n    domainId: string,\n    cardType: DomainCardType,\n    col: number,\n    row: number\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.createDomainCard({\n        domainId,\n        cardType,\n        cardId: undefined,\n        col,\n        row,\n      })\n    );\n  }\n\n  countAndStealUnprotectedGoldAndWool(): void {\n    this.store.dispatch(\n      DomainsCardsActions.countAndStealUnprotectedGoldAndWool()\n    );\n  }\n\n  swapSelectedCards(): void {\n    this.store.dispatch(DomainsCardsActions.swapSelectedCards());\n  }\n\n  removeDomainCard(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.removeDomainCard({ id: pivotId }));\n  }\n\n  getDomainMinCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinCol(domainId));\n  }\n\n  getDomainMaxCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxCol(domainId));\n  }\n\n  getDomainMinRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinRow(domainId));\n  }\n\n  getDomainMaxRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxRow(domainId));\n  }\n\n  getMasteryDomainForType(\n    type: MasteryPointsType\n  ): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMasteryDomainForType(type)\n    );\n  }\n\n  getCardsVictoryPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCardsVictoryPointsForDomain(domainId)\n    );\n  }\n\n  getMerchantShipCountForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMerchantShipCountForDomain(domainId)\n    );\n  }\n\n  getCelebrationPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCelebrationPointsForDomain(domainId)\n    );\n  }\n\n  hasDomainCommunityCenter(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.hasDomainCommunityCenter(domainId)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsPartialState.html":{"url":"interfaces/DomainsCardsPartialState.html","title":"interface - DomainsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DOMAINS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DOMAINS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DOMAINS_CARDS_FEATURE_KEY:         DomainsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsState.html":{"url":"interfaces/DomainsCardsState.html","title":"interface - DomainsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            selectedIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventCard.html":{"url":"interfaces/EventCard.html","title":"interface - EventCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/event.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Event Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         EventName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { EventName } from '../types/event';\n\nexport const EVENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\n/**\n * Interface for the Event Cards\n */\nexport interface EventCard extends HasId, HasName, HasRules {\n  interface: typeof EVENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: EventName;\n  ruleIds: string[];\n}\n\nexport const createEventCard = (\n  id: string,\n  name: EventName,\n  ruleIds: string[]\n): EventCard => ({ interface: EVENT_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isEventCard(obj: any): obj is EventCard {\n  return obj !== undefined && obj.interface === EVENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsEffects.html":{"url":"injectables/EventsPileCardsEffects.html","title":"injectable - EventsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                resetPileAndSelectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, eventsPileCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPileAndSelectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { createInitialEventsPileCards } from './events-pile-cards.models';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\n\n@Injectable()\nexport class EventsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  resetPileAndSelectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private eventsPileCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsEntity.html":{"url":"interfaces/EventsPileCardsEntity.html","title":"interface - EventsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'EventsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { eventCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'EventsPileCards' data\n */\nexport interface EventsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createEventsPileCardsEntity = (\n  id: string,\n  cardId: string\n): EventsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialEventsPileCards = (): EventsPileCardsEntity[] => {\n  const numberOfCardsBelowFestival = 3;\n  const shuffled = arrayShuffle(Array.from(eventCards.keys()).slice(1));\n  shuffled.splice(-numberOfCardsBelowFestival, 0, 'EVENT_0');\n  const entities = shuffled.map((cardId) =>\n    createEventsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsFacade.html":{"url":"injectables/EventsPileCardsFacade.html","title":"injectable - EventsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allEventsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedEventsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeSelected\n                            \n                            \n                                resetEventsPile\n                            \n                            \n                                selectFirst\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPile\n                        \n                    \n                \n            \n            \n                \nresetEventsPile()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst\n                        \n                    \n                \n            \n            \n                \nselectFirst()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\nimport * as EventsPileCardsSelectors from './events-pile-cards.selectors';\n\n@Injectable()\nexport class EventsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  );\n  allEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  );\n  selectedEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsSavedGame());\n  }\n\n  resetEventsPile(): void {\n    this.store.dispatch(EventsPileCardsActions.resetEventsPile());\n  }\n\n  selectFirst(): void {\n    this.store.dispatch(EventsPileCardsActions.selectFirstEventsPileCard());\n  }\n\n  removeSelected(): void {\n    this.store.dispatch(EventsPileCardsActions.removeSelectedEventsPileCard());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsPartialState.html":{"url":"interfaces/EventsPileCardsPartialState.html","title":"interface - EventsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            EVENTS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EVENTS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        EVENTS_PILE_CARDS_FEATURE_KEY:         EventsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsState.html":{"url":"interfaces/EventsPileCardsState.html","title":"interface - EventsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FaceUpPilesCardsEffects.html":{"url":"injectables/FaceUpPilesCardsEffects.html","title":"injectable - FaceUpPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FaceUpPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                selectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, faceUpPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.effects.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        faceUpPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(FaceUpPilesCardsActions.initFaceUpNewGame),\n      map(() =>\n        FaceUpPilesCardsActions.setFaceUpPilesCardsInitialized({\n          faceUpPilesCards: createInitialFaceUpPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.effects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(FaceUpPilesCardsActions.initFaceUpSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return FaceUpPilesCardsActions.loadFaceUpPilesCardsSuccess({\n            faceUpPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return FaceUpPilesCardsActions.loadFaceUpPilesCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(FaceUpPilesCardsActions.selectFirstCardFromFaceUpPile),\n      concatMap((action) =>\n        this.faceUpPilesCardsStore.pipe(\n          select(\n            FaceUpPilesCardsSelectors.getFirstCardPivotForPile(action.pileId)\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(`Can't get first card in empty face up pile.`);\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            FaceUpPilesCardsActions.selectFaceUpPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              FaceUpPilesCardsActions.setFaceUpPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.effects.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, take } from 'rxjs/operators';\n\nimport * as FaceUpPilesCardsActions from './face-up-piles-cards.actions';\nimport { createInitialFaceUpPilesCards } from './face-up-piles-cards.models';\nimport * as FaceUpPilesCardsFeature from './face-up-piles-cards.reducer';\nimport * as FaceUpPilesCardsSelectors from './face-up-piles-cards.selectors';\n\n@Injectable()\nexport class FaceUpPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(FaceUpPilesCardsActions.initFaceUpNewGame),\n      map(() =>\n        FaceUpPilesCardsActions.setFaceUpPilesCardsInitialized({\n          faceUpPilesCards: createInitialFaceUpPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(FaceUpPilesCardsActions.initFaceUpSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return FaceUpPilesCardsActions.loadFaceUpPilesCardsSuccess({\n            faceUpPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return FaceUpPilesCardsActions.loadFaceUpPilesCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  selectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(FaceUpPilesCardsActions.selectFirstCardFromFaceUpPile),\n      concatMap((action) =>\n        this.faceUpPilesCardsStore.pipe(\n          select(\n            FaceUpPilesCardsSelectors.getFirstCardPivotForPile(action.pileId)\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(`Can't get first card in empty face up pile.`);\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            FaceUpPilesCardsActions.selectFaceUpPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              FaceUpPilesCardsActions.setFaceUpPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private faceUpPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FaceUpPilesCardsEntity.html":{"url":"interfaces/FaceUpPilesCardsEntity.html","title":"interface - FaceUpPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FaceUpPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'FaceUpPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  agglomerationCards,\n  ID_FACE_UP_HAMLET,\n  ID_FACE_UP_ROAD,\n  ID_FACE_UP_TOWN,\n} from '@taormina/shared-constants';\nimport { AgglomerationType } from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'FaceUpPilesCards' data\n */\nexport interface FaceUpPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string;\n  cardId: string;\n}\n\nexport const createFaceUpPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardId: string\n): FaceUpPilesCardsEntity => ({\n  id,\n  pileId,\n  cardId,\n});\n\nexport const createInitialFaceUpPilesCards = (): FaceUpPilesCardsEntity[] => {\n  const roadEntities = Array.from(agglomerationCards.values())\n    .filter(\n      (agglomerationCard) =>\n        agglomerationCard.type === AgglomerationType.Road &&\n        agglomerationCard.color === undefined\n    )\n    .map((roadCard) =>\n      createFaceUpPilesCardsEntity(uuidv4(), ID_FACE_UP_ROAD, roadCard.id)\n    );\n\n  const hamletEntities = Array.from(agglomerationCards.values())\n    .filter(\n      (agglomerationCard) =>\n        agglomerationCard.type === AgglomerationType.Hamlet &&\n        agglomerationCard.color === undefined\n    )\n    .map((roadCard) =>\n      createFaceUpPilesCardsEntity(uuidv4(), ID_FACE_UP_HAMLET, roadCard.id)\n    );\n\n  const townEntities = Array.from(agglomerationCards.values())\n    .filter(\n      (agglomerationCard) =>\n        agglomerationCard.type === AgglomerationType.Town &&\n        agglomerationCard.color === undefined\n    )\n    .map((roadCard) =>\n      createFaceUpPilesCardsEntity(uuidv4(), ID_FACE_UP_TOWN, roadCard.id)\n    );\n\n  return [...roadEntities, ...hamletEntities, ...townEntities];\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FaceUpPilesCardsFacade.html":{"url":"injectables/FaceUpPilesCardsFacade.html","title":"injectable - FaceUpPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FaceUpPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allFaceUpPilesCards$\n                            \n                            \n                                allHamletPivots$\n                            \n                            \n                                allRoadPivots$\n                            \n                            \n                                allTownPivots$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedFaceUpPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeFaceUpPileCard\n                            \n                            \n                                selectFirstCardFromFaceUpPile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:46\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFaceUpPileCard\n                        \n                    \n                \n            \n            \n                \nremoveFaceUpPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstCardFromFaceUpPile\n                        \n                    \n                \n            \n            \n                \nselectFirstCardFromFaceUpPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allFaceUpPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(FaceUpPilesCardsSelectors.getAllFaceUpPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allHamletPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    FaceUpPilesCardsSelectors.getCardPivotsForPile(ID_FACE_UP_HAMLET)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allRoadPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    FaceUpPilesCardsSelectors.getCardPivotsForPile(ID_FACE_UP_ROAD)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTownPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    FaceUpPilesCardsSelectors.getCardPivotsForPile(ID_FACE_UP_TOWN)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(FaceUpPilesCardsSelectors.getFaceUpPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:19\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFaceUpPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(FaceUpPilesCardsSelectors.getFaceUpSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.facade.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ID_FACE_UP_HAMLET,\n  ID_FACE_UP_ROAD,\n  ID_FACE_UP_TOWN,\n} from '@taormina/shared-constants';\n\nimport * as FaceUpPilesCardsActions from './face-up-piles-cards.actions';\nimport * as FaceUpPilesCardsFeature from './face-up-piles-cards.reducer';\nimport * as FaceUpPilesCardsSelectors from './face-up-piles-cards.selectors';\n\n@Injectable()\nexport class FaceUpPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(FaceUpPilesCardsSelectors.getFaceUpPilesCardsLoaded)\n  );\n  allFaceUpPilesCards$ = this.store.pipe(\n    select(FaceUpPilesCardsSelectors.getAllFaceUpPilesCards)\n  );\n  selectedFaceUpPilesCards$ = this.store.pipe(\n    select(FaceUpPilesCardsSelectors.getFaceUpSelected)\n  );\n  allRoadPivots$ = this.store.select(\n    FaceUpPilesCardsSelectors.getCardPivotsForPile(ID_FACE_UP_ROAD)\n  );\n  allHamletPivots$ = this.store.select(\n    FaceUpPilesCardsSelectors.getCardPivotsForPile(ID_FACE_UP_HAMLET)\n  );\n  allTownPivots$ = this.store.select(\n    FaceUpPilesCardsSelectors.getCardPivotsForPile(ID_FACE_UP_TOWN)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(FaceUpPilesCardsActions.initFaceUpNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(FaceUpPilesCardsActions.initFaceUpSavedGame());\n  }\n\n  removeFaceUpPileCard(id: string): void {\n    this.store.dispatch(FaceUpPilesCardsActions.removeFaceUpPileCard({ id }));\n  }\n\n  selectFirstCardFromFaceUpPile(pileId: string): void {\n    this.store.dispatch(\n      FaceUpPilesCardsActions.selectFirstCardFromFaceUpPile({ pileId })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FaceUpPilesCardsPartialState.html":{"url":"interfaces/FaceUpPilesCardsPartialState.html","title":"interface - FaceUpPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FaceUpPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            FACE_UP_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        FACE_UP_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FACE_UP_PILES_CARDS_FEATURE_KEY:         FaceUpPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FaceUpPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as FaceUpPilesCardsActions from './face-up-piles-cards.actions';\nimport { FaceUpPilesCardsEntity } from './face-up-piles-cards.models';\n\nexport const FACE_UP_PILES_CARDS_FEATURE_KEY = 'faceUpPilesCards';\n\nexport interface FaceUpPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface FaceUpPilesCardsPartialState {\n  readonly [FACE_UP_PILES_CARDS_FEATURE_KEY]: FaceUpPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const faceUpPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialFaceUpPilesCardsState: FaceUpPilesCardsState = faceUpPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const faceUpPilesCardsReducer = createReducer(\n  initialFaceUpPilesCardsState,\n  on(FaceUpPilesCardsActions.initFaceUpNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(FaceUpPilesCardsActions.initFaceUpSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    FaceUpPilesCardsActions.loadFaceUpPilesCardsSuccess,\n    (state, { faceUpPilesCards }) =>\n      faceUpPilesCardsAdapter.setAll(faceUpPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    FaceUpPilesCardsActions.loadFaceUpPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    FaceUpPilesCardsActions.setFaceUpPilesCardsInitialized,\n    (state, { faceUpPilesCards }) =>\n      faceUpPilesCardsAdapter.setAll(faceUpPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(FaceUpPilesCardsActions.selectFaceUpPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(FaceUpPilesCardsActions.unselectFaceUpPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(FaceUpPilesCardsActions.removeFaceUpPileCard, (state, { id }) =>\n    faceUpPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(FaceUpPilesCardsActions.setFaceUpPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FaceUpPilesCardsState.html":{"url":"interfaces/FaceUpPilesCardsState.html","title":"interface - FaceUpPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FaceUpPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as FaceUpPilesCardsActions from './face-up-piles-cards.actions';\nimport { FaceUpPilesCardsEntity } from './face-up-piles-cards.models';\n\nexport const FACE_UP_PILES_CARDS_FEATURE_KEY = 'faceUpPilesCards';\n\nexport interface FaceUpPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface FaceUpPilesCardsPartialState {\n  readonly [FACE_UP_PILES_CARDS_FEATURE_KEY]: FaceUpPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const faceUpPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialFaceUpPilesCardsState: FaceUpPilesCardsState = faceUpPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const faceUpPilesCardsReducer = createReducer(\n  initialFaceUpPilesCardsState,\n  on(FaceUpPilesCardsActions.initFaceUpNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(FaceUpPilesCardsActions.initFaceUpSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    FaceUpPilesCardsActions.loadFaceUpPilesCardsSuccess,\n    (state, { faceUpPilesCards }) =>\n      faceUpPilesCardsAdapter.setAll(faceUpPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    FaceUpPilesCardsActions.loadFaceUpPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    FaceUpPilesCardsActions.setFaceUpPilesCardsInitialized,\n    (state, { faceUpPilesCards }) =>\n      faceUpPilesCardsAdapter.setAll(faceUpPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(FaceUpPilesCardsActions.selectFaceUpPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(FaceUpPilesCardsActions.unselectFaceUpPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(FaceUpPilesCardsActions.removeFaceUpPileCard, (state, { id }) =>\n    faceUpPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(FaceUpPilesCardsActions.setFaceUpPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureEngineModule.html":{"url":"modules/FeatureEngineModule.html","title":"module - FeatureEngineModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureEngineModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-engine/src/lib/feature-engine.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class FeatureEngineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureGameModule.html":{"url":"modules/FeatureGameModule.html","title":"module - FeatureGameModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\ncluster_FeatureGameModule_imports\n\n\n\n\nBoardModule\n\nBoardModule\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/feature-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BoardModule } from './board/board.module';\n\n@NgModule({\n  imports: [CommonModule, BoardModule],\n  exports: [BoardModule],\n})\nexport class FeatureGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameEffects.html":{"url":"injectables/GameEffects.html","title":"injectable - GameEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                throwDice$\n                            \n                            \n                                throwEvent$\n                            \n                            \n                                throwProduction$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, gameStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProduction$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport {\n  getRandomEventDieValue,\n  getRandomProductionDieValue,\n} from '@taormina/shared-utils';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameEffects {\n  throwDice$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  );\n\n  throwProduction$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  );\n\n  throwEvent$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private gameStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameFacade.html":{"url":"injectables/GameFacade.html","title":"injectable - GameFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action$\n                            \n                            \n                                eventDie$\n                            \n                            \n                                nextProductionDie$\n                            \n                            \n                                phase$\n                            \n                            \n                                player$\n                            \n                            \n                                productionDie$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                setAction\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                throwDice\n                            \n                            \n                                throwEventDie\n                            \n                            \n                                throwProductionDie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:35\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAction\n                        \n                    \n                \n            \n            \n                \nsetAction(action: ActionName | undefined)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionName | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEventDie\n                        \n                    \n                \n            \n            \n                \nthrowEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProductionDie\n                        \n                    \n                \n            \n            \n                \nthrowProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameAction))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameEventDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextProductionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phase$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePhase))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePlayer))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameProductionDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  productionDie$ = this.store.pipe(select(GameSelectors.getGameProductionDie));\n  nextProductionDie$ = this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  );\n  eventDie$ = this.store.pipe(select(GameSelectors.getGameEventDie));\n  phase$ = this.store.pipe(select(GameSelectors.getGamePhase));\n  player$ = this.store.pipe(select(GameSelectors.getGamePlayer));\n  action$ = this.store.pipe(select(GameSelectors.getGameAction));\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(GameActions.initNewGame());\n  }\n\n  throwDice(): void {\n    this.store.dispatch(GameActions.throwDice());\n  }\n\n  throwProductionDie(): void {\n    this.store.dispatch(GameActions.throwProductionDie());\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.store.dispatch(GameActions.setNextProductionDie({ value }));\n  }\n\n  throwEventDie(): void {\n    this.store.dispatch(GameActions.throwEventDie());\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.store.dispatch(GameActions.setPhase({ phase }));\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.store.dispatch(GameActions.setPlayer({ player }));\n  }\n\n  setAction(action: ActionName | undefined): void {\n    this.store.dispatch(GameActions.setAction({ action }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamePartialState.html":{"url":"interfaces/GamePartialState.html","title":"interface - GamePartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamePartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            GAME_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        GAME_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GAME_FEATURE_KEY:         GameState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameRulesService.html":{"url":"injectables/GameRulesService.html","title":"injectable - GameRulesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameRulesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/feature-engine/src/lib/game-rules.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auspiciousYear$\n                            \n                            \n                                countAndSteal$\n                            \n                            \n                                event$\n                            \n                            \n                                festival$\n                            \n                            \n                                gameEnded$\n                            \n                            \n                                increaseResourcesForAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                resetEventsPileOnFestival$\n                            \n                            \n                                selectFirstEvent$\n                            \n                            \n                                thieves$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawCardFromStockToHand\n                            \n                            \n                                drawFirstCardsFromStockToHand\n                            \n                            \n                                getVictoryPointsForDomain\n                            \n                            \n                                initNewGame\n                            \n                            \n                                putBackFromDomainToStockPile\n                            \n                            \n                                putBackFromHandToStockPile\n                            \n                            \n                                putLandsPileCardInSlot\n                            \n                            \n                                throwDice\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useResourcesToPutFaceUpPileCardInSlot\n                            \n                            \n                                useResourcesToPutHandCardInSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, faceUpPilesCards: FaceUpPilesCardsFacade, landsPileCards: LandsPileCardsFacade, stockPilesCards: StockPilesCardsFacade, eventsPileCards: EventsPileCardsFacade, discardPileCards: DiscardPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        faceUpPilesCards\n                                                  \n                                                        \n                                                                        FaceUpPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCards\n                                                  \n                                                        \n                                                                        StockPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discardPileCards\n                                                  \n                                                        \n                                                                        DiscardPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drawCardFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawCardFromStockToHand(pileId: string, cardId: string, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawFirstCardsFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawFirstCardsFromStockToHand(pileId: string, cardsCount: number, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardsCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromDomainToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromDomainToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:376\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromHandToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromHandToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:355\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLandsPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nputLandsPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:424\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutFaceUpPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutFaceUpPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutHandCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutHandCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndSteal$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        event$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(filter((die) => die === EventValue.Event))\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        festival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameEnded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPileOnFestival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thieves$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  DiscardPileCardsFacade,\n  DomainsCardsFacade,\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  FaceUpPilesCardsFacade,\n  GameFacade,\n  HandsCardsFacade,\n  LandsPileCardsFacade,\n  StockPilesCardsFacade,\n} from '@taormina/data-access-game';\nimport {\n  actionCards,\n  eventCards,\n  ID_FACE_UP_HAMLET,\n  ID_FACE_UP_TOWN,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  DiceValue,\n  EventName,\n  EventValue,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n  RowValue,\n} from '@taormina/shared-models';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameRulesService {\n  gameEnded$ = new Subject();\n\n  event$ = this.game.eventDie$.pipe(filter((die) => die === EventValue.Event));\n\n  thieves$ = this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  );\n\n  countAndSteal$ = this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  );\n\n  selectFirstEvent$ = this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  );\n\n  auspiciousYear$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  );\n\n  festival$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  );\n\n  increaseResourcesForDie$ = this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  );\n\n  increaseResourcesForAuspiciousYear$ = this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  );\n\n  resetEventsPileOnFestival$ = this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  );\n\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private faceUpPilesCards: FaceUpPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private stockPilesCards: StockPilesCardsFacade,\n    private eventsPileCards: EventsPileCardsFacade,\n    private discardPileCards: DiscardPileCardsFacade\n  ) {}\n\n  initNewGame(): void {\n    this.gameEnded$.next();\n    this.countAndSteal$.subscribe();\n    this.selectFirstEvent$.subscribe();\n    this.increaseResourcesForDie$.subscribe();\n    this.increaseResourcesForAuspiciousYear$.subscribe();\n    this.resetEventsPileOnFestival$.subscribe();\n\n    this.game.initNewGame();\n    this.domainsCards.initNewGame();\n    this.handsCards.initNewGame();\n    this.faceUpPilesCards.initNewGame();\n    this.landsPileCards.initNewGame();\n    this.stockPilesCards.initNewGame();\n    this.eventsPileCards.initNewGame();\n    this.discardPileCards.initNewGame();\n  }\n\n  getVictoryPointsForDomain(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getCardsVictoryPointsForDomain(domainId),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Trade),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Strength),\n    ]).pipe(\n      map(\n        ([\n          cardsVictoryPoints,\n          tradeMasteryDomainId,\n          strengthMasteryDomainId,\n        ]) => {\n          return (\n            cardsVictoryPoints +\n            (tradeMasteryDomainId === domainId ? 1 : 0) +\n            (strengthMasteryDomainId === domainId ? 1 : 0)\n          );\n        }\n      )\n    );\n  }\n\n  drawFirstCardsFromStockToHand(\n    pileId: string,\n    cardsCount: number,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          return stockPilesCards\n            .filter((stockPileCard) => stockPileCard.pileId === pileId)\n            .slice(0, cardsCount)\n            .map((stockPileCard) => {\n              return {\n                type: stockPileCard.cardType,\n                id: stockPileCard.cardId,\n              };\n            });\n        })\n      )\n      .subscribe((cards) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, cards);\n        this.handsCards.addCardsToHand(handId, cards);\n      });\n  }\n\n  drawCardFromStockToHand(\n    pileId: string,\n    cardId: string,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          const card = stockPilesCards.find(\n            (stockPileCard) =>\n              stockPileCard.pileId === pileId && stockPileCard.cardId === cardId\n          );\n          if (card === undefined) {\n            throw new Error(\n              `Something went wrong, card shouldn't be undefined at this point.`\n            );\n          }\n          return {\n            type: card.cardType,\n            id: card.cardId,\n          };\n        })\n      )\n      .subscribe((card) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, [card]);\n        this.handsCards.addCardsToHand(handId, [card]);\n      });\n  }\n\n  throwDice(): void {\n    this.game.throwEventDie();\n    this.game.phase$.pipe(take(1)).subscribe((phase) => {\n      if (phase !== GamePhase.InitialThrow) {\n        this.game.throwProductionDie();\n      }\n    });\n  }\n\n  useResourcesToPutFaceUpPileCardInSlot(): void {\n    this.domainsCards.useLockedResources();\n\n    combineLatest([\n      this.faceUpPilesCards.selectedFaceUpPilesCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([faceUpPileCard, domainCards]) => {\n          if (faceUpPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.faceUpPilesCards.removeFaceUpPileCard(faceUpPileCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            AGGLOMERATION_CARD_INTERFACE_NAME,\n            faceUpPileCard.cardId\n          );\n\n          if (faceUpPileCard.pileId === ID_FACE_UP_TOWN) {\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Lower\n            );\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Upper\n            );\n          } else {\n            const availableCol =\n              domainCard.col  {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.handsCards.removeHandCard(handCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            DEVELOPMENT_CARD_INTERFACE_NAME,\n            handCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putLandsPileCardInSlot(): void {\n    combineLatest([\n      this.landsPileCards.selectedLandsPileCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([landsPileCard, domainCards]) => {\n          if (landsPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.landsPileCards.removeLandsPileCard(landsPileCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            LAND_CARD_INTERFACE_NAME,\n            landsPileCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromHandToStockPile(pileId: string): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type: handCard.cardType,\n              id: handCard.cardId,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromDomainToStockPile(pileId: string): void {\n    this.domainsCards.selectedDomainsCards$\n      .pipe(\n        take(1),\n        map((domainCards) => {\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in pile if no card or more than one card selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n          const type = domainCard.cardType;\n          if (type !== DEVELOPMENT_CARD_INTERFACE_NAME) {\n            throw new Error(\n              `Can't put back card of type other than development.`\n            );\n          }\n          const id = domainCard.cardId;\n          if (id === undefined) {\n            throw new Error(\n              `Something went wrong, cardId shouldn't be undefined at this point.`\n            );\n          }\n\n          this.domainsCards.removeDomainCard(domainCard.id);\n          this.domainsCards.createAvailableDomainCard(\n            domainCard.domainId,\n            AVAILABLE_DEVELOPMENT_SLOT,\n            domainCard.col,\n            domainCard.row\n          );\n          this.domainsCards.clearDomainCardSelection();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type,\n              id,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  useActionCard(): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          if (\n            handCard.cardType !== ACTION_CARD_INTERFACE_NAME ||\n            handCard.cardId === undefined\n          ) {\n            throw new Error(`Can't use card other than action.`);\n          }\n          const action = actionCards.get(handCard.cardId);\n          if (action === undefined) {\n            throw new Error(\n              `Something went wrong, action shouldn't be undefined at this point.`\n            );\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.game.setAction(action.name);\n          this.discardPileCards.addCardToDiscardPile({\n            type: handCard.cardType,\n            id: handCard.cardId,\n          });\n        })\n      )\n      .subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            eventDie\n                                        \n                                \n                                \n                                        \n                                            nextProductionDie\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            productionDie\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionName | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventDie:         EventValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextProductionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextProductionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         GamePhase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GamePhase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hand.html":{"url":"interfaces/Hand.html","title":"interface - Hand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/hand.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Hands\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Hands\n */\nexport interface Hand extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createHand = (id: string, color: DomainColor): Hand => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HandComponent.html":{"url":"components/HandComponent.html","title":"component - HandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/hand/hand/hand.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-hand\n            \n\n            \n                styleUrls\n                ./hand.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hand.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ACTION_CARD_INTERFACE_NAME\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionCard\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getHand\n                            \n                            \n                                getHandsCards\n                            \n                            \n                                selectHandCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                handId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(handsCards: HandsCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        handId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActionCard\n                        \n                    \n                \n            \n            \n                \ngetActionCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHand\n                        \n                    \n                \n            \n            \n                \ngetHand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Hand | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandsCards\n                        \n                    \n                \n            \n            \n                \ngetHandsCards(handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ACTION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ACTION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { HandsCardsEntity, HandsCardsFacade } from '@taormina/data-access-game';\nimport {\n  actionCards,\n  developmentCards,\n  hands,\n} from '@taormina/shared-constants';\nimport {\n  ActionCard,\n  ACTION_CARD_INTERFACE_NAME,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Hand,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-hand',\n  templateUrl: './hand.component.html',\n  styleUrls: ['./hand.component.css'],\n})\nexport class HandComponent {\n  @Input() handId!: string;\n\n  ACTION_CARD_INTERFACE_NAME = ACTION_CARD_INTERFACE_NAME;\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n\n  constructor(private handsCards: HandsCardsFacade) {}\n\n  getHand(): Hand | undefined {\n    return hands.get(this.handId);\n  }\n\n  getHandsCards(handId: string): Observable {\n    return this.handsCards.allHandsCards$.pipe(\n      map((handsCards) =>\n        handsCards.filter((handCard) => handCard.handId === handId)\n      )\n    );\n  }\n\n  getActionCard(cardId: string): ActionCard | undefined {\n    return actionCards.get(cardId);\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.handsCards.selectHandCard(pivotId);\n  }\n}\n\n    \n\n    \n        \n  {{ hand.color }}\n  \n    \n      \n        {{ action.name }}\n        Select\n      \n    \n    \n      \n        {{ development.name }}\n        Select\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./hand.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ hand.color }}                    {{ action.name }}        Select                            {{ development.name }}        Select            '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HandModule.html":{"url":"modules/HandModule.html","title":"module - HandModule","body":"\n                   \n\n\n\n\n    Modules\n    HandModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HandModule\n\n\n\ncluster_HandModule_exports\n\n\n\ncluster_HandModule_declarations\n\n\n\n\nHandComponent\n\nHandComponent\n\n\n\nHandModule\n\nHandModule\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/hand/hand.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HandComponent } from './hand/hand.component';\n\n@NgModule({\n  declarations: [HandComponent],\n  imports: [CommonModule],\n  exports: [HandComponent],\n})\nexport class HandModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsEffects.html":{"url":"injectables/HandsCardsEffects.html","title":"injectable - HandsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { createHandsCardsEntity } from './hands-cards.models';\n\n@Injectable()\nexport class HandsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsEntity.html":{"url":"interfaces/HandsCardsEntity.html","title":"interface - HandsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'HandsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            handId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\n/**\n * Interface for the 'HandsCards' data\n */\nexport interface HandsCardsEntity {\n  id: string; // Primary ID\n  handId: string; // Foreign key to hands\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createHandsCardsEntity = (\n  id: string,\n  handId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): HandsCardsEntity => ({\n  id,\n  handId,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsFacade.html":{"url":"injectables/HandsCardsFacade.html","title":"injectable - HandsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allHandsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedHandsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToHand\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeHandCard\n                            \n                            \n                                selectHandCard\n                            \n                            \n                                unselectHandCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToHand\n                        \n                    \n                \n            \n            \n                \naddCardsToHand(handId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeHandCard\n                        \n                    \n                \n            \n            \n                \nremoveHandCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unselectHandCard\n                        \n                    \n                \n            \n            \n                \nunselectHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport * as HandsCardsFeature from './hands-cards.reducer';\nimport * as HandsCardsSelectors from './hands-cards.selectors';\n\n@Injectable()\nexport class HandsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded));\n  allHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  );\n  selectedHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  );\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsSavedGame());\n  }\n\n  addCardsToHand(\n    handId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(HandsCardsActions.addCardsToHand({ handId, cards }));\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.store.dispatch(HandsCardsActions.selectHandCard({ id: pivotId }));\n  }\n\n  unselectHandCard(): void {\n    this.store.dispatch(HandsCardsActions.unselectHandCard());\n  }\n\n  removeHandCard(id: string): void {\n    this.store.dispatch(HandsCardsActions.removeHandCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsPartialState.html":{"url":"interfaces/HandsCardsPartialState.html","title":"interface - HandsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            HANDS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HANDS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HANDS_CARDS_FEATURE_KEY:         HandsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsState.html":{"url":"interfaces/HandsCardsState.html","title":"interface - HandsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasColor.html":{"url":"interfaces/HasColor.html","title":"interface - HasColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/color.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DomainColor } from '../types/domain';\n\nexport interface HasColor {\n  color?: DomainColor;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasCost.html":{"url":"interfaces/HasCost.html","title":"interface - HasCost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasCost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/cost.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResourceType } from '../types/resources';\n\nexport interface HasCost {\n  cost: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasId.html":{"url":"interfaces/HasId.html","title":"interface - HasId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasId {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasName.html":{"url":"interfaces/HasName.html","title":"interface - HasName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/name.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasName {\n  name: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isHasName(obj: any): obj is HasName {\n  return typeof obj.name === 'string';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasRules.html":{"url":"interfaces/HasRules.html","title":"interface - HasRules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasRules\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/rules.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasRules {\n  ruleIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasVictoryPoints.html":{"url":"interfaces/HasVictoryPoints.html","title":"interface - HasVictoryPoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasVictoryPoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/victory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVictoryPoints {\n  victoryPoints?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandCard.html":{"url":"interfaces/LandCard.html","title":"interface - LandCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/land.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Land Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            die\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        die\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        die:         ResourceValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         LandType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { ResourceValue } from '../types/dice';\nimport { DomainColor } from '../types/domain';\nimport { LandType } from '../types/resources';\n\nexport const LAND_CARD_INTERFACE_NAME = 'LandCard';\n\nexport const AVAILABLE_LAND_SLOT = 'AvailableLandSlot';\n\n/**\n * Interface for the Land Cards\n */\nexport interface LandCard extends HasId, HasColor, CanPrint {\n  interface: typeof LAND_CARD_INTERFACE_NAME;\n  id: string;\n  type: LandType;\n  die: ResourceValue;\n  color?: DomainColor;\n}\n\nexport const createLandCard = (\n  id: string,\n  type: LandType,\n  die: ResourceValue,\n  color?: DomainColor\n): LandCard => ({\n  interface: LAND_CARD_INTERFACE_NAME,\n  id,\n  type,\n  die,\n  color,\n  print: (): string => `${type}`,\n});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isLandCard(obj: any): obj is LandCard {\n  return obj !== undefined && obj.interface === LAND_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsEffects.html":{"url":"injectables/LandsPileCardsEffects.html","title":"injectable - LandsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { createInitialLandsPileCards } from './lands-pile-cards.models';\n\n@Injectable()\nexport class LandsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsEntity.html":{"url":"interfaces/LandsPileCardsEntity.html","title":"interface - LandsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'LandsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { landCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'LandsPileCards' data\n */\nexport interface LandsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createLandsPileCardsEntity = (\n  id: string,\n  cardId: string\n): LandsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialLandsPileCards = (): LandsPileCardsEntity[] => {\n  const shuffled = arrayShuffle(Array.from(landCards.keys()));\n  const entities = shuffled.map((cardId) =>\n    createLandsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsFacade.html":{"url":"injectables/LandsPileCardsFacade.html","title":"injectable - LandsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allLandsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedLandsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeLandsPileCard\n                            \n                            \n                                selectLandsPileCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLandsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveLandsPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLandsPileCard\n                        \n                    \n                \n            \n            \n                \nselectLandsPileCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport * as LandsPileCardsFeature from './lands-pile-cards.reducer';\nimport * as LandsPileCardsSelectors from './lands-pile-cards.selectors';\n\n@Injectable()\nexport class LandsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  );\n  allLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  );\n  selectedLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsSavedGame());\n  }\n\n  selectLandsPileCard(pivotId: string): void {\n    this.store.dispatch(\n      LandsPileCardsActions.selectLandsPileCard({ id: pivotId })\n    );\n  }\n\n  removeLandsPileCard(id: string): void {\n    this.store.dispatch(LandsPileCardsActions.removeLandsPileCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsPartialState.html":{"url":"interfaces/LandsPileCardsPartialState.html","title":"interface - LandsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            LANDS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LANDS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LANDS_PILE_CARDS_FEATURE_KEY:         LandsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsState.html":{"url":"interfaces/LandsPileCardsState.html","title":"interface - LandsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhasesComponent.html":{"url":"components/PhasesComponent.html","title":"component - PhasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/phases/phases/phases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-phases\n            \n\n            \n                styleUrls\n                ./phases.component.css\n            \n\n\n\n            \n                templateUrl\n                ./phases.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DomainColor\n                            \n                            \n                                GamePhase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAction\n                            \n                            \n                                getEventCard\n                            \n                            \n                                getPhase\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getSelectedEventsPileCard\n                            \n                            \n                                removeSelectedEventsPileCard\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                unsetAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, eventsPileCards: EventsPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAction\n                        \n                    \n                \n            \n            \n                \ngetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventCard\n                        \n                    \n                \n            \n            \n                \ngetEventCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetAction\n                        \n                    \n                \n            \n            \n                \nunsetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DomainColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DomainColor\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GamePhase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GamePhase\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  GameFacade,\n} from '@taormina/data-access-game';\nimport { eventCards } from '@taormina/shared-constants';\nimport {\n  ActionName,\n  DomainColor,\n  EventCard,\n  GamePhase,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'taormina-phases',\n  templateUrl: './phases.component.html',\n  styleUrls: ['./phases.component.css'],\n})\nexport class PhasesComponent {\n  GamePhase = GamePhase;\n  DomainColor = DomainColor;\n\n  constructor(\n    private game: GameFacade,\n    private eventsPileCards: EventsPileCardsFacade\n  ) {}\n\n  getPhase(): Observable {\n    return this.game.phase$;\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.game.setPhase(phase);\n  }\n\n  getPlayer(): Observable {\n    return this.game.player$;\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.game.setPlayer(player);\n  }\n\n  getEventCard(cardId: string): EventCard | undefined {\n    return eventCards.get(cardId);\n  }\n\n  getSelectedEventsPileCard(): Observable {\n    return this.eventsPileCards.selectedEventsPileCards$;\n  }\n\n  removeSelectedEventsPileCard(): void {\n    this.eventsPileCards.removeSelected();\n  }\n\n  getAction(): Observable {\n    return this.game.action$;\n  }\n\n  unsetAction(): void {\n    this.game.setAction(undefined);\n  }\n}\n\n    \n\n    \n        \n  \n    Current Player:\n    \n      \n        {{ player.key }}\n    \n  \n  \n    Current Phase:\n    \n      \n        {{ phase.key }}\n    \n  \n  \n    Current event:\n    \n      \n        {{ event.name }}\n      \n    \n    \n    \n      Finish event\n    \n  \n  \n    Current action:\n    \n      {{ action }}\n    \n    \n    Finish action\n  \n\n\n    \n\n    \n                \n                    ./phases.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Current Player:                  {{ player.key }}            Current Phase:                  {{ phase.key }}            Current event:                  {{ event.name }}                        Finish event            Current action:          {{ action }}            Finish action  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhasesModule.html":{"url":"modules/PhasesModule.html","title":"module - PhasesModule","body":"\n                   \n\n\n\n\n    Modules\n    PhasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PhasesModule_declarations\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\n\n\nPhasesModule\n\nPhasesModule\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/phases/phases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PhasesComponent } from './phases/phases.component';\n\n@NgModule({\n  declarations: [PhasesComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [PhasesComponent],\n})\nexport class PhasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PilesModule.html":{"url":"modules/PilesModule.html","title":"module - PilesModule","body":"\n                   \n\n\n\n\n    Modules\n    PilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_declarations\n\n\n\ncluster_PilesModule_exports\n\n\n\n\nPilesComponent\n\nPilesComponent\n\n\n\nPilesModule\n\nPilesModule\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/piles/piles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PilesComponent } from './piles/piles.component';\n\n@NgModule({\n  declarations: [PilesComponent],\n  imports: [CommonModule],\n  exports: [PilesComponent],\n})\nexport class PilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsEffects.html":{"url":"injectables/StockPilesCardsEffects.html","title":"injectable - StockPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                removeCards$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, stockPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { forkJoin } from 'rxjs';\nimport { map, mergeMap, take } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport {\n  createInitialStockPilesCards,\n  createStockPilesCardsEntity,\n  StockPilesCardsEntity,\n} from './stock-piles-cards.models';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  removeCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private stockPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsEntity.html":{"url":"interfaces/StockPilesCardsEntity.html","title":"interface - StockPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'StockPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  actionCards,\n  developmentCards,\n  stockPiles,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'StockPilesCards' data\n */\nexport interface StockPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string; // Foreign key to stock piles\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createStockPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): StockPilesCardsEntity =>\n  ({\n    id,\n    pileId,\n    cardType,\n    cardId,\n  } as StockPilesCardsEntity);\n\nexport const createInitialStockPilesCards = (): StockPilesCardsEntity[] => {\n  const stockPilesCards: StockPilesCardsEntity[] = [];\n\n  const shuffledCards = arrayShuffle([\n    ...Array.from(actionCards.values()),\n    ...Array.from(developmentCards.values()),\n  ]);\n\n  for (let i = 0; i = shuffledCards.length) break;\n      stockPilesCards.push(\n        createStockPilesCardsEntity(\n          uuidv4(),\n          stockPiles[i],\n          shuffledCards[cardIndex].interface,\n          shuffledCards[cardIndex].id\n        )\n      );\n    }\n  }\n\n  return stockPilesCards;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsFacade.html":{"url":"injectables/StockPilesCardsFacade.html","title":"injectable - StockPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allStockPilesCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedStockPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToStockPileBottom\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeCardsFromStockPileTop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToStockPileBottom\n                        \n                    \n                \n            \n            \n                \naddCardsToStockPileBottom(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:36\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCardsFromStockPileTop\n                        \n                    \n                \n            \n            \n                \nremoveCardsFromStockPileTop(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  );\n  allStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  );\n  selectedStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsSavedGame());\n  }\n\n  removeCardsFromStockPileTop(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.removeCardsFromStockPileTop({ pileId, cards })\n    );\n  }\n\n  addCardsToStockPileBottom(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.addCardsToStockPileBottom({ pileId, cards })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsPartialState.html":{"url":"interfaces/StockPilesCardsPartialState.html","title":"interface - StockPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            STOCK_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        STOCK_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STOCK_PILES_CARDS_FEATURE_KEY:         StockPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsState.html":{"url":"interfaces/StockPilesCardsState.html","title":"interface - StockPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiCardModule.html":{"url":"modules/UiCardModule.html","title":"module - UiCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UiCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_declarations\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardComponent->UiCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/ui-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CardComponent } from './card/card.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CardComponent],\n})\nexport class UiCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 14.0.4\n        \n            @angular/cdk : 14.0.4\n        \n            @angular/common : 14.0.4\n        \n            @angular/compiler : 14.0.4\n        \n            @angular/core : 14.0.4\n        \n            @angular/forms : 14.0.4\n        \n            @angular/material : 14.0.4\n        \n            @angular/platform-browser : 14.0.4\n        \n            @angular/platform-browser-dynamic : 14.0.4\n        \n            @angular/router : 14.0.4\n        \n            @ngrx/effects : 14.0.1\n        \n            @ngrx/entity : 14.0.1\n        \n            @ngrx/router-store : 14.0.1\n        \n            @ngrx/store : 14.0.1\n        \n            @nrwl/angular : 14.4.0\n        \n            @storybook/core-server : 6.4.22\n        \n            array-shuffle : ^2.0.0\n        \n            eslint-plugin-html : ^6.1.1\n        \n            rxjs : ^6.6.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : 0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionName   (libs/.../action.ts)\n                        \n                        \n                            AgglomerationType   (libs/.../agglomeration.ts)\n                        \n                        \n                            BuildingName   (libs/.../development.ts)\n                        \n                        \n                            DevelopmentType   (libs/.../development.ts)\n                        \n                        \n                            DiceId   (libs/.../dice.ts)\n                        \n                        \n                            DomainColor   (libs/.../domain.ts)\n                        \n                        \n                            EventName   (libs/.../event.ts)\n                        \n                        \n                            EventValue   (libs/.../dice.ts)\n                        \n                        \n                            GamePhase   (libs/.../phase.ts)\n                        \n                        \n                            LandType   (libs/.../resources.ts)\n                        \n                        \n                            MasteryPointsType   (libs/.../development.ts)\n                        \n                        \n                            ResourceType   (libs/.../resources.ts)\n                        \n                        \n                            RowValue   (libs/.../domain.ts)\n                        \n                        \n                            WarriorName   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/action.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionName\n                    \n                \n                        \n                            \n                                 Soothsayer\n                            \n                        \n                        \n                            \n                                Value : Soothsayer\n                            \n                        \n                        \n                            \n                                 Pathfinder\n                            \n                        \n                        \n                            \n                                Value : Pathfinder\n                            \n                        \n                        \n                            \n                                 Goldsmith\n                            \n                        \n                        \n                            \n                                Value : Goldsmith\n                            \n                        \n                        \n                            \n                                 TradeRoute\n                            \n                        \n                        \n                            \n                                Value : Trade route\n                            \n                        \n                        \n                            \n                                 Relocation\n                            \n                        \n                        \n                            \n                                Value : Relocation\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/agglomeration.ts\n    \n        \n            \n                \n                    \n                        \n                        AgglomerationType\n                    \n                \n                        \n                            \n                                 Road\n                            \n                        \n                        \n                            \n                                Value : ROAD\n                            \n                        \n                        \n                            \n                                 Hamlet\n                            \n                        \n                        \n                            \n                                Value : HAMLET\n                            \n                        \n                        \n                            \n                                 Town\n                            \n                        \n                        \n                            \n                                Value : TOWN\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/development.ts\n    \n        \n            \n                \n                    \n                        \n                        BuildingName\n                    \n                \n                        \n                            \n                                 Brickyard\n                            \n                        \n                        \n                            \n                                Value : Brickyard\n                            \n                        \n                        \n                            \n                                 Sawmill\n                            \n                        \n                        \n                            \n                                Value : Sawmill\n                            \n                        \n                        \n                            \n                                 Mill\n                            \n                        \n                        \n                            \n                                Value : Mill\n                            \n                        \n                        \n                            \n                                 Foundry\n                            \n                        \n                        \n                            \n                                Value : Foundry\n                            \n                        \n                        \n                            \n                                 Weaving\n                            \n                        \n                        \n                            \n                                Value : Weaving\n                            \n                        \n                        \n                            \n                                 Warehouse\n                            \n                        \n                        \n                            \n                                Value : Warehouse\n                            \n                        \n                        \n                            \n                                 Market\n                            \n                        \n                        \n                            \n                                Value : Market\n                            \n                        \n                        \n                            \n                                 TollBridge\n                            \n                        \n                        \n                            \n                                Value : Toll bridge\n                            \n                        \n                        \n                            \n                                 Monastery\n                            \n                        \n                        \n                            \n                                Value : Monastery\n                            \n                        \n                        \n                            \n                                 CommunityCenter\n                            \n                        \n                        \n                            \n                                Value : Community center\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DevelopmentType\n                    \n                \n                        \n                            \n                                 Building\n                            \n                        \n                        \n                            \n                                Value : BUILDING\n                            \n                        \n                        \n                            \n                                 Ship\n                            \n                        \n                        \n                            \n                                Value : SHIP\n                            \n                        \n                        \n                            \n                                 Warrior\n                            \n                        \n                        \n                            \n                                Value : WARRIOR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MasteryPointsType\n                    \n                \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Strength\n                            \n                        \n                        \n                            \n                                Value : STRENGTH\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        WarriorName\n                    \n                \n                        \n                            \n                                 Altair\n                            \n                        \n                        \n                            \n                                Value : Altaïr\n                            \n                        \n                        \n                            \n                                 Ezio\n                            \n                        \n                        \n                            \n                                Value : Ezio\n                            \n                        \n                        \n                            \n                                 Evie\n                            \n                        \n                        \n                            \n                                Value : Evie\n                            \n                        \n                        \n                            \n                                 Jacob\n                            \n                        \n                        \n                            \n                                Value : Jacob\n                            \n                        \n                        \n                            \n                                 Kassandra\n                            \n                        \n                        \n                            \n                                Value : Kassandra\n                            \n                        \n                        \n                            \n                                 Alexios\n                            \n                        \n                        \n                            \n                                Value : Alexios\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/dice.ts\n    \n        \n            \n                \n                    \n                        \n                        DiceId\n                    \n                \n                        \n                            \n                                 Resource\n                            \n                        \n                        \n                            \n                                Value : RESOURCE\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventValue\n                    \n                \n                        \n                            \n                                 Thieves\n                            \n                        \n                        \n                            \n                                Value : THIEVES\n                            \n                        \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Celebration\n                            \n                        \n                        \n                            \n                                Value : CELEBRATION\n                            \n                        \n                        \n                            \n                                 Harvest\n                            \n                        \n                        \n                            \n                                Value : HARVEST\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/domain.ts\n    \n        \n            \n                \n                    \n                        \n                        DomainColor\n                    \n                \n                        \n                            \n                                 Red\n                            \n                        \n                        \n                            \n                                Value : RED\n                            \n                        \n                        \n                            \n                                 Blue\n                            \n                        \n                        \n                            \n                                Value : BLUE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RowValue\n                    \n                \n                        \n                            \n                                 Lower\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Middle\n                            \n                        \n                        \n                            \n                                 Up\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Upper\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/event.ts\n    \n        \n            \n                \n                    \n                        \n                        EventName\n                    \n                \n                        \n                            \n                                 Festival\n                            \n                        \n                        \n                            \n                                Value : Festival\n                            \n                        \n                        \n                            \n                                 AuspiciousYear\n                            \n                        \n                        \n                            \n                                Value : Auspicious year\n                            \n                        \n                        \n                            \n                                 Hawker\n                            \n                        \n                        \n                            \n                                Value : Hawker\n                            \n                        \n                        \n                            \n                                 Invention\n                            \n                        \n                        \n                            \n                                Value : Invention\n                            \n                        \n                        \n                            \n                                 MerchantShipTravel\n                            \n                        \n                        \n                            \n                                Value : Merchant ship travel\n                            \n                        \n                        \n                            \n                                 Quarrel\n                            \n                        \n                        \n                            \n                                Value : Quarrel\n                            \n                        \n                        \n                            \n                                 SiblingRivalry\n                            \n                        \n                        \n                            \n                                Value : Sibling rivalry\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/phase.ts\n    \n        \n            \n                \n                    \n                        \n                        GamePhase\n                    \n                \n                        \n                            \n                                 InitialThrow\n                            \n                        \n                        \n                            \n                                Value : INITIAL THROW\n                            \n                        \n                        \n                            \n                                 InitialDraw\n                            \n                        \n                        \n                            \n                                Value : INITIAL DRAW\n                            \n                        \n                        \n                            \n                                 LoopThrow\n                            \n                        \n                        \n                            \n                                Value : LOOP THROW\n                            \n                        \n                        \n                            \n                                 LoopActions\n                            \n                        \n                        \n                            \n                                Value : LOOP ACTIONS\n                            \n                        \n                        \n                            \n                                 LoopDraw\n                            \n                        \n                        \n                            \n                                Value : LOOP DRAW\n                            \n                        \n                        \n                            \n                                 LoopExchange\n                            \n                        \n                        \n                            \n                                Value : LOOP EXCHANGE\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/resources.ts\n    \n        \n            \n                \n                    \n                        \n                        LandType\n                    \n                \n                        \n                            \n                                 ClayPit\n                            \n                        \n                        \n                            \n                                Value : CLAYPIT\n                            \n                        \n                        \n                            \n                                 Forest\n                            \n                        \n                        \n                            \n                                Value : FOREST\n                            \n                        \n                        \n                            \n                                 GoldMine\n                            \n                        \n                        \n                            \n                                Value : GOLDMINE\n                            \n                        \n                        \n                            \n                                 Field\n                            \n                        \n                        \n                            \n                                Value : FIELD\n                            \n                        \n                        \n                            \n                                 StoneQuarry\n                            \n                        \n                        \n                            \n                                Value : STONEQUARRY\n                            \n                        \n                        \n                            \n                                 Pasture\n                            \n                        \n                        \n                            \n                                Value : PASTURE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 Clay\n                            \n                        \n                        \n                            \n                                Value : CLAY\n                            \n                        \n                        \n                            \n                                 Wood\n                            \n                        \n                        \n                            \n                                Value : WOOD\n                            \n                        \n                        \n                            \n                                 Gold\n                            \n                        \n                        \n                            \n                                Value : GOLD\n                            \n                        \n                        \n                            \n                                 Wheat\n                            \n                        \n                        \n                            \n                                Value : WHEAT\n                            \n                        \n                        \n                            \n                                 Stone\n                            \n                        \n                        \n                            \n                                Value : STONE\n                            \n                        \n                        \n                            \n                                 Wool\n                            \n                        \n                        \n                            \n                                Value : WOOL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBuilding   (libs/.../development.ts)\n                        \n                        \n                            createHamlet   (libs/.../agglomeration.ts)\n                        \n                        \n                            createRoad   (libs/.../agglomeration.ts)\n                        \n                        \n                            createShip   (libs/.../development.ts)\n                        \n                        \n                            createTown   (libs/.../agglomeration.ts)\n                        \n                        \n                            createWarrior   (libs/.../development.ts)\n                        \n                        \n                            eventFromValue   (libs/.../dice.ts)\n                        \n                        \n                            getRandomEventDieValue   (libs/.../dice.ts)\n                        \n                        \n                            getRandomProductionDieValue   (libs/.../dice.ts)\n                        \n                        \n                            isActionCard   (libs/.../action.ts)\n                        \n                        \n                            isAgglomerationCard   (libs/.../agglomeration.ts)\n                        \n                        \n                            isCanPrint   (libs/.../print.ts)\n                        \n                        \n                            isDevelopmentCard   (libs/.../development.ts)\n                        \n                        \n                            isEventCard   (libs/.../event.ts)\n                        \n                        \n                            isHasName   (libs/.../name.ts)\n                        \n                        \n                            isLandCard   (libs/.../land.ts)\n                        \n                        \n                            mapDomainColorToDomainId   (libs/.../domain.ts)\n                        \n                        \n                            mapDomainColorToHandId   (libs/.../domain.ts)\n                        \n                        \n                            randomDiceValue   (libs/.../dice.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/structures/development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBuilding\n                        \n                    \n                \n            \n            \n                \ncreateBuilding(id: string, name: BuildingName, cost: Map, tradePoints?: number, givesKnowledge?: boolean, noDuplicate?: boolean, victoryPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                BuildingName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tradePoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    givesKnowledge\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    noDuplicate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    victoryPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShip\n                        \n                    \n                \n            \n            \n                \ncreateShip(id: string, type: s/ShipName.html\" target=\"_self\">ShipNameKey)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                ShipNameKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWarrior\n                        \n                    \n                \n            \n            \n                \ncreateWarrior(id: string, name: WarriorName, cost: Map, strengthPoints?: number, celebrationPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                WarriorName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    strengthPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    celebrationPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDevelopmentCard\n                        \n                    \n                \n            \n            \n                \nisDevelopmentCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/agglomeration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createHamlet\n                        \n                    \n                \n            \n            \n                \ncreateHamlet(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRoad\n                        \n                    \n                \n            \n            \n                \ncreateRoad(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTown\n                        \n                    \n                \n            \n            \n                \ncreateTown(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAgglomerationCard\n                        \n                    \n                \n            \n            \n                \nisAgglomerationCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/dice.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eventFromValue\n                        \n                    \n                \n            \n            \n                \neventFromValue(value: DiceValue)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomEventDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomEventDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         EventValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomProductionDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomProductionDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         ResourceValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomDiceValue\n                        \n                    \n                \n            \n            \n                \nrandomDiceValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         DiceValue\n\n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isActionCard\n                        \n                    \n                \n            \n            \n                \nisActionCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/print.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCanPrint\n                        \n                    \n                \n            \n            \n                \nisCanPrint(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CanPrint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/event.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isEventCard\n                        \n                    \n                \n            \n            \n                \nisEventCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isHasName\n                        \n                    \n                \n            \n            \n                \nisHasName(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HasName\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/land.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLandCard\n                        \n                    \n                \n            \n            \n                \nisLandCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/domain.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapDomainColorToDomainId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToDomainId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDomainColorToHandId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToHandId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nTaormina\nThis project was generated using Nx.\nEnvironment\nGlobally installed packages\n├── @angular/cli@14.0.5\n├── corepack@0.10.0\n├── npm@8.13.2\n├── nx@14.4.2\n└── updtr@4.0.0Node version\nv16.16.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Laure-Hélène Bruneton\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataAccessGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DomainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureEngineModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HandModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_declarations\n\n\n\ncluster_DiceModule_exports\n\n\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_declarations\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\ncluster_HandModule\n\n\n\ncluster_HandModule_declarations\n\n\n\ncluster_HandModule_exports\n\n\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_declarations\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_declarations\n\n\n\ncluster_PilesModule_exports\n\n\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_declarations\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nFaceUpPilesCardsFacade\n\nFaceUpPilesCardsFacade\n\nDataAccessGameModule -->\n\nFaceUpPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiceComponent\n\nDiceComponent\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDomainComponent\n\nDomainComponent\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\n\n\nHandComponent\n\nHandComponent\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPilesComponent\n\nPilesComponent\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardComponent->UiCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0-0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs\n\n\n\nFilename\nline #\nTODO\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n615\ntest actions order: event > steal on thieves > production\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n71\nthrow error instead of filtering out undefined ?\n\n\n\nFIXMEs\n\n\n\nFilename\nline #\nFIXME\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n933\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n984\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1052\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1169\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1214\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1319\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1360\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1448\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1550\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1601\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1705\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1753\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1801\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1849\nshould test error thrown\n\n\n\nESLINT-DISABLE-NEXT-LINEs\n\n\n\nFilename\nline #\nESLINT-DISABLE-NEXT-LINE\n\n\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n812\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n818\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/shared-models/src/lib/interfaces/name.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/interfaces/print.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/action.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/agglomeration.ts\n95\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/development.ts\n111\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/event.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/land.ts\n37\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/types/dice.ts\n1\nno-magic-numbers\n\n\nlibs/shared-models/src/lib/types/resources.ts\n19\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n99\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n103\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n125\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n129\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n191\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n195\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n229\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n233\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n258\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n262\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n294\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n298\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n333\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n337\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n371\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n375\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n400\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n404\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n913\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n917\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n951\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n955\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n980\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n984\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1076\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1134\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n87\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n106\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n220\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n243\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n394\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n73\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n85\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n138\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n155\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n165\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n175\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n185\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n195\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n234\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n379\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n391\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n395\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n404\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n413\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n424\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n431\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n443\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n452\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.effects.spec.ts\n75\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.effects.spec.ts\n103\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.effects.spec.ts\n107\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.selectors.ts\n50\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.selectors.ts\n61\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/face-up-piles-cards/face-up-piles-cards.selectors.ts\n67\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/game/game.effects.ts\n32\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.spec.ts\n85\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.selectors.ts\n49\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n58\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n71\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n97\nindent\n\n\n\nPRETTIER-IGNOREs\n\n\n\nFilename\nline #\nPRETTIER-IGNORE\n\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n159\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n161\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n332\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DiceValue   (libs/.../dice.ts)\n                        \n                        \n                            DomainCardType   (libs/.../domain.ts)\n                        \n                        \n                            ResourceCount   (libs/.../resources.ts)\n                        \n                        \n                            ResourceValue   (libs/.../dice.ts)\n                        \n                        \n                            ShipNameKey   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/dice.ts\n    \n    \n        \n            \n                \n                    \n                    DiceValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceValue\n                \n            \n            \n                \n                            DiceValue\n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/domain.ts\n    \n    \n        \n            \n                \n                    \n                    DomainCardType\n                \n            \n            \n                \n                         |  |  |  |  | \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/resources.ts\n    \n    \n        \n            \n                \n                    \n                    ResourceCount\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/development.ts\n    \n    \n        \n            \n                \n                    \n                    ShipNameKey\n                \n            \n            \n                \n                            ResourceType | \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
