var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCard.html",[0,0.128,1,3.045]],["body/interfaces/ActionCard.html",[0,0.251,1,5.674,2,0.97,3,0.155,4,0.155,5,0.155,6,1.935,7,3.986,8,2.235,9,2.172,10,2.866,11,2.244,12,4.313,13,0.323,14,0.584,15,1.901,16,1.901,17,6.294,18,1.258,19,0.534,20,0.012,21,4.975,22,0.428,23,3.429,24,4.133,25,3.986,26,4.714,27,4.401,28,5.03,29,0.278,30,1.591,31,4.114,32,2.633,33,5.03,34,1.694,35,1.694,36,1.75,37,1.809,38,2.418,39,2.418,40,2.893,41,2.893,42,4.401,43,3.709,44,1.241,45,1.167,46,3.429,47,0.009,48,0.009]],["title/components/ActionsComponent.html",[49,1.603,50,2.003]],["body/components/ActionsComponent.html",[3,0.064,4,0.064,5,0.064,9,1.656,10,2.186,13,0.134,16,1.023,19,0.157,20,0.012,22,0.331,29,0.077,31,1.855,44,1.793,47,0.005,48,0.005,49,1.644,50,2.364,51,1.772,52,1.143,53,1.2,54,1.143,55,1.143,56,3.111,57,1.825,58,1.143,59,3.859,60,3.686,61,1.697,62,1.948,63,4.273,64,1.855,65,3.386,66,1.259,67,4.918,68,4.918,69,4.918,70,4.303,71,4.918,72,4.918,73,4.918,74,4.918,75,4.918,76,4.918,77,4.918,78,4.918,79,4.918,80,4.918,81,4.918,82,3.898,83,4.918,84,4.918,85,4.303,86,4.918,87,1.104,88,1.525,89,2.829,90,2.589,91,2.98,92,2.589,93,2.98,94,2.739,95,3.152,96,2.739,97,3.152,98,3.124,99,3.152,100,2.164,101,2.086,102,0.619,103,0.415,104,2.237,105,2.086,106,2.772,107,2.895,108,2.086,109,2.086,110,4.603,111,2.086,112,2.086,113,2.086,114,2.086,115,2.086,116,2.086,117,2.086,118,2.086,119,2.086,120,2.086,121,2.086,122,2.086,123,2.086,124,2.086,125,2.086,126,2.086,127,2.086,128,0.402,129,1.264,130,1.422,131,1.337,132,1.422,133,1.264,134,0.31,135,1.422,136,1.525,137,2.308,138,2.308,139,2.308,140,2.475,141,2.237,142,1.2,143,2.308,144,0.659,145,0.803,146,1.045,147,2.308,148,0.831,149,0.964,150,0.415,151,2.39,152,2.962,153,3.386,154,2.051,155,3.386,156,2.086,157,1.825,158,5.067,159,5.067,160,5.792,161,3.949,162,5.792,163,2.086,164,3.386,165,1.825,166,3.386,167,2.086,168,2.086,169,2.086,170,2.086,171,1.825,172,1.825,173,1.825,174,2.086,175,4.918,176,4.074,177,1.768,178,6.189,179,2.657,180,3.386,181,4.646,182,6.751,183,7.043,184,7.043,185,7.043,186,4.646,187,5.037,188,2.475,189,5.067,190,1.697,191,2.962,192,5.037,193,2.962,194,2.683,195,2.962,196,3.386,197,1.948,198,3.386,199,3.386,200,2.475,201,1.525,202,1.422,203,1.653,204,1.422,205,1.525,206,1.143,207,1.772,208,1.697,209,1.143,210,2.695,211,1.143,212,1.143,213,1.003,214,1.143,215,1.003,216,1.143,217,1.003,218,1.143,219,1.003,220,1.143,221,1.003,222,1.143,223,1.003,224,1.143,225,1.003,226,1.143,227,1.003,228,1.143,229,1.045,230,0.726,231,1.143,232,1.143]],["title/modules/ActionsModule.html",[233,1.924,234,2.84]],["body/modules/ActionsModule.html",[3,0.18,4,0.18,5,0.18,20,0.012,22,0.435,29,0.217,47,0.01,48,0.01,50,4.134,56,2.332,128,1.129,150,1.165,234,5.69,235,2.417,236,3.035,237,5.123,238,5.123,239,5.123,240,3.274,241,2.704,242,2.417,243,5.855,244,3.711,245,3.711,246,3.274,247,3.408,248,2.704,249,5.855,250,2.704]],["title/interfaces/AgglomerationCard.html",[0,0.128,251,2.84]],["body/interfaces/AgglomerationCard.html",[0,0.236,2,0.736,3,0.117,4,0.117,5,0.117,6,1.469,8,1.697,10,2.382,11,1.865,12,3.751,13,0.245,14,0.485,15,1.894,18,1.182,19,0.611,20,0.012,22,0.439,23,2.604,29,0.285,30,1.528,32,1.999,34,2.381,35,2.085,36,1.329,37,1.373,38,1.836,39,1.836,40,2.197,41,3.862,43,3.083,44,1.656,45,0.886,46,2.604,47,0.007,48,0.007,103,1.336,137,4.577,138,2.604,148,2.999,176,3.435,251,5.239,252,3.027,253,4.891,254,5.358,255,5.358,256,3.851,257,5.604,258,3.679,259,3.435,260,2.792,261,3.918,262,3.341,263,3.654,264,3.341,265,3.918,266,3.341,267,3.819,268,2.604,269,2.604,270,2.792,271,3.819,272,6.714,273,3.027,274,4.907,275,4.907,276,3.341,277,3.562,278,4.689,279,4.217,280,5.36,281,4.526,282,3.341,283,2.314,284,4.689,285,3.341,286,3.341,287,5.36,288,3.341,289,3.341,290,3.819,291,3.341,292,3.341,293,3.341]],["title/injectables/AgglomerationPilesCardsEffects.html",[294,0.967,295,3.302]],["body/injectables/AgglomerationPilesCardsEffects.html",[3,0.104,4,0.104,5,0.104,9,1.653,13,0.217,14,0.444,15,1.175,16,0.808,19,0.254,20,0.012,22,0.44,29,0.125,44,1.835,45,1.139,47,0.007,48,0.007,61,3.526,87,1.601,94,4.069,100,1.771,102,1.002,103,0.672,128,0.651,134,1.003,146,1.693,148,2.304,149,1.56,150,0.672,151,2.026,176,4.51,177,1.765,179,1.889,230,2.794,277,2.824,294,1.139,295,3.89,296,1.299,297,1.26,298,4.322,299,4.086,300,1.943,301,2.387,302,2.57,303,5.06,304,1.943,305,5.783,306,2.821,307,3.377,308,1.886,309,1.663,310,4.177,311,4.047,312,4.909,313,3.89,314,5.06,315,3.377,316,4.909,317,3.504,318,2.974,319,2.974,320,2.974,321,2.974,322,2.974,323,2.974,324,2.974,325,2.974,326,2.974,327,3.89,328,2.974,329,2.974,330,2.513,331,2.974,332,3.89,333,3.377,334,3.326,335,4.295,336,4.295,337,4.909,338,2.671,339,4.909,340,4.295,341,5.554,342,5.031,343,2.57,344,3.89,345,4.909,346,4.295,347,3.588,348,3.89,349,4.295,350,4.295,351,3.89,352,4.295,353,3.377,354,1.693,355,0.833,356,1.943,357,2.955,358,2.955,359,2.469,360,2.469,361,0.942,362,1.175,363,2.955,364,1.624,365,2.955,366,1.768]],["title/interfaces/AgglomerationPilesCardsEntity.html",[0,0.128,130,2.84]],["body/interfaces/AgglomerationPilesCardsEntity.html",[0,0.209,2,0.885,3,0.141,4,0.141,5,0.141,8,2.04,13,0.294,14,0.55,15,1.891,18,1.279,19,0.511,20,0.012,22,0.389,29,0.252,30,1.86,44,1.132,45,1.581,47,0.008,48,0.008,94,3.894,130,4.942,134,0.682,144,1.919,145,1.766,147,4.643,230,2.114,251,4.643,257,3.637,282,4.016,288,4.016,292,4.016,297,0.858,298,2.942,299,2.781,314,4.016,367,2.781,368,3.681,369,3.443,370,4.965,371,4.016,372,4.815,373,5.315,374,4.815,375,2.206,376,2.515,377,3.972,378,2.402,379,2.515,380,7.249,381,6.075,382,6.81,383,6.81,384,6.81,385,6.81,386,6.81,387,6.075,388,6.075]],["title/injectables/AgglomerationPilesCardsFacade.html",[95,2.67,294,0.967]],["body/injectables/AgglomerationPilesCardsFacade.html",[3,0.107,4,0.107,5,0.107,9,1.687,13,0.223,14,0.453,15,1.199,16,1.406,18,1.093,19,0.441,20,0.012,22,0.405,29,0.129,47,0.007,48,0.007,66,1.863,87,1.634,95,3.211,100,2.189,102,1.743,103,1.169,106,2.313,107,2.986,128,0.67,134,1.18,144,1.097,150,0.691,151,1.434,176,3.766,190,2.511,230,2.952,294,1.163,296,1.336,297,1.482,298,5.085,299,4.807,301,2.655,302,2.858,306,3.157,308,2.317,309,2.044,335,3.039,338,1.604,355,0.857,360,2.539,361,0.969,363,3.039,364,1.67,365,3.039,366,1.818,370,3.211,372,4.657,373,3.039,374,2.753,375,1.67,389,2.104,390,5.876,391,5.876,392,5.876,393,5.876,394,2.044,395,5.876,396,5.01,397,5.01,398,1.998,399,3.039,400,3.039,401,2.881,402,2.881,403,2.622,404,2.622,405,2.881,406,2.881,407,3.039,408,5.01,409,2.753,410,5.01,411,3.039,412,4.086,413,5.01,414,2.539,415,6.216,416,5.01,417,3.473,418,5.01,419,3.039,420,5.01,421,2.368,422,5.01,423,3.039,424,2.881,425,2.881,426,1.583,427,2.745,428,2.881,429,2.881,430,2.881,431,2.881,432,2.881,433,5.01,434,3.473,435,4.385,436,3.473,437,3.473,438,2.753]],["title/interfaces/AgglomerationPilesCardsPartialState.html",[0,0.128,439,3.302]],["body/interfaces/AgglomerationPilesCardsPartialState.html",[0,0.181,2,0.846,3,0.135,4,0.135,5,0.135,11,1.526,13,0.281,14,0.603,15,1.593,18,0.906,19,0.329,20,0.012,22,0.406,29,0.283,30,1.756,34,1.477,35,1.477,36,1.526,37,1.577,45,1.368,47,0.008,48,0.008,94,4.267,130,2.99,134,0.652,176,3.778,230,2.476,297,0.82,298,2.811,299,2.657,313,3.476,327,3.476,330,2.321,332,3.476,348,3.476,351,3.476,355,1.082,360,3.206,361,1.223,362,1.526,394,2.476,426,2.682,438,3.476,439,4.671,440,1.877,441,6.497,442,5.885,443,2.619,444,2.619,445,2.619,446,1.877,447,2.433,448,2.958,449,3.163,450,2.433,451,3.163,452,1.81,453,2.296,454,2.403,455,3.837,456,5.157,457,3.837,458,2.026,459,2.026,460,2.109,461,3.163,462,3.837,463,3.837,464,3.837,465,5.157,466,2.523,467,3.837,468,3.837]],["title/interfaces/AgglomerationPilesCardsState.html",[0,0.128,442,3.302]],["body/interfaces/AgglomerationPilesCardsState.html",[0,0.176,2,0.809,3,0.129,4,0.129,5,0.129,11,1.989,13,0.269,14,0.589,15,1.557,18,1.16,19,0.525,20,0.012,22,0.399,29,0.28,30,1.724,34,1.412,35,1.412,36,1.459,37,1.508,45,1.327,47,0.008,48,0.008,94,4.169,103,1.39,130,2.859,134,0.623,176,3.664,230,2.431,297,0.783,298,2.687,299,2.54,313,3.323,327,3.323,330,2.279,332,3.323,348,3.323,351,3.323,355,1.034,360,3.065,361,1.169,362,1.459,394,2.687,426,2.669,438,3.323,439,3.323,440,1.795,441,5.002,442,5.537,443,2.541,444,2.541,445,2.891,446,1.795,447,2.36,448,3.353,449,3.432,450,3.115,451,3.432,452,1.731,453,2.195,454,2.297,455,3.668,456,5.002,457,3.668,458,1.937,459,1.937,460,2.016,461,3.105,462,3.668,463,3.668,464,3.668,465,5.002,466,2.447,467,3.668,468,3.668]],["title/components/AppComponent.html",[49,1.603,213,2.003]],["body/components/AppComponent.html",[3,0.148,4,0.193,5,0.148,13,0.309,16,1.669,19,0.362,20,0.012,22,0.358,29,0.179,35,1.624,47,0.009,48,0.009,49,2.684,50,2.318,51,3.285,52,2.642,53,2.774,54,2.642,55,2.642,58,2.642,59,4.592,60,4.387,62,3.61,64,3.439,66,2.333,87,1.573,98,4.587,99,4.736,100,1.75,102,1.431,103,0.959,104,3.285,106,1.734,107,2.5,128,0.93,135,3.288,136,3.525,150,0.959,179,1.855,206,2.642,207,3.285,208,3.145,209,2.642,210,4.049,211,2.642,212,2.642,213,3.552,214,2.642,215,2.318,216,2.642,217,2.318,218,2.642,219,2.318,220,2.642,221,2.318,222,2.642,223,2.318,224,2.642,225,2.318,226,2.642,227,2.318,228,2.642,229,2.417,230,1.678,231,2.642,232,2.642,277,3.61,346,4.219,469,5.529,470,4.822,471,5.491,472,6.977,473,6.276,474,7.389,475,4.822,476,4.822,477,4.822,478,2.774,479,4.822,480,4.822]],["title/modules/AppModule.html",[233,1.924,481,3.045]],["body/modules/AppModule.html",[3,0.148,4,0.148,5,0.148,20,0.012,22,0.472,29,0.178,47,0.009,48,0.009,104,3.281,128,0.928,133,2.916,134,0.716,135,3.282,150,0.958,213,4.028,235,1.987,236,2.683,240,2.895,241,2.223,242,1.987,244,3.281,246,2.895,250,2.895,354,2.412,355,1.546,466,2.683,469,3.815,481,6.156,482,4.211,483,4.211,484,4.211,485,4.211,486,6.068,487,5.352,488,5.352,489,4.813,490,6.268,491,6.268,492,5.484,493,3.815,494,6.268,495,4.813,496,4.211,497,4.211,498,4.813,499,4.813,500,4.813,501,4.813,502,4.813,503,4.813,504,6.268,505,4.813,506,4.813,507,4.813,508,4.813,509,4.813,510,4.211]],["title/components/BoardComponent.html",[49,1.603,215,2.003]],["body/components/BoardComponent.html",[3,0.146,4,0.146,5,0.146,13,0.304,14,0.562,16,1.485,20,0.012,22,0.354,29,0.176,47,0.009,48,0.009,49,2.662,50,2.28,51,3.249,52,2.599,53,2.728,54,2.599,55,2.599,56,3.035,58,2.599,59,4.581,60,4.376,62,3.57,64,3.401,100,2.047,128,0.914,144,1.498,150,0.943,179,1.824,206,2.599,207,3.249,208,3.111,209,2.599,210,4.023,211,2.599,212,2.599,213,2.28,214,2.599,215,3.529,216,2.599,217,2.28,218,2.599,219,2.28,220,2.599,221,2.28,222,2.599,223,2.28,224,2.599,225,2.28,226,2.599,227,2.28,228,2.599,229,2.377,230,1.65,231,2.599,232,2.599,308,2.394,309,2.112,375,2.28,511,4.742,512,6.208,513,6.92,514,6.208,515,6.84,516,6.84,517,7.818,518,7.818,519,4.742,520,4.742,521,4.742,522,4.742]],["title/modules/BoardModule.html",[233,1.924,523,2.84]],["body/modules/BoardModule.html",[3,0.152,4,0.152,5,0.152,20,0.012,22,0.47,29,0.183,47,0.009,48,0.009,56,1.965,128,0.951,150,0.982,215,4.042,234,5.388,235,2.036,236,2.726,240,2.942,241,2.279,242,2.036,244,3.334,245,3.334,246,2.942,247,3.062,248,2.279,250,2.942,523,5.871,524,4.316,525,4.316,526,4.316,527,4.316,528,5.388,529,5.388,530,5.388,531,5.388,532,5.388,533,4.933,534,4.933,535,4.933,536,4.933,537,4.933,538,4.933,539,4.933,540,4.933]],["title/interfaces/CanPrint.html",[0,0.128,263,2.84]],["body/interfaces/CanPrint.html",[0,0.186,2,1.169,3,0.186,4,0.186,5,0.186,6,2.785,13,0.389,18,1.113,20,0.012,29,0.268,32,3.173,34,2.042,35,2.042,36,2.109,37,2.18,38,2.914,39,2.914,40,3.487,41,4.164,43,3.487,44,1.496,47,0.01,48,0.01,66,2.692,100,1.691,106,2.18,263,5.277,273,6.354,541,4.804,542,6.062,543,5.304,544,6.062]],["title/components/CardBackComponent.html",[49,1.603,217,2.003]],["body/components/CardBackComponent.html",[3,0.123,4,0.123,5,0.123,13,0.256,14,0.5,16,1.321,18,0.974,19,0.513,20,0.012,22,0.315,29,0.148,47,0.008,48,0.008,49,2.437,50,1.916,51,2.89,52,2.183,53,2.292,54,2.183,55,2.183,58,2.183,59,4.456,60,4.257,62,3.175,64,3.025,100,1.907,128,0.768,144,1.259,150,0.793,179,3.033,200,4.035,202,3.764,204,2.717,206,2.183,207,2.89,208,2.767,209,2.183,210,3.747,211,2.183,212,2.183,213,1.916,214,2.183,215,1.916,216,2.183,217,3.288,218,2.183,219,1.916,220,2.183,221,1.916,222,2.183,223,1.916,224,2.183,225,1.916,226,2.183,227,1.916,228,2.183,229,1.997,230,1.386,231,2.183,232,2.183,253,3.838,258,2.183,308,1.8,309,1.588,545,5.249,546,6.283,547,6.326,548,3.985,549,5.542,550,6.335,551,5.521,552,4.351,553,6.5,554,4.375,555,6.839,556,6.335,557,3.486,558,3.985,559,3.985,560,3.985,561,3.985,562,5.02,563,3.486,564,3.985,565,3.158,566,6.839,567,5.521,568,6.335,569,5.521,570,3.985,571,5.521,572,5.521,573,5.983,574,5.521,575,5.521,576,5.521,577,5.521,578,3.985,579,3.985,580,3.985,581,3.985,582,3.985,583,3.985,584,5.521,585,3.985,586,3.985,587,3.985,588,5.983,589,3.985,590,3.486,591,3.486,592,3.486,593,3.985,594,3.985,595,3.985,596,3.985,597,3.985,598,5.521,599,3.985,600,3.985]],["title/modules/CardBackModule.html",[233,1.924,601,2.84]],["body/modules/CardBackModule.html",[3,0.178,4,0.178,5,0.178,20,0.012,22,0.433,29,0.215,47,0.01,48,0.01,128,1.119,150,1.154,179,2.232,217,4.13,235,2.395,236,3.018,240,3.257,241,2.68,242,2.395,244,3.69,245,3.69,246,3.257,247,3.389,248,2.68,250,2.68,545,4.241,546,5.076,547,5.587,601,5.68,602,5.076,603,5.076,604,5.076,605,5.802,606,5.802]],["title/components/CardComponent.html",[49,1.603,219,2.003]],["body/components/CardComponent.html",[3,0.165,4,0.165,5,0.165,16,1.61,20,0.012,22,0.307,29,0.199,47,0.009,48,0.009,49,2.825,50,2.585,51,3.521,52,2.946,54,2.946,55,2.946,58,2.946,59,4.662,60,4.453,64,3.686,128,1.037,150,1.07,179,3.047,206,2.946,207,3.521,208,3.372,209,2.946,210,4.216,211,2.946,212,2.946,213,2.585,214,2.946,215,2.585,216,2.946,217,2.585,218,2.946,219,3.698,220,2.946,221,2.585,222,2.946,223,2.585,224,2.946,225,2.585,226,2.946,227,2.585,228,2.946,229,2.695,230,1.871,231,2.946,232,2.946,545,3.931,607,5.377,608,6.728,609,6.728]],["title/interfaces/Chainable.html",[0,0.128,610,3.045]],["body/interfaces/Chainable.html",[0,0.159,2,0.999,3,0.159,4,0.159,5,0.159,13,0.332,16,1.24,18,1.231,19,0.389,20,0.012,34,1.745,35,1.745,36,1.803,37,1.863,38,2.491,39,2.491,47,0.009,48,0.009,66,2.444,100,1.445,102,1.538,103,1.308,106,1.863,107,2.618,208,2.597,469,5.209,610,4.804,611,6.573,612,4.534,613,6.315,614,5.75,615,6.854,616,4.534,617,6.315,618,4.534,619,4.534,620,4.534,621,3.533,622,3.533,623,4.534,624,6.854,625,4.534,626,4.534,627,4.534,628,4.534,629,4.534,630,5.75,631,4.804,632,6.315,633,4.534,634,4.534,635,4.534,636,4.534,637,4.534,638,4.534,639,4.534]],["title/interfaces/Chainable-1.html",[0,0.107,279,1.999,610,2.541]],["body/interfaces/Chainable-1.html",[0,0.159,2,0.999,3,0.159,4,0.159,5,0.159,13,0.332,16,1.24,18,1.231,19,0.389,20,0.012,34,1.745,35,1.745,36,1.803,37,1.863,38,2.491,39,2.491,47,0.009,48,0.009,66,2.444,100,1.445,102,1.538,103,1.308,106,1.863,107,2.618,179,2.529,208,2.597,610,4.804,612,4.534,613,6.315,614,5.75,615,6.854,616,4.534,617,6.315,618,4.534,619,4.534,620,4.534,621,3.533,622,3.533,623,4.534,624,6.854,625,4.534,626,4.534,627,4.534,628,4.534,629,4.534,630,5.75,631,4.804,632,6.315,633,4.534,634,4.534,635,4.534,636,4.534,637,4.534,638,4.534,639,4.534,640,6.573]],["title/modules/DataAccessGameModule.html",[233,1.924,487,2.84]],["body/modules/DataAccessGameModule.html",[3,0.11,4,0.11,5,0.11,20,0.012,22,0.486,29,0.133,47,0.007,48,0.007,89,4.128,91,4.348,93,4.348,95,4.6,97,4.6,128,0.69,134,0.761,150,0.712,177,2.98,230,2.776,235,1.477,236,2.191,240,2.365,241,1.653,242,1.477,246,2.365,247,2.461,248,1.653,250,1.653,295,2.837,297,0.669,299,3.621,354,1.794,355,0.883,364,3.552,487,5.695,496,3.132,497,3.132,510,4.479,641,3.132,642,3.132,643,4.893,644,4.6,645,4.893,646,3.58,647,3.132,648,2.837,649,5.976,650,3.621,651,7.39,652,7.39,653,3.58,654,2.837,655,5.976,656,3.621,657,3.58,658,2.837,659,5.976,660,3.621,661,3.58,662,5.976,663,3.58,664,2.837,665,3.58,666,3.58,667,3.58,668,3.58,669,2.837,670,5.976,671,3.83,672,3.58,673,2.837,674,5.976,675,3.83,676,3.58,677,2.837,678,5.976,679,3.621,680,3.58,681,3.58,682,3.58,683,3.58,684,7.39,685,3.58,686,3.58,687,3.58,688,3.58,689,3.58,690,3.58,691,3.58,692,3.58,693,3.58,694,3.58,695,3.58,696,3.58,697,3.58,698,3.58,699,3.58,700,3.58,701,3.58,702,3.58,703,3.58,704,3.58,705,3.58]],["title/interfaces/DevelopmentCard.html",[0,0.128,706,2.67]],["body/interfaces/DevelopmentCard.html",[0,0.23,2,0.667,3,0.106,4,0.106,5,0.106,6,1.331,8,1.537,10,2.22,11,1.738,12,3.552,13,0.222,14,0.452,15,1.877,16,1.93,18,1.206,19,0.625,20,0.012,22,0.405,23,2.358,24,3.201,25,2.741,29,0.271,30,1.805,32,1.811,34,1.165,35,1.165,36,1.204,37,1.244,38,1.663,39,1.663,40,1.99,41,3.693,43,2.873,44,1.584,45,1.159,46,2.358,47,0.007,48,0.007,103,1.604,139,2.358,141,3.36,148,2.914,187,3.958,254,5.662,255,5.186,258,4.475,261,3.651,262,3.026,265,3.651,266,3.026,269,2.358,270,2.528,277,2.873,278,3.026,279,3.372,286,3.026,343,1.811,450,3.238,706,4.799,707,2.741,708,6.207,709,6.207,710,6.42,711,6.207,712,6.207,713,6.207,714,5.957,715,3.958,716,3.459,717,3.958,718,3.958,719,3.459,720,3.459,721,6.42,722,3.026,723,4.37,724,3.459,725,3.459,726,3.459,727,3.459,728,3.459,729,3.026,730,3.459,731,3.026,732,3.026,733,5.129,734,3.459,735,3.459,736,3.026,737,4.37,738,3.459,739,3.459,740,3.459,741,3.026]],["title/components/DiceComponent.html",[49,1.603,221,2.003]],["body/components/DiceComponent.html",[3,0.112,4,0.112,5,0.112,13,0.234,14,0.47,16,1.576,19,0.39,20,0.012,22,0.412,29,0.136,36,1.808,44,1.625,47,0.007,48,0.007,49,2.326,50,1.758,51,2.72,52,2.003,53,2.103,54,2.003,55,2.003,56,3.08,58,2.003,59,4.389,60,4.193,62,2.989,64,2.848,66,1.932,87,1.192,88,2.672,89,3.787,98,4.42,99,4.22,100,2.119,102,1.542,103,1.034,104,3.165,106,2.599,107,2.623,110,4.447,128,0.705,133,2.215,134,0.544,135,2.493,136,2.672,142,2.103,144,1.155,145,1.407,146,1.832,148,2.07,149,1.689,150,0.727,151,1.509,152,3.199,154,3.663,179,1.407,200,3.799,201,2.672,202,2.493,203,2.897,204,2.493,205,2.672,206,2.003,207,2.72,208,2.604,209,2.003,210,3.608,211,2.003,212,2.003,213,1.758,214,2.003,215,1.758,216,2.003,217,1.758,218,2.003,219,1.758,220,2.003,221,3.165,222,2.003,223,1.758,224,2.003,225,1.758,226,2.003,227,1.758,228,2.003,229,1.832,230,1.272,231,2.003,232,2.003,308,1.192,309,2.186,343,2.72,478,2.103,742,3.656,743,5.197,744,6.046,745,5.197,746,7.228,747,6.585,748,6.585,749,6.585,750,6.585,751,4.547,752,6.585,753,5.197,754,3.656,755,3.656,756,3.656,757,3.656,758,4.547,759,3.989,760,3.656,761,3.656,762,2.343,763,2.672,764,3.656,765,3.656,766,3.656,767,3.656,768,3.656,769,3.656,770,5.761,771,3.799,772,3.149]],["title/modules/DiceModule.html",[233,1.924,528,2.84]],["body/modules/DiceModule.html",[3,0.178,4,0.178,5,0.178,20,0.012,22,0.45,29,0.214,47,0.01,48,0.01,56,2.301,128,1.114,150,1.149,221,4.127,235,2.384,236,3.01,240,3.248,241,2.668,242,2.384,244,3.68,245,3.68,246,3.248,247,3.38,248,2.668,250,2.668,528,5.675,773,5.054,774,5.054,775,5.054,776,5.776,777,5.776,778,6.152,779,4.578]],["title/injectables/DiscardPileCardsEffects.html",[294,0.967,648,3.302]],["body/injectables/DiscardPileCardsEffects.html",[3,0.121,4,0.121,5,0.121,9,1.84,13,0.252,14,0.494,16,0.939,19,0.295,20,0.012,22,0.433,29,0.145,44,1.824,47,0.008,48,0.008,61,3.706,87,1.28,100,1.895,102,1.164,103,0.781,128,0.757,134,1.062,148,2.845,149,1.812,150,0.781,177,2.917,179,2.101,294,1.268,296,1.51,297,1.334,300,2.257,301,2.593,302,2.792,304,2.257,308,2.049,309,1.807,310,4.363,311,4.253,317,3.806,318,3.309,319,3.309,320,3.309,321,3.309,322,3.309,323,3.309,324,3.309,325,3.309,326,3.309,328,3.309,329,3.309,330,2.411,331,3.309,334,2.257,354,1.967,356,2.257,361,1.094,362,1.365,376,2.15,377,2.15,378,2.054,478,2.257,648,4.329,650,4.327,780,4.577,781,6.283,782,3.924,783,5.462,784,5.462,785,4.329,786,4.329,787,5.462,788,5.462,789,4.329,790,3.433,791,5.462,792,4.329,793,4.632,794,3.11,795,5.462,796,4.329,797,4.329,798,3.433,799,2.868,800,3.992,801,3.433]],["title/interfaces/DiscardPileCardsEntity.html",[0,0.128,802,3.045]],["body/interfaces/DiscardPileCardsEntity.html",[0,0.214,2,1.099,3,0.175,4,0.175,5,0.175,8,2.533,13,0.365,14,0.631,15,1.986,18,1.318,19,0.566,20,0.012,29,0.258,30,1.406,47,0.01,48,0.01,134,0.847,177,2.508,297,1.065,367,3.453,368,3.453,369,3.642,379,3.123,650,3.453,780,3.653,793,3.886,801,4.986,802,5.508,803,4.965]],["title/injectables/DiscardPileCardsFacade.html",[294,0.967,643,2.84]],["body/injectables/DiscardPileCardsFacade.html",[3,0.118,4,0.118,5,0.118,9,1.813,13,0.246,14,0.487,15,0.919,16,1.288,18,0.591,19,0.532,20,0.012,22,0.419,29,0.142,31,2.949,32,2.817,47,0.007,48,0.007,66,2.001,87,1.755,100,2.146,102,1.597,103,1.071,106,2.234,107,2.926,128,0.741,134,1.163,141,2.817,144,1.214,145,1.478,150,0.764,151,1.586,177,3.037,179,2.071,190,2.697,294,1.249,296,1.478,297,1.461,301,2.778,302,2.991,306,3.264,308,2.195,309,1.936,338,1.775,355,0.948,361,1.071,364,1.847,366,2.011,389,2.328,394,2.161,398,2.21,401,3.096,402,3.096,403,2.817,404,2.817,405,3.096,406,3.096,412,4.426,424,3.096,425,3.096,426,1.7,427,2.949,428,3.096,429,3.096,430,3.096,431,3.096,432,3.096,435,2.619,557,4.709,643,3.669,650,4.738,780,5.012,799,2.808,800,4.541,804,6.212,805,6.212,806,6.212,807,5.382,808,3.842,809,5.382,810,3.842,811,3.842,812,3.842,813,5.382,814,3.361,815,5.382,816,3.045,817,5.382,818,3.045,819,5.382,820,3.842,821,3.842,822,3.842,823,3.842,824,3.842,825,3.842]],["title/interfaces/DiscardPileCardsPartialState.html",[0,0.128,826,3.302]],["body/interfaces/DiscardPileCardsPartialState.html",[0,0.186,2,0.877,3,0.14,4,0.14,5,0.14,11,1.583,13,0.292,14,0.614,18,0.929,19,0.342,20,0.012,22,0.412,29,0.286,30,1.782,34,1.532,35,1.532,36,1.583,37,1.636,45,1.056,47,0.008,48,0.008,134,0.676,177,2.597,297,0.85,330,2.356,355,1.122,361,1.269,362,1.583,394,2.513,426,2.653,440,1.947,443,2.684,444,2.684,445,2.684,446,1.947,447,2.493,448,2.022,449,3.21,450,2.493,451,3.21,452,1.878,453,2.381,454,2.493,458,2.101,459,2.101,460,2.187,461,3.21,466,2.585,650,2.756,780,2.916,789,3.605,792,3.605,793,4.623,796,3.605,797,3.605,799,3.325,800,4.415,802,3.325,826,4.786,827,6.577,828,5.958,829,3.98,830,5.284,831,3.98,832,3.98,833,3.98,834,3.98,835,5.284,836,3.98,837,3.98,838,3.98]],["title/interfaces/DiscardPileCardsState.html",[0,0.128,828,3.302]],["body/interfaces/DiscardPileCardsState.html",[0,0.18,2,0.837,3,0.133,4,0.133,5,0.133,11,2.037,13,0.278,14,0.599,18,1.172,19,0.532,20,0.012,22,0.405,29,0.283,30,1.749,34,1.462,35,1.462,36,1.511,37,1.561,45,1.008,47,0.008,48,0.008,103,1.41,134,0.646,177,2.549,297,0.811,330,2.312,355,1.071,361,1.211,362,1.511,394,2.711,426,2.637,440,1.858,443,2.601,444,2.601,445,2.943,446,1.858,447,2.416,448,3.15,449,3.463,450,3.147,451,3.463,452,1.792,453,2.273,454,2.379,458,2.005,459,2.005,460,2.087,461,3.15,466,2.506,650,2.63,780,2.783,789,3.441,792,3.441,793,4.516,796,3.441,797,3.441,799,3.174,800,4.279,802,3.174,826,3.441,827,5.122,828,5.618,829,3.799,830,5.122,831,3.799,832,3.799,833,3.799,834,3.799,835,5.122,836,3.799,837,3.799,838,3.799]],["title/interfaces/Domain.html",[0,0.128,186,3.045]],["body/interfaces/Domain.html",[0,0.232,2,1.101,3,0.176,4,0.176,5,0.176,6,2.198,8,2.538,11,2.43,13,0.366,14,0.632,15,1.987,18,1.208,19,0.524,20,0.012,22,0.399,29,0.259,30,1.409,47,0.01,48,0.01,186,5.514,197,4.017,253,4.968,256,4.039,259,4.834,260,4.175,268,3.894,379,3.13,839,5.712,840,5.712]],["title/components/DomainComponent.html",[49,1.603,223,2.003]],["body/components/DomainComponent.html",[3,0.061,4,0.061,5,0.061,13,0.127,14,0.294,16,1.813,18,1.287,19,0.564,20,0.012,22,0.341,29,0.074,44,1.743,45,1.447,47,0.004,48,0.004,49,1.588,50,0.953,51,1.701,52,2.261,53,1.141,54,1.087,55,1.087,56,3.15,58,1.087,59,3.803,60,3.633,62,1.869,64,1.78,66,1.208,87,1.06,90,1.968,91,2.891,98,3.017,99,3.058,100,2.195,102,2.207,103,1.48,104,1.038,106,2.675,107,2.483,110,4.278,128,0.382,129,1.201,133,1.201,134,0.295,135,1.352,136,1.45,137,3.856,138,3.856,139,3.856,140,4.134,141,2.96,143,3.856,144,1.026,145,0.763,146,0.994,148,0.79,149,0.916,150,0.395,151,1.341,158,1.735,179,0.763,181,2.375,186,3.849,194,2.575,197,1.141,201,1.45,202,1.352,204,1.352,205,1.45,206,1.087,207,1.701,208,1.628,209,1.087,210,2.615,211,1.087,212,1.087,213,0.953,214,1.087,215,0.953,216,1.087,217,0.953,218,1.087,219,0.953,220,1.087,221,0.953,222,1.087,223,2.294,224,1.087,225,0.953,226,1.087,227,0.953,228,1.087,229,0.994,230,0.69,231,1.087,232,1.087,251,2.814,308,1.844,309,1.627,338,2.879,369,1.834,371,1.735,375,0.953,453,1.701,554,2.575,562,2.575,565,2.575,588,1.735,590,1.735,591,1.735,592,1.735,706,2.645,841,1.983,842,4.127,843,3.249,844,3.249,845,3.249,846,3.249,847,2.842,848,4.772,849,3.249,850,3.249,851,3.249,852,3.249,853,3.249,854,3.249,855,3.249,856,2.575,857,3.249,858,2.575,859,2.842,860,2.575,861,4.891,862,1.983,863,3.249,864,1.983,865,3.249,866,1.983,867,3.249,868,1.983,869,3.249,870,1.983,871,2.842,872,1.983,873,1.983,874,1.983,875,1.983,876,3.249,877,1.983,878,2.814,879,1.983,880,1.983,881,3.249,882,1.983,883,3.249,884,1.983,885,3.249,886,1.983,887,3.249,888,1.983,889,2.842,890,1.983,891,3.59,892,3.249,893,1.983,894,2.842,895,1.983,896,2.842,897,1.983,898,2.842,899,1.983,900,1.983,901,1.983,902,1.983,903,1.983,904,1.983,905,1.572,906,1.572,907,1.45,908,3.611,909,1.983,910,1.983,911,1.983,912,3.249,913,1.983,914,3.249,915,3.249,916,1.983,917,1.983,918,1.983,919,1.983,920,2.842,921,3.249,922,3.249,923,1.983,924,1.983,925,1.983,926,3.249,927,1.983,928,1.735,929,1.735,930,1.983,931,1.983,932,1.983,933,1.983,934,1.983,935,1.983,936,1.983,937,1.983,938,3.249,939,3.249,940,3.249,941,7.174,942,2.842,943,4.772,944,3.249,945,2.842,946,4.772,947,2.842,948,3.249,949,3.249,950,2.842,951,3.249,952,6.233,953,6.233,954,2.842,955,3.249,956,2.842,957,2.842,958,2.842,959,3.249,960,2.842,961,4.772,962,1.983]],["title/modules/DomainModule.html",[233,1.924,529,2.84]],["body/modules/DomainModule.html",[3,0.18,4,0.18,5,0.18,20,0.012,22,0.435,29,0.217,47,0.01,48,0.01,56,2.332,128,1.129,150,1.165,223,4.134,235,2.417,236,3.035,240,3.274,241,2.704,242,2.417,244,3.711,245,3.711,246,3.274,247,3.408,248,2.704,250,2.704,529,5.69,963,5.123,964,5.123,965,5.123,966,5.855,967,5.855]],["title/injectables/DomainsCardsEffects.html",[294,0.967,654,3.302]],["body/injectables/DomainsCardsEffects.html",[3,0.032,4,0.032,5,0.032,9,0.635,13,0.068,14,0.171,15,1.602,16,0.613,18,0.48,19,0.269,20,0.012,22,0.325,29,0.039,30,1.911,34,1.727,35,1.727,36,1.784,37,1.843,38,2.226,39,2.226,44,1.88,45,0.833,47,0.003,48,0.003,61,1.998,66,0.702,82,2.03,87,0.615,90,2.623,100,1.704,102,0.76,103,0.51,106,0.678,110,1.473,128,0.203,129,2.623,134,0.926,144,0.596,145,0.406,146,0.528,147,1.286,148,2.125,149,0.487,150,0.21,151,2.202,161,2.126,178,2.472,179,0.406,181,1.379,189,0.922,192,3.432,193,4.485,194,4.376,195,5.543,197,1.794,258,0.578,274,1.379,275,1.379,277,3.804,279,2.949,281,1.379,283,3.54,294,0.438,296,0.406,297,1.164,300,0.606,301,1.057,302,1.138,304,0.606,306,1.386,308,1.856,309,1.637,310,3.972,311,3.934,317,1.552,318,1.143,319,1.143,320,1.143,321,1.143,322,1.143,323,1.143,324,1.143,325,1.143,326,1.143,328,1.143,329,2.415,330,2.399,331,1.143,334,0.606,336,4.051,338,1.657,341,3.788,342,5.305,343,3.462,344,4.842,347,3.165,349,5.857,350,4.051,352,4.051,354,0.528,355,0.26,356,0.606,357,0.922,358,0.922,359,0.771,361,0.294,362,0.367,364,0.507,366,0.552,369,1.924,375,0.507,376,0.578,377,1.403,378,0.552,403,0.988,404,1.632,565,3.159,621,3.157,622,3.157,654,1.495,656,3.773,732,0.922,803,2.415,856,2.03,858,2.03,860,2.03,861,2.126,878,1.746,906,0.835,954,1.651,956,5.346,957,4.485,958,3.487,960,1.651,968,3.991,969,2.561,970,2.561,971,2.561,972,2.03,973,2.561,974,2.561,975,2.241,976,1.887,977,2.561,978,2.561,979,1.054,980,1.887,981,1.054,982,1.054,983,1.054,984,1.887,985,4.281,986,5.127,987,1.887,988,1.887,989,3.119,990,3.119,991,3.119,992,3.119,993,3.986,994,1.887,995,6.11,996,1.887,997,4.631,998,3.119,999,6.435,1000,4.979,1001,5.305,1002,5.127,1003,1.054,1004,1.887,1005,2.126,1006,2.126,1007,2.241,1008,1.887,1009,1.054,1010,1.887,1011,3.119,1012,1.887,1013,1.887,1014,4.33,1015,1.651,1016,1.887,1017,1.887,1018,1.887,1019,1.887,1020,1.887,1021,1.887,1022,1.887,1023,1.887,1024,3.119,1025,3.119,1026,1.887,1027,3.119,1028,1.887,1029,4.051,1030,1.887,1031,1.887,1032,1.887,1033,1.887,1034,1.887,1035,1.887,1036,3.986,1037,1.887,1038,5.127,1039,3.119,1040,3.119,1041,1.887,1042,4.63,1043,1.054,1044,1.887,1045,3.986,1046,1.887,1047,1.887,1048,4.842,1049,3.487,1050,3.487,1051,4.63,1052,1.054,1053,1.887,1054,1.887,1055,4.63,1056,4.63,1057,3.119,1058,3.119,1059,4.63,1060,4.63,1061,1.887,1062,4.63,1063,1.887,1064,3.119,1065,1.887,1066,3.119,1067,1.887,1068,1.054,1069,1.887,1070,2.241,1071,1.887,1072,3.119,1073,1.887,1074,1.887,1075,1.887,1076,1.054,1077,1.887,1078,1.495,1079,2.241,1080,1.054,1081,1.887,1082,1.887,1083,1.887,1084,1.054,1085,1.887,1086,1.887,1087,1.651,1088,1.054,1089,1.887,1090,1.887,1091,1.887,1092,1.887,1093,1.887,1094,1.054,1095,1.887,1096,2.28,1097,1.054,1098,1.054,1099,1.887,1100,1.651,1101,1.054,1102,1.054,1103,0.771,1104,0.922,1105,0.922,1106,1.054,1107,1.054,1108,2.561,1109,1.887,1110,1.887,1111,1.379,1112,1.379,1113,1.379,1114,1.379,1115,1.054]],["title/interfaces/DomainsCardsEntity.html",[0,0.128,129,2.524]],["body/interfaces/DomainsCardsEntity.html",[0,0.166,2,0.58,3,0.092,4,0.092,5,0.092,8,1.336,10,1.336,13,0.193,14,0.408,15,1.674,18,1.185,19,0.54,20,0.012,22,0.308,29,0.2,30,1.333,34,1.517,35,1.012,44,0.742,45,1.808,47,0.006,48,0.006,90,2.729,103,0.896,129,3.894,134,0.447,137,4.77,138,4.382,139,5.016,143,5.312,144,1.423,145,1.156,197,1.729,258,3.288,274,3.293,275,3.293,279,4.933,281,5.633,283,4.95,284,2.63,297,0.562,367,1.821,368,2.729,369,2.998,375,1.445,376,1.647,377,4.625,378,1.573,379,1.647,515,6.99,516,6.99,656,1.821,803,4.088,861,4.6,968,1.927,1000,5.903,1001,5.831,1005,4.6,1006,4.6,1007,7.385,1029,5.903,1079,2.63,1116,5.093,1117,5.093,1118,4.505,1119,4.505,1120,4.505,1121,4.505,1122,4.505,1123,4.505,1124,4.505,1125,4.505,1126,4.505,1127,4.505,1128,4.505,1129,4.505,1130,4.505,1131,4.505,1132,4.505,1133,4.505,1134,4.505,1135,4.505,1136,3.57,1137,3.57,1138,4.505]],["title/injectables/DomainsCardsFacade.html",[91,2.524,294,0.967]],["body/injectables/DomainsCardsFacade.html",[3,0.064,4,0.064,5,0.064,9,1.137,13,0.133,14,0.306,15,1.384,16,1.815,18,1.292,19,0.578,20,0.012,22,0.348,29,0.077,44,1.619,45,0.483,47,0.005,48,0.005,66,1.256,70,4.295,82,3.89,87,1.101,91,2.046,100,2.248,102,2.25,103,1.509,106,2.851,107,3.242,110,4.398,128,0.401,134,1.202,144,0.657,145,0.8,146,1.042,150,0.414,151,0.858,190,1.692,197,2.453,258,3.169,294,0.784,296,0.8,297,1.511,301,2.026,302,2.181,306,2.57,308,1.391,309,1.553,338,0.96,355,0.513,361,0.58,364,1,366,1.088,369,2.399,389,1.26,394,1.484,398,1.196,399,1.819,401,1.942,402,1.942,403,1.768,404,1.768,405,1.942,406,1.942,407,1.819,409,1.648,411,1.819,412,3.326,415,4.723,419,1.819,424,1.942,425,1.942,426,1.067,427,1.85,428,1.942,429,1.942,430,1.942,431,1.942,432,1.942,435,4.154,656,4.9,771,1.52,803,3.846,856,2.676,858,2.676,859,2.955,860,2.676,861,4.705,889,2.955,891,4.879,894,2.955,896,2.955,898,2.955,907,3.588,968,5.183,972,2.676,975,4.295,1005,3.347,1006,3.347,1015,2.955,1103,1.52,1104,1.819,1105,1.819,1116,4.829,1139,4.264,1140,4.264,1141,4.909,1142,4.264,1143,3.377,1144,3.377,1145,3.377,1146,3.377,1147,3.377,1148,3.377,1149,4.264,1150,3.377,1151,3.377,1152,4.295,1153,4.264,1154,3.377,1155,4.909,1156,2.079,1157,2.079,1158,2.079,1159,2.079,1160,3.377,1161,2.079,1162,3.377,1163,2.079,1164,3.377,1165,2.079,1166,3.377,1167,2.079,1168,3.377,1169,2.079,1170,3.377,1171,2.079,1172,2.079,1173,2.079,1174,3.377,1175,2.079,1176,2.079,1177,3.377,1178,2.079,1179,3.377,1180,3.588,1181,2.079,1182,1.819,1183,2.079,1184,2.079,1185,3.377,1186,2.079,1187,2.079,1188,2.079,1189,2.079,1190,2.079,1191,3.377,1192,2.079,1193,3.377,1194,1.648,1195,1.819,1196,2.079,1197,2.079,1198,2.079,1199,2.079,1200,2.079,1201,2.079,1202,2.079,1203,2.079,1204,2.079,1205,2.079,1206,2.079,1207,2.079,1208,2.079,1209,2.079,1210,2.079,1211,2.079,1212,2.079,1213,2.079,1214,2.079,1215,2.079,1216,2.079,1217,2.079,1218,2.079,1219,2.079,1220,2.079]],["title/interfaces/DomainsCardsPartialState.html",[0,0.128,1221,3.302]],["body/interfaces/DomainsCardsPartialState.html",[0,0.161,2,0.714,3,0.114,4,0.114,5,0.114,11,1.288,13,0.237,14,0.475,15,1.585,18,0.807,19,0.278,20,0.012,22,0.378,29,0.269,30,1.913,44,1.294,45,1.622,47,0.007,48,0.007,90,3.689,129,2.244,134,0.551,161,2.525,197,3.017,277,2.13,297,0.692,330,2.28,343,1.939,355,0.914,361,1.033,362,1.288,394,2.304,426,2.69,440,1.585,443,2.331,444,2.331,445,2.331,446,1.585,447,2.165,448,2.706,449,2.943,450,2.165,451,2.943,452,1.529,461,2.943,466,2.245,656,2.244,968,2.374,997,2.935,1005,3.576,1006,3.576,1048,2.935,1078,2.935,1096,2.707,1103,2.707,1111,2.707,1112,2.707,1113,2.707,1114,2.707,1221,4.156,1222,6.116,1223,5.54,1224,5.794,1225,3.24,1226,4.589,1227,3.24,1228,3.24,1229,3.24,1230,3.24,1231,3.24,1232,4.589,1233,3.24,1234,3.24,1235,3.24,1236,3.24,1237,3.24,1238,3.24,1239,3.24,1240,3.24,1241,5.328,1242,3.24,1243,5.794,1244,3.24,1245,3.24,1246,3.24,1247,3.24,1248,5.794,1249,3.24,1250,5.794,1251,3.24,1252,4.589,1253,3.24,1254,3.24,1255,4.589,1256,3.24,1257,3.24,1258,2.707,1259,3.24,1260,3.24,1261,3.24,1262,3.24,1263,3.24,1264,3.24]],["title/interfaces/DomainsCardsState.html",[0,0.128,1223,3.302]],["body/interfaces/DomainsCardsState.html",[0,0.157,2,0.689,3,0.11,4,0.11,5,0.11,11,1.779,13,0.229,14,0.463,15,1.56,18,1.103,19,0.489,20,0.012,22,0.372,29,0.266,30,1.897,44,1.262,45,1.601,47,0.007,48,0.007,90,3.618,103,1.017,129,2.166,134,0.531,161,2.437,197,2.942,277,2.056,297,0.668,330,2.249,343,1.871,355,0.882,361,0.997,362,1.244,394,2.57,426,2.682,440,1.53,443,2.273,444,2.273,445,2.654,446,1.53,447,2.111,448,2.654,449,3.282,450,2.961,451,3.282,452,1.475,461,2.896,466,2.189,656,2.166,968,2.291,997,2.833,1005,3.487,1006,3.487,1048,2.833,1078,2.833,1096,2.613,1103,2.613,1111,2.613,1112,2.613,1113,2.613,1114,2.613,1221,2.833,1222,4.474,1223,5.165,1224,6.462,1225,3.127,1226,4.474,1227,3.127,1228,3.127,1229,3.127,1230,3.127,1231,3.127,1232,4.474,1233,3.127,1234,3.127,1235,3.127,1236,3.127,1237,3.127,1238,3.127,1239,3.127,1240,3.127,1241,5.224,1242,3.127,1243,5.702,1244,3.127,1245,3.127,1246,3.127,1247,3.127,1248,5.702,1249,3.127,1250,5.702,1251,3.127,1252,4.474,1253,3.127,1254,3.127,1255,4.474,1256,3.127,1257,3.127,1258,2.613,1259,3.127,1260,3.127,1261,3.127,1262,3.127,1263,3.127,1264,3.127]],["title/interfaces/EventCard.html",[0,0.128,1265,3.045]],["body/interfaces/EventCard.html",[0,0.251,2,0.97,3,0.155,4,0.155,5,0.155,6,1.935,8,2.235,10,2.866,11,2.244,12,4.313,13,0.323,14,0.584,15,1.901,16,1.901,17,6.294,18,1.258,19,0.534,20,0.012,22,0.428,23,3.429,24,4.133,25,3.986,26,4.714,27,4.401,29,0.278,30,1.591,32,2.633,34,1.694,35,1.694,36,1.75,37,1.809,38,2.418,39,2.418,40,2.893,41,2.893,43,3.709,44,1.241,45,1.167,46,3.429,47,0.009,48,0.009,706,3.224,772,3.907,1265,5.488,1266,3.986,1267,6.152,1268,5.03,1269,7.508,1270,5.03,1271,4.401]],["title/injectables/EventsPileCardsEffects.html",[294,0.967,658,3.302]],["body/injectables/EventsPileCardsEffects.html",[3,0.121,4,0.121,5,0.121,9,1.84,13,0.252,14,0.494,16,0.939,19,0.295,20,0.012,22,0.442,29,0.145,44,1.824,47,0.008,48,0.008,61,3.706,87,1.781,100,1.895,102,1.164,103,0.781,128,0.757,134,1.062,148,2.845,149,1.812,150,0.781,151,2.254,177,2.939,294,1.268,296,1.51,297,1.334,300,2.257,301,2.593,302,2.792,304,2.257,306,3.019,308,2.049,309,1.807,310,4.363,311,4.253,317,3.806,318,3.309,319,3.309,320,3.309,321,3.309,322,3.309,323,3.309,324,3.309,325,3.309,326,3.309,328,3.309,329,3.309,330,2.411,331,3.309,334,2.257,354,1.967,355,0.968,356,2.257,361,1.094,362,1.365,364,1.886,658,4.329,660,4.327,790,3.433,794,3.11,798,3.433,1272,4.577,1273,6.283,1274,6.283,1275,3.924,1276,5.462,1277,4.329,1278,4.739,1279,6.248,1280,5.462,1281,4.329,1282,5.462,1283,5.462,1284,4.329,1285,2.868,1286,4.592,1287,3.433]],["title/interfaces/EventsPileCardsEntity.html",[0,0.128,1288,2.67]],["body/interfaces/EventsPileCardsEntity.html",[0,0.223,2,1.007,3,0.161,4,0.161,5,0.161,8,2.322,13,0.335,14,0.598,15,1.949,18,1.267,19,0.496,20,0.012,22,0.413,29,0.269,30,1.937,44,1.289,47,0.009,48,0.009,134,0.777,144,1.65,177,2.376,283,3.165,291,4.571,297,0.976,367,3.165,368,4.002,369,3.62,375,2.511,376,2.863,377,2.863,378,2.735,379,2.863,552,3.165,660,3.165,1258,4.829,1272,3.348,1278,4.234,1279,4.571,1288,4.879,1289,4.14,1290,4.14,1291,3.819,1292,5.224,1293,6.606,1294,4.571,1295,5.224,1296,5.224,1297,5.224,1298,4.571,1299,5.224]],["title/injectables/EventsPileCardsFacade.html",[294,0.967,644,2.67]],["body/injectables/EventsPileCardsFacade.html",[3,0.121,4,0.121,5,0.121,9,1.841,13,0.252,14,0.495,16,0.94,19,0.295,20,0.012,22,0.408,29,0.146,47,0.008,48,0.008,66,2.033,87,1.783,100,2.192,102,1.166,103,0.782,106,2.569,107,3.171,128,0.758,134,1.183,150,0.782,151,1.622,177,3.059,190,2.74,294,1.269,296,1.512,297,1.487,301,2.806,302,3.021,303,5.947,306,3.287,308,2.051,309,1.809,338,1.815,355,0.97,361,1.096,364,1.889,366,2.057,389,2.381,394,2.188,398,2.26,400,3.438,401,3.145,402,3.145,403,2.862,404,2.862,405,3.145,406,3.145,412,4.255,414,2.873,421,2.679,424,3.145,425,3.145,426,1.727,427,2.996,428,3.145,429,3.145,430,3.145,431,3.145,432,3.145,644,3.504,660,4.822,1194,3.115,1272,5.101,1285,2.873,1286,4.596,1287,3.438,1300,6.288,1301,6.288,1302,6.798,1303,6.798,1304,3.115,1305,2.873,1306,3.438,1307,5.468,1308,3.438,1309,5.468,1310,3.438,1311,5.468,1312,3.93,1313,3.93,1314,3.93,1315,3.93,1316,3.93,1317,3.93]],["title/interfaces/EventsPileCardsPartialState.html",[0,0.128,1318,3.302]],["body/interfaces/EventsPileCardsPartialState.html",[0,0.177,2,0.815,3,0.13,4,0.13,5,0.13,11,1.471,13,0.271,14,0.591,18,1.005,19,0.317,20,0.012,22,0.4,29,0.28,30,1.809,34,1.424,35,1.424,36,1.471,37,1.52,44,1.418,45,1.627,47,0.008,48,0.008,134,0.629,177,2.521,297,0.79,330,2.287,355,1.043,361,1.179,362,1.471,394,2.439,426,2.671,440,1.81,443,2.555,444,2.555,445,2.555,446,1.81,447,2.373,448,3.259,449,3.116,450,2.373,451,3.116,452,1.745,453,2.213,454,2.316,458,1.953,459,1.953,460,2.032,461,3.116,466,2.461,660,2.561,1272,2.709,1277,3.35,1278,4.493,1281,3.35,1284,3.35,1285,3.09,1286,4.202,1288,2.709,1318,4.556,1319,6.416,1320,5.811,1321,3.699,1322,5.03,1323,3.699,1324,3.699,1325,3.699,1326,3.699,1327,5.716,1328,3.699,1329,3.699,1330,3.699,1331,3.699,1332,3.699,1333,3.699,1334,5.716,1335,5.03,1336,3.699]],["title/interfaces/EventsPileCardsState.html",[0,0.128,1320,3.302]],["body/interfaces/EventsPileCardsState.html",[0,0.172,2,0.78,3,0.124,4,0.124,5,0.124,11,1.942,13,0.26,14,0.578,18,1.176,19,0.517,20,0.012,22,0.393,29,0.277,30,1.782,34,1.363,35,1.363,36,1.408,37,1.455,44,1.377,45,1.598,47,0.008,48,0.008,103,1.37,134,0.602,177,2.475,297,0.756,330,2.245,355,0.999,361,1.129,362,1.408,394,2.662,426,2.658,440,1.733,443,2.48,444,2.48,445,2.838,446,1.733,447,2.303,448,3.464,449,3.4,450,3.081,451,3.4,452,1.671,453,2.119,454,2.218,458,1.87,459,1.87,460,1.946,461,3.059,466,2.389,660,2.452,1272,2.594,1277,3.208,1278,4.412,1281,3.208,1284,3.208,1285,2.959,1286,4.079,1288,2.594,1318,3.208,1319,4.883,1320,5.456,1321,3.541,1322,4.883,1323,3.541,1324,3.541,1325,3.541,1326,3.541,1327,5.588,1328,3.541,1329,3.541,1330,3.541,1331,3.541,1332,3.541,1333,3.541,1334,5.588,1335,4.883,1336,3.541]],["title/modules/FeatureEngineModule.html",[233,1.924,1337,3.302]],["body/modules/FeatureEngineModule.html",[3,0.196,4,0.196,5,0.196,20,0.012,22,0.425,29,0.236,47,0.01,48,0.01,56,2.534,128,1.227,150,1.266,235,2.626,246,3.441,247,3.581,248,2.939,250,2.939,1337,5.903,1338,6.363,1339,6.363]],["title/modules/FeatureGameModule.html",[233,1.924,488,2.84]],["body/modules/FeatureGameModule.html",[3,0.18,4,0.18,5,0.18,20,0.012,22,0.435,29,0.217,47,0.01,48,0.01,56,2.332,128,1.129,150,1.165,235,2.417,236,3.035,240,3.274,241,2.704,242,2.417,245,3.711,246,3.274,247,3.408,248,2.704,250,3.274,488,5.69,523,5.864,647,5.123,1340,5.123,1341,5.123,1342,5.855,1343,5.855,1344,5.855]],["title/injectables/GameEffects.html",[294,0.967,664,3.302]],["body/injectables/GameEffects.html",[3,0.114,4,0.114,5,0.114,13,0.238,14,0.475,16,0.888,19,0.278,20,0.012,22,0.435,29,0.137,34,1.768,35,1.768,36,1.827,37,1.888,38,2.524,39,2.524,44,1.635,45,1.864,47,0.007,48,0.007,61,3.639,87,1.712,100,1.848,102,1.1,103,0.738,128,0.715,134,1.04,144,1.172,148,2.427,149,1.713,150,0.738,151,2.167,294,1.219,296,1.427,297,1.307,304,2.133,306,2.945,308,1.987,309,2.384,310,4.294,311,4.177,334,2.133,354,1.859,355,0.915,458,3.061,563,3.245,621,3.579,622,3.579,664,4.161,985,5.332,1100,4.593,1345,3.245,1346,4.83,1347,6.094,1348,6.094,1349,6.094,1350,3.709,1351,5.25,1352,6.094,1353,5.25,1354,5.25,1355,3.709,1356,5.25,1357,5.332,1358,6.627,1359,6.627,1360,6.627,1361,6.627,1362,6.627,1363,6.627,1364,3.709,1365,5.25,1366,5.25,1367,5.308,1368,5.332,1369,6.627,1370,5.25,1371,3.709,1372,2.711,1373,2.711,1374,2.529,1375,3.245,1376,3.245,1377,3.245]],["title/injectables/GameFacade.html",[89,2.396,294,0.967]],["body/injectables/GameFacade.html",[3,0.106,4,0.106,5,0.106,9,2.464,13,0.222,14,0.453,16,1.63,19,0.511,20,0.012,21,4.117,22,0.405,29,0.128,45,1.362,47,0.007,48,0.007,66,1.859,87,1.13,89,2.876,100,2.265,102,2.021,103,1.355,106,2.694,107,3.254,128,0.668,134,1.215,142,3.695,144,1.094,145,1.333,150,0.689,154,4.127,190,2.506,256,3.219,294,1.16,296,1.333,297,1.526,301,2.651,306,3.154,308,2.315,309,2.155,338,1.6,355,0.855,398,1.992,401,2.876,402,2.876,403,2.617,404,2.617,405,2.876,406,2.876,412,2.876,424,2.876,425,2.876,426,1.58,427,2.74,428,2.876,429,2.876,430,2.876,431,2.876,432,2.876,478,1.992,751,4.374,758,4.374,759,3.892,1346,5.091,1367,4.288,1372,2.532,1373,2.532,1374,2.362,1375,3.031,1376,3.031,1377,3.031,1378,3.464,1379,4.65,1380,4.979,1381,4.65,1382,5,1383,4.374,1384,4.374,1385,6.424,1386,6.424,1387,5,1388,3.464,1389,5,1390,3.464,1391,3.464,1392,4.374,1393,3.464,1394,4.374,1395,3.464,1396,3.464,1397,3.464,1398,3.464,1399,5,1400,5,1401,3.464,1402,5,1403,3.464,1404,5,1405,3.464,1406,5,1407,3.464,1408,5,1409,3.464,1410,3.464,1411,3.464,1412,3.464,1413,3.464,1414,3.464,1415,3.464,1416,3.464,1417,3.464]],["title/interfaces/GamePartialState.html",[0,0.128,1374,2.84]],["body/interfaces/GamePartialState.html",[0,0.189,2,0.904,3,0.144,4,0.144,5,0.144,9,2.462,13,0.301,14,0.558,19,0.352,20,0.012,21,3.95,22,0.393,29,0.281,30,1.698,45,1.871,47,0.009,48,0.009,104,2.455,134,0.697,142,3.545,144,1.482,145,1.804,154,4.429,256,3.089,297,0.876,309,2.242,355,1.157,426,2.637,447,2.544,452,1.936,759,4.17,762,3.95,763,3.428,1367,5.031,1372,3.428,1373,3.428,1374,4.202,1379,5.455,1380,5.343,1381,5.455,1418,4.104,1419,6.643,1420,6.017,1421,6.022,1422,4.104,1423,4.104,1424,4.104,1425,4.104,1426,4.104,1427,4.104,1428,4.104,1429,4.104,1430,4.104]],["title/injectables/GameRulesService.html",[99,2.67,294,0.967]],["body/injectables/GameRulesService.html",[3,0.049,4,0.049,5,0.049,9,1.402,10,1.203,13,0.102,14,0.245,15,1.293,16,1.213,18,1.158,19,0.507,20,0.012,22,0.289,29,0.059,30,1.463,31,1.484,44,1.15,45,1.769,47,0.004,48,0.004,56,2.978,66,1.007,85,3.641,87,0.883,88,1.165,89,2.394,90,2.139,91,2.521,92,2.139,93,2.521,94,2.262,95,2.667,96,2.262,97,2.667,99,1.736,100,2.069,102,1.504,103,1.008,104,1.848,106,2.273,107,2.877,110,2.03,128,0.307,133,0.966,134,0.237,137,1.846,138,1.087,139,2.837,140,1.165,141,1.848,142,0.917,143,1.846,144,0.856,145,0.613,146,0.799,147,2.407,148,2.445,149,0.736,150,0.317,151,2.348,154,0.966,157,1.395,159,1.395,161,4.418,165,3.088,171,1.395,172,2.369,173,3.088,177,1.269,178,4.699,179,2.876,187,1.263,190,0.799,191,5.37,258,1.934,277,4.195,279,2.915,283,1.641,294,0.629,296,0.613,301,1.718,308,2.002,309,1.941,330,2.113,342,4.865,343,3.739,344,3.695,347,3.951,359,1.165,369,2.072,370,3.645,372,1.263,374,2.146,375,0.766,403,2.178,404,2.178,471,1.395,549,1.395,631,2.58,643,2.837,644,2.667,645,2.837,731,4.434,762,1.022,763,1.165,771,3.042,772,2.139,793,2.407,861,2.407,907,1.165,908,3.641,920,4.976,928,3.088,972,2.797,1096,3.951,1111,3.951,1112,3.951,1113,3.951,1114,3.951,1117,1.263,1152,3.088,1180,2.58,1267,1.263,1278,2.262,1288,2.988,1289,1.263,1346,3.298,1431,6.541,1432,1.594,1433,3.088,1434,3.53,1435,3.088,1436,3.53,1437,3.53,1438,3.53,1439,2.797,1440,3.53,1441,3.53,1442,2.708,1443,2.708,1444,2.708,1445,4.162,1446,4.162,1447,3.53,1448,2.837,1449,1.594,1450,1.594,1451,3.456,1452,1.594,1453,1.594,1454,4.162,1455,1.594,1456,2.708,1457,1.594,1458,1.594,1459,2.708,1460,1.594,1461,2.708,1462,1.594,1463,1.594,1464,1.594,1465,1.594,1466,1.594,1467,1.594,1468,4.162,1469,5.068,1470,4.162,1471,2.708,1472,1.594,1473,2.708,1474,6.138,1475,2.708,1476,1.594,1477,2.708,1478,2.708,1479,1.594,1480,2.708,1481,1.594,1482,1.594,1483,2.708,1484,2.708,1485,1.594,1486,2.708,1487,2.708,1488,2.708,1489,2.708,1490,1.594,1491,2.708,1492,2.708,1493,1.594,1494,2.708,1495,2.708,1496,1.594,1497,2.708,1498,2.708,1499,2.708,1500,1.594,1501,1.263,1502,1.594,1503,1.594,1504,1.594,1505,1.594,1506,1.594,1507,1.594,1508,1.594,1509,1.594,1510,1.594,1511,1.594,1512,1.594,1513,1.594,1514,1.594,1515,1.594,1516,1.594,1517,1.594,1518,1.594,1519,1.594,1520,1.594,1521,2.708,1522,2.708,1523,2.708,1524,2.708,1525,2.369,1526,1.594,1527,2.708,1528,1.594,1529,1.395,1530,1.594,1531,2.708,1532,1.594,1533,2.708,1534,2.708,1535,1.594,1536,1.395,1537,1.594,1538,1.594,1539,1.594,1540,1.594,1541,1.594,1542,1.594,1543,1.594,1544,3.53,1545,1.594,1546,2.708,1547,1.594,1548,6.48,1549,4.162,1550,4.162,1551,1.594,1552,1.594,1553,3.53,1554,3.53,1555,1.594,1556,1.594,1557,3.53,1558,4.162,1559,1.594,1560,1.594,1561,1.594,1562,3.53,1563,4.162,1564,4.662,1565,1.594,1566,1.594,1567,1.594,1568,1.594,1569,2.708,1570,2.708,1571,2.708,1572,3.53,1573,1.594,1574,1.594,1575,1.594,1576,1.594,1577,1.594,1578,1.594,1579,1.594]],["title/interfaces/GameState.html",[0,0.128,1420,3.302]],["body/interfaces/GameState.html",[0,0.179,2,0.827,3,0.132,4,0.132,5,0.132,9,2.617,13,0.275,14,0.526,19,0.571,20,0.012,21,4.521,22,0.376,29,0.273,30,1.624,45,1.952,47,0.008,48,0.008,104,2.246,134,0.638,142,4.058,144,1.356,145,1.651,154,4.707,256,3.535,297,0.802,309,2.185,355,1.059,426,2.601,447,2.397,452,1.771,759,4.707,762,4.521,763,3.136,1367,5.554,1372,3.136,1373,3.136,1374,2.926,1379,6.022,1380,5.679,1381,6.022,1418,3.754,1419,5.081,1420,5.591,1421,5.76,1422,3.754,1423,3.754,1424,3.754,1425,3.754,1426,3.754,1427,3.754,1428,3.754,1429,3.754,1430,3.754]],["title/interfaces/Hand.html",[0,0.128,188,3.045]],["body/interfaces/Hand.html",[0,0.232,2,1.101,3,0.176,4,0.176,5,0.176,6,2.198,8,2.538,11,2.43,13,0.366,14,0.632,15,1.987,18,1.208,19,0.524,20,0.012,22,0.399,29,0.259,30,1.409,47,0.01,48,0.01,188,5.514,253,4.968,256,4.039,259,4.834,260,4.175,268,3.894,379,3.13,1580,5.712,1581,4.231,1582,5.712]],["title/components/HandComponent.html",[49,1.603,225,2.003]],["body/components/HandComponent.html",[1,4.321,3,0.108,4,0.108,5,0.108,13,0.225,14,0.457,16,1.758,18,1.243,19,0.535,20,0.012,22,0.407,29,0.13,31,3.907,44,1.595,45,1.655,47,0.007,48,0.007,49,2.274,50,1.688,51,2.643,52,1.924,53,2.02,54,1.924,55,1.924,56,3.096,58,1.924,59,4.356,60,4.162,62,2.904,64,2.767,66,1.877,87,1.145,92,3.059,93,3.916,100,2.135,102,2.032,103,1.362,104,1.838,106,2.463,107,2.011,110,3.4,128,0.677,131,2.25,133,2.127,134,0.522,141,3.733,144,1.595,145,1.351,146,1.76,148,1.399,149,1.622,150,0.699,179,1.351,188,5.006,206,1.924,207,2.643,208,2.53,209,1.924,210,3.542,211,1.924,212,1.924,213,1.688,214,1.924,215,1.688,216,1.924,217,1.688,218,1.924,219,1.688,220,1.924,221,1.688,222,1.924,223,1.688,224,1.924,225,3.108,226,1.924,227,1.688,228,1.924,229,1.76,230,1.222,231,1.924,232,1.924,308,1.647,309,1.452,338,2.986,369,2.244,375,1.688,478,2.02,554,4.001,562,4.001,706,3.789,847,4.417,871,4.417,891,2.394,905,2.783,929,3.072,950,4.417,1451,4.669,1501,2.783,1581,2.127,1583,3.511,1584,5.912,1585,5.049,1586,5.049,1587,6.464,1588,5.049,1589,4.417,1590,3.511,1591,5.049,1592,3.511,1593,5.049,1594,3.511,1595,3.511,1596,3.511,1597,5.049,1598,3.511,1599,4.417,1600,3.511,1601,3.511,1602,3.511,1603,3.511,1604,3.072,1605,3.511,1606,3.511,1607,3.511,1608,3.511,1609,5.049,1610,5.049]],["title/modules/HandModule.html",[233,1.924,530,2.84]],["body/modules/HandModule.html",[3,0.18,4,0.18,5,0.18,20,0.012,22,0.435,29,0.217,47,0.01,48,0.01,56,2.332,128,1.129,150,1.165,225,4.134,235,2.417,236,3.035,240,3.274,241,2.704,242,2.417,244,3.711,245,3.711,246,3.274,247,3.408,248,2.704,250,2.704,530,5.69,1611,5.123,1612,5.123,1613,5.123,1614,5.855,1615,5.855]],["title/injectables/HandsCardsEffects.html",[294,0.967,669,3.302]],["body/injectables/HandsCardsEffects.html",[3,0.122,4,0.122,5,0.122,9,1.851,10,2.443,13,0.254,14,0.498,16,0.948,19,0.297,20,0.012,22,0.434,29,0.147,44,1.83,47,0.008,48,0.008,61,3.716,87,1.292,92,4.493,100,1.902,102,1.175,103,0.788,128,0.764,134,1.065,148,2.854,149,1.829,150,0.788,294,1.276,296,1.524,297,1.339,300,2.278,301,2.606,302,2.806,304,2.278,308,2.059,309,1.816,310,4.374,311,4.265,317,3.825,318,3.33,319,3.33,320,3.33,321,3.33,322,3.33,323,3.33,324,3.33,325,3.33,326,3.33,328,3.33,329,3.33,330,2.418,331,3.33,334,2.278,354,1.985,356,2.278,361,1.104,362,1.378,376,2.17,377,2.17,378,2.073,478,2.278,669,4.356,671,4.592,785,4.356,786,4.356,794,3.139,1451,4.65,1581,3.33,1604,4.809,1616,4.885,1617,5.524,1618,3.96,1619,5.497,1620,4.809,1621,5.497,1622,5.497,1623,3.96,1624,5.497,1625,5.497,1626,5.497,1627,5.497,1628,5.497,1629,3.96,1630,2.895,1631,3.465]],["title/interfaces/HandsCardsEntity.html",[0,0.128,131,2.67]],["body/interfaces/HandsCardsEntity.html",[0,0.223,2,1.007,3,0.161,4,0.161,5,0.161,8,2.322,10,2.322,13,0.335,14,0.598,15,1.949,18,1.303,19,0.572,20,0.012,22,0.298,29,0.245,30,1.289,31,3.97,32,3.985,47,0.009,48,0.009,92,4.002,131,4.643,134,0.777,141,3.792,144,1.65,145,2.01,297,0.976,367,3.165,368,4.002,369,3.564,379,2.863,671,3.348,803,4.86,1136,5.236,1137,5.236,1451,5.469,1581,3.165,1616,3.562,1631,4.571]],["title/injectables/HandsCardsFacade.html",[93,2.524,294,0.967]],["body/injectables/HandsCardsFacade.html",[3,0.114,4,0.114,5,0.114,9,1.77,10,2.947,13,0.238,14,0.476,15,1.459,16,1.587,18,1.193,19,0.498,20,0.012,22,0.415,29,0.138,31,2.035,47,0.007,48,0.007,66,1.954,87,1.211,93,3.184,100,2.194,102,1.968,103,1.319,106,2.612,107,3.2,128,0.716,134,1.183,141,1.944,144,1.173,145,1.429,150,0.739,190,2.634,294,1.22,296,1.429,297,1.487,301,2.737,302,2.947,306,3.229,308,1.989,309,1.754,338,1.716,355,0.916,361,1.036,364,1.786,366,1.944,389,2.25,394,2.122,398,2.136,401,3.023,402,3.023,403,2.751,404,2.751,405,3.023,406,3.023,409,2.943,412,3.814,414,2.715,421,2.532,423,3.25,424,3.023,425,3.023,426,1.66,427,2.88,428,3.023,429,3.023,430,3.023,431,3.023,432,3.023,478,2.136,552,3.695,671,5.099,816,2.943,818,2.943,891,3.583,1304,2.943,1305,2.715,1451,4.158,1581,3.695,1589,4.598,1599,4.598,1616,5.425,1630,2.715,1632,6.099,1633,6.099,1634,6.099,1635,5.255,1636,6.631,1637,3.714,1638,5.255,1639,3.714,1640,3.714,1641,5.255,1642,5.255,1643,5.255,1644,3.714,1645,3.714,1646,3.714,1647,3.714,1648,3.714,1649,3.714,1650,3.714,1651,3.714]],["title/interfaces/HandsCardsPartialState.html",[0,0.128,1652,3.302]],["body/interfaces/HandsCardsPartialState.html",[0,0.182,2,0.85,3,0.136,4,0.136,5,0.136,11,1.534,13,0.283,14,0.604,15,1.597,18,0.91,19,0.331,20,0.012,22,0.407,29,0.284,30,1.76,45,1.373,47,0.008,48,0.008,92,4.321,131,2.825,134,0.655,297,0.824,330,2.326,355,1.088,361,1.23,362,1.534,394,2.482,426,2.698,440,1.887,443,2.628,444,2.628,445,2.628,446,1.887,447,2.441,448,2.966,449,3.17,450,2.441,451,3.17,452,1.82,458,2.036,459,2.036,460,2.119,461,3.17,466,2.532,671,2.825,1581,3.583,1616,3.006,1630,3.223,1652,4.687,1653,6.509,1654,5.896,1655,3.857,1656,5.175,1657,3.857,1658,3.857,1659,3.857,1660,3.857,1661,3.857,1662,5.175,1663,3.857,1664,3.857,1665,3.857,1666,3.857,1667,3.857,1668,3.857,1669,3.857,1670,3.857,1671,3.857]],["title/interfaces/HandsCardsState.html",[0,0.128,1654,3.302]],["body/interfaces/HandsCardsState.html",[0,0.176,2,0.812,3,0.13,4,0.13,5,0.13,11,1.996,13,0.27,14,0.59,15,1.561,18,1.162,19,0.526,20,0.012,22,0.4,29,0.28,30,1.727,45,1.331,47,0.008,48,0.008,92,4.242,103,1.393,131,2.7,134,0.626,297,0.787,330,2.283,355,1.04,361,1.175,362,1.466,394,2.69,426,2.686,440,1.804,443,2.549,444,2.549,445,2.898,446,1.804,447,2.368,448,3.358,449,3.436,450,3.119,451,3.436,452,1.739,458,1.946,459,1.946,460,2.026,461,3.111,466,2.455,671,2.7,1581,3.475,1616,2.873,1630,3.08,1652,3.339,1653,5.019,1654,5.549,1655,3.686,1656,5.019,1657,3.686,1658,3.686,1659,3.686,1660,3.686,1661,3.686,1662,5.019,1663,3.686,1664,3.686,1665,3.686,1666,3.686,1667,3.686,1668,3.686,1669,3.686,1670,3.686,1671,3.686]],["title/interfaces/HasColor.html",[0,0.128,259,2.67]],["body/interfaces/HasColor.html",[0,0.193,2,1.212,3,0.193,4,0.193,5,0.193,6,2.418,13,0.403,14,0.669,19,0.472,20,0.012,22,0.359,29,0.233,47,0.01,48,0.01,103,1.471,253,4.915,256,4.065,259,4.74,268,4.285,1672,6.285]],["title/interfaces/HasCost.html",[0,0.128,261,3.045]],["body/interfaces/HasCost.html",[0,0.194,2,1.218,3,0.194,4,0.194,5,0.194,6,2.43,13,0.405,14,0.671,19,0.474,20,0.012,22,0.36,29,0.234,47,0.01,48,0.01,148,3.137,254,5.939,261,5.421,269,4.306,270,4.616,1673,6.316]],["title/interfaces/HasId.html",[0,0.128,12,2.524]],["body/interfaces/HasId.html",[0,0.197,2,1.233,3,0.197,4,0.197,5,0.197,6,2.46,12,4.526,13,0.41,14,0.676,15,1.952,18,1.217,19,0.48,20,0.011,29,0.237,47,0.01,48,0.01,1674,6.394]],["title/interfaces/HasName.html",[0,0.128,24,2.67]],["body/interfaces/HasName.html",[0,0.187,2,1.175,3,0.187,4,0.187,5,0.187,6,2.343,13,0.391,14,0.657,16,1.922,18,1.235,19,0.457,20,0.012,24,4.97,29,0.269,32,3.188,34,2.051,35,2.051,36,2.119,37,2.19,38,2.928,39,2.928,40,3.503,41,3.503,43,3.503,44,1.503,47,0.01,48,0.01,1675,4.827,1676,5.329,1677,6.091]],["title/interfaces/HasRules.html",[0,0.128,26,3.045]],["body/interfaces/HasRules.html",[0,0.197,2,1.233,3,0.197,4,0.197,5,0.197,6,2.46,13,0.41,14,0.676,17,6.465,18,1.217,19,0.48,20,0.011,26,5.461,29,0.237,47,0.01,48,0.01,1678,6.394]],["title/interfaces/HasVictoryPoints.html",[0,0.128,265,3.045]],["body/interfaces/HasVictoryPoints.html",[0,0.196,2,1.227,3,0.196,4,0.196,5,0.196,6,2.448,13,0.408,14,0.674,19,0.478,20,0.011,29,0.236,47,0.01,48,0.01,103,1.482,255,5.953,258,4.328,265,5.445,1679,6.363]],["title/interfaces/LandCard.html",[0,0.128,878,2.84]],["body/interfaces/LandCard.html",[0,0.248,2,0.909,3,0.145,4,0.145,5,0.145,6,1.814,8,2.096,10,2.749,11,2.152,12,4.181,13,0.302,14,0.56,15,1.868,18,1.17,19,0.623,20,0.012,22,0.445,23,3.215,29,0.282,30,1.703,32,2.469,34,1.588,35,1.588,36,1.641,37,1.696,38,2.267,39,2.267,40,2.713,41,2.713,43,3.558,44,1.164,45,1.095,46,3.215,47,0.009,48,0.009,103,1.231,140,3.447,143,4.995,192,4.902,253,4.729,256,3.812,259,3.964,260,3.447,263,4.217,264,4.126,268,3.215,270,3.447,273,3.738,759,4.608,771,5.706,878,5.186,1680,3.738,1681,6.655,1682,4.716,1683,4.716,1684,4.716,1685,4.126]],["title/injectables/LandsPileCardsEffects.html",[294,0.967,673,3.302]],["body/injectables/LandsPileCardsEffects.html",[3,0.133,4,0.133,5,0.133,9,1.967,13,0.277,14,0.529,16,1.035,19,0.325,20,0.012,22,0.435,29,0.16,44,1.879,47,0.008,48,0.008,61,3.817,87,1.411,96,4.537,100,1.844,102,1.284,103,0.861,128,0.834,134,1.052,148,2.634,149,1.999,150,0.861,177,2.916,294,1.356,296,1.665,297,1.323,300,2.489,301,2.729,302,2.938,304,2.489,308,1.905,309,1.68,310,4.252,311,4.072,317,4.006,318,3.539,319,3.539,320,3.539,321,3.539,322,3.539,323,3.539,324,3.539,325,3.539,326,3.539,328,3.539,329,3.539,330,2.484,331,3.539,334,2.489,354,2.169,356,2.489,361,1.207,362,1.505,478,2.489,673,4.629,675,4.537,1686,4.826,1687,4.327,1688,5.841,1689,4.629,1690,5.784,1691,4.327,1692,5.841,1693,4.629,1694,5.841,1695,4.327,1696,3.163,1697,4.269]],["title/interfaces/LandsPileCardsEntity.html",[0,0.128,132,2.84]],["body/interfaces/LandsPileCardsEntity.html",[0,0.224,2,1.024,3,0.163,4,0.163,5,0.163,8,2.36,13,0.341,14,0.604,15,1.956,18,1.271,19,0.501,20,0.012,22,0.417,29,0.271,30,1.89,44,1.31,47,0.009,48,0.009,96,4.278,132,5.222,134,0.79,144,1.678,177,2.4,297,0.992,367,3.217,368,4.044,369,3.633,375,2.553,376,2.91,377,2.91,378,2.78,379,2.91,552,3.217,675,3.404,906,4.209,1258,4.879,1290,4.209,1291,3.882,1294,4.646,1298,4.646,1686,3.621,1690,4.646,1698,5.311,1699,5.311,1700,5.311]],["title/injectables/LandsPileCardsFacade.html",[97,2.67,294,0.967]],["body/injectables/LandsPileCardsFacade.html",[3,0.12,4,0.12,5,0.12,9,1.83,13,0.25,14,0.492,15,1.497,16,1.497,18,1.134,19,0.47,20,0.012,22,0.406,29,0.144,47,0.007,48,0.007,66,2.02,87,1.772,97,3.482,100,2.153,102,1.857,103,1.245,106,2.435,107,3.076,128,0.751,134,1.166,150,0.775,151,1.607,177,3.041,190,2.723,294,1.261,296,1.498,297,1.466,301,2.795,302,3.009,306,3.278,308,2.041,309,1.8,338,1.799,355,0.961,361,1.086,364,1.872,366,2.038,389,2.359,394,2.177,398,2.24,401,3.125,402,3.125,403,2.844,404,2.844,405,3.125,406,3.125,412,4.243,414,2.847,421,2.655,424,3.125,425,3.125,426,1.716,427,2.977,428,3.125,429,3.125,430,3.125,431,3.125,432,3.125,435,2.655,675,5.027,891,3.704,1182,3.407,1194,3.086,1304,3.086,1305,2.847,1308,3.407,1310,3.407,1686,5.348,1696,2.847,1697,4.574,1701,6.257,1702,6.257,1703,5.433,1704,5.433,1705,5.433,1706,5.433,1707,5.433,1708,5.433,1709,5.433,1710,3.894,1711,3.894,1712,3.894,1713,3.894,1714,3.894,1715,3.894]],["title/interfaces/LandsPileCardsPartialState.html",[0,0.128,1716,3.302]],["body/interfaces/LandsPileCardsPartialState.html",[0,0.185,2,0.87,3,0.139,4,0.139,5,0.139,11,1.569,13,0.289,14,0.611,15,1.615,18,0.923,19,0.339,20,0.012,22,0.411,29,0.286,30,1.776,45,1.047,47,0.008,48,0.008,96,4.326,132,3.074,134,0.67,177,2.588,297,0.843,330,2.347,355,1.113,361,1.258,362,1.569,394,2.504,426,2.672,440,1.93,443,2.668,444,2.668,445,2.668,446,1.93,447,2.478,448,2.668,449,3.199,450,2.478,451,3.199,452,1.861,458,2.083,459,2.083,460,2.168,461,3.199,466,2.57,675,2.89,1686,3.074,1689,3.574,1693,3.574,1696,3.296,1697,4.389,1716,4.758,1717,6.558,1718,5.94,1719,3.945,1720,5.253,1721,3.945,1722,3.945,1723,3.945,1724,3.945,1725,5.253,1726,3.945,1727,3.945,1728,3.945,1729,3.945,1730,3.945]],["title/interfaces/LandsPileCardsState.html",[0,0.128,1718,3.302]],["body/interfaces/LandsPileCardsState.html",[0,0.179,2,0.83,3,0.132,4,0.132,5,0.132,11,2.025,13,0.276,14,0.597,15,1.578,18,1.17,19,0.53,20,0.012,22,0.403,29,0.282,30,1.743,45,0.999,47,0.008,48,0.008,96,4.226,103,1.405,132,2.935,134,0.64,177,2.54,297,0.804,330,2.304,355,1.062,361,1.201,362,1.498,394,2.705,426,2.657,440,1.843,443,2.587,444,2.587,445,2.931,446,1.843,447,2.402,448,3.279,449,3.456,450,3.139,451,3.456,452,1.777,458,1.989,459,1.989,460,2.07,461,3.139,466,2.492,675,2.759,1686,2.935,1689,3.412,1693,3.412,1696,3.147,1697,4.255,1716,3.412,1717,5.093,1718,5.598,1719,3.767,1720,5.093,1721,3.767,1722,3.767,1723,3.767,1724,3.767,1725,5.093,1726,3.767,1727,3.767,1728,3.767,1729,3.767,1730,3.767]],["title/components/PhasesComponent.html",[49,1.603,227,2.003]],["body/components/PhasesComponent.html",[3,0.101,4,0.101,5,0.101,9,2.343,13,0.21,14,0.434,16,1.665,18,0.873,19,0.469,20,0.012,21,2.096,22,0.38,29,0.121,44,1.642,45,1.113,47,0.007,48,0.007,49,2.184,50,1.572,51,2.51,52,1.792,53,1.881,54,1.792,55,1.792,56,3.154,58,1.792,59,4.297,60,4.104,62,2.758,64,2.627,66,1.783,87,1.564,88,2.39,89,3.596,100,2.187,102,1.855,103,1.244,104,2.971,106,2.705,107,2.937,110,4.327,128,0.631,133,1.981,134,0.486,142,4.327,144,1.515,145,1.258,146,1.639,150,0.651,151,1.979,154,3.439,179,1.258,200,3.505,201,2.39,202,2.229,203,2.591,204,2.229,205,2.39,206,1.792,207,2.51,208,2.403,209,1.792,210,3.426,211,1.792,212,1.792,213,1.572,214,1.792,215,1.572,216,1.792,217,1.572,218,1.792,219,1.572,220,1.792,221,1.572,222,1.792,223,1.572,224,1.792,225,1.572,226,1.792,227,3.006,228,1.792,229,1.639,230,1.138,231,1.792,232,1.792,256,3.77,308,1.564,309,1.379,369,1.453,375,1.572,644,4.007,772,3.788,1265,4.149,1278,3.638,1288,2.096,1289,2.591,1380,4.149,1383,4.195,1384,4.195,1392,4.195,1394,4.195,1731,3.27,1732,4.795,1733,5.677,1734,4.795,1735,6.252,1736,4.795,1737,6.252,1738,6.252,1739,6.252,1740,6.252,1741,6.252,1742,4.795,1743,3.27,1744,4.795,1745,3.27,1746,3.27,1747,3.27,1748,3.27,1749,3.27,1750,3.27,1751,3.27,1752,3.27,1753,3.27,1754,3.27,1755,3.27,1756,3.27,1757,3.27,1758,3.27,1759,3.27,1760,3.27,1761,3.27,1762,3.27,1763,7.373,1764,4.795,1765,4.795,1766,4.795,1767,6.252]],["title/modules/PhasesModule.html",[233,1.924,531,2.84]],["body/modules/PhasesModule.html",[3,0.178,4,0.178,5,0.178,20,0.012,22,0.45,29,0.214,47,0.01,48,0.01,56,2.301,128,1.114,150,1.149,227,4.127,235,2.384,236,3.01,240,3.248,241,2.668,242,2.384,244,3.68,245,3.68,246,3.248,247,3.38,248,2.668,250,2.668,531,5.675,778,6.152,779,4.578,1768,5.054,1769,5.054,1770,5.054,1771,5.776,1772,5.776]],["title/modules/PilesModule.html",[233,1.924,532,2.84]],["body/modules/PilesModule.html",[3,0.174,4,0.174,5,0.174,20,0.012,22,0.447,29,0.209,47,0.01,48,0.01,56,2.25,128,1.089,150,1.124,179,2.173,229,4.291,235,2.332,236,2.969,240,3.204,241,2.609,242,2.332,244,3.631,245,3.631,246,3.204,247,3.335,248,2.609,250,3.204,532,5.748,1773,4.942,1774,4.942,1775,4.942,1776,4.942,1777,5.576,1778,5.649,1779,5.649,1780,5.649]],["title/injectables/StockPilesCardsEffects.html",[294,0.967,677,3.302]],["body/injectables/StockPilesCardsEffects.html",[3,0.095,4,0.095,5,0.095,9,1.546,10,2.039,13,0.198,14,0.415,15,1.098,16,0.737,19,0.412,20,0.012,22,0.437,29,0.114,44,1.68,45,1.41,47,0.006,48,0.006,61,3.413,87,1.497,100,1.811,102,0.914,103,0.613,128,0.594,134,1.012,146,1.544,147,3.129,148,2.587,149,1.423,150,0.613,151,1.894,230,2.791,242,1.894,294,1.065,296,1.186,297,1.272,300,1.773,301,2.263,302,2.437,304,1.773,306,2.7,308,1.981,309,1.747,310,4.26,311,4.169,317,3.322,318,2.78,319,2.78,320,2.78,321,2.78,322,2.78,323,2.78,324,2.78,325,2.78,326,2.78,328,2.78,329,2.78,330,2.364,331,2.78,334,1.773,338,2.533,340,4.015,343,2.402,347,3.354,354,1.544,355,0.76,356,1.773,359,2.253,361,0.859,362,1.072,364,1.481,366,1.613,369,2.7,370,3.893,376,1.689,377,1.689,378,1.613,677,3.637,679,4.126,785,3.637,786,3.637,803,3.68,1070,4.797,1448,4.942,1525,5.315,1529,4.015,1536,5.958,1617,4.797,1620,4.015,1781,4.364,1782,5.483,1783,5.483,1784,3.082,1785,4.589,1786,4.589,1787,4.589,1788,3.082,1789,4.589,1790,3.637,1791,4.797,1792,3.082,1793,4.589,1794,3.637,1795,4.589,1796,3.082,1797,4.589,1798,4.589,1799,4.589,1800,4.589,1801,4.589,1802,3.637,1803,4.015,1804,4.015,1805,3.738,1806,4.589,1807,4.589,1808,4.589,1809,3.637,1810,3.082,1811,3.082,1812,2.253,1813,4.142,1814,2.696,1815,2.696,1816,2.696]],["title/interfaces/StockPilesCardsEntity.html",[0,0.128,1805,2.84]],["body/interfaces/StockPilesCardsEntity.html",[0,0.211,2,0.898,3,0.143,4,0.143,5,0.143,8,2.069,10,2.069,13,0.299,14,0.555,15,1.898,18,1.282,19,0.547,20,0.012,22,0.416,29,0.254,30,1.798,31,3.758,32,3.816,44,1.149,47,0.008,48,0.008,134,0.692,141,3.59,144,1.938,145,1.791,230,2.386,283,2.821,297,0.87,367,2.821,368,3.716,369,3.457,370,4.985,375,2.238,376,2.551,377,3.361,378,2.437,379,2.551,552,2.821,679,2.821,803,4.712,905,3.69,1136,4.861,1137,4.861,1290,4.861,1291,3.404,1448,4.97,1501,3.69,1781,2.984,1791,4.074,1805,5.303,1813,3.175,1814,5.366,1817,4.656,1818,4.656,1819,4.656,1820,4.656,1821,4.656,1822,4.656,1823,4.656,1824,4.656,1825,4.656,1826,4.656]],["title/injectables/StockPilesCardsFacade.html",[294,0.967,645,2.84]],["body/injectables/StockPilesCardsFacade.html",[3,0.115,4,0.115,5,0.115,9,1.781,10,3.398,13,0.24,14,0.479,16,1.466,18,1.12,19,0.46,20,0.012,22,0.416,29,0.139,31,2.053,47,0.007,48,0.007,66,1.966,87,1.725,100,2.133,102,1.818,103,1.219,106,2.394,107,3.046,128,0.722,134,1.156,141,1.961,144,1.184,145,1.441,150,0.745,151,1.546,190,2.65,230,2.93,294,1.227,296,1.441,297,1.453,301,2.748,302,2.958,306,3.238,308,1.999,309,1.763,338,1.731,355,0.924,361,1.045,364,1.801,366,1.961,370,4.669,389,2.27,394,2.132,398,2.155,401,3.041,402,3.041,403,2.768,404,2.768,405,3.041,406,3.041,412,4.191,421,2.554,424,3.041,425,3.041,426,1.671,427,2.897,428,3.041,429,3.041,430,3.041,431,3.041,432,3.041,435,3.605,552,4.414,645,3.605,679,4.711,814,3.278,816,2.969,818,2.969,1195,3.278,1305,2.739,1306,3.278,1781,4.983,1812,2.739,1813,4.178,1815,3.278,1816,3.278,1827,6.128,1828,6.128,1829,6.128,1830,6.128,1831,3.747,1832,3.747,1833,3.747,1834,5.288,1835,5.288,1836,5.288,1837,3.747,1838,3.747,1839,3.747,1840,3.747]],["title/interfaces/StockPilesCardsPartialState.html",[0,0.128,1841,3.302]],["body/interfaces/StockPilesCardsPartialState.html",[0,0.184,2,0.862,3,0.137,4,0.137,5,0.137,11,1.555,13,0.287,14,0.608,18,0.918,19,0.336,20,0.012,22,0.409,29,0.285,30,1.77,34,1.505,35,1.505,36,1.555,37,1.607,45,1.037,47,0.008,48,0.008,134,0.665,230,2.495,297,0.835,330,2.339,355,1.103,361,1.247,362,1.555,394,2.495,426,2.669,440,1.913,443,2.653,444,2.653,445,2.653,446,1.913,447,2.464,448,1.986,449,3.187,450,2.464,451,3.187,452,1.845,453,2.34,454,2.449,458,2.065,459,2.065,460,2.149,461,3.187,466,2.555,679,2.708,1448,4.89,1781,2.865,1790,3.542,1794,3.542,1805,3.048,1809,3.542,1812,3.267,1813,4.07,1841,4.731,1842,6.539,1843,5.923,1844,3.911,1845,5.223,1846,3.911,1847,3.911,1848,3.911,1849,3.911,1850,5.223,1851,3.911,1852,3.911,1853,3.911,1854,3.911,1855,3.911,1856,3.911]],["title/interfaces/StockPilesCardsState.html",[0,0.128,1843,3.302]],["body/interfaces/StockPilesCardsState.html",[0,0.178,2,0.823,3,0.131,4,0.131,5,0.131,11,2.014,13,0.274,14,0.594,18,1.167,19,0.529,20,0.012,22,0.402,29,0.281,30,1.737,34,1.438,35,1.438,36,1.485,37,1.535,45,0.991,47,0.008,48,0.008,103,1.401,134,0.635,230,2.449,297,0.798,330,2.296,355,1.053,361,1.191,362,1.485,394,2.7,426,2.655,440,1.828,443,2.572,444,2.572,445,2.918,446,1.828,447,2.389,448,3.128,449,3.448,450,3.131,451,3.448,452,1.762,453,2.235,454,2.339,458,1.972,459,1.972,460,2.053,461,3.128,466,2.478,679,2.587,1448,4.8,1781,2.736,1790,3.384,1794,3.384,1805,2.911,1809,3.384,1812,3.121,1813,3.946,1841,3.384,1842,5.064,1843,5.579,1844,3.735,1845,5.064,1846,3.735,1847,3.735,1848,3.735,1849,3.735,1850,5.064,1851,3.735,1852,3.735,1853,3.735,1854,3.735,1855,3.735,1856,3.735]],["title/modules/UiCardModule.html",[233,1.924,1777,2.84]],["body/modules/UiCardModule.html",[3,0.173,4,0.173,5,0.173,20,0.012,22,0.446,29,0.208,47,0.01,48,0.01,128,1.085,150,1.119,179,2.164,219,3.928,235,2.321,236,2.961,240,3.195,241,2.598,242,2.321,244,3.621,245,3.621,246,3.195,247,3.326,248,2.598,250,3.195,545,4.111,547,4.457,601,5.834,1777,5.743,1857,4.921,1858,4.921,1859,5.625,1860,4.921,1861,5.625,1862,5.625,1863,5.625,1864,5.625]],["title/dependencies.html",[236,2.146,1865,3.041]],["body/dependencies.html",[20,0.012,34,1.911,47,0.01,48,0.01,128,1.094,146,2.844,207,2.97,236,2.429,248,2.621,306,2.522,354,2.844,355,1.4,356,3.264,378,2.97,446,2.429,492,6.085,493,5.512,552,3.438,779,4.497,1291,4.147,1866,5.674,1867,8.488,1868,5.674,1869,5.674,1870,5.674,1871,5.674,1872,5.674,1873,7.84,1874,5.674,1875,5.674,1876,5.674,1877,5.674,1878,5.674,1879,5.674,1880,5.674,1881,5.674,1882,5.674,1883,5.674,1884,5.674,1885,5.674,1886,5.674,1887,5.674]],["title/miscellaneous/enumerations.html",[1888,2.228,1889,4.385]],["body/miscellaneous/enumerations.html",[6,2.911,13,0.23,20,0.012,21,3.291,47,0.007,48,0.007,61,1.801,142,2.953,256,2.573,257,4.069,269,3.501,279,2.068,281,2.628,309,2.526,343,2.688,459,2.372,573,3.145,714,4.492,715,4.069,718,4.069,723,4.492,733,5.241,737,4.492,762,3.291,772,3.959,907,3.753,942,4.492,945,6.046,947,4.492,1087,4.492,1117,4.069,1267,4.069,1433,3.145,1435,4.492,1439,4.069,1681,4.492,1888,2.304,1889,3.145,1890,3.145,1891,3.145,1892,5.178,1893,5.135,1894,4.069,1895,4.069,1896,3.145,1897,3.595,1898,4.492,1899,3.595,1900,5.135,1901,5.135,1902,5.135,1903,3.595,1904,3.595,1905,5.135,1906,3.595,1907,5.135,1908,5.135,1909,5.135,1910,3.145,1911,5.135,1912,5.135,1913,5.135,1914,5.135,1915,5.135,1916,5.135,1917,5.135,1918,3.595,1919,3.595,1920,3.595,1921,5.135,1922,3.595,1923,3.595,1924,3.595,1925,3.595,1926,5.135,1927,5.135,1928,5.135,1929,5.135,1930,5.135,1931,2.849,1932,5.135,1933,3.145,1934,5.135,1935,5.135,1936,3.595,1937,3.595,1938,3.595,1939,3.595,1940,3.595,1941,3.595,1942,3.595,1943,3.595,1944,5.135,1945,5.135,1946,3.595,1947,3.595,1948,3.595,1949,5.135,1950,3.595,1951,3.595,1952,3.595,1953,3.595,1954,3.595,1955,3.595,1956,5.135,1957,3.595,1958,6.534,1959,3.595,1960,3.595,1961,3.595,1962,3.595,1963,2.849,1964,5.135,1965,5.135,1966,5.135,1967,5.135,1968,5.135,1969,5.135,1970,5.135,1971,5.135,1972,5.135,1973,5.135,1974,5.135,1975,5.135]],["title/miscellaneous/functions.html",[1888,2.228,1976,4.385]],["body/miscellaneous/functions.html",[1,2.577,6,2.993,7,2.794,13,0.226,15,1.709,16,2.008,18,1.266,19,0.624,20,0.012,24,2.26,42,3.085,43,4.231,47,0.007,48,0.007,102,2.443,103,1.638,106,2.998,148,2.58,251,4.416,252,2.794,253,4.326,254,4.734,255,3.701,256,3.987,258,4.124,263,2.404,276,3.085,285,4.43,289,3.085,293,3.085,309,1.014,450,2.673,541,2.794,543,3.085,553,4.43,706,4.151,707,2.794,708,4.43,709,4.43,711,4.43,712,4.43,713,4.43,715,4.013,717,2.794,718,4.013,722,4.43,729,3.085,736,4.43,741,3.085,759,2.136,762,3.245,878,2.404,1180,4.331,1265,2.577,1266,2.794,1271,3.085,1357,5.184,1368,5.184,1675,2.794,1676,3.085,1680,2.794,1685,3.085,1888,2.26,1890,3.085,1891,5.666,1892,5.133,1894,5.133,1895,4.013,1896,3.085,1976,3.085,1977,5.064,1978,5.064,1979,5.064,1980,5.064,1981,3.526,1982,5.064,1983,5.064,1984,5.064,1985,3.526,1986,5.064,1987,5.064,1988,5.064,1989,3.526,1990,5.064,1991,3.526,1992,5.064,1993,5.064,1994,5.926,1995,3.526,1996,7.665,1997,3.526,1998,3.526,1999,3.526,2000,3.526,2001,3.526,2002,3.526,2003,3.526,2004,3.526,2005,3.526,2006,3.526,2007,3.526]],["title/index.html",[13,0.223,2008,2.755,2009,2.755]],["body/index.html",[20,0.012,47,0.01,48,0.01,60,3.372,427,3.53,486,5.105,2010,6.442,2011,6.442,2012,6.442,2013,6.442,2014,6.442,2015,6.442,2016,6.442,2017,6.442,2018,6.442,2019,6.442,2020,6.442,2021,5.636,2022,6.442]],["title/license.html",[2008,2.755,2009,2.755,2023,2.755]],["body/license.html",[9,1.834,20,0.009,47,0.009,48,0.009,190,3.398,242,2.248,631,3.981,772,3.299,2023,4.316,2024,4.764,2025,7.384,2026,5.446,2027,5.446,2028,5.446,2029,5.446,2030,5.446,2031,6.781,2032,5.446,2033,5.446,2034,5.446,2035,5.446,2036,5.446,2037,5.446,2038,6.781,2039,8.378,2040,5.446,2041,5.446,2042,5.446,2043,5.446,2044,7.384,2045,5.446,2046,6.781,2047,5.446,2048,5.446,2049,5.446,2050,5.446,2051,5.446,2052,5.446,2053,5.446,2054,5.446,2055,5.446,2056,6.781,2057,5.446,2058,5.446,2059,5.446,2060,5.446,2061,5.446,2062,5.446,2063,6.781,2064,6.781,2065,5.446,2066,5.446,2067,5.446,2068,5.446,2069,5.446,2070,5.446,2071,5.446,2072,5.446,2073,5.446,2074,5.446,2075,5.446,2076,5.446,2077,5.446,2078,5.446,2079,5.446,2080,5.446,2081,5.446,2082,5.446,2083,5.446,2084,5.446,2085,5.446,2086,5.446,2087,5.446,2088,5.446,2089,5.446,2090,5.446,2091,5.446,2092,5.446]],["title/modules.html",[235,2.349]],["body/modules.html",[20,0.01,47,0.01,48,0.01,181,4.241,234,3.956,235,2.395,481,4.241,487,3.956,488,3.956,493,6.808,523,3.956,528,3.956,529,3.956,530,3.956,531,3.956,532,3.956,601,3.956,1337,4.598,1777,3.956,2093,8.591,2094,8.591,2095,8.62,2096,5.802]],["title/overview.html",[2097,4.98]],["body/overview.html",[2,0.731,20,0.012,47,0.007,48,0.007,50,3.612,51,1.984,89,3.547,91,3.736,93,3.736,95,3.953,97,3.953,213,3.612,215,3.612,217,3.612,219,2.965,221,3.612,223,3.612,225,3.612,227,3.612,229,3.765,234,4.986,235,1.565,236,2.282,237,3.317,238,3.317,239,3.317,240,2.463,241,1.751,242,1.565,296,1.458,481,5.839,482,3.317,483,3.317,484,3.317,485,3.317,486,4.888,487,5.713,488,4.986,523,5.766,524,3.317,525,3.317,526,3.317,527,3.317,528,4.986,529,4.986,530,4.986,531,4.986,532,5.229,601,5.387,602,3.317,603,3.317,604,3.317,641,3.317,642,3.317,643,4.205,644,3.953,645,4.205,773,3.317,774,3.317,775,3.317,963,3.317,964,3.317,965,3.317,1340,3.317,1341,3.317,1611,3.317,1612,3.317,1613,3.317,1768,3.317,1769,3.317,1770,3.317,1773,3.317,1774,3.317,1775,3.317,1776,3.317,1777,5.229,1857,3.317,1858,3.317,1860,3.317,2097,3.317,2098,3.791,2099,3.791,2100,3.791,2101,3.791]],["title/properties.html",[14,0.454,1865,3.041]],["body/properties.html",[14,0.603,20,0.011,47,0.011,48,0.011,283,4.034,2021,5.826,2023,5.277,2024,5.826,2102,6.659]],["title/todo.html",[1802,2.755,2008,2.755,2009,2.755]],["body/todo.html",[6,2.491,7,1.586,19,0.554,20,0.009,34,1.103,35,1.103,36,1.139,37,1.903,38,4.095,39,4.026,40,3.449,41,4.242,44,1.82,45,0.465,47,0.005,48,0.005,56,2.997,57,3.634,61,1.003,134,1.27,177,1.725,230,2.698,242,0.826,252,1.586,274,3.868,275,3.868,279,1.151,297,1.597,298,3.842,299,3.632,300,3.724,330,2.377,343,1.048,440,2.054,453,2.512,454,2.629,541,1.586,621,5.539,622,5.539,650,1.213,656,5.1,660,1.213,679,2.907,707,1.586,770,1.751,772,1.213,780,1.283,968,5.395,1049,2.864,1050,1.751,1266,1.586,1272,1.283,1345,1.751,1431,6.376,1439,1.586,1675,1.586,1680,1.586,1781,3.075,1802,1.586,1803,1.751,1804,1.751,1931,1.586,1963,1.586,2103,2.002,2104,4.799,2105,7.288,2106,2.002,2107,7.288,2108,2.002,2109,2.002,2110,2.002,2111,2.002,2112,2.002,2113,2.002,2114,7.191,2115,2.002,2116,2.002,2117,2.002,2118,2.002,2119,2.002,2120,2.002,2121,2.002,2122,2.002,2123,2.002,2124,2.002,2125,2.002,2126,2.002,2127,2.002,2128,2.002,2129,3.274,2130,3.274,2131,2.002,2132,6.256,2133,6.256,2134,6.256,2135,2.002,2136,3.274,2137,3.274,2138,2.002,2139,2.002,2140,2.002,2141,2.002,2142,8.047,2143,2.002,2144,2.002,2145,2.002,2146,4.799,2147,7.754,2148,2.002,2149,7.375,2150,2.002,2151,2.002,2152,3.274,2153,2.002,2154,2.002,2155,2.002,2156,2.002,2157,3.274,2158,2.002,2159,2.002,2160,2.002,2161,2.002,2162,2.002,2163,2.002,2164,2.002,2165,2.002,2166,2.002,2167,2.002,2168,2.002,2169,3.274,2170,2.002,2171,2.002,2172,2.002,2173,2.002,2174,2.002,2175,2.002,2176,2.002,2177,2.002,2178,2.002,2179,2.002,2180,2.002,2181,2.002,2182,2.002,2183,3.274,2184,3.274,2185,2.002,2186,2.002,2187,2.002,2188,2.002,2189,2.002,2190,2.002,2191,2.002,2192,2.002,2193,2.002,2194,2.002,2195,2.002,2196,2.002,2197,2.002,2198,2.002,2199,2.002,2200,2.002,2201,2.002,2202,4.154,2203,2.002,2204,2.002,2205,2.002,2206,2.002]],["title/miscellaneous/typealiases.html",[1888,2.228,2207,5.012]],["body/miscellaneous/typealiases.html",[6,3.111,13,0.399,19,0.467,20,0.012,47,0.01,48,0.01,269,4.243,717,5.827,759,4.455,1001,5.827,1116,5.827,1180,5.721,1888,3.989,1892,4.932,1894,5.827,1895,4.932,1898,5.445,1910,5.445,1931,4.932,1933,5.445,1963,4.932,2208,6.224]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":283,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/StockPilesCardsEntity.html":{},"properties.html":{}}}],["0.11.4",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":598,"title":{},"body":{"components/CardBackComponent.html":{}}}],["0.2.0",{"_index":2102,"title":{},"body":{"properties.html":{}}}],["0.3em",{"_index":582,"title":{},"body":{"components/CardBackComponent.html":{}}}],["0.5em",{"_index":599,"title":{},"body":{"components/CardBackComponent.html":{}}}],["1",{"_index":279,"title":{"interfaces/Chainable-1.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["10",{"_index":2099,"title":{},"body":{"overview.html":{}}}],["100",{"_index":567,"title":{},"body":{"components/CardBackComponent.html":{}}}],["103",{"_index":2153,"title":{},"body":{"todo.html":{}}}],["1054",{"_index":2116,"title":{},"body":{"todo.html":{}}}],["106",{"_index":2179,"title":{},"body":{"todo.html":{}}}],["1076",{"_index":2176,"title":{},"body":{"todo.html":{}}}],["111",{"_index":2139,"title":{},"body":{"todo.html":{}}}],["1134",{"_index":2177,"title":{},"body":{"todo.html":{}}}],["116",{"_index":2144,"title":{},"body":{"todo.html":{}}}],["1171",{"_index":2117,"title":{},"body":{"todo.html":{}}}],["120",{"_index":2145,"title":{},"body":{"todo.html":{}}}],["1216",{"_index":2118,"title":{},"body":{"todo.html":{}}}],["125",{"_index":2154,"title":{},"body":{"todo.html":{}}}],["129",{"_index":2155,"title":{},"body":{"todo.html":{}}}],["13",{"_index":2098,"title":{},"body":{"overview.html":{}}}],["1321",{"_index":2119,"title":{},"body":{"todo.html":{}}}],["1362",{"_index":2120,"title":{},"body":{"todo.html":{}}}],["138",{"_index":2185,"title":{},"body":{"todo.html":{}}}],["14.0.1",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["14.0.4",{"_index":1867,"title":{},"body":{"dependencies.html":{}}}],["14.4.0",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["1450",{"_index":2121,"title":{},"body":{"todo.html":{}}}],["15",{"_index":584,"title":{},"body":{"components/CardBackComponent.html":{}}}],["155",{"_index":2186,"title":{},"body":{"todo.html":{}}}],["1552",{"_index":2122,"title":{},"body":{"todo.html":{}}}],["159",{"_index":2204,"title":{},"body":{"todo.html":{}}}],["1603",{"_index":2123,"title":{},"body":{"todo.html":{}}}],["161",{"_index":2205,"title":{},"body":{"todo.html":{}}}],["165",{"_index":2187,"title":{},"body":{"todo.html":{}}}],["17",{"_index":2100,"title":{},"body":{"overview.html":{}}}],["1707",{"_index":2124,"title":{},"body":{"todo.html":{}}}],["175",{"_index":2188,"title":{},"body":{"todo.html":{}}}],["1755",{"_index":2125,"title":{},"body":{"todo.html":{}}}],["1803",{"_index":2126,"title":{},"body":{"todo.html":{}}}],["185",{"_index":2189,"title":{},"body":{"todo.html":{}}}],["1851",{"_index":2127,"title":{},"body":{"todo.html":{}}}],["19",{"_index":2141,"title":{},"body":{"todo.html":{}}}],["191",{"_index":2156,"title":{},"body":{"todo.html":{}}}],["195",{"_index":2157,"title":{},"body":{"todo.html":{}}}],["1px",{"_index":592,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{}}}],["2",{"_index":281,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":594,"title":{},"body":{"components/CardBackComponent.html":{}}}],["2021",{"_index":2027,"title":{},"body":{"license.html":{}}}],["21",{"_index":2146,"title":{},"body":{"todo.html":{}}}],["220",{"_index":2180,"title":{},"body":{"todo.html":{}}}],["229",{"_index":2158,"title":{},"body":{"todo.html":{}}}],["233",{"_index":2159,"title":{},"body":{"todo.html":{}}}],["234",{"_index":2190,"title":{},"body":{"todo.html":{}}}],["24",{"_index":2137,"title":{},"body":{"todo.html":{}}}],["243",{"_index":2181,"title":{},"body":{"todo.html":{}}}],["258",{"_index":2160,"title":{},"body":{"todo.html":{}}}],["262",{"_index":2161,"title":{},"body":{"todo.html":{}}}],["294",{"_index":2162,"title":{},"body":{"todo.html":{}}}],["298",{"_index":2163,"title":{},"body":{"todo.html":{}}}],["2px",{"_index":586,"title":{},"body":{"components/CardBackComponent.html":{}}}],["2rem",{"_index":205,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["3",{"_index":291,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["32",{"_index":2199,"title":{},"body":{"todo.html":{}}}],["332",{"_index":2206,"title":{},"body":{"todo.html":{}}}],["333",{"_index":2164,"title":{},"body":{"todo.html":{}}}],["337",{"_index":2165,"title":{},"body":{"todo.html":{}}}],["37",{"_index":2140,"title":{},"body":{"todo.html":{}}}],["371",{"_index":2166,"title":{},"body":{"todo.html":{}}}],["375",{"_index":2167,"title":{},"body":{"todo.html":{}}}],["379",{"_index":2191,"title":{},"body":{"todo.html":{}}}],["39",{"_index":2101,"title":{},"body":{"overview.html":{}}}],["391",{"_index":2192,"title":{},"body":{"todo.html":{}}}],["394",{"_index":2182,"title":{},"body":{"todo.html":{}}}],["395",{"_index":2193,"title":{},"body":{"todo.html":{}}}],["400",{"_index":2168,"title":{},"body":{"todo.html":{}}}],["404",{"_index":2169,"title":{},"body":{"todo.html":{}}}],["413",{"_index":2194,"title":{},"body":{"todo.html":{}}}],["424",{"_index":2195,"title":{},"body":{"todo.html":{}}}],["431",{"_index":2196,"title":{},"body":{"todo.html":{}}}],["443",{"_index":2197,"title":{},"body":{"todo.html":{}}}],["452",{"_index":2198,"title":{},"body":{"todo.html":{}}}],["49",{"_index":2200,"title":{},"body":{"todo.html":{}}}],["4em",{"_index":581,"title":{},"body":{"components/CardBackComponent.html":{}}}],["5",{"_index":2136,"title":{},"body":{"todo.html":{}}}],["50",{"_index":577,"title":{},"body":{"components/CardBackComponent.html":{}}}],["53",{"_index":2148,"title":{},"body":{"todo.html":{}}}],["6.1.1",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["6.4.22",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2201,"title":{},"body":{"todo.html":{}}}],["617",{"_index":2106,"title":{},"body":{"todo.html":{}}}],["66",{"_index":2150,"title":{},"body":{"todo.html":{}}}],["7",{"_index":994,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["71",{"_index":2110,"title":{},"body":{"todo.html":{}}}],["73",{"_index":2183,"title":{},"body":{"todo.html":{}}}],["74",{"_index":2151,"title":{},"body":{"todo.html":{}}}],["8.3.2",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["812",{"_index":2131,"title":{},"body":{"todo.html":{}}}],["818",{"_index":2135,"title":{},"body":{"todo.html":{}}}],["82",{"_index":2143,"title":{},"body":{"todo.html":{}}}],["85",{"_index":2184,"title":{},"body":{"todo.html":{}}}],["87",{"_index":2178,"title":{},"body":{"todo.html":{}}}],["913",{"_index":2170,"title":{},"body":{"todo.html":{}}}],["917",{"_index":2171,"title":{},"body":{"todo.html":{}}}],["935",{"_index":2113,"title":{},"body":{"todo.html":{}}}],["95",{"_index":2138,"title":{},"body":{"todo.html":{}}}],["951",{"_index":2172,"title":{},"body":{"todo.html":{}}}],["955",{"_index":2173,"title":{},"body":{"todo.html":{}}}],["980",{"_index":2174,"title":{},"body":{"todo.html":{}}}],["984",{"_index":2175,"title":{},"body":{"todo.html":{}}}],["986",{"_index":2115,"title":{},"body":{"todo.html":{}}}],["99",{"_index":2152,"title":{},"body":{"todo.html":{}}}],["_action",{"_index":329,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["above",{"_index":2062,"title":{},"body":{"license.html":{}}}],["access",{"_index":134,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["action.cardid",{"_index":1093,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.cards.map",{"_index":1799,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["action.cardtype",{"_index":1092,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.die",{"_index":1072,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.id",{"_index":1091,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.name",{"_index":1610,"title":{},"body":{"components/HandComponent.html":{}}}],["action.pileid",{"_index":340,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["action_card_interface_name",{"_index":31,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["actioncard",{"_index":1,"title":{"interfaces/ActionCard.html":{}},"body":{"interfaces/ActionCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["actioncards",{"_index":1501,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["actioncards.get(cardid",{"_index":1607,"title":{},"body":{"components/HandComponent.html":{}}}],["actioncards.get(handcard.cardid",{"_index":1577,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["actionname",{"_index":21,"title":{},"body":{"interfaces/ActionCard.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actions",{"_index":61,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["actions'},{'name",{"_index":212,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["actions.component.css",{"_index":63,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions.component.html",{"_index":65,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions/actions.component",{"_index":249,"title":{},"body":{"modules/ActionsModule.html":{}}}],["actions/actions.module",{"_index":535,"title":{},"body":{"modules/BoardModule.html":{}}}],["actionscomponent",{"_index":50,"title":{"components/ActionsComponent.html":{}},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["actionsmodule",{"_index":234,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["actual_component",{"_index":232,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["addcard",{"_index":781,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["addcards",{"_index":1617,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["addcardstohand",{"_index":1634,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstohand(handid",{"_index":1637,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstostockpilebottom",{"_index":1829,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardstostockpilebottom(pileid",{"_index":1831,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardtodiscardpile",{"_index":807,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["addcardtodiscardpile(card",{"_index":809,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["agglomeration",{"_index":176,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomeration.type",{"_index":951,"title":{},"body":{"components/DomainComponent.html":{}}}],["agglomeration_card_interface_name",{"_index":137,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["agglomeration_piles_cards_feature_key",{"_index":441,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationcard",{"_index":251,"title":{"interfaces/AgglomerationCard.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["agglomerationcard.color",{"_index":384,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationcard.type",{"_index":383,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationcards",{"_index":371,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DomainComponent.html":{}}}],["agglomerationcards.get(cardid",{"_index":930,"title":{},"body":{"components/DomainComponent.html":{}}}],["agglomerationpilecard",{"_index":1547,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.cardid",{"_index":1555,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.id",{"_index":1552,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.pileid",{"_index":1556,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilescards",{"_index":94,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/GameRulesService.html":{}}}],["agglomerationpilescardsactions",{"_index":360,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.initagglomerationnewgame",{"_index":436,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":437,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.loadagglomerationpilescardsfailure",{"_index":332,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.loadagglomerationpilescardssuccess",{"_index":327,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.removeagglomerationpilecard",{"_index":438,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.selectagglomerationpilecard",{"_index":348,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.selectfirstcardfromagglomerationpile",{"_index":335,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.setagglomerationpilescardserror",{"_index":351,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.setagglomerationpilescardsinitialized",{"_index":313,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter",{"_index":455,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.getinitialstate",{"_index":457,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.removeone(id",{"_index":468,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.setall(agglomerationpilescards",{"_index":465,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardseffects",{"_index":295,"title":{"injectables/AgglomerationPilesCardsEffects.html":{}},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"modules/DataAccessGameModule.html":{}}}],["agglomerationpilescardsentity",{"_index":130,"title":{"interfaces/AgglomerationPilesCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsfacade",{"_index":95,"title":{"injectables/AgglomerationPilesCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["agglomerationpilescardsfeature",{"_index":363,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardspartialstate",{"_index":439,"title":{"interfaces/AgglomerationPilesCardsPartialState.html":{}},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsreducer",{"_index":462,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsselectors",{"_index":365,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile",{"_index":416,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile(id_agglomeration_road",{"_index":418,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile(id_agglomeration_town",{"_index":420,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getfirstcardpivotforpile",{"_index":339,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["agglomerationpilescardsstate",{"_index":442,"title":{"interfaces/AgglomerationPilesCardsState.html":{}},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsstore",{"_index":305,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["agglomerationtype",{"_index":257,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["agglomerationtype.hamlet",{"_index":288,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationtype.road",{"_index":282,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationtype.town",{"_index":292,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["alexios",{"_index":1930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":574,"title":{},"body":{"components/CardBackComponent.html":{}}}],["allagglomerationpilescards",{"_index":390,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["alldiscardpilecards",{"_index":804,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldiscardpilecardsreverse",{"_index":805,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldomainscards",{"_index":1139,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["alleventspilecards",{"_index":1300,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["allhamletpivots",{"_index":391,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["allhandscards",{"_index":1632,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["alllandspilecards",{"_index":1701,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["allroadpivots",{"_index":392,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["allstockpilescards",{"_index":1827,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["alltownpivots",{"_index":393,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["altair",{"_index":1924,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altaïr",{"_index":1925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":2054,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":1866,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1868,"title":{},"body":{"dependencies.html":{}}}],["angular/cli@14.0.5",{"_index":2016,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":248,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1869,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":779,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["app.component",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":213,"title":{"components/AppComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["appmodule",{"_index":481,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/taormina",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Chainable.html":{}}}],["apps/ui",{"_index":640,"title":{},"body":{"interfaces/Chainable-1.html":{}}}],["arising",{"_index":2090,"title":{},"body":{"license.html":{}}}],["array",{"_index":552,"title":{},"body":{"components/CardBackComponent.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["array.from(actioncards.values",{"_index":1819,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["array.from(agglomerationcards.values",{"_index":382,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["array.from(developmentcards.values",{"_index":1820,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle",{"_index":1290,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle(array.from(eventcards.keys()).slice(1",{"_index":1295,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["arrayshuffle(array.from(landcards.keys",{"_index":1699,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["assertion",{"_index":2134,"title":{},"body":{"todo.html":{}}}],["associated",{"_index":2040,"title":{},"body":{"license.html":{}}}],["async",{"_index":941,"title":{},"body":{"components/DomainComponent.html":{}}}],["atmax",{"_index":1110,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["auspicious",{"_index":1942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auspiciousyear",{"_index":1433,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["authors",{"_index":2080,"title":{},"body":{"license.html":{}}}],["available",{"_index":181,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"modules.html":{}}}],["available_agglomeration_slot",{"_index":138,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_development_slot",{"_index":139,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_land_slot",{"_index":140,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["availableagglomerationslot",{"_index":271,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["availablecol",{"_index":1561,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["availabledevelopmentslot",{"_index":720,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["availablelandslot",{"_index":1683,"title":{},"body":{"interfaces/LandCard.html":{}}}],["availableresources",{"_index":1000,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["back",{"_index":549,"title":{},"body":{"components/CardBackComponent.html":{},"injectables/GameRulesService.html":{}}}],["back'},{'name",{"_index":218,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["back.component",{"_index":606,"title":{},"body":{"modules/CardBackModule.html":{}}}],["back.component.css",{"_index":550,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.html",{"_index":551,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts",{"_index":548,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:10",{"_index":559,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:11",{"_index":558,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:13",{"_index":560,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:14",{"_index":561,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.module",{"_index":1864,"title":{},"body":{"modules/UiCardModule.html":{}}}],["back.module.ts",{"_index":605,"title":{},"body":{"modules/CardBackModule.html":{}}}],["back/card",{"_index":547,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"modules/UiCardModule.html":{}}}],["background",{"_index":569,"title":{},"body":{"components/CardBackComponent.html":{}}}],["belowmax",{"_index":1109,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["beyond",{"_index":1046,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["black",{"_index":591,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{}}}],["blue",{"_index":1935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bluegoldminesandpastures",{"_index":992,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["blueresourcecount",{"_index":990,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["board",{"_index":512,"title":{},"body":{"components/BoardComponent.html":{}}}],["board'},{'name",{"_index":216,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["board.component.css",{"_index":513,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":514,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.component",{"_index":534,"title":{},"body":{"modules/BoardModule.html":{}}}],["board/board.module",{"_index":1344,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["boardcomponent",{"_index":215,"title":{"components/BoardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["boardmodule",{"_index":523,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":450,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":588,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{}}}],["bottom",{"_index":580,"title":{},"body":{"components/CardBackComponent.html":{}}}],["box",{"_index":595,"title":{},"body":{"components/CardBackComponent.html":{}}}],["break",{"_index":1822,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["brickyard",{"_index":1911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bridge",{"_index":1920,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2095,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["bruneton",{"_index":2030,"title":{},"body":{"license.html":{}}}],["building",{"_index":723,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["building.givesknowledge",{"_index":726,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.noduplicate",{"_index":727,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.tradepoints",{"_index":725,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.victorypoints",{"_index":728,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["buildingname",{"_index":715,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["buy",{"_index":175,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buyagglomeration",{"_index":67,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydevelopment",{"_index":68,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydisabled",{"_index":69,"title":{},"body":{"components/ActionsComponent.html":{}}}],["c",{"_index":2026,"title":{},"body":{"license.html":{}}}],["can't",{"_index":344,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["canprint",{"_index":263,"title":{"interfaces/CanPrint.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["card",{"_index":179,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["card'},{'name",{"_index":220,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["card.cardid",{"_index":1538,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.cardtype",{"_index":1537,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.component.html",{"_index":608,"title":{},"body":{"components/CardComponent.html":{}}}],["card.id",{"_index":786,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card.module.ts",{"_index":1862,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card.type",{"_index":785,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card/card.component",{"_index":1863,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card/src/lib/card",{"_index":546,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{}}}],["card/src/lib/card/card.component.ts",{"_index":607,"title":{},"body":{"components/CardComponent.html":{}}}],["card/src/lib/ui",{"_index":1861,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card0",{"_index":1248,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.col",{"_index":1256,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.id",{"_index":1260,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.row",{"_index":1257,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1",{"_index":1250,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.col",{"_index":1253,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.id",{"_index":1261,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.row",{"_index":1254,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["cardbackcomponent",{"_index":217,"title":{"components/CardBackComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["cardbackmodule",{"_index":601,"title":{"modules/CardBackModule.html":{}},"body":{"modules/CardBackModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardcomponent",{"_index":219,"title":{"components/CardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["cardid",{"_index":369,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards",{"_index":10,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandCard.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.actions",{"_index":361,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.effects",{"_index":651,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.effects.spec.ts",{"_index":2142,"title":{},"body":{"todo.html":{}}}],["cards.effects.ts",{"_index":300,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["cards.effects.ts:11",{"_index":1691,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:12",{"_index":794,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:139",{"_index":1088,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:15",{"_index":315,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:177",{"_index":1097,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:19",{"_index":1629,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:20",{"_index":1792,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:212",{"_index":1101,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:22",{"_index":1695,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:23",{"_index":798,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:235",{"_index":1043,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:26",{"_index":333,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:31",{"_index":1796,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:317",{"_index":1052,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:32",{"_index":1080,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:348",{"_index":1094,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:36",{"_index":1623,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:364",{"_index":1009,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:381",{"_index":1003,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:39",{"_index":1687,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:42",{"_index":790,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:422",{"_index":979,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:429",{"_index":983,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:43",{"_index":1084,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:444",{"_index":1098,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:46",{"_index":1618,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:488",{"_index":981,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:49",{"_index":353,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:50",{"_index":1810,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:51",{"_index":1275,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:52",{"_index":782,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["cards.effects.ts:62",{"_index":1076,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:82",{"_index":1788,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:85",{"_index":307,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:94",{"_index":1784,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:96",{"_index":1068,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.facade",{"_index":652,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.facade.ts",{"_index":389,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:104",{"_index":1159,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:121",{"_index":1157,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:127",{"_index":1187,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:131",{"_index":1186,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:135",{"_index":1169,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:139",{"_index":1165,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:14",{"_index":1310,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:143",{"_index":1171,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:147",{"_index":1167,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:151",{"_index":1173,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:159",{"_index":1161,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:165",{"_index":1175,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:17",{"_index":1308,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:171",{"_index":1163,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:177",{"_index":1178,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:18",{"_index":818,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:19",{"_index":423,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:20",{"_index":1194,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:21",{"_index":814,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:22",{"_index":414,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:23",{"_index":1192,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:24",{"_index":816,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:25",{"_index":434,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["cards.facade.ts:26",{"_index":1195,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:27",{"_index":820,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:28",{"_index":419,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:29",{"_index":808,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:31",{"_index":417,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["cards.facade.ts:32",{"_index":1304,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:36",{"_index":421,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:38",{"_index":399,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:39",{"_index":811,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:40",{"_index":1305,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:42",{"_index":1181,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:43",{"_index":812,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:44",{"_index":1306,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:46",{"_index":1182,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:48",{"_index":400,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["cards.facade.ts:49",{"_index":810,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:50",{"_index":1189,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:52",{"_index":1639,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:54",{"_index":407,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:56",{"_index":1640,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:58",{"_index":1832,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:60",{"_index":409,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:66",{"_index":411,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:72",{"_index":1190,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:76",{"_index":1176,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:80",{"_index":1188,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:86",{"_index":1156,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:90",{"_index":1184,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.map((card",{"_index":1620,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cards.models",{"_index":362,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.models.ts",{"_index":367,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards.reducer",{"_index":364,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.reducer.ts",{"_index":440,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cards.selectors",{"_index":366,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.selectors.ts",{"_index":2147,"title":{},"body":{"todo.html":{}}}],["cards.ts",{"_index":2130,"title":{},"body":{"todo.html":{}}}],["cards/agglomeration",{"_index":299,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/DataAccessGameModule.html":{},"todo.html":{}}}],["cards/discard",{"_index":650,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["cards/domains",{"_index":656,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["cards/events",{"_index":660,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["cards/hands",{"_index":671,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["cards/lands",{"_index":675,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["cards/stock",{"_index":679,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cardscount",{"_index":1454,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardsvictorypoints",{"_index":1521,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardtype",{"_index":803,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["catcherror",{"_index":357,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["catcherror((error",{"_index":350,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["celebration",{"_index":942,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["celebrationpoints",{"_index":708,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":962,"title":{},"body":{"components/DomainComponent.html":{}}}],["center",{"_index":573,"title":{},"body":{"components/CardBackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["chainable",{"_index":610,"title":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["change",{"_index":1360,"title":{},"body":{"injectables/GameEffects.html":{}}}],["changes",{"_index":999,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["charge",{"_index":2035,"title":{},"body":{"license.html":{}}}],["child",{"_index":628,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["claim",{"_index":2083,"title":{},"body":{"license.html":{}}}],["class",{"_index":150,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{}}}],["clay",{"_index":1970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["claypit",{"_index":1964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clear",{"_index":198,"title":{},"body":{"components/ActionsComponent.html":{}}}],["cleardomaincardselection",{"_index":70,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cluster_actionsmodule",{"_index":237,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declarations",{"_index":238,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_exports",{"_index":239,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":524,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":527,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_exports",{"_index":525,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":526,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule",{"_index":602,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule_declarations",{"_index":604,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule_exports",{"_index":603,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule",{"_index":641,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule_providers",{"_index":642,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dicemodule",{"_index":773,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_declarations",{"_index":775,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_exports",{"_index":774,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_domainmodule",{"_index":963,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_declarations",{"_index":965,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_exports",{"_index":964,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule",{"_index":1340,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_exports",{"_index":1341,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_imports",{"_index":1342,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["cluster_handmodule",{"_index":1611,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_declarations",{"_index":1613,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_exports",{"_index":1612,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_phasesmodule",{"_index":1768,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_declarations",{"_index":1769,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_exports",{"_index":1770,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule",{"_index":1773,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_declarations",{"_index":1774,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_exports",{"_index":1776,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_imports",{"_index":1775,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_uicardmodule",{"_index":1857,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_declarations",{"_index":1858,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_exports",{"_index":1860,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_imports",{"_index":1859,"title":{},"body":{"modules/UiCardModule.html":{}}}],["col",{"_index":1005,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["color",{"_index":253,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardBackComponent.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":203,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["combine",{"_index":424,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["combinelatest",{"_index":908,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["command",{"_index":624,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["commonmodule",{"_index":247,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["community",{"_index":1923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["communitycenter",{"_index":1922,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["component",{"_index":49,"title":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["component_template",{"_index":211,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["components",{"_index":51,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":358,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["concatmap(([_action",{"_index":1012,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["concatmap((action",{"_index":336,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["conditions",{"_index":2061,"title":{},"body":{"license.html":{}}}],["connection",{"_index":2091,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":331,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["console.log('custom",{"_index":626,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["constants",{"_index":375,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["constructor(actions",{"_index":304,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["constructor(domainscards",{"_index":862,"title":{},"body":{"components/DomainComponent.html":{}}}],["constructor(game",{"_index":88,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["constructor(gamerules",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(handscards",{"_index":1590,"title":{},"body":{"components/HandComponent.html":{}}}],["constructor(private",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["constructor(store",{"_index":398,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["container",{"_index":201,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["content",{"_index":572,"title":{},"body":{"components/CardBackComponent.html":{}}}],["contract",{"_index":2087,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2056,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2038,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2025,"title":{},"body":{"license.html":{}}}],["corepack@0.10.0",{"_index":2017,"title":{},"body":{"index.html":{}}}],["cost",{"_index":254,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":565,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["countandsteal",{"_index":1434,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["countandstealunprotectedgoldandwool",{"_index":1141,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["countstealresources",{"_index":969,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createactioncard",{"_index":33,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["createagglomerationcard",{"_index":272,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["createagglomerationpilescardsentity",{"_index":380,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["createavailabledomaincard",{"_index":1142,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createavailabledomaincard(domainid",{"_index":1158,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createbuilding",{"_index":722,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createbuilding(id",{"_index":1995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcard",{"_index":970,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createdevelopmentcard",{"_index":721,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["creatediscardpilecardsentity",{"_index":801,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{}}}],["creatediscardpilecardsentity(uuidv4",{"_index":784,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["createdomain",{"_index":840,"title":{},"body":{"interfaces/Domain.html":{}}}],["createdomainscardsentity",{"_index":1007,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createeffect",{"_index":310,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["createentityadapter",{"_index":443,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createeventcard",{"_index":1270,"title":{},"body":{"interfaces/EventCard.html":{}}}],["createeventspilecardsentity",{"_index":1292,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createeventspilecardsentity(uuidv4",{"_index":1299,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createhamlet",{"_index":285,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createhamlet(id",{"_index":2000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createhand",{"_index":1582,"title":{},"body":{"interfaces/Hand.html":{}}}],["createhandscardsentity",{"_index":1631,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{}}}],["createhandscardsentity(uuidv4",{"_index":1621,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["createinitialagglomerationpilescards",{"_index":314,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["createinitialdomainscards",{"_index":1079,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createinitialeventspilecards",{"_index":1279,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["createinitiallandspilecards",{"_index":1690,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["createinitialstockpilescards",{"_index":1791,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createlandcard",{"_index":1684,"title":{},"body":{"interfaces/LandCard.html":{}}}],["createlandspilecardsentity",{"_index":1698,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createlandspilecardsentity(uuidv4",{"_index":1700,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createreducer",{"_index":447,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createroad",{"_index":1977,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createroad(id",{"_index":276,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createselector",{"_index":428,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["createship",{"_index":1978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createship(id",{"_index":729,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createstockpilescardsentity",{"_index":1814,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createstockpilescardsentity(uuidv4",{"_index":1786,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["createtown",{"_index":1979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtown(id",{"_index":289,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior",{"_index":736,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior(id",{"_index":1999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":1763,"title":{},"body":{"components/PhasesComponent.html":{}}}],["custom",{"_index":319,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cypress",{"_index":620,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":634,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"drag",{"_index":629,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add('login",{"_index":625,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":637,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["damages",{"_index":2084,"title":{},"body":{"license.html":{}}}],["data",{"_index":368,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["dataaccessgamemodule",{"_index":487,"title":{"modules/DataAccessGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"modules.html":{},"overview.html":{}}}],["deal",{"_index":2043,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2092,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":244,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["declare",{"_index":618,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["default",{"_index":308,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["defined",{"_index":100,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["dependencies",{"_index":236,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["development",{"_index":187,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["development.name",{"_index":950,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["development_card_interface_name",{"_index":141,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["developmentcard",{"_index":706,"title":{"interfaces/DevelopmentCard.html":{}},"body":{"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/EventCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["developmentcards",{"_index":905,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["developmentcards.get(cardid",{"_index":929,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["developmenttype",{"_index":714,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["developmenttype.building",{"_index":724,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.ship",{"_index":734,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.warrior",{"_index":738,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["devtools",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["dice",{"_index":743,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice'},{'name",{"_index":222,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["dice.component.css",{"_index":744,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice.component.html",{"_index":745,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice/dice.component",{"_index":777,"title":{},"body":{"modules/DiceModule.html":{}}}],["dice/dice.module",{"_index":536,"title":{},"body":{"modules/BoardModule.html":{}}}],["dicecomponent",{"_index":221,"title":{"components/DiceComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["diceid",{"_index":1893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dicemodule",{"_index":528,"title":{"modules/DiceModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DiceModule.html":{},"modules.html":{},"overview.html":{}}}],["dicevalue",{"_index":1180,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["die",{"_index":771,"title":{},"body":{"components/DiceComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["different",{"_index":1025,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["directive",{"_index":209,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["directives",{"_index":231,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["disable",{"_index":35,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["discard",{"_index":800,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discard_pile_cards_feature_key",{"_index":827,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecard",{"_index":789,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecards",{"_index":793,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/GameRulesService.html":{}}}],["discardpilecardsactions",{"_index":799,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.adddiscardpilecard",{"_index":788,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":824,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsactions.loaddiscardpilecardsfailure",{"_index":797,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.loaddiscardpilecardssuccess",{"_index":796,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.setdiscardpilecardsinitialized",{"_index":792,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter",{"_index":829,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.addone(discardpilecard",{"_index":837,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.getinitialstate",{"_index":831,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.setall(discardpilecards",{"_index":835,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardseffects",{"_index":648,"title":{"injectables/DiscardPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsentity",{"_index":802,"title":{"interfaces/DiscardPileCardsEntity.html":{}},"body":{"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsfacade",{"_index":643,"title":{"injectables/DiscardPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["discardpilecardsfeature",{"_index":821,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardspartialstate",{"_index":826,"title":{"interfaces/DiscardPileCardsPartialState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsreducer",{"_index":832,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsselectors",{"_index":822,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsstate",{"_index":828,"title":{"interfaces/DiscardPileCardsState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["display",{"_index":202,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["distribute",{"_index":2052,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":2041,"title":{},"body":{"license.html":{}}}],["dom",{"_index":54,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain",{"_index":186,"title":{"interfaces/Domain.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{}}}],["domain'},{'name",{"_index":224,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain.color",{"_index":938,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.css",{"_index":842,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.html",{"_index":843,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain/domain.component",{"_index":967,"title":{},"body":{"modules/DomainModule.html":{}}}],["domain/domain.module",{"_index":537,"title":{},"body":{"modules/BoardModule.html":{}}}],["domaincard",{"_index":161,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.cardid",{"_index":1574,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.cardtype",{"_index":1573,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.col",{"_index":1558,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.domainid",{"_index":928,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.id",{"_index":1554,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.row",{"_index":1576,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard?.cardtype",{"_index":162,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards",{"_index":1546,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards.filter",{"_index":160,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards.length",{"_index":1549,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards[0",{"_index":1550,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincardtype",{"_index":1116,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"miscellaneous/typealiases.html":{}}}],["domaincolor",{"_index":256,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["domaincolor.red",{"_index":1422,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["domaincomponent",{"_index":223,"title":{"components/DomainComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["domainid",{"_index":861,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["domainmodule",{"_index":529,"title":{"modules/DomainModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DomainModule.html":{},"modules.html":{},"overview.html":{}}}],["domains",{"_index":197,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domains.get(this.domainid",{"_index":909,"title":{},"body":{"components/DomainComponent.html":{}}}],["domains_cards_feature_key",{"_index":1222,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscard.id).includes(pivotid",{"_index":933,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards",{"_index":90,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domainscards.filter((domaincard",{"_index":927,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards.map((domainscard",{"_index":932,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscardsactions",{"_index":1103,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.adddomaincard",{"_index":1008,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.countandstealunprotectedgoldandwool",{"_index":1209,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.createdomaincard",{"_index":1208,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresources",{"_index":1200,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1202,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesfordie",{"_index":1201,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.loaddomainscardsfailure",{"_index":1083,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.loaddomainscardssuccess",{"_index":1082,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.putcardinpivot",{"_index":1207,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.setdomainscardserror",{"_index":1042,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.setdomainscardsinitialized",{"_index":1078,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.toggledomaincardselection",{"_index":1205,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.updatedomaincard",{"_index":1051,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.updatedomainscards",{"_index":1002,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsadapter",{"_index":1225,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.addone(domaincard",{"_index":1239,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.getinitialstate",{"_index":1227,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.removeone(id",{"_index":1263,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.setall(domainscards",{"_index":1232,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updatemany(updates",{"_index":1237,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updateone(update",{"_index":1235,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardseffects",{"_index":654,"title":{"injectables/DomainsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{}}}],["domainscardsentity",{"_index":129,"title":{"interfaces/DomainsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsfacade",{"_index":91,"title":{"injectables/DomainsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["domainscardsfeature",{"_index":1104,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardspartialstate",{"_index":1221,"title":{"interfaces/DomainsCardsPartialState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsreducer",{"_index":1228,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsselectors",{"_index":1105,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.count_1",{"_index":1061,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_2",{"_index":1063,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_3",{"_index":1065,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_4",{"_index":1067,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getcardsvictorypointsfordomain(domainid",{"_index":1217,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getcelebrationpointsfordomain(domainid",{"_index":1219,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getdomainresourcecountseenbythieves",{"_index":987,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getdomainunprotectedgoldminesandpastures",{"_index":988,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardpivotwithlockedresources",{"_index":1011,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseauspiciousyear",{"_index":1054,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseoneproduction",{"_index":1071,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreasetwoproduction",{"_index":1073,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getmasterydomainfortype(type",{"_index":1216,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getmerchantshipcountfordomain(domainid",{"_index":1218,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.hasdomaincommunitycenter(domainid",{"_index":1220,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsstate",{"_index":1223,"title":{"interfaces/DomainsCardsState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsstore",{"_index":978,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["draw",{"_index":1956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drawcardfromstocktohand",{"_index":1440,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawcardfromstocktohand(pileid",{"_index":1450,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand",{"_index":1441,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand(pileid",{"_index":1453,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["dual",{"_index":633,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["duel",{"_index":611,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duel/src/app/app.component.ts",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:12",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:9",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.module.ts",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/commands.ts",{"_index":612,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["e2e/src/support/commands.ts:15",{"_index":616,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["effects",{"_index":406,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["effectsmodule",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([agglomerationpilescardseffects",{"_index":696,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([discardpilecardseffects",{"_index":705,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([domainscardseffects",{"_index":687,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([eventspilecardseffects",{"_index":693,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([gameeffects",{"_index":683,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([handscardseffects",{"_index":690,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([landspilecardseffects",{"_index":702,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([stockpilescardseffects",{"_index":699,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forroot",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":208,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["email",{"_index":617,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["empty",{"_index":346,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{}}}],["enable",{"_index":284,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["engine",{"_index":136,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["engine.module.ts",{"_index":1339,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/feature",{"_index":1338,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/game",{"_index":1431,"title":{},"body":{"injectables/GameRulesService.html":{},"todo.html":{}}}],["entities",{"_index":1258,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["entityadapter",{"_index":444,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["entitystate",{"_index":445,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["enumerations",{"_index":1889,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["environment.production",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":330,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["error(`can't",{"_index":731,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["error(`couldn't",{"_index":1107,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["error.message",{"_index":352,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["errormsg",{"_index":451,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["eslint",{"_index":34,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{},"todo.html":{}}}],["eslint/explicit",{"_index":2149,"title":{},"body":{"todo.html":{}}}],["eslint/no",{"_index":39,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["event",{"_index":772,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{}}}],["event.name",{"_index":1766,"title":{},"body":{"components/PhasesComponent.html":{}}}],["event_0",{"_index":1297,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["event_card_interface_name",{"_index":1269,"title":{},"body":{"interfaces/EventCard.html":{}}}],["eventcard",{"_index":1265,"title":{"interfaces/EventCard.html":{}},"body":{"interfaces/EventCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/functions.html":{}}}],["eventcards",{"_index":1289,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventcards.get(cardid",{"_index":1758,"title":{},"body":{"components/PhasesComponent.html":{}}}],["eventcards.get(pivot.cardid)?.name",{"_index":1470,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventdie",{"_index":1379,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["eventfromvalue",{"_index":1980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventfromvalue(value",{"_index":2002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventname",{"_index":1267,"title":{},"body":{"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["eventname.auspiciousyear",{"_index":1471,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventname.festival",{"_index":1480,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["events",{"_index":1286,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["events_pile_cards_feature_key",{"_index":1319,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecards",{"_index":1278,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecards[0].id",{"_index":1330,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions",{"_index":1285,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.loadeventspilecardsfailure",{"_index":1282,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsactions.loadeventspilecardssuccess",{"_index":1281,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesinitializedeventspilecards",{"_index":1277,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesselectfirsteventspilecards",{"_index":1284,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter",{"_index":1321,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.getinitialstate",{"_index":1323,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.removeone",{"_index":1336,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.setall(eventspilecards",{"_index":1327,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardseffects",{"_index":658,"title":{"injectables/EventsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsentity",{"_index":1288,"title":{"interfaces/EventsPileCardsEntity.html":{}},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecardsfacade",{"_index":644,"title":{"injectables/EventsPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["eventspilecardsfeature",{"_index":1287,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardspartialstate",{"_index":1318,"title":{"interfaces/EventsPileCardsPartialState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsreducer",{"_index":1324,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsselectors",{"_index":1312,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardsstate",{"_index":1320,"title":{"interfaces/EventsPileCardsState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsstore",{"_index":1274,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventvalue",{"_index":762,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["eventvalue.event",{"_index":1478,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventvalue.thieves",{"_index":1499,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["evie",{"_index":1927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["example",{"_index":627,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["exchange",{"_index":1962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["existing",{"_index":636,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["explicit",{"_index":40,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["exports",{"_index":245,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["expose",{"_index":429,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["express",{"_index":2071,"title":{},"body":{"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ezio",{"_index":1926,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade",{"_index":432,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["false",{"_index":461,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["featureenginemodule",{"_index":1337,"title":{"modules/FeatureEngineModule.html":{}},"body":{"modules/FeatureEngineModule.html":{},"modules.html":{}}}],["featuregamemodule",{"_index":488,"title":{"modules/FeatureGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["festival",{"_index":1435,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":317,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["field",{"_index":1967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["filename",{"_index":2104,"title":{},"body":{"todo.html":{}}}],["files",{"_index":2042,"title":{},"body":{"license.html":{}}}],["filter",{"_index":147,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["filter((die",{"_index":1498,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((handcard",{"_index":168,"title":{},"body":{"components/ActionsComponent.html":{}}}],["filter((pivot",{"_index":1469,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((stockpilecard",{"_index":1526,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((value",{"_index":1487,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filtering",{"_index":1804,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["find",{"_index":732,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{}}}],["finish",{"_index":1767,"title":{},"body":{"components/PhasesComponent.html":{}}}],["first",{"_index":345,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["firstland",{"_index":1020,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstland.type",{"_index":1024,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstpivot",{"_index":1018,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["fitness",{"_index":2076,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":2112,"title":{},"body":{"todo.html":{}}}],["fixmes",{"_index":2111,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":200,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["following",{"_index":2060,"title":{},"body":{"license.html":{}}}],["force",{"_index":1359,"title":{},"body":{"injectables/GameEffects.html":{}}}],["foreign",{"_index":1136,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["forest",{"_index":1965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":1070,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["formsmodule",{"_index":778,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{}}}],["foundid",{"_index":1241,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["foundry",{"_index":1914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["free",{"_index":2034,"title":{},"body":{"license.html":{}}}],["fromagglomerationpilescards",{"_index":663,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromagglomerationpilescards.agglomeration_piles_cards_feature_key",{"_index":691,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromagglomerationpilescards.agglomerationpilescardsreducer",{"_index":692,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards",{"_index":653,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discard_pile_cards_feature_key",{"_index":703,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discardpilecardsreducer",{"_index":704,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards",{"_index":657,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domains_cards_feature_key",{"_index":685,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domainscardsreducer",{"_index":686,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards",{"_index":661,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.events_pile_cards_feature_key",{"_index":700,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.eventspilecardsreducer",{"_index":701,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame",{"_index":667,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame.gamereducer",{"_index":682,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards",{"_index":672,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.hands_cards_feature_key",{"_index":688,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.handscardsreducer",{"_index":689,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards",{"_index":676,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.lands_pile_cards_feature_key",{"_index":694,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.landspilecardsreducer",{"_index":695,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards",{"_index":680,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stock_piles_cards_feature_key",{"_index":697,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stockpilescardsreducer",{"_index":698,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["function",{"_index":41,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["functions",{"_index":1976,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2059,"title":{},"body":{"license.html":{}}}],["game",{"_index":104,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["game.actions",{"_index":1373,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game.module.ts",{"_index":647,"title":{},"body":{"modules/DataAccessGameModule.html":{},"modules/FeatureGameModule.html":{}}}],["game.reducer",{"_index":1375,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game.selectors",{"_index":1377,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game/src/lib/+state/agglomeration",{"_index":298,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/discard",{"_index":780,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/domains",{"_index":968,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/events",{"_index":1272,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts",{"_index":1345,"title":{},"body":{"injectables/GameEffects.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts:16",{"_index":1355,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:26",{"_index":1371,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:49",{"_index":1364,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:59",{"_index":1350,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.facade.ts",{"_index":1378,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:20",{"_index":1409,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:21",{"_index":1403,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:24",{"_index":1401,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:25",{"_index":1405,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:26",{"_index":1407,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:27",{"_index":1387,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:35",{"_index":1388,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:39",{"_index":1396,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:43",{"_index":1398,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:47",{"_index":1391,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:51",{"_index":1397,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:55",{"_index":1393,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:59",{"_index":1395,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:63",{"_index":1390,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.reducer.ts",{"_index":1418,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game/src/lib/+state/hands",{"_index":1616,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["game/src/lib/+state/lands",{"_index":1686,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["game/src/lib/+state/stock",{"_index":1781,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/actions/actions.module.ts",{"_index":243,"title":{},"body":{"modules/ActionsModule.html":{}}}],["game/src/lib/actions/actions/actions.component.ts",{"_index":57,"title":{},"body":{"components/ActionsComponent.html":{},"todo.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:110",{"_index":113,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:121",{"_index":127,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:129",{"_index":126,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:133",{"_index":117,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:139",{"_index":124,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:143",{"_index":123,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:147",{"_index":116,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:151",{"_index":122,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:155",{"_index":121,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:165",{"_index":114,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:175",{"_index":111,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:179",{"_index":125,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:32",{"_index":101,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:42",{"_index":109,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:48",{"_index":105,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:52",{"_index":118,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:58",{"_index":119,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:71",{"_index":112,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:85",{"_index":108,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:89",{"_index":115,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:97",{"_index":120,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/board/board.module.ts",{"_index":533,"title":{},"body":{"modules/BoardModule.html":{}}}],["game/src/lib/board/board/board.component.ts",{"_index":511,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:15",{"_index":522,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:16",{"_index":521,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:17",{"_index":520,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:18",{"_index":519,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/data",{"_index":646,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["game/src/lib/dice/dice.module.ts",{"_index":776,"title":{},"body":{"modules/DiceModule.html":{}}}],["game/src/lib/dice/dice/dice.component.ts",{"_index":742,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:19",{"_index":753,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:23",{"_index":761,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:32",{"_index":757,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:36",{"_index":756,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:40",{"_index":754,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:44",{"_index":755,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:48",{"_index":760,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/domain/domain.module.ts",{"_index":966,"title":{},"body":{"modules/DomainModule.html":{}}}],["game/src/lib/domain/domain/domain.component.ts",{"_index":841,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:107",{"_index":875,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:115",{"_index":872,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:119",{"_index":866,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:123",{"_index":877,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:127",{"_index":893,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:135",{"_index":897,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:139",{"_index":895,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:143",{"_index":899,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:147",{"_index":890,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:35",{"_index":864,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:37",{"_index":903,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:38",{"_index":900,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:39",{"_index":904,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:40",{"_index":901,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:41",{"_index":902,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:42",{"_index":863,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:49",{"_index":873,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:53",{"_index":882,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:57",{"_index":868,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:61",{"_index":884,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:67",{"_index":886,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:73",{"_index":888,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:77",{"_index":870,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:92",{"_index":880,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/feature",{"_index":1343,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["game/src/lib/hand/hand.module.ts",{"_index":1614,"title":{},"body":{"modules/HandModule.html":{}}}],["game/src/lib/hand/hand/hand.component.ts",{"_index":1583,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:24",{"_index":1592,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:26",{"_index":1601,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:27",{"_index":1591,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:31",{"_index":1596,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:35",{"_index":1598,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:43",{"_index":1594,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:47",{"_index":1595,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:51",{"_index":1600,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/phases/phases.module.ts",{"_index":1771,"title":{},"body":{"modules/PhasesModule.html":{}}}],["game/src/lib/phases/phases/phases.component.ts",{"_index":1731,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:22",{"_index":1753,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:23",{"_index":1742,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:30",{"_index":1746,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:34",{"_index":1750,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:38",{"_index":1747,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:42",{"_index":1751,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:46",{"_index":1745,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:50",{"_index":1748,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:54",{"_index":1749,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:58",{"_index":1743,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:62",{"_index":1752,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/piles/piles.module.ts",{"_index":1778,"title":{},"body":{"modules/PilesModule.html":{}}}],["game/src/test/fixtures/domains",{"_index":2129,"title":{},"body":{"todo.html":{}}}],["game_feature_key",{"_index":1419,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions",{"_index":1372,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions.seteventdie",{"_index":1363,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setnextproductiondie",{"_index":1370,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setproductiondie",{"_index":1369,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throweventdie",{"_index":1353,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throwproductiondie",{"_index":1354,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameeffects",{"_index":664,"title":{"injectables/GameEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameEffects.html":{}}}],["gameended",{"_index":1436,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["gamefacade",{"_index":89,"title":{"injectables/GameFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["gamepartialstate",{"_index":1374,"title":{"interfaces/GamePartialState.html":{}},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamephase",{"_index":142,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamephase.initialthrow",{"_index":763,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{}}}],["gamephase.loopactions",{"_index":155,"title":{},"body":{"components/ActionsComponent.html":{}}}],["gamephase.loopthrow",{"_index":764,"title":{},"body":{"components/DiceComponent.html":{}}}],["gamereducer",{"_index":1423,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamerules",{"_index":98,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["gamerulesservice",{"_index":99,"title":{"injectables/GameRulesService.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["gameselectors",{"_index":1376,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["gamestate",{"_index":1420,"title":{"interfaces/GameState.html":{}},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamestore",{"_index":1349,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gap",{"_index":204,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["generated",{"_index":2011,"title":{},"body":{"index.html":{}}}],["getaction",{"_index":1735,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getactioncard",{"_index":1586,"title":{},"body":{"components/HandComponent.html":{}}}],["getactioncard(cardid",{"_index":1593,"title":{},"body":{"components/HandComponent.html":{}}}],["getagglomerationcard",{"_index":844,"title":{},"body":{"components/DomainComponent.html":{}}}],["getagglomerationcard(cardid",{"_index":865,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcardsvictorypointsfordomain",{"_index":1143,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcardsvictorypointsfordomain(domainid",{"_index":1160,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpoints",{"_index":845,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domain.id",{"_index":944,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domainid",{"_index":867,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpointsfordomain",{"_index":1144,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpointsfordomain(domainid",{"_index":1162,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcolumnstemplate",{"_index":846,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcolumnstemplate(domainid",{"_index":869,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdevelopmentcard",{"_index":847,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdevelopmentcard(cardid",{"_index":871,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdomain",{"_index":848,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainmaxcol",{"_index":1145,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxcol(domainid",{"_index":1164,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow",{"_index":1146,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow(domainid",{"_index":1166,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol",{"_index":1147,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol(domainid",{"_index":1168,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow",{"_index":1148,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow(domainid",{"_index":1170,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainscards",{"_index":849,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainscards(domainid",{"_index":874,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainselectedagglomerationslots",{"_index":71,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselecteddevelopmentcards",{"_index":72,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselectedlandcards",{"_index":73,"title":{},"body":{"components/ActionsComponent.html":{}}}],["geteventcard",{"_index":1736,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventcard(cardid",{"_index":1744,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventdie",{"_index":747,"title":{},"body":{"components/DiceComponent.html":{}}}],["gethand",{"_index":1587,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards",{"_index":1588,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards(handid",{"_index":1597,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandselecteddevelopmentcard",{"_index":74,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getimgsrc",{"_index":553,"title":{},"body":{"components/CardBackComponent.html":{},"miscellaneous/functions.html":{}}}],["getimgsrc(name",{"_index":2004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlandcard",{"_index":850,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcard(cardid",{"_index":876,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcardfrompivot",{"_index":976,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getlandcardfrompivot(pivot",{"_index":980,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getmasterydomainfortype",{"_index":1149,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmasterydomainfortype(masterypointstype.strength",{"_index":913,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(masterypointstype.trade",{"_index":916,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(type",{"_index":1172,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain",{"_index":1150,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain(domainid",{"_index":1174,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getnextproductiondie",{"_index":748,"title":{},"body":{"components/DiceComponent.html":{}}}],["getphase",{"_index":1737,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getpileselectedlandcard",{"_index":75,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getplayer",{"_index":1738,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getproductiondie",{"_index":749,"title":{},"body":{"components/DiceComponent.html":{}}}],["getrandomeventdievalue",{"_index":1357,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrandomproductiondievalue",{"_index":1368,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrowstemplate",{"_index":851,"title":{},"body":{"components/DomainComponent.html":{}}}],["getrowstemplate(domainid",{"_index":879,"title":{},"body":{"components/DomainComponent.html":{}}}],["getselectedactioncard",{"_index":76,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedagglomerationpilecard",{"_index":77,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailableagglomerationslots",{"_index":78,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailabledevelopmentslots",{"_index":79,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailablelandslots",{"_index":80,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedeventspilecard",{"_index":1739,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getselectedhandcard",{"_index":81,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getshipscount",{"_index":852,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domain.id",{"_index":940,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domainid",{"_index":881,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery",{"_index":853,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery(domainid",{"_index":883,"title":{},"body":{"components/DomainComponent.html":{}}}],["getting",{"_index":2008,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettrademastery",{"_index":854,"title":{},"body":{"components/DomainComponent.html":{}}}],["gettrademastery(domainid",{"_index":885,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints",{"_index":855,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domain.id",{"_index":949,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domainid",{"_index":887,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypointsfordomain",{"_index":1442,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["getvictorypointsfordomain(domainid",{"_index":1456,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["give",{"_index":193,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["givelockedresources",{"_index":82,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["givesknowledge",{"_index":709,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["globally",{"_index":2013,"title":{},"body":{"index.html":{}}}],["goes",{"_index":323,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["gold",{"_index":1972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldmine",{"_index":1966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldsmith",{"_index":1902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["granted",{"_index":2033,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2096,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":570,"title":{},"body":{"components/CardBackComponent.html":{}}}],["grid",{"_index":961,"title":{},"body":{"components/DomainComponent.html":{}}}],["hamlet",{"_index":1908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hamletentities",{"_index":387,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["hand",{"_index":188,"title":{"interfaces/Hand.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{}}}],["hand'},{'name",{"_index":226,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["hand.color",{"_index":1609,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.css",{"_index":1584,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.html",{"_index":1585,"title":{},"body":{"components/HandComponent.html":{}}}],["hand/hand.component",{"_index":1615,"title":{},"body":{"modules/HandModule.html":{}}}],["hand/hand.module",{"_index":538,"title":{},"body":{"modules/BoardModule.html":{}}}],["handcard",{"_index":165,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["handcard.cardid",{"_index":1563,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.cardtype",{"_index":1572,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.handid",{"_index":1606,"title":{},"body":{"components/HandComponent.html":{}}}],["handcard?.cardtype",{"_index":166,"title":{},"body":{"components/ActionsComponent.html":{}}}],["handcomponent",{"_index":225,"title":{"components/HandComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["handid",{"_index":1451,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{}}}],["handmodule",{"_index":530,"title":{"modules/HandModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/HandModule.html":{},"modules.html":{},"overview.html":{}}}],["hands",{"_index":1581,"title":{},"body":{"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["hands.get(this.handid",{"_index":1602,"title":{},"body":{"components/HandComponent.html":{}}}],["hands_cards_feature_key",{"_index":1653,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards",{"_index":92,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards.filter((handcard",{"_index":1605,"title":{},"body":{"components/HandComponent.html":{}}}],["handscardsactions",{"_index":1630,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsactions.addhandscards",{"_index":1622,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardsfailure",{"_index":1628,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardssuccess",{"_index":1627,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.sethandscardsinitialized",{"_index":1625,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsadapter",{"_index":1655,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.addmany(handscards",{"_index":1666,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.getinitialstate",{"_index":1657,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.removeone(id",{"_index":1671,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.setall(handscards",{"_index":1662,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardseffects",{"_index":669,"title":{"injectables/HandsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{}}}],["handscardsentity",{"_index":131,"title":{"interfaces/HandsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsfacade",{"_index":93,"title":{"injectables/HandsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"overview.html":{}}}],["handscardsfeature",{"_index":1644,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardspartialstate",{"_index":1652,"title":{"interfaces/HandsCardsPartialState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsreducer",{"_index":1658,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsselectors",{"_index":1645,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardsstate",{"_index":1654,"title":{"interfaces/HandsCardsState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["harvest",{"_index":1932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hascolor",{"_index":259,"title":{"interfaces/HasColor.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["hascost",{"_index":261,"title":{"interfaces/HasCost.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{}}}],["hasdomaincommunitycenter",{"_index":1151,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasdomaincommunitycenter(domainid",{"_index":1177,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasid",{"_index":12,"title":{"interfaces/HasId.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{}}}],["hasname",{"_index":24,"title":{"interfaces/HasName.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["hasrules",{"_index":26,"title":{"interfaces/HasRules.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["hasvictorypoints",{"_index":265,"title":{"interfaces/HasVictoryPoints.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{}}}],["hawker",{"_index":1944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["height",{"_index":568,"title":{},"body":{"components/CardBackComponent.html":{}}}],["here",{"_index":324,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["hereby",{"_index":2032,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2081,"title":{},"body":{"license.html":{}}}],["html",{"_index":207,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"dependencies.html":{}}}],["hélène",{"_index":2029,"title":{},"body":{"license.html":{}}}],["icon",{"_index":576,"title":{},"body":{"components/CardBackComponent.html":{}}}],["iconname",{"_index":564,"title":{},"body":{"components/CardBackComponent.html":{}}}],["id",{"_index":15,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"miscellaneous/functions.html":{}}}],["id_agglomeration_hamlet",{"_index":372,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_agglomeration_road",{"_index":373,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["id_agglomeration_town",{"_index":374,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_clay_pit_blue",{"_index":1118,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_clay_pit_red",{"_index":1119,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_blue",{"_index":515,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_red",{"_index":516,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_field_blue",{"_index":1120,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_field_red",{"_index":1121,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_blue",{"_index":1122,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_red",{"_index":1123,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_blue",{"_index":1124,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_red",{"_index":1125,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_1",{"_index":1126,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_2",{"_index":1127,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_1",{"_index":1128,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_2",{"_index":1129,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hand_blue",{"_index":517,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_hand_red",{"_index":518,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_pasture_blue",{"_index":1130,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_pasture_red",{"_index":1131,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_blue",{"_index":1132,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_red",{"_index":1133,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_blue",{"_index":1134,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_red",{"_index":1135,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["ids",{"_index":1809,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ignore",{"_index":1050,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["ignores",{"_index":2203,"title":{},"body":{"todo.html":{}}}],["implied",{"_index":2072,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["imports",{"_index":250,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["included",{"_index":2065,"title":{},"body":{"license.html":{}}}],["including",{"_index":2046,"title":{},"body":{"license.html":{}}}],["increase",{"_index":960,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["increasefour",{"_index":1058,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseone",{"_index":1055,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresources",{"_index":856,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresources(pivotid",{"_index":889,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresourcesauspiciousyear",{"_index":971,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresourcesforauspiciousyear",{"_index":1152,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie",{"_index":972,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie(value",{"_index":1179,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["increasethree",{"_index":1057,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increasetwo",{"_index":1056,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["indent",{"_index":2202,"title":{},"body":{"todo.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["initial",{"_index":459,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{}}}],["initialagglomerationpilescardsstate",{"_index":456,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["initialdiscardpilecardsstate",{"_index":830,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["initialdomainscards",{"_index":1138,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["initialdomainscardsstate",{"_index":1226,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["initialdraw",{"_index":1955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initialeventspilecardsstate",{"_index":1322,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["initialgamestate",{"_index":1421,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["initialhandscardsstate",{"_index":1656,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["initialization",{"_index":401,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initialized",{"_index":449,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initiallandspilecardsstate",{"_index":1720,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["initialstockpilescardsstate",{"_index":1845,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initialthrow",{"_index":1954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initnewgame",{"_index":301,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initsavedgame",{"_index":302,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectable",{"_index":294,"title":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectables",{"_index":296,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["input",{"_index":562,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inputs",{"_index":554,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inset",{"_index":597,"title":{},"body":{"components/CardBackComponent.html":{}}}],["installed",{"_index":2014,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1803,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"overview.html":{}}}],["interfaces/color",{"_index":260,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/LandCard.html":{}}}],["interfaces/cost",{"_index":262,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["interfaces/entity",{"_index":23,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/name",{"_index":25,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/print",{"_index":264,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/rules",{"_index":27,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/victory",{"_index":266,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["invention",{"_index":1945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactioncard",{"_index":1982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isactioncard(obj",{"_index":42,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{}}}],["isagglomerationcard",{"_index":1983,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isagglomerationcard(obj",{"_index":293,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["iscanprint",{"_index":1984,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iscanprint(obj",{"_index":543,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{}}}],["isdevelopmentcard",{"_index":1986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdevelopmentcard(obj",{"_index":741,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["isdomaincardselected",{"_index":857,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivot.id",{"_index":952,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivotid",{"_index":892,"title":{},"body":{"components/DomainComponent.html":{}}}],["iseventcard",{"_index":1987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iseventcard(obj",{"_index":1271,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{}}}],["ishasname",{"_index":1988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishasname(obj",{"_index":1676,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["islandcard",{"_index":1990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["islandcard(obj",{"_index":1685,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":575,"title":{},"body":{"components/CardBackComponent.html":{}}}],["jacob",{"_index":1928,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["justify",{"_index":571,"title":{},"body":{"components/CardBackComponent.html":{}}}],["kassandra",{"_index":1929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":1137,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["kind",{"_index":2070,"title":{},"body":{"license.html":{}}}],["land",{"_index":192,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{}}}],["land.die",{"_index":955,"title":{},"body":{"components/DomainComponent.html":{}}}],["land.type",{"_index":954,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["land_card_interface_name",{"_index":143,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["landcard",{"_index":878,"title":{"interfaces/LandCard.html":{}},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["landcards",{"_index":906,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["landcards.get(cardid",{"_index":931,"title":{},"body":{"components/DomainComponent.html":{}}}],["landcards.get(pivot.cardid",{"_index":1115,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["lands",{"_index":1697,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["lands_pile_cards_feature_key",{"_index":1717,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecard",{"_index":1566,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecard.cardid",{"_index":1568,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecards",{"_index":96,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions",{"_index":1696,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.loadlandspilecardsfailure",{"_index":1694,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsactions.loadlandspilecardssuccess",{"_index":1693,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.selectlandspilecard",{"_index":1714,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsactions.setlandspilecardsinitialized",{"_index":1689,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter",{"_index":1719,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.getinitialstate",{"_index":1721,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.removeone(id",{"_index":1730,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.setall(landspilecards",{"_index":1725,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardseffects",{"_index":673,"title":{"injectables/LandsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsentity",{"_index":132,"title":{"interfaces/LandsPileCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsfacade",{"_index":97,"title":{"injectables/LandsPileCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"overview.html":{}}}],["landspilecardsfeature",{"_index":1710,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardspartialstate",{"_index":1716,"title":{"interfaces/LandsPileCardsPartialState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsreducer",{"_index":1722,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsselectors",{"_index":1711,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsstate",{"_index":1718,"title":{"interfaces/LandsPileCardsState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landtype",{"_index":1681,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{}}}],["laure",{"_index":2028,"title":{},"body":{"license.html":{}}}],["legend",{"_index":206,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["len",{"_index":454,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["liability",{"_index":2085,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2082,"title":{},"body":{"license.html":{}}}],["libs/.../action.ts",{"_index":1890,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../agglomeration.ts",{"_index":1891,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../assets.ts",{"_index":1981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../development.ts",{"_index":1892,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../dice.ts",{"_index":1894,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../domain.ts",{"_index":1895,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../event.ts",{"_index":1896,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../land.ts",{"_index":1991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../name.ts",{"_index":1989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../phase.ts",{"_index":1897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../print.ts",{"_index":1985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../resources.ts",{"_index":1898,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/data",{"_index":297,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["libs/feature",{"_index":56,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"todo.html":{}}}],["libs/shared",{"_index":6,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/Domain.html":{},"interfaces/EventCard.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["libs/ui",{"_index":545,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"modules/UiCardModule.html":{}}}],["license",{"_index":2023,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["lightgray",{"_index":600,"title":{},"body":{"components/CardBackComponent.html":{}}}],["limitation",{"_index":2047,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2073,"title":{},"body":{"license.html":{}}}],["line",{"_index":37,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["lines",{"_index":2128,"title":{},"body":{"todo.html":{}}}],["literal",{"_index":557,"title":{},"body":{"components/CardBackComponent.html":{},"injectables/DiscardPileCardsFacade.html":{}}}],["load",{"_index":321,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["loaded",{"_index":394,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["lock",{"_index":958,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["locked",{"_index":194,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["lockedresources",{"_index":1029,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["lockresource",{"_index":858,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["lockresource(pivotid",{"_index":894,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["logic",{"_index":322,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["login",{"_index":613,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["login(email",{"_index":614,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["loop",{"_index":1958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopactions",{"_index":1959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopdraw",{"_index":1960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopexchange",{"_index":1961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopthrow",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["low",{"_index":1937,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lower",{"_index":1936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["magic",{"_index":274,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["many",{"_index":1039,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map",{"_index":148,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasCost.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/functions.html":{}}}],["map(([_action",{"_index":1100,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["map(([agglomerationpilecard",{"_index":1545,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([landspilecard",{"_index":1565,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([min",{"_index":921,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((action",{"_index":1090,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((discardpilecard",{"_index":787,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["map((domaincards",{"_index":159,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["map((domainscards",{"_index":926,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((handcard",{"_index":1569,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map((handscards",{"_index":1604,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{}}}],["map((ids",{"_index":1807,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["map((phase",{"_index":153,"title":{},"body":{"components/ActionsComponent.html":{}}}],["map((pivot",{"_index":341,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["map((pivots",{"_index":996,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((pivotsselected",{"_index":1016,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((roadcard",{"_index":385,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["map((stockpilecard",{"_index":1529,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((stockpilescards",{"_index":1525,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((value",{"_index":1488,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["mapdomaincolortodomainid",{"_index":1992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortodomainid(domaincolor",{"_index":2006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid",{"_index":1993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid(domaincolor",{"_index":2007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["market",{"_index":1917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mastery",{"_index":946,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterydomainid",{"_index":915,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterypointstype",{"_index":907,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":48,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(...resource_counts",{"_index":1038,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["max",{"_index":453,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["maximum",{"_index":1047,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["merchant",{"_index":1947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":2075,"title":{},"body":{"license.html":{}}}],["merchantshiptravel",{"_index":1946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merge",{"_index":2050,"title":{},"body":{"license.html":{}}}],["mergemap",{"_index":1811,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["mergemap((action",{"_index":1798,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["metareducers",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":66,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["middle",{"_index":1938,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mill",{"_index":1913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":922,"title":{},"body":{"components/DomainComponent.html":{}}}],["miscellaneous",{"_index":1888,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":2024,"title":{},"body":{"license.html":{},"properties.html":{}}}],["models",{"_index":145,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["models/src/lib/interfaces/color.ts",{"_index":1672,"title":{},"body":{"interfaces/HasColor.html":{}}}],["models/src/lib/interfaces/cost.ts",{"_index":1673,"title":{},"body":{"interfaces/HasCost.html":{}}}],["models/src/lib/interfaces/entity.ts",{"_index":1674,"title":{},"body":{"interfaces/HasId.html":{}}}],["models/src/lib/interfaces/name.ts",{"_index":1675,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts",{"_index":541,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts:2",{"_index":542,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["models/src/lib/interfaces/rules.ts",{"_index":1678,"title":{},"body":{"interfaces/HasRules.html":{}}}],["models/src/lib/interfaces/victory.ts",{"_index":1679,"title":{},"body":{"interfaces/HasVictoryPoints.html":{}}}],["models/src/lib/structures/action.ts",{"_index":7,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/agglomeration.ts",{"_index":252,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/development.ts",{"_index":707,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/domain.ts",{"_index":839,"title":{},"body":{"interfaces/Domain.html":{}}}],["models/src/lib/structures/event.ts",{"_index":1266,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/hand.ts",{"_index":1580,"title":{},"body":{"interfaces/Hand.html":{}}}],["models/src/lib/structures/land.ts",{"_index":1680,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/types/action.ts",{"_index":1899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/agglomeration.ts",{"_index":1906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/development.ts",{"_index":1910,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/dice.ts",{"_index":1931,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/domain.ts",{"_index":1933,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/event.ts",{"_index":1941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/phase.ts",{"_index":1953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/resources.ts",{"_index":1963,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["modify",{"_index":2049,"title":{},"body":{"license.html":{}}}],["module",{"_index":233,"title":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}},"body":{}}],["modules",{"_index":235,"title":{"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["monastery",{"_index":1921,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":404,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["name",{"_index":16,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HasName.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":619,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["needstown",{"_index":710,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["new",{"_index":277,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["newcard0",{"_index":1252,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newcard1",{"_index":1255,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newselectedids",{"_index":1243,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["next",{"_index":36,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["nextproductiondie",{"_index":1367,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["ngmodule",{"_index":246,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["ngrx/effects",{"_index":354,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":446,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":355,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["noduplicate",{"_index":711,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["non",{"_index":2132,"title":{},"body":{"todo.html":{}}}],["noninfringement",{"_index":2079,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2063,"title":{},"body":{"license.html":{}}}],["now",{"_index":325,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["npm@8.13.2",{"_index":2018,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":356,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["null",{"_index":2133,"title":{},"body":{"todo.html":{}}}],["number",{"_index":258,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardBackComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["numberofcardsbelowfestival",{"_index":1293,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["numbers",{"_index":275,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["nx",{"_index":2012,"title":{},"body":{"index.html":{}}}],["nx@14.4.2",{"_index":2019,"title":{},"body":{"index.html":{}}}],["obj",{"_index":43,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["obj.interface",{"_index":46,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["obj.name",{"_index":1677,"title":{},"body":{"interfaces/HasName.html":{}}}],["obj.print",{"_index":544,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["observable",{"_index":110,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["observables",{"_index":430,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["obtaining",{"_index":2037,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":334,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["oftype(agglomerationpilescardsactions.initagglomerationnewgame",{"_index":312,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["oftype(agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":316,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["oftype(discardpilecardsactions.addcardtodiscardpile",{"_index":783,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":791,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":795,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(domainscardsactions.countandstealunprotectedgoldandwool",{"_index":984,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.createdomaincard",{"_index":1004,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.givelockedresources",{"_index":1010,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresources",{"_index":1044,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1053,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesfordie",{"_index":1069,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardsnewgame",{"_index":1077,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardssavedgame",{"_index":1081,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.lockresource",{"_index":1085,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.putcardinpivot",{"_index":1089,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.unlockresources",{"_index":1095,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.uselockedresources",{"_index":1099,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1276,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1280,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.reseteventspile",{"_index":1283,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(gameactions.throwdice",{"_index":1351,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throweventdie",{"_index":1356,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throwproductiondie",{"_index":1365,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(handscardsactions.addcardstohand",{"_index":1619,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardsnewgame",{"_index":1624,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardssavedgame",{"_index":1626,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardsnewgame",{"_index":1688,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardssavedgame",{"_index":1692,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(stockpilescardsactions.addcardstostockpilebottom",{"_index":1785,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1789,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1793,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.removecardsfromstockpiletop",{"_index":1797,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["on(agglomerationpilescardsactions.initagglomerationnewgame",{"_index":463,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":464,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(agglomerationpilescardsactions.unselectagglomerationpilecard",{"_index":467,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(discardpilecardsactions.adddiscardpilecard",{"_index":836,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":833,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":834,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.setdiscardpilecardserror",{"_index":838,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(domainscardsactions.adddomaincard",{"_index":1238,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.cleardomaincardselection",{"_index":1246,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardsnewgame",{"_index":1229,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardssavedgame",{"_index":1230,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardsfailure",{"_index":1233,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardssuccess",{"_index":1231,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.removedomaincard",{"_index":1262,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.setdomainscardserror",{"_index":1264,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.swapselectedcards",{"_index":1247,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.toggledomaincardselection",{"_index":1240,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomaincard",{"_index":1234,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomainscards",{"_index":1236,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1325,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1326,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.loadeventspilecardsfailure",{"_index":1328,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.removeselectedeventspilecard",{"_index":1333,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.selectfirsteventspilecard",{"_index":1331,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.seteventspilecardserror",{"_index":1329,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(gameactions.initnewgame",{"_index":1424,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setaction",{"_index":1430,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.seteventdie",{"_index":1427,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setnextproductiondie",{"_index":1426,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setphase",{"_index":1428,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setplayer",{"_index":1429,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setproductiondie",{"_index":1425,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(handscardsactions.addhandscards",{"_index":1665,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardsnewgame",{"_index":1659,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardssavedgame",{"_index":1660,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardsfailure",{"_index":1663,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardssuccess",{"_index":1661,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.removehandcard",{"_index":1670,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.selecthandcard",{"_index":1668,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardserror",{"_index":1667,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardsinitialized",{"_index":1664,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.unselecthandcard",{"_index":1669,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardsnewgame",{"_index":1723,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardssavedgame",{"_index":1724,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.loadlandspilecardsfailure",{"_index":1726,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.removelandspilecard",{"_index":1729,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.selectlandspilecard",{"_index":1728,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.setlandspilecardserror",{"_index":1727,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(stockpilescardsactions.addstockpilescards",{"_index":1854,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1848,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1849,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.loadstockpilescardsfailure",{"_index":1851,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.removestockpilescards",{"_index":1852,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.setstockpilescardserror",{"_index":1856,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["one",{"_index":403,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["onerror",{"_index":328,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["onthrow",{"_index":750,"title":{},"body":{"components/DiceComponent.html":{}}}],["optional",{"_index":103,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":632,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["order",{"_index":2108,"title":{},"body":{"todo.html":{}}}],["originalfn",{"_index":638,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["otherwise",{"_index":2089,"title":{},"body":{"license.html":{}}}],["out",{"_index":242,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"modules/UiCardModule.html":{},"license.html":{},"overview.html":{},"todo.html":{}}}],["overview",{"_index":2097,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":635,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["package",{"_index":1865,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":2015,"title":{},"body":{"index.html":{}}}],["padding",{"_index":585,"title":{},"body":{"components/CardBackComponent.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":623,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["particular",{"_index":2077,"title":{},"body":{"license.html":{}}}],["password",{"_index":615,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["pasture",{"_index":1969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pathfinder",{"_index":1901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":402,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["permission",{"_index":2031,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2057,"title":{},"body":{"license.html":{}}}],["person",{"_index":2036,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2058,"title":{},"body":{"license.html":{}}}],["phase",{"_index":154,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["phase.key",{"_index":1765,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases",{"_index":1732,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases'},{'name",{"_index":228,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["phases.component.css",{"_index":1733,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases.component.html",{"_index":1734,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases/phases.component",{"_index":1772,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phases/phases.module",{"_index":539,"title":{},"body":{"modules/BoardModule.html":{}}}],["phasescomponent",{"_index":227,"title":{"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"overview.html":{}}}],["phasesmodule",{"_index":531,"title":{"modules/PhasesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PhasesModule.html":{},"modules.html":{},"overview.html":{}}}],["pieces",{"_index":425,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["pile",{"_index":177,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"todo.html":{}}}],["pileid",{"_index":370,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["piles",{"_index":230,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["piles/piles.component",{"_index":1780,"title":{},"body":{"modules/PilesModule.html":{}}}],["piles/piles.module",{"_index":540,"title":{},"body":{"modules/BoardModule.html":{}}}],["pilescomponent",{"_index":229,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"overview.html":{}}}],["pilesmodule",{"_index":532,"title":{"modules/PilesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PilesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipe",{"_index":920,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["pipe(map((masterydomainid",{"_index":914,"title":{},"body":{"components/DomainComponent.html":{}}}],["pivot",{"_index":342,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["pivot.availableresources",{"_index":956,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.cardid",{"_index":189,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.col",{"_index":184,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.domainid",{"_index":183,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.id",{"_index":349,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.lockedresources",{"_index":957,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.pileid",{"_index":180,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.row",{"_index":185,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivotid",{"_index":891,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["pivots",{"_index":995,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivots.map((pivot",{"_index":998,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected.length",{"_index":1030,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected[0",{"_index":1032,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources",{"_index":1013,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.foreach((pivot",{"_index":1022,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.length",{"_index":1017,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.map((pivot",{"_index":1028,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources[0",{"_index":1019,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["player",{"_index":1380,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["player.key",{"_index":1764,"title":{},"body":{"components/PhasesComponent.html":{}}}],["plugin",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["point",{"_index":1114,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["points",{"_index":943,"title":{},"body":{"components/DomainComponent.html":{}}}],["portions",{"_index":2067,"title":{},"body":{"license.html":{}}}],["position",{"_index":578,"title":{},"body":{"components/CardBackComponent.html":{}}}],["prettier",{"_index":1049,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["previous",{"_index":1362,"title":{},"body":{"injectables/GameEffects.html":{}}}],["prevsubject",{"_index":630,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["primary",{"_index":379,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["print",{"_index":273,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{}}}],["private",{"_index":151,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["production",{"_index":770,"title":{},"body":{"components/DiceComponent.html":{},"todo.html":{}}}],["productiondie",{"_index":1381,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["project",{"_index":2010,"title":{},"body":{"index.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"properties.html":{}}}],["provided",{"_index":2068,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":1503,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["providers",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["publish",{"_index":2051,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2078,"title":{},"body":{"license.html":{}}}],["put",{"_index":191,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile",{"_index":1443,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile(pileid",{"_index":1459,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile",{"_index":1444,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile(pileid",{"_index":1461,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putcardinpivot",{"_index":973,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["putcardinslot",{"_index":1153,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putcardinslot(pivotid",{"_index":1183,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putland",{"_index":83,"title":{},"body":{"components/ActionsComponent.html":{}}}],["putlandspilecardinslot",{"_index":1445,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["quarrel",{"_index":1949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["radius",{"_index":593,"title":{},"body":{"components/CardBackComponent.html":{}}}],["randomdicevalue",{"_index":1994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":452,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["red",{"_index":1934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redgoldminesandpastures",{"_index":991,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["redresourcecount",{"_index":989,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["relative",{"_index":579,"title":{},"body":{"components/CardBackComponent.html":{}}}],["relocation",{"_index":1905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["removeagglomerationpilecard",{"_index":396,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["removeagglomerationpilecard(id",{"_index":408,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["removecards",{"_index":1782,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["removecardsfromstockpiletop",{"_index":1830,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removecardsfromstockpiletop(pileid",{"_index":1833,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removedomaincard",{"_index":1154,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removedomaincard(pivotid",{"_index":1185,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removehandcard",{"_index":1635,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removehandcard(id",{"_index":1638,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removelandspilecard",{"_index":1703,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removelandspilecard(id",{"_index":1705,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removeselected",{"_index":1302,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["removeselectedeventspilecard",{"_index":1740,"title":{},"body":{"components/PhasesComponent.html":{}}}],["required",{"_index":460,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["reset",{"_index":241,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["reseteventspile",{"_index":1303,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["reseteventspileonfestival",{"_index":1437,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["resetpileandselectfirst",{"_index":1273,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["resource",{"_index":1087,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["resource_counts",{"_index":1102,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resource_values",{"_index":746,"title":{},"body":{"components/DiceComponent.html":{}}}],["resourcecount",{"_index":1001,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/typealiases.html":{}}}],["resourceincrement",{"_index":1108,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resources",{"_index":195,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["resourcetype",{"_index":269,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resourcetype.clay",{"_index":280,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.stone",{"_index":290,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wheat",{"_index":287,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wood",{"_index":278,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcetype.wool",{"_index":286,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcevalue",{"_index":759,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ressource",{"_index":583,"title":{},"body":{"components/CardBackComponent.html":{}}}],["ressources",{"_index":555,"title":{},"body":{"components/CardBackComponent.html":{}}}],["restriction",{"_index":2045,"title":{},"body":{"license.html":{}}}],["results",{"_index":47,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":44,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"todo.html":{}}}],["returns",{"_index":106,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":2048,"title":{},"body":{"license.html":{}}}],["rivalry",{"_index":1952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["road",{"_index":1907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roadcard.id",{"_index":386,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["roadentities",{"_index":381,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["root",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameRulesService.html":{}}}],["root'},{'name",{"_index":214,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["route",{"_index":1904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["row",{"_index":1006,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["rowvalue",{"_index":1117,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["rowvalue.lower",{"_index":1559,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rowvalue.upper",{"_index":1560,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["ruleids",{"_index":17,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["rules.service.spec.ts",{"_index":2105,"title":{},"body":{"todo.html":{}}}],["rules.service.ts",{"_index":1432,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:102",{"_index":1458,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:120",{"_index":1457,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:142",{"_index":1455,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:168",{"_index":1452,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:198",{"_index":1464,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:207",{"_index":1466,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:285",{"_index":1467,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:322",{"_index":1463,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:357",{"_index":1462,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:378",{"_index":1460,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:41",{"_index":1482,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:426",{"_index":1465,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:43",{"_index":1479,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:45",{"_index":1500,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:49",{"_index":1476,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:56",{"_index":1496,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:63",{"_index":1472,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:70",{"_index":1481,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:75",{"_index":1490,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:81",{"_index":1485,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:86",{"_index":1493,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:89",{"_index":1449,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["run",{"_index":318,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["runtimechecks",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":146,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["s/shipname.html",{"_index":1997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["same",{"_index":1361,"title":{},"body":{"injectables/GameEffects.html":{}}}],["sawmill",{"_index":1912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["select",{"_index":338,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getagglomerationpilescardsloaded",{"_index":422,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getagglomerationselected",{"_index":433,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getallagglomerationpilescards",{"_index":413,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecards",{"_index":813,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecardsreverse",{"_index":815,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsloaded",{"_index":817,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsselected",{"_index":819,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(domainscardsselectors.getalldomainscards",{"_index":1191,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsloaded",{"_index":1193,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsselected",{"_index":1015,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getlandcardpivotbyid(id",{"_index":1106,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["select(eventspilecardsselectors.getalleventspilecards",{"_index":1307,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsloaded",{"_index":1309,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsselected",{"_index":1311,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(gameselectors.getgamenextproductiondie",{"_index":1402,"title":{},"body":{"injectables/GameFacade.html":{}}}],["select(handscardsselectors.getallhandscards",{"_index":1641,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(handscardsselectors.gethandscardsselected",{"_index":1643,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(landspilecardsselectors.getalllandspilecards",{"_index":1707,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsloaded",{"_index":1708,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsselected",{"_index":1709,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(stockpilescardsselectors.getallstockpilescards",{"_index":1834,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsloaded",{"_index":1835,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsselected",{"_index":1836,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selected",{"_index":178,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["selectedagglomerationpilescards",{"_index":395,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selecteddiscardpilecards",{"_index":806,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["selecteddomainscards",{"_index":1140,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["selectedeventspilecards",{"_index":1301,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["selectedhandscards",{"_index":1633,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["selectedid",{"_index":448,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["selectedids",{"_index":1224,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["selectedland",{"_index":1033,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedland.type",{"_index":1035,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedlandspilecards",{"_index":1702,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectedpivot",{"_index":1031,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.availableresources",{"_index":1037,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.id",{"_index":1041,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedstockpilescards",{"_index":1828,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selectfirst",{"_index":303,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["selectfirstcardfromagglomerationpile",{"_index":397,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectfirstcardfromagglomerationpile(pileid",{"_index":410,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectfirstevent",{"_index":1438,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["selecthandcard",{"_index":1589,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selecthandcard(pivotid",{"_index":1599,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selection",{"_index":199,"title":{},"body":{"components/ActionsComponent.html":{}}}],["selectlandspilecard",{"_index":1704,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectlandspilecard(pivotid",{"_index":1706,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["sell",{"_index":2055,"title":{},"body":{"license.html":{}}}],["server",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":320,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["set",{"_index":458,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["setaction",{"_index":1382,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setaction(action",{"_index":1389,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setnextproductiondie",{"_index":751,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setnextproductiondie(value",{"_index":758,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setphase",{"_index":1383,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setphase(phase",{"_index":1392,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer",{"_index":1384,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer(player",{"_index":1394,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["shadow",{"_index":596,"title":{},"body":{"components/CardBackComponent.html":{}}}],["shall",{"_index":2064,"title":{},"body":{"license.html":{}}}],["ship",{"_index":733,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["ship.tradepoints",{"_index":735,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname",{"_index":716,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname.get(type",{"_index":730,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipnamekey",{"_index":717,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ships",{"_index":939,"title":{},"body":{"components/DomainComponent.html":{}}}],["shouldn't",{"_index":1096,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["shuffle",{"_index":1291,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["shuffled",{"_index":1294,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.map((cardid",{"_index":1298,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.splice",{"_index":1296,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["shuffledcards",{"_index":1818,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards.length",{"_index":1821,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].id",{"_index":1826,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].interface",{"_index":1825,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["sibling",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["siblingrivalry",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slice(0",{"_index":1528,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slot",{"_index":1548,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slots",{"_index":182,"title":{},"body":{"components/ActionsComponent.html":{}}}],["software",{"_index":2039,"title":{},"body":{"license.html":{}}}],["solid",{"_index":590,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{}}}],["something",{"_index":1111,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["soothsayer",{"_index":1900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["started",{"_index":2009,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startnewgame",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":426,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["state.entities",{"_index":1259,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[0",{"_index":1249,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[1",{"_index":1251,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.ids[0",{"_index":1332,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedid",{"_index":1335,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedids",{"_index":1244,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.filter",{"_index":1245,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.find((selectedid",{"_index":1242,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state/agglomeration",{"_index":662,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/discard",{"_index":649,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/domains",{"_index":655,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/events",{"_index":659,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.effects",{"_index":665,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.facade",{"_index":666,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.reducer",{"_index":668,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/hands",{"_index":670,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/lands",{"_index":674,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/stock",{"_index":678,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["steal",{"_index":2109,"title":{},"body":{"todo.html":{}}}],["stock",{"_index":1813,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stock_piles_cards_feature_key",{"_index":1842,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilecard",{"_index":1536,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.cardid",{"_index":1531,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.cardtype",{"_index":1530,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.id",{"_index":1806,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.pileid",{"_index":1527,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpiles",{"_index":1817,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpiles[i",{"_index":1824,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescards",{"_index":1448,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescards.find",{"_index":1535,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilescards.push",{"_index":1823,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescardsactions",{"_index":1812,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.addcardstostockpilebottom",{"_index":1840,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.addstockpilescards",{"_index":1787,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardsfailure",{"_index":1795,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardssuccess",{"_index":1794,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.removecardsfromstockpiletop",{"_index":1839,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.removestockpilescards",{"_index":1808,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.setstockpilescardsinitialized",{"_index":1790,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter",{"_index":1844,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.addmany(stockpilescards",{"_index":1855,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.getinitialstate",{"_index":1846,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.removemany(ids",{"_index":1853,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.setall(stockpilescards",{"_index":1850,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardseffects",{"_index":677,"title":{"injectables/StockPilesCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsentity",{"_index":1805,"title":{"interfaces/StockPilesCardsEntity.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsfacade",{"_index":645,"title":{"injectables/StockPilesCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["stockpilescardsfeature",{"_index":1815,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardspartialstate",{"_index":1841,"title":{"interfaces/StockPilesCardsPartialState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsreducer",{"_index":1847,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsselectors",{"_index":1816,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsselectors.getstockpilecardentitybypivot",{"_index":1801,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsstate",{"_index":1843,"title":{"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsstore",{"_index":1783,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stone",{"_index":1974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stonequarry",{"_index":1968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["store",{"_index":306,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["storedevtoolsmodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature",{"_index":684,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature(fromgame.game_feature_key",{"_index":681,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forroot",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["storybook/core",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["strength",{"_index":947,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["strengthmasterydomainid",{"_index":1523,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["strengthpoints",{"_index":712,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["strictactionimmutability",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["strictstateimmutability",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":589,"title":{},"body":{"components/CardBackComponent.html":{}}}],["stylelint",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":53,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["styleurls",{"_index":62,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["subject",{"_index":631,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/GameRulesService.html":{},"license.html":{}}}],["sublicense",{"_index":2053,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1564,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((card",{"_index":1539,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((cards",{"_index":1532,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["substantial",{"_index":2066,"title":{},"body":{"license.html":{}}}],["success",{"_index":326,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["sumresources",{"_index":1036,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["support",{"_index":2093,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2094,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":196,"title":{},"body":{"components/ActionsComponent.html":{}}}],["swapselectedcards",{"_index":1155,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["swapselecteddomainscards",{"_index":84,"title":{},"body":{"components/ActionsComponent.html":{}}}],["switchmap",{"_index":1352,"title":{},"body":{"injectables/GameEffects.html":{}}}],["switchmap((value",{"_index":1358,"title":{},"body":{"injectables/GameEffects.html":{}}}],["take",{"_index":359,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["take(1",{"_index":347,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["takeonedefinedpivotorthrow",{"_index":977,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeonedefinedpivotorthrow(id",{"_index":982,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeuntil",{"_index":1502,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["takeuntil(this.gameended",{"_index":1474,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["taormina",{"_index":60,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"index.html":{}}}],["taormina/data",{"_index":133,"title":{},"body":{"components/ActionsComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["taormina/feature",{"_index":135,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["taormina/shared",{"_index":144,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["taormina/ui",{"_index":1779,"title":{},"body":{"modules/PilesModule.html":{}}}],["target=\"_self\">shipnamekey",{"_index":1998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tasks",{"_index":405,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["templateurl",{"_index":64,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["test",{"_index":2107,"title":{},"body":{"todo.html":{}}}],["thieves",{"_index":1439,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["thievesresourcecountthreshold",{"_index":993,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.actions$.pipe",{"_index":311,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["this.agglomerationpilescards.initnewgame",{"_index":1513,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescards.removeagglomerationpilecard",{"_index":1551,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescards.selectedagglomerationpilescards",{"_index":157,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescardsstore.pipe",{"_index":337,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["this.auspiciousyear$.pipe",{"_index":1483,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.countandsteal$.subscribe",{"_index":1505,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.addcardtodiscardpile",{"_index":1579,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.initnewgame",{"_index":1517,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards",{"_index":912,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.alldomainscards$.pipe",{"_index":925,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.cleardomaincardselection",{"_index":173,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.domainscards.countandstealunprotectedgoldandwool",{"_index":1475,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.createavailabledomaincard",{"_index":1557,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcardsvictorypointsfordomain(domainid",{"_index":1518,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcelebrationpointsfordomain(domainid",{"_index":911,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxcol(domainid",{"_index":919,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxrow(domainid",{"_index":924,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmincol(domainid",{"_index":918,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainminrow(domainid",{"_index":923,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.strength",{"_index":1520,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.trade",{"_index":1519,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmerchantshipcountfordomain(domainid",{"_index":910,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.givelockedresources",{"_index":170,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.increaseresources(pivotid",{"_index":937,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.increaseresourcesforauspiciousyear",{"_index":1484,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.increaseresourcesfordie(value",{"_index":1489,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.initnewgame",{"_index":1511,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.lockresource(pivotid",{"_index":935,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.putcardinslot",{"_index":1553,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.removedomaincard(domaincard.id",{"_index":1575,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards",{"_index":1544,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards$.pipe",{"_index":158,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{}}}],["this.domainscards.swapselectedcards",{"_index":174,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.toggledomaincardselection(pivotid",{"_index":934,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.unlockresources(pivotid",{"_index":936,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.uselockedresources",{"_index":1543,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscardsstore.pipe",{"_index":1014,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.domainscardsstore.select",{"_index":986,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.event$.pipe",{"_index":1494,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.initnewgame",{"_index":1516,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.removeselected",{"_index":1760,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.reseteventspile",{"_index":1492,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectedeventspilecards",{"_index":1759,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.selectedeventspilecards$.pipe",{"_index":1468,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectfirst",{"_index":1495,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.festival$.pipe",{"_index":1491,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.action",{"_index":1761,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.eventdie",{"_index":767,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.eventdie$.pipe",{"_index":1497,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.eventdie$.pipe(filter((die",{"_index":1477,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.initnewgame",{"_index":1510,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.nextproductiondie",{"_index":768,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.phase",{"_index":1754,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.phase$.pipe",{"_index":152,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{}}}],["this.game.phase$.pipe(take(1)).subscribe((phase",{"_index":1541,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.player",{"_index":1756,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.productiondie",{"_index":766,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.productiondie$.pipe",{"_index":1486,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(action.name",{"_index":1578,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(undefined",{"_index":1762,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setnextproductiondie(value",{"_index":769,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.setphase(phase",{"_index":1755,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setplayer(player",{"_index":1757,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.throweventdie",{"_index":1540,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.throwproductiondie",{"_index":1542,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gameended$.next",{"_index":1504,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gamerules.getvictorypointsfordomain(domainid",{"_index":917,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.gamerules.initnewgame",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gamerules.putlandspilecardinslot",{"_index":169,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.throwdice",{"_index":765,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.gamerules.useactioncard",{"_index":167,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputagglomerationpilecardinslot",{"_index":156,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputhandcardinslot",{"_index":163,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamestore.select(gameselectors.getgamenextproductiondie",{"_index":1366,"title":{},"body":{"injectables/GameEffects.html":{}}}],["this.getlandcardfrompivot(firstpivot",{"_index":1021,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(pivot",{"_index":1023,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(selectedpivot",{"_index":1034,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.handscards.addcardstohand(handid",{"_index":1534,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.allhandscards$.pipe",{"_index":1603,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.initnewgame",{"_index":1512,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.removehandcard(handcard.id",{"_index":1562,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards",{"_index":172,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards$.pipe",{"_index":164,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.handscards.selecthandcard(pivotid",{"_index":1608,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.unselecthandcard",{"_index":1570,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesforauspiciousyear$.subscribe",{"_index":1508,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesfordie$.subscribe",{"_index":1507,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.initnewgame",{"_index":1514,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.removelandspilecard(landspilecard.id",{"_index":1567,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.selectedlandspilecards",{"_index":171,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.reseteventspileonfestival$.subscribe",{"_index":1509,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.selectfirstevent$.subscribe",{"_index":1506,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.addcardstostockpilebottom(pileid",{"_index":1571,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.allstockpilescards",{"_index":1524,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.initnewgame",{"_index":1515,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.removecardsfromstockpiletop(pileid",{"_index":1533,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescardsstore.pipe",{"_index":1800,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["this.store.dispatch",{"_index":435,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.addcardtodiscardpile",{"_index":825,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":823,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.cleardomaincardselection",{"_index":1206,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.givelockedresources",{"_index":1204,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardsnewgame",{"_index":1196,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardssavedgame",{"_index":1197,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.lockresource",{"_index":1198,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.removedomaincard",{"_index":1211,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.swapselectedcards",{"_index":1210,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.unlockresources",{"_index":1199,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.uselockedresources",{"_index":1203,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1313,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1314,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.removeselectedeventspilecard",{"_index":1317,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.reseteventspile",{"_index":1315,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.selectfirsteventspilecard",{"_index":1316,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(gameactions.initnewgame",{"_index":1410,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setaction",{"_index":1417,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setnextproductiondie",{"_index":1413,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setphase",{"_index":1415,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setplayer",{"_index":1416,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwdice",{"_index":1411,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throweventdie",{"_index":1414,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwproductiondie",{"_index":1412,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(handscardsactions.addcardstohand",{"_index":1648,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardsnewgame",{"_index":1646,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardssavedgame",{"_index":1647,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.removehandcard",{"_index":1651,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.selecthandcard",{"_index":1649,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.unselecthandcard",{"_index":1650,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardsnewgame",{"_index":1712,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardssavedgame",{"_index":1713,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.removelandspilecard",{"_index":1715,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1837,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1838,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe",{"_index":412,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameaction",{"_index":1399,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameeventdie",{"_index":1400,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgamephase",{"_index":1404,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameplayer",{"_index":1406,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameproductiondie",{"_index":1408,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(handscardsselectors.gethandscardsloaded",{"_index":1642,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.select",{"_index":415,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxcol(domainid",{"_index":1213,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxrow(domainid",{"_index":1215,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmincol(domainid",{"_index":1212,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainminrow(domainid",{"_index":1214,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.takeonedefinedpivotorthrow(action.id).pipe",{"_index":1045,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.thieves$.pipe",{"_index":1473,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.updatesavailableresources",{"_index":1060,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increaseone",{"_index":1074,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increasetwo",{"_index":1075,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["through",{"_index":431,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["throw",{"_index":343,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["throwdice",{"_index":1346,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{}}}],["throwdisabled",{"_index":752,"title":{},"body":{"components/DiceComponent.html":{}}}],["throwevent",{"_index":1347,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throweventdie",{"_index":1385,"title":{},"body":{"injectables/GameFacade.html":{}}}],["thrown",{"_index":2114,"title":{},"body":{"todo.html":{}}}],["throwproduction",{"_index":1348,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throwproductiondie",{"_index":1386,"title":{},"body":{"injectables/GameFacade.html":{}}}],["todo",{"_index":1802,"title":{"todo.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["todos",{"_index":2103,"title":{},"body":{"todo.html":{}}}],["toggledomaincardselection",{"_index":859,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toggledomaincardselection(pivotid",{"_index":896,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toll",{"_index":1919,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tollbridge",{"_index":1918,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tort",{"_index":2088,"title":{},"body":{"license.html":{}}}],["town",{"_index":1909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["townentities",{"_index":388,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["trade",{"_index":945,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["trademasterydomainid",{"_index":1522,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["tradepoints",{"_index":713,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["traderoute",{"_index":1903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["travel",{"_index":1948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tree",{"_index":55,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["true",{"_index":466,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["tslib",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/CardBackComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2207,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeiconname",{"_index":556,"title":{},"body":{"components/CardBackComponent.html":{}}}],["typeof",{"_index":32,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/EventCard.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["types",{"_index":1026,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["types/action",{"_index":28,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["types/agglomeration",{"_index":267,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["types/development",{"_index":719,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["types/dice",{"_index":1682,"title":{},"body":{"interfaces/LandCard.html":{}}}],["types/domain",{"_index":268,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["types/event",{"_index":1268,"title":{},"body":{"interfaces/EventCard.html":{}}}],["types/resources",{"_index":270,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{}}}],["typescript",{"_index":38,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["uicardmodule",{"_index":1777,"title":{"modules/UiCardModule.html":{}},"body":{"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["unavailable",{"_index":1086,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["undefined",{"_index":45,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["unlock",{"_index":959,"title":{},"body":{"components/DomainComponent.html":{}}}],["unlockresources",{"_index":860,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unlockresources(pivotid",{"_index":898,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unselect",{"_index":953,"title":{},"body":{"components/DomainComponent.html":{}}}],["unselectedstate",{"_index":1334,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["unselecthandcard",{"_index":1636,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["unsetaction",{"_index":1741,"title":{},"body":{"components/PhasesComponent.html":{}}}],["unused",{"_index":621,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["up",{"_index":1939,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update",{"_index":1048,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updateavailable",{"_index":1040,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updates",{"_index":997,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updatesavailableresources",{"_index":974,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesfour",{"_index":1066,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updateslocked",{"_index":1027,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesone",{"_index":1059,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesthree",{"_index":1064,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatestwo",{"_index":1062,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updtr@4.0.0node",{"_index":2020,"title":{},"body":{"index.html":{}}}],["upper",{"_index":1940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url",{"_index":639,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["use",{"_index":190,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["useactioncard",{"_index":85,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["useactioncarddisabled",{"_index":86,"title":{},"body":{"components/ActionsComponent.html":{}}}],["uselockedresources",{"_index":975,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["useresourcestoputagglomerationpilecardinslot",{"_index":1446,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["useresourcestoputhandcardinslot",{"_index":1447,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["using",{"_index":427,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"index.html":{}}}],["utils",{"_index":563,"title":{},"body":{"components/CardBackComponent.html":{},"injectables/GameEffects.html":{}}}],["utils/src/lib/assets.ts",{"_index":2003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/dice.ts",{"_index":2001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/domain.ts",{"_index":2005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uuid",{"_index":378,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":377,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["v16.16.0",{"_index":2022,"title":{},"body":{"index.html":{}}}],["v4",{"_index":376,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["value",{"_index":309,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":210,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["vars",{"_index":622,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["version",{"_index":2021,"title":{},"body":{"index.html":{},"properties.html":{}}}],["victory",{"_index":948,"title":{},"body":{"components/DomainComponent.html":{}}}],["victorypoints",{"_index":255,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["warehouse",{"_index":1916,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":2074,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2069,"title":{},"body":{"license.html":{}}}],["warrior",{"_index":737,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["warrior.celebrationpoints",{"_index":740,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warrior.strengthpoints",{"_index":739,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warriorname",{"_index":718,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["weaving",{"_index":1915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["went",{"_index":1112,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["wheat",{"_index":1973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":2086,"title":{},"body":{"license.html":{}}}],["white",{"_index":587,"title":{},"body":{"components/CardBackComponent.html":{}}}],["width",{"_index":566,"title":{},"body":{"components/CardBackComponent.html":{}}}],["withlatestfrom",{"_index":985,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["without",{"_index":2044,"title":{},"body":{"license.html":{}}}],["wood",{"_index":1971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wool",{"_index":1975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["works",{"_index":609,"title":{},"body":{"components/CardComponent.html":{}}}],["wrong",{"_index":1113,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["year",{"_index":1943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":1996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":240,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCard.html":{"url":"interfaces/ActionCard.html","title":"interface - ActionCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/action.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Action Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         ActionName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { ActionName } from '../types/action';\n\nexport const ACTION_CARD_INTERFACE_NAME = 'ActionCard';\n\n/**\n * Interface for the Action Cards\n */\nexport interface ActionCard extends HasId, HasName, HasRules {\n  interface: typeof ACTION_CARD_INTERFACE_NAME;\n  id: string;\n  name: ActionName;\n  ruleIds: string[];\n}\n\nexport const createActionCard = (\n  id: string,\n  name: ActionName,\n  ruleIds: string[]\n): ActionCard => ({ interface: ACTION_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isActionCard(obj: any): obj is ActionCard {\n  return obj !== undefined && obj.interface === ACTION_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionsComponent.html":{"url":"components/ActionsComponent.html","title":"component - ActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/actions/actions/actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-actions\n            \n\n            \n                styleUrls\n                ./actions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./actions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyAgglomeration\n                            \n                            \n                                buyDevelopment\n                            \n                            \n                                buyDisabled\n                            \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                getDomainSelectedAgglomerationSlots\n                            \n                            \n                                getDomainSelectedDevelopmentCards\n                            \n                            \n                                getDomainSelectedLandCards\n                            \n                            \n                                getHandSelectedDevelopmentCard\n                            \n                            \n                                getPileSelectedLandCard\n                            \n                            \n                                getSelectedActionCard\n                            \n                            \n                                getSelectedAgglomerationPileCard\n                            \n                            \n                                getSelectedAvailableAgglomerationSlots\n                            \n                            \n                                getSelectedAvailableDevelopmentSlots\n                            \n                            \n                                getSelectedAvailableLandSlots\n                            \n                            \n                                getSelectedHandCard\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                putLand\n                            \n                            \n                                swapSelectedDomainsCards\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useActionCardDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, agglomerationPilesCards: AgglomerationPilesCardsFacade, landsPileCards: LandsPileCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCards\n                                                  \n                                                        \n                                                                        AgglomerationPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyAgglomeration\n                        \n                    \n                \n            \n            \n                \nbuyAgglomeration()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDevelopment\n                        \n                    \n                \n            \n            \n                \nbuyDevelopment()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDisabled\n                        \n                    \n                \n            \n            \n                \nbuyDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedDevelopmentCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedDevelopmentCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedLandCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedLandCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandSelectedDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetHandSelectedDevelopmentCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPileSelectedLandCard\n                        \n                    \n                \n            \n            \n                \ngetPileSelectedLandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedActionCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAgglomerationPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedAgglomerationPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableDevelopmentSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableDevelopmentSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableLandSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableLandSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedHandCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLand\n                        \n                    \n                \n            \n            \n                \nputLand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedDomainsCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedDomainsCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCardDisabled\n                        \n                    \n                \n            \n            \n                \nuseActionCardDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n  AgglomerationPilesCardsEntity,\n  AgglomerationPilesCardsFacade,\n  GameFacade,\n  HandsCardsEntity,\n  HandsCardsFacade,\n  LandsPileCardsEntity,\n  LandsPileCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-actions',\n  templateUrl: './actions.component.html',\n  styleUrls: ['./actions.component.css'],\n})\nexport class ActionsComponent {\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private agglomerationPilesCards: AgglomerationPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  buyDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => phase !== GamePhase.LoopActions)\n    );\n  }\n\n  buyAgglomeration(): void {\n    this.gameRules.useResourcesToPutAgglomerationPileCardInSlot();\n  }\n\n  getSelectedAgglomerationPileCard(): Observable {\n    return this.agglomerationPilesCards.selectedAgglomerationPilesCards$;\n  }\n\n  getSelectedAvailableAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_AGGLOMERATION_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === AGGLOMERATION_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  buyDevelopment(): void {\n    this.gameRules.useResourcesToPutHandCardInSlot();\n  }\n\n  getHandSelectedDevelopmentCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter(\n        (handCard) => handCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n      )\n    );\n  }\n\n  getSelectedAvailableDevelopmentSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_DEVELOPMENT_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedDevelopmentCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  useActionCardDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => {\n        return phase !== GamePhase.LoopActions;\n      })\n    );\n  }\n\n  useActionCard(): void {\n    this.gameRules.useActionCard();\n  }\n\n  getSelectedActionCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter((handCard) => handCard?.cardType === ACTION_CARD_INTERFACE_NAME)\n    );\n  }\n\n  putLand(): void {\n    this.gameRules.putLandsPileCardInSlot();\n  }\n\n  giveLockedResources(): void {\n    this.domainsCards.giveLockedResources();\n  }\n\n  getPileSelectedLandCard(): Observable {\n    return this.landsPileCards.selectedLandsPileCards$;\n  }\n\n  getSelectedHandCard(): Observable {\n    return this.handsCards.selectedHandsCards$;\n  }\n\n  getSelectedAvailableLandSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_LAND_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedLandCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === LAND_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.domainsCards.clearDomainCardSelection();\n  }\n\n  swapSelectedDomainsCards(): void {\n    this.domainsCards.swapSelectedCards();\n  }\n}\n\n    \n\n    \n        \n  \n    buy agglomeration\n  \n  \n    Pile Selected Agglomeration Card:\n    \n      {{ pivot.pileId }}\n    \n  \n  \n    Selected Available Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    buy development\n  \n  \n    Hand Selected Development Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Development Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Development Cards:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    Use action card\n  \n  \n    Selected Action Card:\n    \n      {{ pivot.cardId }}\n    \n  \n\n\n\n  put land\n  \n    Give locked resources\n  \n  \n    Pile Selected Land Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    swap selected domains cards\n  \n    clear domain selection\n  \n\n\n    \n\n    \n                \n                    ./actions.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      buy agglomeration        Pile Selected Agglomeration Card:          {{ pivot.pileId }}            Selected Available Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            buy development        Hand Selected Development Card:          {{ pivot.cardId }}            Selected Available Development Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Development Cards:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Use action card        Selected Action Card:          {{ pivot.cardId }}        put land      Give locked resources        Pile Selected Land Card:          {{ pivot.cardId }}            Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            swap selected domains cards      clear domain selection  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/actions/actions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionsComponent } from './actions/actions.component';\n\n@NgModule({\n  declarations: [ActionsComponent],\n  imports: [CommonModule],\n  exports: [ActionsComponent],\n})\nexport class ActionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationCard.html":{"url":"interfaces/AgglomerationCard.html","title":"interface - AgglomerationCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/agglomeration.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Agglomeration Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         AgglomerationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport { AgglomerationType } from '../types/agglomeration';\nimport { DomainColor } from '../types/domain';\nimport { ResourceType } from '../types/resources';\n\nexport const AGGLOMERATION_CARD_INTERFACE_NAME = 'AgglomerationCard';\n\nexport const AVAILABLE_AGGLOMERATION_SLOT = 'AvailableAgglomerationSlot';\n\n/**\n * Interface for the Agglomeration Cards\n */\nexport interface AgglomerationCard\n  extends HasId,\n    HasCost,\n    HasVictoryPoints,\n    HasColor,\n    CanPrint {\n  interface: typeof AGGLOMERATION_CARD_INTERFACE_NAME;\n  id: string;\n  cost: Map;\n  type: AgglomerationType;\n  victoryPoints?: number;\n  color?: DomainColor;\n}\n\nexport const createAgglomerationCard = (\n  id: string,\n  cost: Map,\n  type: AgglomerationType,\n  victoryPoints?: number,\n  color?: DomainColor\n): AgglomerationCard => ({\n  interface: AGGLOMERATION_CARD_INTERFACE_NAME,\n  id,\n  cost,\n  type,\n  victoryPoints,\n  color,\n  print: (): string => `type: ${type}`,\n});\n\n/* eslint-disable no-magic-numbers */\nexport function createRoad(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 2],\n    ]),\n    AgglomerationType.Road,\n    0,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\nexport function createHamlet(\n  id: string,\n  color?: DomainColor\n): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 1],\n      [ResourceType.Wool, 1],\n      [ResourceType.Wheat, 1],\n    ]),\n    AgglomerationType.Hamlet,\n    1,\n    color\n  );\n}\n\n/* eslint-disable no-magic-numbers */\nexport function createTown(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wheat, 2],\n      [ResourceType.Stone, 3],\n    ]),\n    AgglomerationType.Town,\n    2,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isAgglomerationCard(obj: any): obj is AgglomerationCard {\n  return (\n    obj !== undefined && obj.interface === AGGLOMERATION_CARD_INTERFACE_NAME\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgglomerationPilesCardsEffects.html":{"url":"injectables/AgglomerationPilesCardsEffects.html","title":"injectable - AgglomerationPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgglomerationPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                selectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, agglomerationPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationNewGame),\n      map(() =>\n        AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized({\n          agglomerationPilesCards: createInitialAgglomerationPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess(\n            {\n              agglomerationPilesCards: [],\n            }\n          );\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure(\n            { error }\n          );\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile\n      ),\n      concatMap((action) =>\n        this.agglomerationPilesCardsStore.pipe(\n          select(\n            AgglomerationPilesCardsSelectors.getFirstCardPivotForPile(\n              action.pileId\n            )\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(\n                `Can't get first card in empty agglomeration pile.`\n              );\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            AgglomerationPilesCardsActions.selectAgglomerationPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              AgglomerationPilesCardsActions.setAgglomerationPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, take } from 'rxjs/operators';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { createInitialAgglomerationPilesCards } from './agglomeration-piles-cards.models';\nimport * as AgglomerationPilesCardsFeature from './agglomeration-piles-cards.reducer';\nimport * as AgglomerationPilesCardsSelectors from './agglomeration-piles-cards.selectors';\n\n@Injectable()\nexport class AgglomerationPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationNewGame),\n      map(() =>\n        AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized({\n          agglomerationPilesCards: createInitialAgglomerationPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess(\n            {\n              agglomerationPilesCards: [],\n            }\n          );\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure(\n            { error }\n          );\n        },\n      })\n    )\n  );\n\n  selectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile\n      ),\n      concatMap((action) =>\n        this.agglomerationPilesCardsStore.pipe(\n          select(\n            AgglomerationPilesCardsSelectors.getFirstCardPivotForPile(\n              action.pileId\n            )\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(\n                `Can't get first card in empty agglomeration pile.`\n              );\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            AgglomerationPilesCardsActions.selectAgglomerationPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              AgglomerationPilesCardsActions.setAgglomerationPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private agglomerationPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsEntity.html":{"url":"interfaces/AgglomerationPilesCardsEntity.html","title":"interface - AgglomerationPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'AgglomerationPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  agglomerationCards,\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_ROAD,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\nimport { AgglomerationType } from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'AgglomerationPilesCards' data\n */\nexport interface AgglomerationPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string;\n  cardId: string;\n}\n\nexport const createAgglomerationPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardId: string\n): AgglomerationPilesCardsEntity => ({\n  id,\n  pileId,\n  cardId,\n});\n\nexport const createInitialAgglomerationPilesCards =\n  (): AgglomerationPilesCardsEntity[] => {\n    const roadEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Road &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_ROAD,\n          roadCard.id\n        )\n      );\n\n    const hamletEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Hamlet &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_HAMLET,\n          roadCard.id\n        )\n      );\n\n    const townEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Town &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_TOWN,\n          roadCard.id\n        )\n      );\n\n    return [...roadEntities, ...hamletEntities, ...townEntities];\n  };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgglomerationPilesCardsFacade.html":{"url":"injectables/AgglomerationPilesCardsFacade.html","title":"injectable - AgglomerationPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgglomerationPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allAgglomerationPilesCards$\n                            \n                            \n                                allHamletPivots$\n                            \n                            \n                                allRoadPivots$\n                            \n                            \n                                allTownPivots$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedAgglomerationPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeAgglomerationPileCard\n                            \n                            \n                                selectFirstCardFromAgglomerationPile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:48\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAgglomerationPileCard\n                        \n                    \n                \n            \n            \n                \nremoveAgglomerationPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstCardFromAgglomerationPile\n                        \n                    \n                \n            \n            \n                \nselectFirstCardFromAgglomerationPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allAgglomerationPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAllAgglomerationPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allHamletPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(\n      ID_AGGLOMERATION_HAMLET\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allRoadPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_ROAD)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTownPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_TOWN)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:19\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAgglomerationPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_ROAD,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport * as AgglomerationPilesCardsFeature from './agglomeration-piles-cards.reducer';\nimport * as AgglomerationPilesCardsSelectors from './agglomeration-piles-cards.selectors';\n\n@Injectable()\nexport class AgglomerationPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationPilesCardsLoaded)\n  );\n  allAgglomerationPilesCards$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAllAgglomerationPilesCards)\n  );\n  selectedAgglomerationPilesCards$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationSelected)\n  );\n  allRoadPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_ROAD)\n  );\n  allHamletPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(\n      ID_AGGLOMERATION_HAMLET\n    )\n  );\n  allTownPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_TOWN)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.initAgglomerationNewGame()\n    );\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.initAgglomerationSavedGame()\n    );\n  }\n\n  removeAgglomerationPileCard(id: string): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.removeAgglomerationPileCard({ id })\n    );\n  }\n\n  selectFirstCardFromAgglomerationPile(pileId: string): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile({\n        pileId,\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsPartialState.html":{"url":"interfaces/AgglomerationPilesCardsPartialState.html","title":"interface - AgglomerationPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AGGLOMERATION_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AGGLOMERATION_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AGGLOMERATION_PILES_CARDS_FEATURE_KEY:         AgglomerationPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { AgglomerationPilesCardsEntity } from './agglomeration-piles-cards.models';\n\nexport const AGGLOMERATION_PILES_CARDS_FEATURE_KEY = 'agglomerationPilesCards';\n\nexport interface AgglomerationPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface AgglomerationPilesCardsPartialState {\n  readonly [AGGLOMERATION_PILES_CARDS_FEATURE_KEY]: AgglomerationPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const agglomerationPilesCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialAgglomerationPilesCardsState: AgglomerationPilesCardsState =\n  agglomerationPilesCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const agglomerationPilesCardsReducer = createReducer(\n  initialAgglomerationPilesCardsState,\n  on(AgglomerationPilesCardsActions.initAgglomerationNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(AgglomerationPilesCardsActions.initAgglomerationSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.selectAgglomerationPileCard,\n    (state, { id }) => ({\n      ...state,\n      selectedId: id,\n    })\n  ),\n  on(AgglomerationPilesCardsActions.unselectAgglomerationPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.removeAgglomerationPileCard,\n    (state, { id }) => agglomerationPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsError,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsState.html":{"url":"interfaces/AgglomerationPilesCardsState.html","title":"interface - AgglomerationPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { AgglomerationPilesCardsEntity } from './agglomeration-piles-cards.models';\n\nexport const AGGLOMERATION_PILES_CARDS_FEATURE_KEY = 'agglomerationPilesCards';\n\nexport interface AgglomerationPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface AgglomerationPilesCardsPartialState {\n  readonly [AGGLOMERATION_PILES_CARDS_FEATURE_KEY]: AgglomerationPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const agglomerationPilesCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialAgglomerationPilesCardsState: AgglomerationPilesCardsState =\n  agglomerationPilesCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const agglomerationPilesCardsReducer = createReducer(\n  initialAgglomerationPilesCardsState,\n  on(AgglomerationPilesCardsActions.initAgglomerationNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(AgglomerationPilesCardsActions.initAgglomerationSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.selectAgglomerationPileCard,\n    (state, { id }) => ({\n      ...state,\n      selectedId: id,\n    })\n  ),\n  on(AgglomerationPilesCardsActions.unselectAgglomerationPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.removeAgglomerationPileCard,\n    (state, { id }) => agglomerationPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsError,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/taormina-duel/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startNewGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in apps/taormina-duel/src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startNewGame\n                        \n                    \n                \n            \n            \n                \nstartNewGame()\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel/src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameRulesService } from '@taormina/feature-engine';\n\n@Component({\n  selector: 'taormina-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(private gameRules: GameRulesService) {}\n\n  startNewGame(): void {\n    this.gameRules.initNewGame();\n  }\n}\n\n    \n\n    \n        New Game !\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                /* stylelint-disable no-empty-source */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New Game !'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/taormina-duel/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            DataAccessGameModule\n                        \n                        \n                            FeatureGameModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { DataAccessGameModule } from '@taormina/data-access-game';\nimport { FeatureGameModule } from '@taormina/feature-game';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(\n      {},\n      {\n        metaReducers: !environment.production ? [] : [],\n        runtimeChecks: {\n          strictActionImmutability: true,\n          strictStateImmutability: true,\n        },\n      }\n    ),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    DataAccessGameModule,\n    FeatureGameModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/board/board/board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ID_DOMAIN_BLUE\n                            \n                            \n                                ID_DOMAIN_RED\n                            \n                            \n                                ID_HAND_BLUE\n                            \n                            \n                                ID_HAND_RED\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_HAND_BLUE,\n  ID_HAND_RED,\n} from '@taormina/shared-constants';\n\n@Component({\n  selector: 'taormina-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent {\n  ID_HAND_RED = ID_HAND_RED;\n  ID_HAND_BLUE = ID_HAND_BLUE;\n  ID_DOMAIN_RED = ID_DOMAIN_RED;\n  ID_DOMAIN_BLUE = ID_DOMAIN_BLUE;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_BoardModule_declarations\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/board/board.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DiceModule\n                        \n                        \n                            DomainModule\n                        \n                        \n                            HandModule\n                        \n                        \n                            PhasesModule\n                        \n                        \n                            PilesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardComponent } from './board/board.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DiceModule } from '../dice/dice.module';\nimport { DomainModule } from '../domain/domain.module';\nimport { HandModule } from '../hand/hand.module';\nimport { PhasesModule } from '../phases/phases.module';\nimport { PilesModule } from '../piles/piles.module';\n\n@NgModule({\n  declarations: [BoardComponent],\n  imports: [\n    CommonModule,\n    ActionsModule,\n    DiceModule,\n    DomainModule,\n    HandModule,\n    PhasesModule,\n    PilesModule,\n  ],\n  exports: [BoardComponent],\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanPrint.html":{"url":"interfaces/CanPrint.html","title":"interface - CanPrint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CanPrint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/print.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        print\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        print\n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n            \n                \n                    Defined in libs/shared-models/src/lib/interfaces/print.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface CanPrint {\n  print(): string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isCanPrint(obj: any): obj is CanPrint {\n  return typeof obj.print === 'function';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardBackComponent.html":{"url":"components/CardBackComponent.html","title":"component - CardBackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardBackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card-back/card-back/card-back.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card-back\n            \n\n            \n                styleUrls\n                ./card-back.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card-back.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Array\n                            \n                            \n                                getImgSrc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ressources\n                            \n                            \n                                typeIconName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ressources\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Array\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Array\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getImgSrc\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { getImgSrc } from '@taormina/shared-utils';\n\n@Component({\n  selector: 'taormina-card-back',\n  templateUrl: './card-back.component.html',\n  styleUrls: ['./card-back.component.css'],\n})\nexport class CardBackComponent {\n  @Input() typeIconName!: string;\n  @Input() ressources?: { iconName: string; count: number }[];\n\n  Array = Array;\n  getImgSrc = getImgSrc;\n}\n\n    \n\n    \n        \n  \n\n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./card-back.component.css\n                \n                .card-back {\n  width: 100%;\n  height: 100%;\n  background-color: gray;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.type-icon {\n  width: 50%;\n  height: 50%;\n}\n\n.ressources {\n  position: relative;\n  bottom: 4em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.3em;\n}\n\n.ressource-icon {\n  width: 15%;\n  height: 15%;\n  padding: 2px;\n  background-color: white;\n  border-style: solid;\n  border-color: black;\n  border-width: 1px;\n  border-radius: 20%;\n  box-shadow: inset -0.1em -0.1em 0.5em lightgray;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardBackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardBackModule.html":{"url":"modules/CardBackModule.html","title":"module - CardBackModule","body":"\n                   \n\n\n\n\n    Modules\n    CardBackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardBackModule\n\n\n\ncluster_CardBackModule_exports\n\n\n\ncluster_CardBackModule_declarations\n\n\n\n\nCardBackComponent\n\nCardBackComponent\n\n\n\nCardBackModule\n\nCardBackModule\n\nCardBackModule -->\n\nCardBackComponent->CardBackModule\n\n\n\n\n\nCardBackComponent \n\nCardBackComponent \n\nCardBackComponent  -->\n\nCardBackModule->CardBackComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/card-back/card-back.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardBackComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardBackComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardBackComponent } from './card-back/card-back.component';\n\n@NgModule({\n  declarations: [CardBackComponent],\n  imports: [CommonModule],\n  exports: [CardBackComponent],\n})\nexport class CardBackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card\n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'taormina-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent {}\n\n    \n\n    \n        card works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'card works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/taormina-duel-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable-1.html":{"url":"interfaces/Chainable-1.html","title":"interface - Chainable-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ui-card-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ui-card-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataAccessGameModule.html":{"url":"modules/DataAccessGameModule.html","title":"module - DataAccessGameModule","body":"\n                   \n\n\n\n\n    Modules\n    DataAccessGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\n\nAgglomerationPilesCardsFacade\n\nAgglomerationPilesCardsFacade\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nDataAccessGameModule -->\n\nAgglomerationPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/data-access-game/src/lib/data-access-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgglomerationPilesCardsFacade\n                        \n                        \n                            DiscardPileCardsFacade\n                        \n                        \n                            DomainsCardsFacade\n                        \n                        \n                            EventsPileCardsFacade\n                        \n                        \n                            GameFacade\n                        \n                        \n                            HandsCardsFacade\n                        \n                        \n                            LandsPileCardsFacade\n                        \n                        \n                            StockPilesCardsFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { DiscardPileCardsEffects } from './+state/discard-pile-cards/discard-pile-cards.effects';\nimport { DiscardPileCardsFacade } from './+state/discard-pile-cards/discard-pile-cards.facade';\nimport * as fromDiscardPileCards from './+state/discard-pile-cards/discard-pile-cards.reducer';\nimport { DomainsCardsEffects } from './+state/domains-cards/domains-cards.effects';\nimport { DomainsCardsFacade } from './+state/domains-cards/domains-cards.facade';\nimport * as fromDomainsCards from './+state/domains-cards/domains-cards.reducer';\nimport { EventsPileCardsEffects } from './+state/events-pile-cards/events-pile-cards.effects';\nimport { EventsPileCardsFacade } from './+state/events-pile-cards/events-pile-cards.facade';\nimport * as fromEventsPileCards from './+state/events-pile-cards/events-pile-cards.reducer';\nimport { AgglomerationPilesCardsEffects } from './+state/agglomeration-piles-cards/agglomeration-piles-cards.effects';\nimport { AgglomerationPilesCardsFacade } from './+state/agglomeration-piles-cards/agglomeration-piles-cards.facade';\nimport * as fromAgglomerationPilesCards from './+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer';\nimport { GameEffects } from './+state/game/game.effects';\nimport { GameFacade } from './+state/game/game.facade';\nimport * as fromGame from './+state/game/game.reducer';\nimport { HandsCardsEffects } from './+state/hands-cards/hands-cards.effects';\nimport { HandsCardsFacade } from './+state/hands-cards/hands-cards.facade';\nimport * as fromHandsCards from './+state/hands-cards/hands-cards.reducer';\nimport { LandsPileCardsEffects } from './+state/lands-pile-cards/lands-pile-cards.effects';\nimport { LandsPileCardsFacade } from './+state/lands-pile-cards/lands-pile-cards.facade';\nimport * as fromLandsPileCards from './+state/lands-pile-cards/lands-pile-cards.reducer';\nimport { StockPilesCardsEffects } from './+state/stock-piles-cards/stock-piles-cards.effects';\nimport { StockPilesCardsFacade } from './+state/stock-piles-cards/stock-piles-cards.facade';\nimport * as fromStockPilesCards from './+state/stock-piles-cards/stock-piles-cards.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromGame.GAME_FEATURE_KEY, fromGame.gameReducer),\n    EffectsModule.forFeature([GameEffects]),\n    StoreModule.forFeature(\n      fromDomainsCards.DOMAINS_CARDS_FEATURE_KEY,\n      fromDomainsCards.domainsCardsReducer\n    ),\n    EffectsModule.forFeature([DomainsCardsEffects]),\n    StoreModule.forFeature(\n      fromHandsCards.HANDS_CARDS_FEATURE_KEY,\n      fromHandsCards.handsCardsReducer\n    ),\n    EffectsModule.forFeature([HandsCardsEffects]),\n    StoreModule.forFeature(\n      fromAgglomerationPilesCards.AGGLOMERATION_PILES_CARDS_FEATURE_KEY,\n      fromAgglomerationPilesCards.agglomerationPilesCardsReducer\n    ),\n    EffectsModule.forFeature([EventsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromLandsPileCards.LANDS_PILE_CARDS_FEATURE_KEY,\n      fromLandsPileCards.landsPileCardsReducer\n    ),\n    EffectsModule.forFeature([AgglomerationPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromStockPilesCards.STOCK_PILES_CARDS_FEATURE_KEY,\n      fromStockPilesCards.stockPilesCardsReducer\n    ),\n    EffectsModule.forFeature([StockPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromEventsPileCards.EVENTS_PILE_CARDS_FEATURE_KEY,\n      fromEventsPileCards.eventsPileCardsReducer\n    ),\n    EffectsModule.forFeature([LandsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromDiscardPileCards.DISCARD_PILE_CARDS_FEATURE_KEY,\n      fromDiscardPileCards.discardPileCardsReducer\n    ),\n    EffectsModule.forFeature([DiscardPileCardsEffects]),\n  ],\n  providers: [\n    GameFacade,\n    DomainsCardsFacade,\n    HandsCardsFacade,\n    AgglomerationPilesCardsFacade,\n    LandsPileCardsFacade,\n    StockPilesCardsFacade,\n    EventsPileCardsFacade,\n    DiscardPileCardsFacade,\n  ],\n})\nexport class DataAccessGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DevelopmentCard.html":{"url":"interfaces/DevelopmentCard.html","title":"interface - DevelopmentCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DevelopmentCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/development.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Development Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            celebrationPoints\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            givesKnowledge\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            needsTown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noDuplicate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strengthPoints\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tradePoints\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        celebrationPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        celebrationPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        givesKnowledge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        givesKnowledge:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsTown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsTown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strengthPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strengthPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tradePoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tradePoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DevelopmentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DevelopmentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport {\n  BuildingName,\n  DevelopmentType,\n  ShipName,\n  ShipNameKey,\n  WarriorName,\n} from '../types/development';\nimport { ResourceType } from '../types/resources';\n\nexport const DEVELOPMENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\nexport const AVAILABLE_DEVELOPMENT_SLOT = 'AvailableDevelopmentSlot';\n\n/**\n * Interface for the Development Cards\n */\nexport interface DevelopmentCard\n  extends HasId,\n    HasName,\n    HasCost,\n    HasVictoryPoints {\n  interface: typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: string;\n  cost: Map;\n  type: DevelopmentType;\n  tradePoints?: number;\n  strengthPoints?: number;\n  celebrationPoints?: number;\n  givesKnowledge?: boolean;\n  noDuplicate?: boolean;\n  needsTown?: boolean;\n  victoryPoints?: number;\n}\n\nconst createDevelopmentCard = (\n  id: string,\n  name: string,\n  cost: Map,\n  type: DevelopmentType\n): DevelopmentCard => ({\n  interface: DEVELOPMENT_CARD_INTERFACE_NAME,\n  id,\n  name,\n  cost,\n  type,\n});\n\nexport function createBuilding(\n  id: string,\n  name: BuildingName,\n  cost: Map,\n  tradePoints?: number,\n  givesKnowledge?: boolean,\n  noDuplicate?: boolean,\n  victoryPoints?: number\n): DevelopmentCard {\n  const building = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Building\n  );\n  building.tradePoints = tradePoints;\n  building.givesKnowledge = givesKnowledge;\n  building.noDuplicate = noDuplicate;\n  building.victoryPoints = victoryPoints;\n  return building;\n}\n\nexport function createShip(id: string, type: ShipNameKey): DevelopmentCard {\n  const name = ShipName.get(type);\n  if (name === undefined) {\n    throw new Error(`Can't find ship name for type ${type}`);\n  }\n  const ship = createDevelopmentCard(\n    id,\n    name,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Wool, 1],\n    ]),\n    DevelopmentType.Ship\n  );\n  ship.tradePoints = 1;\n  return ship;\n}\n\nexport function createWarrior(\n  id: string,\n  name: WarriorName,\n  cost: Map,\n  strengthPoints?: number,\n  celebrationPoints?: number\n): DevelopmentCard {\n  const warrior = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Warrior\n  );\n  warrior.strengthPoints = strengthPoints;\n  warrior.celebrationPoints = celebrationPoints;\n  return warrior;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isDevelopmentCard(obj: any): obj is DevelopmentCard {\n  return obj !== undefined && obj.interface === DEVELOPMENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiceComponent.html":{"url":"components/DiceComponent.html","title":"component - DiceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/dice/dice/dice.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-dice\n            \n\n            \n                styleUrls\n                ./dice.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                RESOURCE_VALUES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventDie\n                            \n                            \n                                getNextProductionDie\n                            \n                            \n                                getProductionDie\n                            \n                            \n                                onThrow\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                throwDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEventDie\n                        \n                    \n                \n            \n            \n                \ngetEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextProductionDie\n                        \n                    \n                \n            \n            \n                \ngetNextProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductionDie\n                        \n                    \n                \n            \n            \n                \ngetProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onThrow\n                        \n                    \n                \n            \n            \n                \nonThrow()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDisabled\n                        \n                    \n                \n            \n            \n                \nthrowDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RESOURCE_VALUES\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameFacade } from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  EventValue,\n  GamePhase,\n  ResourceValue,\n  RESOURCE_VALUES,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-dice',\n  templateUrl: './dice.component.html',\n  styleUrls: ['./dice.component.css'],\n})\nexport class DiceComponent {\n  RESOURCE_VALUES = RESOURCE_VALUES;\n\n  constructor(private game: GameFacade, private gameRules: GameRulesService) {}\n\n  throwDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map(\n        (phase) =>\n          phase !== GamePhase.InitialThrow && phase !== GamePhase.LoopThrow\n      )\n    );\n  }\n\n  onThrow(): void {\n    this.gameRules.throwDice();\n  }\n\n  getProductionDie(): Observable {\n    return this.game.productionDie$;\n  }\n\n  getEventDie(): Observable {\n    return this.game.eventDie$;\n  }\n\n  getNextProductionDie(): Observable {\n    return this.game.nextProductionDie$;\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.game.setNextProductionDie(value);\n  }\n}\n\n    \n\n    \n        \n  \n    Next Production Die:\n    \n      \n        {{ value }}\n    \n  \n  \n    throw\n  \n  Production: {{ value }}\n  Event: {{ value }}\n\n\n    \n\n    \n                \n                    ./dice.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Next Production Die:                  {{ value }}            throw    Production: {{ value }}  Event: {{ value }}'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiceModule.html":{"url":"modules/DiceModule.html","title":"module - DiceModule","body":"\n                   \n\n\n\n\n    Modules\n    DiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_exports\n\n\n\ncluster_DiceModule_declarations\n\n\n\n\nDiceComponent\n\nDiceComponent\n\n\n\nDiceModule\n\nDiceModule\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/dice/dice.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DiceComponent } from './dice/dice.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [DiceComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [DiceComponent],\n})\nexport class DiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsEffects.html":{"url":"injectables/DiscardPileCardsEffects.html","title":"injectable - DiscardPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCard$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { createDiscardPileCardsEntity } from './discard-pile-cards.models';\n\n@Injectable()\nexport class DiscardPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsEntity.html":{"url":"interfaces/DiscardPileCardsEntity.html","title":"interface - DiscardPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DiscardPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DiscardPileCardsEntity {\n  id: string; // Primary ID\n  cardType: string;\n  cardId: string;\n}\n\nexport const createDiscardPileCardsEntity = (\n  id: string,\n  cardType: string,\n  cardId: string\n): DiscardPileCardsEntity => ({\n  id,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsFacade.html":{"url":"injectables/DiscardPileCardsFacade.html","title":"injectable - DiscardPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDiscardPileCards$\n                            \n                            \n                                allDiscardPileCardsReverse$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDiscardPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardToDiscardPile\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardToDiscardPile\n                        \n                    \n                \n            \n            \n                \naddCardToDiscardPile(card: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:39\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCardsReverse$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport * as DiscardPileCardsFeature from './discard-pile-cards.reducer';\nimport * as DiscardPileCardsSelectors from './discard-pile-cards.selectors';\n\n@Injectable()\nexport class DiscardPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  );\n  allDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  );\n  allDiscardPileCardsReverse$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  );\n  selectedDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DiscardPileCardsActions.initDiscardPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      DiscardPileCardsActions.initDiscardPileCardsSavedGame()\n    );\n  }\n\n  addCardToDiscardPile(card: {\n    type:\n      | typeof ACTION_CARD_INTERFACE_NAME\n      | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n    id: string;\n  }): void {\n    this.store.dispatch(DiscardPileCardsActions.addCardToDiscardPile({ card }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsPartialState.html":{"url":"interfaces/DiscardPileCardsPartialState.html","title":"interface - DiscardPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DISCARD_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DISCARD_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DISCARD_PILE_CARDS_FEATURE_KEY:         DiscardPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DiscardPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsState.html":{"url":"interfaces/DiscardPileCardsState.html","title":"interface - DiscardPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Domain.html":{"url":"interfaces/Domain.html","title":"interface - Domain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Domain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/domain.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Domains\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Domains\n */\nexport interface Domain extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createDomain = (id: string, color: DomainColor): Domain => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DomainComponent.html":{"url":"components/DomainComponent.html","title":"component - DomainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DomainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/domain/domain/domain.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-domain\n            \n\n            \n                styleUrls\n                ./domain.component.css\n            \n\n\n\n            \n                templateUrl\n                ./domain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AGGLOMERATION_CARD_INTERFACE_NAME\n                            \n                            \n                                AVAILABLE_AGGLOMERATION_SLOT\n                            \n                            \n                                AVAILABLE_DEVELOPMENT_SLOT\n                            \n                            \n                                AVAILABLE_LAND_SLOT\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                            \n                                LAND_CARD_INTERFACE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAgglomerationCard\n                            \n                            \n                                getCelebrationPoints\n                            \n                            \n                                getColumnsTemplate\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getDomain\n                            \n                            \n                                getDomainsCards\n                            \n                            \n                                getLandCard\n                            \n                            \n                                getRowsTemplate\n                            \n                            \n                                getShipsCount\n                            \n                            \n                                getStrengthMastery\n                            \n                            \n                                getTradeMastery\n                            \n                            \n                                getVictoryPoints\n                            \n                            \n                                increaseResources\n                            \n                            \n                                isDomainCardSelected\n                            \n                            \n                                lockResource\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                domainId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domainsCards: DomainsCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        domainId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAgglomerationCard\n                        \n                    \n                \n            \n            \n                \ngetAgglomerationCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPoints\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsTemplate\n                        \n                    \n                \n            \n            \n                \ngetColumnsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n            \n                \ngetDomain()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Domain | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainsCards\n                        \n                    \n                \n            \n            \n                \ngetDomainsCards(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLandCard\n                        \n                    \n                \n            \n            \n                \ngetLandCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRowsTemplate\n                        \n                    \n                \n            \n            \n                \ngetRowsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShipsCount\n                        \n                    \n                \n            \n            \n                \ngetShipsCount(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStrengthMastery\n                        \n                    \n                \n            \n            \n                \ngetStrengthMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTradeMastery\n                        \n                    \n                \n            \n            \n                \ngetTradeMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPoints\n                        \n                    \n                \n            \n            \n                \ngetVictoryPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDomainCardSelected\n                        \n                    \n                \n            \n            \n                \nisDomainCardSelected(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AGGLOMERATION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AGGLOMERATION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_AGGLOMERATION_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_AGGLOMERATION_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_DEVELOPMENT_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_DEVELOPMENT_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_LAND_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_LAND_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LAND_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LAND_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  agglomerationCards,\n  developmentCards,\n  domains,\n  landCards,\n} from '@taormina/shared-constants';\nimport {\n  AgglomerationCard,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Domain,\n  LandCard,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-domain',\n  templateUrl: './domain.component.html',\n  styleUrls: ['./domain.component.css'],\n})\nexport class DomainComponent {\n  @Input() domainId!: string;\n\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n  AGGLOMERATION_CARD_INTERFACE_NAME = AGGLOMERATION_CARD_INTERFACE_NAME;\n  LAND_CARD_INTERFACE_NAME = LAND_CARD_INTERFACE_NAME;\n  AVAILABLE_AGGLOMERATION_SLOT = AVAILABLE_AGGLOMERATION_SLOT;\n  AVAILABLE_DEVELOPMENT_SLOT = AVAILABLE_DEVELOPMENT_SLOT;\n  AVAILABLE_LAND_SLOT = AVAILABLE_LAND_SLOT;\n\n  constructor(\n    private domainsCards: DomainsCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  getDomain(): Domain | undefined {\n    return domains.get(this.domainId);\n  }\n\n  getShipsCount(domainId: string): Observable {\n    return this.domainsCards.getMerchantShipCountForDomain(domainId);\n  }\n\n  getCelebrationPoints(domainId: string): Observable {\n    return this.domainsCards.getCelebrationPointsForDomain(domainId);\n  }\n\n  getStrengthMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Strength)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getTradeMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Trade)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getVictoryPoints(domainId: string): Observable {\n    return this.gameRules.getVictoryPointsForDomain(domainId);\n  }\n\n  getColumnsTemplate(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getDomainMinCol(domainId),\n      this.domainsCards.getDomainMaxCol(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return combineLatest([\n      this.domainsCards.getDomainMinRow(domainId),\n      this.domainsCards.getDomainMaxRow(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return this.domainsCards.allDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.filter((domainCard) => domainCard.domainId === domainId)\n      )\n    );\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  getAgglomerationCard(cardId: string): AgglomerationCard | undefined {\n    return agglomerationCards.get(cardId);\n  }\n\n  getLandCard(cardId: string): LandCard | undefined {\n    return landCards.get(cardId);\n  }\n\n  isDomainCardSelected(pivotId: string): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.map((domainsCard) => domainsCard.id).includes(pivotId)\n      )\n    );\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.domainsCards.toggleDomainCardSelection(pivotId);\n  }\n\n  lockResource(pivotId: string): void {\n    this.domainsCards.lockResource(pivotId);\n  }\n\n  unlockResources(pivotId: string): void {\n    this.domainsCards.unlockResources(pivotId);\n  }\n\n  increaseResources(pivotId: string): void {\n    this.domainsCards.increaseResources(pivotId);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ domain.color }}\n     - Ships count: {{ getShipsCount(domain.id) | async }}\n    \n      - Celebration points: {{ getCelebrationPoints(domain.id) | async }}\n     - Trade Mastery\n    \n      - Strength Mastery\n     - Victory points: {{ getVictoryPoints(domain.id) | async }}\n  \n  \n    \n      \n        \n          {{ development.name }}\n        \n      \n      \n        \n          {{ agglomeration.type }}\n          \n            {{\n              (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select'\n            }}\n          \n        \n      \n      \n        \n          {{ land.type }}\n          {{ land.die }}\n          Available: {{ pivot.availableResources }}\n          locked: {{ pivot.lockedResources }}\n          Lock\n          \n            Unlock\n          \n            Increase\n          \n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./domain.component.css\n                \n                .grid-container {\n  display: grid;\n  grid-gap: 2rem;\n}\n\n.grid-cell {\n  border: 1px solid black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ domain.color }}     - Ships count: {{ getShipsCount(domain.id) | async }}          - Celebration points: {{ getCelebrationPoints(domain.id) | async }}     - Trade Mastery          - Strength Mastery     - Victory points: {{ getVictoryPoints(domain.id) | async }}                                {{ development.name }}                                      {{ agglomeration.type }}                      {{              (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\'            }}                                                {{ land.type }}          {{ land.die }}          Available: {{ pivot.availableResources }}          locked: {{ pivot.lockedResources }}          Lock                      Unlock                      Increase                                                {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                    '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DomainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DomainModule.html":{"url":"modules/DomainModule.html","title":"module - DomainModule","body":"\n                   \n\n\n\n\n    Modules\n    DomainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_DomainModule_declarations\n\n\n\n\nDomainComponent\n\nDomainComponent\n\n\n\nDomainModule\n\nDomainModule\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/domain/domain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomainComponent } from './domain/domain.component';\n\n@NgModule({\n  declarations: [DomainComponent],\n  imports: [CommonModule],\n  exports: [DomainComponent],\n})\nexport class DomainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsEffects.html":{"url":"injectables/DomainsCardsEffects.html","title":"injectable - DomainsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countStealResources$\n                            \n                            \n                                createCard$\n                            \n                            \n                                giveLockedResources$\n                            \n                            \n                                increaseResources$\n                            \n                            \n                                increaseResourcesAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                lockResource$\n                            \n                            \n                                putCardInPivot$\n                            \n                            \n                                unlockResources$\n                            \n                            \n                                    Private\n                                updatesAvailableResources\n                            \n                            \n                                useLockedResources$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLandCardFromPivot\n                            \n                            \n                                    Private\n                                takeOneDefinedPivotOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, domainsCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:422\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCardsStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getLandCardFromPivot\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLandCardFromPivot(pivot: DomainsCardsEntity)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:488\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivot\n                                    \n                                                DomainsCardsEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        takeOneDefinedPivotOrThrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    takeOneDefinedPivotOrThrow(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:429\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countStealResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:381\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:364\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:235\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:317\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInPivot$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:348\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updatesAvailableResources\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:444\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:212\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { landCards } from '@taormina/shared-constants';\nimport {\n  LandCard,\n  ResourceCount,\n  RESOURCE_COUNTS,\n} from '@taormina/shared-models';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  map,\n  take,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport {\n  createDomainsCardsEntity,\n  createInitialDomainsCards,\n  DomainsCardsEntity,\n} from './domains-cards.models';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  increaseResourcesForDie$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  );\n\n  increaseResourcesAuspiciousYear$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  );\n\n  lockResource$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  unlockResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  useLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  giveLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  increaseResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  putCardInPivot$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  );\n\n  createCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  );\n\n  countStealResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private domainsCardsStore: Store\n  ) {}\n\n  private takeOneDefinedPivotOrThrow(\n    id: string\n  ): Observable {\n    return this.domainsCardsStore.pipe(\n      select(DomainsCardsSelectors.getLandCardPivotById(id)),\n      map((pivot) => {\n        if (pivot === undefined) {\n          throw new Error(`Couldn't find land card pivot for id.`);\n        }\n        return pivot;\n      }),\n      take(1)\n    );\n  }\n\n  private updatesAvailableResources = (\n    domainsCards: DomainsCardsEntity[],\n    resourceIncrement: number\n  ): {\n    id: string;\n    changes: {\n      availableResources: ResourceCount;\n    };\n  }[] => {\n    const belowMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: (pivot.availableResources +\n              resourceIncrement) as ResourceCount,\n          },\n        };\n      });\n\n    const atMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources >=\n            Math.max(...RESOURCE_COUNTS) - resourceIncrement &&\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: Math.max(...RESOURCE_COUNTS) as ResourceCount,\n          },\n        };\n      });\n\n    return [...belowMax, ...atMax];\n  };\n\n  private getLandCardFromPivot(pivot: DomainsCardsEntity): LandCard {\n    if (pivot.cardId === undefined) {\n      throw new Error(\n        `Something went wrong, cardId shouldn't be undefined at this point.`\n      );\n    }\n    const land = landCards.get(pivot.cardId);\n    if (land === undefined) {\n      throw new Error(\n        `Something went wrong, land shouldn't be undefined at this point.`\n      );\n    }\n    return land;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsEntity.html":{"url":"interfaces/DomainsCardsEntity.html","title":"interface - DomainsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DomainsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            availableResources\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            domainId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lockedResources\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         DomainCardType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainCardType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        domainId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lockedResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lockedResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         RowValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ID_CLAY_PIT_BLUE,\n  ID_CLAY_PIT_RED,\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_FIELD_BLUE,\n  ID_FIELD_RED,\n  ID_FOREST_BLUE,\n  ID_FOREST_RED,\n  ID_GOLD_MINE_BLUE,\n  ID_GOLD_MINE_RED,\n  ID_HAMLET_BLUE_1,\n  ID_HAMLET_BLUE_2,\n  ID_HAMLET_RED_1,\n  ID_HAMLET_RED_2,\n  ID_PASTURE_BLUE,\n  ID_PASTURE_RED,\n  ID_ROAD_BLUE,\n  ID_ROAD_RED,\n  ID_STONE_QUARRY_BLUE,\n  ID_STONE_QUARRY_RED,\n} from '@taormina/shared-constants';\nimport {\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  DomainCardType,\n  LAND_CARD_INTERFACE_NAME,\n  ResourceCount,\n  RowValue,\n} from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'DomainsCards' data\n */\nexport interface DomainsCardsEntity {\n  id: string; // Primary ID\n  domainId: string; // Foreign key to domains\n  cardType: DomainCardType;\n  cardId?: string; // Foreign key to cards\n  col: number;\n  row: RowValue;\n  availableResources: ResourceCount;\n  lockedResources: ResourceCount;\n}\n\nexport const createDomainsCardsEntity = (\n  id: string,\n  domainId: string,\n  cardType: DomainCardType,\n  cardId: string | undefined,\n  col: number,\n  row: RowValue,\n  availableResources = 0 as ResourceCount,\n  lockedResources = 0 as ResourceCount\n): DomainsCardsEntity => ({\n  id,\n  domainId,\n  cardType,\n  cardId,\n  col,\n  row,\n  availableResources,\n  lockedResources,\n});\n\n/* eslint-disable no-magic-numbers */\nexport const createInitialDomainsCards = (): DomainsCardsEntity[] => {\n  const initialDomainsCards: DomainsCardsEntity[] = [\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_RED,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_RED,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_RED,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_RED,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_RED,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_RED,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_RED,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_BLUE,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_BLUE,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_BLUE,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_BLUE,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_BLUE,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_BLUE,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_BLUE,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n  ];\n  return initialDomainsCards;\n};\n/* eslint-enable no-magic-numbers */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsFacade.html":{"url":"injectables/DomainsCardsFacade.html","title":"injectable - DomainsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDomainsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDomainsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                countAndStealUnprotectedGoldAndWool\n                            \n                            \n                                createAvailableDomainCard\n                            \n                            \n                                getCardsVictoryPointsForDomain\n                            \n                            \n                                getCelebrationPointsForDomain\n                            \n                            \n                                getDomainMaxCol\n                            \n                            \n                                getDomainMaxRow\n                            \n                            \n                                getDomainMinCol\n                            \n                            \n                                getDomainMinRow\n                            \n                            \n                                getMasteryDomainForType\n                            \n                            \n                                getMerchantShipCountForDomain\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                hasDomainCommunityCenter\n                            \n                            \n                                increaseResources\n                            \n                            \n                                increaseResourcesForAuspiciousYear\n                            \n                            \n                                increaseResourcesForDie\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                lockResource\n                            \n                            \n                                putCardInSlot\n                            \n                            \n                                removeDomainCard\n                            \n                            \n                                swapSelectedCards\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                            \n                                useLockedResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndStealUnprotectedGoldAndWool\n                        \n                    \n                \n            \n            \n                \ncountAndStealUnprotectedGoldAndWool()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAvailableDomainCard\n                        \n                    \n                \n            \n            \n                \ncreateAvailableDomainCard(domainId: string, cardType: DomainCardType, col: number, row: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCardsVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMinCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMinRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMasteryDomainForType\n                        \n                    \n                \n            \n            \n                \ngetMasteryDomainForType(type: MasteryPointsType)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                MasteryPointsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMerchantShipCountForDomain\n                        \n                    \n                \n            \n            \n                \ngetMerchantShipCountForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDomainCommunityCenter\n                        \n                    \n                \n            \n            \n                \nhasDomainCommunityCenter(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForAuspiciousYear()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForDie(value: DiceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:38\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInSlot\n                        \n                    \n                \n            \n            \n                \nputCardInSlot(pivotId: string, cardType: DomainCardType, cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeDomainCard\n                        \n                    \n                \n            \n            \n                \nremoveDomainCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources\n                        \n                    \n                \n            \n            \n                \nuseLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  DiceValue,\n  DomainCardType,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  );\n  allDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  );\n  selectedDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsSavedGame());\n  }\n\n  lockResource(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.lockResource({ id: pivotId }));\n  }\n\n  unlockResources(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.unlockResources({ id: pivotId }));\n  }\n\n  increaseResources(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResources({ id: pivotId })\n    );\n  }\n\n  increaseResourcesForDie(value: DiceValue): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForDie({ die: value })\n    );\n  }\n\n  increaseResourcesForAuspiciousYear(): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear()\n    );\n  }\n\n  useLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.useLockedResources());\n  }\n\n  giveLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.giveLockedResources());\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.toggleDomainCardSelection({ id: pivotId })\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.store.dispatch(DomainsCardsActions.clearDomainCardSelection());\n  }\n\n  putCardInSlot(\n    pivotId: string,\n    cardType: DomainCardType,\n    cardId: string\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.putCardInPivot({\n        id: pivotId,\n        cardType,\n        cardId,\n      })\n    );\n  }\n\n  createAvailableDomainCard(\n    domainId: string,\n    cardType: DomainCardType,\n    col: number,\n    row: number\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.createDomainCard({\n        domainId,\n        cardType,\n        cardId: undefined,\n        col,\n        row,\n      })\n    );\n  }\n\n  countAndStealUnprotectedGoldAndWool(): void {\n    this.store.dispatch(\n      DomainsCardsActions.countAndStealUnprotectedGoldAndWool()\n    );\n  }\n\n  swapSelectedCards(): void {\n    this.store.dispatch(DomainsCardsActions.swapSelectedCards());\n  }\n\n  removeDomainCard(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.removeDomainCard({ id: pivotId }));\n  }\n\n  getDomainMinCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinCol(domainId));\n  }\n\n  getDomainMaxCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxCol(domainId));\n  }\n\n  getDomainMinRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinRow(domainId));\n  }\n\n  getDomainMaxRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxRow(domainId));\n  }\n\n  getMasteryDomainForType(\n    type: MasteryPointsType\n  ): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMasteryDomainForType(type)\n    );\n  }\n\n  getCardsVictoryPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCardsVictoryPointsForDomain(domainId)\n    );\n  }\n\n  getMerchantShipCountForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMerchantShipCountForDomain(domainId)\n    );\n  }\n\n  getCelebrationPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCelebrationPointsForDomain(domainId)\n    );\n  }\n\n  hasDomainCommunityCenter(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.hasDomainCommunityCenter(domainId)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsPartialState.html":{"url":"interfaces/DomainsCardsPartialState.html","title":"interface - DomainsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DOMAINS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DOMAINS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DOMAINS_CARDS_FEATURE_KEY:         DomainsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsState.html":{"url":"interfaces/DomainsCardsState.html","title":"interface - DomainsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            selectedIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventCard.html":{"url":"interfaces/EventCard.html","title":"interface - EventCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/event.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Event Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         EventName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { EventName } from '../types/event';\n\nexport const EVENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\n/**\n * Interface for the Event Cards\n */\nexport interface EventCard extends HasId, HasName, HasRules {\n  interface: typeof EVENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: EventName;\n  ruleIds: string[];\n}\n\nexport const createEventCard = (\n  id: string,\n  name: EventName,\n  ruleIds: string[]\n): EventCard => ({ interface: EVENT_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isEventCard(obj: any): obj is EventCard {\n  return obj !== undefined && obj.interface === EVENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsEffects.html":{"url":"injectables/EventsPileCardsEffects.html","title":"injectable - EventsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                resetPileAndSelectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, eventsPileCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPileAndSelectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { createInitialEventsPileCards } from './events-pile-cards.models';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\n\n@Injectable()\nexport class EventsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  resetPileAndSelectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private eventsPileCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsEntity.html":{"url":"interfaces/EventsPileCardsEntity.html","title":"interface - EventsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'EventsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { eventCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'EventsPileCards' data\n */\nexport interface EventsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createEventsPileCardsEntity = (\n  id: string,\n  cardId: string\n): EventsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialEventsPileCards = (): EventsPileCardsEntity[] => {\n  const numberOfCardsBelowFestival = 3;\n  const shuffled = arrayShuffle(Array.from(eventCards.keys()).slice(1));\n  shuffled.splice(-numberOfCardsBelowFestival, 0, 'EVENT_0');\n  const entities = shuffled.map((cardId) =>\n    createEventsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsFacade.html":{"url":"injectables/EventsPileCardsFacade.html","title":"injectable - EventsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allEventsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedEventsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeSelected\n                            \n                            \n                                resetEventsPile\n                            \n                            \n                                selectFirst\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPile\n                        \n                    \n                \n            \n            \n                \nresetEventsPile()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst\n                        \n                    \n                \n            \n            \n                \nselectFirst()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\nimport * as EventsPileCardsSelectors from './events-pile-cards.selectors';\n\n@Injectable()\nexport class EventsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  );\n  allEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  );\n  selectedEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsSavedGame());\n  }\n\n  resetEventsPile(): void {\n    this.store.dispatch(EventsPileCardsActions.resetEventsPile());\n  }\n\n  selectFirst(): void {\n    this.store.dispatch(EventsPileCardsActions.selectFirstEventsPileCard());\n  }\n\n  removeSelected(): void {\n    this.store.dispatch(EventsPileCardsActions.removeSelectedEventsPileCard());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsPartialState.html":{"url":"interfaces/EventsPileCardsPartialState.html","title":"interface - EventsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            EVENTS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EVENTS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        EVENTS_PILE_CARDS_FEATURE_KEY:         EventsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsState.html":{"url":"interfaces/EventsPileCardsState.html","title":"interface - EventsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureEngineModule.html":{"url":"modules/FeatureEngineModule.html","title":"module - FeatureEngineModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureEngineModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-engine/src/lib/feature-engine.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class FeatureEngineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureGameModule.html":{"url":"modules/FeatureGameModule.html","title":"module - FeatureGameModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\ncluster_FeatureGameModule_imports\n\n\n\n\nBoardModule\n\nBoardModule\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/feature-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BoardModule } from './board/board.module';\n\n@NgModule({\n  imports: [CommonModule, BoardModule],\n  exports: [BoardModule],\n})\nexport class FeatureGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameEffects.html":{"url":"injectables/GameEffects.html","title":"injectable - GameEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                throwDice$\n                            \n                            \n                                throwEvent$\n                            \n                            \n                                throwProduction$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, gameStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProduction$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport {\n  getRandomEventDieValue,\n  getRandomProductionDieValue,\n} from '@taormina/shared-utils';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameEffects {\n  throwDice$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  );\n\n  throwProduction$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  );\n\n  throwEvent$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private gameStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameFacade.html":{"url":"injectables/GameFacade.html","title":"injectable - GameFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action$\n                            \n                            \n                                eventDie$\n                            \n                            \n                                nextProductionDie$\n                            \n                            \n                                phase$\n                            \n                            \n                                player$\n                            \n                            \n                                productionDie$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                setAction\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                throwDice\n                            \n                            \n                                throwEventDie\n                            \n                            \n                                throwProductionDie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:35\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAction\n                        \n                    \n                \n            \n            \n                \nsetAction(action: ActionName | undefined)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionName | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEventDie\n                        \n                    \n                \n            \n            \n                \nthrowEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProductionDie\n                        \n                    \n                \n            \n            \n                \nthrowProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameAction))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameEventDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextProductionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phase$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePhase))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePlayer))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameProductionDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  productionDie$ = this.store.pipe(select(GameSelectors.getGameProductionDie));\n  nextProductionDie$ = this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  );\n  eventDie$ = this.store.pipe(select(GameSelectors.getGameEventDie));\n  phase$ = this.store.pipe(select(GameSelectors.getGamePhase));\n  player$ = this.store.pipe(select(GameSelectors.getGamePlayer));\n  action$ = this.store.pipe(select(GameSelectors.getGameAction));\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(GameActions.initNewGame());\n  }\n\n  throwDice(): void {\n    this.store.dispatch(GameActions.throwDice());\n  }\n\n  throwProductionDie(): void {\n    this.store.dispatch(GameActions.throwProductionDie());\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.store.dispatch(GameActions.setNextProductionDie({ value }));\n  }\n\n  throwEventDie(): void {\n    this.store.dispatch(GameActions.throwEventDie());\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.store.dispatch(GameActions.setPhase({ phase }));\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.store.dispatch(GameActions.setPlayer({ player }));\n  }\n\n  setAction(action: ActionName | undefined): void {\n    this.store.dispatch(GameActions.setAction({ action }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamePartialState.html":{"url":"interfaces/GamePartialState.html","title":"interface - GamePartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamePartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            GAME_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        GAME_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GAME_FEATURE_KEY:         GameState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameRulesService.html":{"url":"injectables/GameRulesService.html","title":"injectable - GameRulesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameRulesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/feature-engine/src/lib/game-rules.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auspiciousYear$\n                            \n                            \n                                countAndSteal$\n                            \n                            \n                                event$\n                            \n                            \n                                festival$\n                            \n                            \n                                gameEnded$\n                            \n                            \n                                increaseResourcesForAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                resetEventsPileOnFestival$\n                            \n                            \n                                selectFirstEvent$\n                            \n                            \n                                thieves$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawCardFromStockToHand\n                            \n                            \n                                drawFirstCardsFromStockToHand\n                            \n                            \n                                getVictoryPointsForDomain\n                            \n                            \n                                initNewGame\n                            \n                            \n                                putBackFromDomainToStockPile\n                            \n                            \n                                putBackFromHandToStockPile\n                            \n                            \n                                putLandsPileCardInSlot\n                            \n                            \n                                throwDice\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useResourcesToPutAgglomerationPileCardInSlot\n                            \n                            \n                                useResourcesToPutHandCardInSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, agglomerationPilesCards: AgglomerationPilesCardsFacade, landsPileCards: LandsPileCardsFacade, stockPilesCards: StockPilesCardsFacade, eventsPileCards: EventsPileCardsFacade, discardPileCards: DiscardPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCards\n                                                  \n                                                        \n                                                                        AgglomerationPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCards\n                                                  \n                                                        \n                                                                        StockPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discardPileCards\n                                                  \n                                                        \n                                                                        DiscardPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drawCardFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawCardFromStockToHand(pileId: string, cardId: string, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawFirstCardsFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawFirstCardsFromStockToHand(pileId: string, cardsCount: number, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardsCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromDomainToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromDomainToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:378\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromHandToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromHandToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:357\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLandsPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nputLandsPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:426\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutAgglomerationPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutAgglomerationPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutHandCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutHandCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndSteal$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        event$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(filter((die) => die === EventValue.Event))\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        festival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameEnded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPileOnFestival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thieves$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  DiscardPileCardsFacade,\n  DomainsCardsFacade,\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  AgglomerationPilesCardsFacade,\n  GameFacade,\n  HandsCardsFacade,\n  LandsPileCardsFacade,\n  StockPilesCardsFacade,\n} from '@taormina/data-access-game';\nimport {\n  actionCards,\n  eventCards,\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  DiceValue,\n  EventName,\n  EventValue,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n  RowValue,\n} from '@taormina/shared-models';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameRulesService {\n  gameEnded$ = new Subject();\n\n  event$ = this.game.eventDie$.pipe(filter((die) => die === EventValue.Event));\n\n  thieves$ = this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  );\n\n  countAndSteal$ = this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  );\n\n  selectFirstEvent$ = this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  );\n\n  auspiciousYear$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  );\n\n  festival$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  );\n\n  increaseResourcesForDie$ = this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  );\n\n  increaseResourcesForAuspiciousYear$ = this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  );\n\n  resetEventsPileOnFestival$ = this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  );\n\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private agglomerationPilesCards: AgglomerationPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private stockPilesCards: StockPilesCardsFacade,\n    private eventsPileCards: EventsPileCardsFacade,\n    private discardPileCards: DiscardPileCardsFacade\n  ) {}\n\n  initNewGame(): void {\n    this.gameEnded$.next();\n    this.countAndSteal$.subscribe();\n    this.selectFirstEvent$.subscribe();\n    this.increaseResourcesForDie$.subscribe();\n    this.increaseResourcesForAuspiciousYear$.subscribe();\n    this.resetEventsPileOnFestival$.subscribe();\n\n    this.game.initNewGame();\n    this.domainsCards.initNewGame();\n    this.handsCards.initNewGame();\n    this.agglomerationPilesCards.initNewGame();\n    this.landsPileCards.initNewGame();\n    this.stockPilesCards.initNewGame();\n    this.eventsPileCards.initNewGame();\n    this.discardPileCards.initNewGame();\n  }\n\n  getVictoryPointsForDomain(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getCardsVictoryPointsForDomain(domainId),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Trade),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Strength),\n    ]).pipe(\n      map(\n        ([\n          cardsVictoryPoints,\n          tradeMasteryDomainId,\n          strengthMasteryDomainId,\n        ]) => {\n          return (\n            cardsVictoryPoints +\n            (tradeMasteryDomainId === domainId ? 1 : 0) +\n            (strengthMasteryDomainId === domainId ? 1 : 0)\n          );\n        }\n      )\n    );\n  }\n\n  drawFirstCardsFromStockToHand(\n    pileId: string,\n    cardsCount: number,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          return stockPilesCards\n            .filter((stockPileCard) => stockPileCard.pileId === pileId)\n            .slice(0, cardsCount)\n            .map((stockPileCard) => {\n              return {\n                type: stockPileCard.cardType,\n                id: stockPileCard.cardId,\n              };\n            });\n        })\n      )\n      .subscribe((cards) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, cards);\n        this.handsCards.addCardsToHand(handId, cards);\n      });\n  }\n\n  drawCardFromStockToHand(\n    pileId: string,\n    cardId: string,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          const card = stockPilesCards.find(\n            (stockPileCard) =>\n              stockPileCard.pileId === pileId && stockPileCard.cardId === cardId\n          );\n          if (card === undefined) {\n            throw new Error(\n              `Something went wrong, card shouldn't be undefined at this point.`\n            );\n          }\n          return {\n            type: card.cardType,\n            id: card.cardId,\n          };\n        })\n      )\n      .subscribe((card) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, [card]);\n        this.handsCards.addCardsToHand(handId, [card]);\n      });\n  }\n\n  throwDice(): void {\n    this.game.throwEventDie();\n    this.game.phase$.pipe(take(1)).subscribe((phase) => {\n      if (phase !== GamePhase.InitialThrow) {\n        this.game.throwProductionDie();\n      }\n    });\n  }\n\n  useResourcesToPutAgglomerationPileCardInSlot(): void {\n    this.domainsCards.useLockedResources();\n\n    combineLatest([\n      this.agglomerationPilesCards.selectedAgglomerationPilesCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([agglomerationPileCard, domainCards]) => {\n          if (agglomerationPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.agglomerationPilesCards.removeAgglomerationPileCard(\n            agglomerationPileCard.id\n          );\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            AGGLOMERATION_CARD_INTERFACE_NAME,\n            agglomerationPileCard.cardId\n          );\n\n          if (agglomerationPileCard.pileId === ID_AGGLOMERATION_TOWN) {\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Lower\n            );\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Upper\n            );\n          } else {\n            const availableCol =\n              domainCard.col  {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.handsCards.removeHandCard(handCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            DEVELOPMENT_CARD_INTERFACE_NAME,\n            handCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putLandsPileCardInSlot(): void {\n    combineLatest([\n      this.landsPileCards.selectedLandsPileCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([landsPileCard, domainCards]) => {\n          if (landsPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.landsPileCards.removeLandsPileCard(landsPileCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            LAND_CARD_INTERFACE_NAME,\n            landsPileCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromHandToStockPile(pileId: string): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type: handCard.cardType,\n              id: handCard.cardId,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromDomainToStockPile(pileId: string): void {\n    this.domainsCards.selectedDomainsCards$\n      .pipe(\n        take(1),\n        map((domainCards) => {\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in pile if no card or more than one card selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n          const type = domainCard.cardType;\n          if (type !== DEVELOPMENT_CARD_INTERFACE_NAME) {\n            throw new Error(\n              `Can't put back card of type other than development.`\n            );\n          }\n          const id = domainCard.cardId;\n          if (id === undefined) {\n            throw new Error(\n              `Something went wrong, cardId shouldn't be undefined at this point.`\n            );\n          }\n\n          this.domainsCards.removeDomainCard(domainCard.id);\n          this.domainsCards.createAvailableDomainCard(\n            domainCard.domainId,\n            AVAILABLE_DEVELOPMENT_SLOT,\n            domainCard.col,\n            domainCard.row\n          );\n          this.domainsCards.clearDomainCardSelection();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type,\n              id,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  useActionCard(): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          if (\n            handCard.cardType !== ACTION_CARD_INTERFACE_NAME ||\n            handCard.cardId === undefined\n          ) {\n            throw new Error(`Can't use card other than action.`);\n          }\n          const action = actionCards.get(handCard.cardId);\n          if (action === undefined) {\n            throw new Error(\n              `Something went wrong, action shouldn't be undefined at this point.`\n            );\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.game.setAction(action.name);\n          this.discardPileCards.addCardToDiscardPile({\n            type: handCard.cardType,\n            id: handCard.cardId,\n          });\n        })\n      )\n      .subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            eventDie\n                                        \n                                \n                                \n                                        \n                                            nextProductionDie\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            productionDie\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionName | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventDie:         EventValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextProductionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextProductionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         GamePhase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GamePhase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hand.html":{"url":"interfaces/Hand.html","title":"interface - Hand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/hand.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Hands\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Hands\n */\nexport interface Hand extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createHand = (id: string, color: DomainColor): Hand => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HandComponent.html":{"url":"components/HandComponent.html","title":"component - HandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/hand/hand/hand.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-hand\n            \n\n            \n                styleUrls\n                ./hand.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hand.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ACTION_CARD_INTERFACE_NAME\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionCard\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getHand\n                            \n                            \n                                getHandsCards\n                            \n                            \n                                selectHandCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                handId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(handsCards: HandsCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        handId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActionCard\n                        \n                    \n                \n            \n            \n                \ngetActionCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHand\n                        \n                    \n                \n            \n            \n                \ngetHand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Hand | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandsCards\n                        \n                    \n                \n            \n            \n                \ngetHandsCards(handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ACTION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ACTION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { HandsCardsEntity, HandsCardsFacade } from '@taormina/data-access-game';\nimport {\n  actionCards,\n  developmentCards,\n  hands,\n} from '@taormina/shared-constants';\nimport {\n  ActionCard,\n  ACTION_CARD_INTERFACE_NAME,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Hand,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-hand',\n  templateUrl: './hand.component.html',\n  styleUrls: ['./hand.component.css'],\n})\nexport class HandComponent {\n  @Input() handId!: string;\n\n  ACTION_CARD_INTERFACE_NAME = ACTION_CARD_INTERFACE_NAME;\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n\n  constructor(private handsCards: HandsCardsFacade) {}\n\n  getHand(): Hand | undefined {\n    return hands.get(this.handId);\n  }\n\n  getHandsCards(handId: string): Observable {\n    return this.handsCards.allHandsCards$.pipe(\n      map((handsCards) =>\n        handsCards.filter((handCard) => handCard.handId === handId)\n      )\n    );\n  }\n\n  getActionCard(cardId: string): ActionCard | undefined {\n    return actionCards.get(cardId);\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.handsCards.selectHandCard(pivotId);\n  }\n}\n\n    \n\n    \n        \n  {{ hand.color }}\n  \n    \n      \n        {{ action.name }}\n        Select\n      \n    \n    \n      \n        {{ development.name }}\n        Select\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./hand.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ hand.color }}                    {{ action.name }}        Select                            {{ development.name }}        Select            '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HandModule.html":{"url":"modules/HandModule.html","title":"module - HandModule","body":"\n                   \n\n\n\n\n    Modules\n    HandModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HandModule\n\n\n\ncluster_HandModule_exports\n\n\n\ncluster_HandModule_declarations\n\n\n\n\nHandComponent\n\nHandComponent\n\n\n\nHandModule\n\nHandModule\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/hand/hand.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HandComponent } from './hand/hand.component';\n\n@NgModule({\n  declarations: [HandComponent],\n  imports: [CommonModule],\n  exports: [HandComponent],\n})\nexport class HandModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsEffects.html":{"url":"injectables/HandsCardsEffects.html","title":"injectable - HandsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { createHandsCardsEntity } from './hands-cards.models';\n\n@Injectable()\nexport class HandsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsEntity.html":{"url":"interfaces/HandsCardsEntity.html","title":"interface - HandsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'HandsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            handId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\n/**\n * Interface for the 'HandsCards' data\n */\nexport interface HandsCardsEntity {\n  id: string; // Primary ID\n  handId: string; // Foreign key to hands\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createHandsCardsEntity = (\n  id: string,\n  handId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): HandsCardsEntity => ({\n  id,\n  handId,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsFacade.html":{"url":"injectables/HandsCardsFacade.html","title":"injectable - HandsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allHandsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedHandsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToHand\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeHandCard\n                            \n                            \n                                selectHandCard\n                            \n                            \n                                unselectHandCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToHand\n                        \n                    \n                \n            \n            \n                \naddCardsToHand(handId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeHandCard\n                        \n                    \n                \n            \n            \n                \nremoveHandCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unselectHandCard\n                        \n                    \n                \n            \n            \n                \nunselectHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport * as HandsCardsFeature from './hands-cards.reducer';\nimport * as HandsCardsSelectors from './hands-cards.selectors';\n\n@Injectable()\nexport class HandsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded));\n  allHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  );\n  selectedHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  );\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsSavedGame());\n  }\n\n  addCardsToHand(\n    handId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(HandsCardsActions.addCardsToHand({ handId, cards }));\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.store.dispatch(HandsCardsActions.selectHandCard({ id: pivotId }));\n  }\n\n  unselectHandCard(): void {\n    this.store.dispatch(HandsCardsActions.unselectHandCard());\n  }\n\n  removeHandCard(id: string): void {\n    this.store.dispatch(HandsCardsActions.removeHandCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsPartialState.html":{"url":"interfaces/HandsCardsPartialState.html","title":"interface - HandsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            HANDS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HANDS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HANDS_CARDS_FEATURE_KEY:         HandsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsState.html":{"url":"interfaces/HandsCardsState.html","title":"interface - HandsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasColor.html":{"url":"interfaces/HasColor.html","title":"interface - HasColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/color.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DomainColor } from '../types/domain';\n\nexport interface HasColor {\n  color?: DomainColor;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasCost.html":{"url":"interfaces/HasCost.html","title":"interface - HasCost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasCost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/cost.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResourceType } from '../types/resources';\n\nexport interface HasCost {\n  cost: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasId.html":{"url":"interfaces/HasId.html","title":"interface - HasId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasId {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasName.html":{"url":"interfaces/HasName.html","title":"interface - HasName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/name.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasName {\n  name: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isHasName(obj: any): obj is HasName {\n  return typeof obj.name === 'string';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasRules.html":{"url":"interfaces/HasRules.html","title":"interface - HasRules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasRules\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/rules.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasRules {\n  ruleIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasVictoryPoints.html":{"url":"interfaces/HasVictoryPoints.html","title":"interface - HasVictoryPoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasVictoryPoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/victory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVictoryPoints {\n  victoryPoints?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandCard.html":{"url":"interfaces/LandCard.html","title":"interface - LandCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/land.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Land Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            die\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        die\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        die:         ResourceValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         LandType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { ResourceValue } from '../types/dice';\nimport { DomainColor } from '../types/domain';\nimport { LandType } from '../types/resources';\n\nexport const LAND_CARD_INTERFACE_NAME = 'LandCard';\n\nexport const AVAILABLE_LAND_SLOT = 'AvailableLandSlot';\n\n/**\n * Interface for the Land Cards\n */\nexport interface LandCard extends HasId, HasColor, CanPrint {\n  interface: typeof LAND_CARD_INTERFACE_NAME;\n  id: string;\n  type: LandType;\n  die: ResourceValue;\n  color?: DomainColor;\n}\n\nexport const createLandCard = (\n  id: string,\n  type: LandType,\n  die: ResourceValue,\n  color?: DomainColor\n): LandCard => ({\n  interface: LAND_CARD_INTERFACE_NAME,\n  id,\n  type,\n  die,\n  color,\n  print: (): string => `${type}`,\n});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isLandCard(obj: any): obj is LandCard {\n  return obj !== undefined && obj.interface === LAND_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsEffects.html":{"url":"injectables/LandsPileCardsEffects.html","title":"injectable - LandsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { createInitialLandsPileCards } from './lands-pile-cards.models';\n\n@Injectable()\nexport class LandsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsEntity.html":{"url":"interfaces/LandsPileCardsEntity.html","title":"interface - LandsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'LandsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { landCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'LandsPileCards' data\n */\nexport interface LandsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createLandsPileCardsEntity = (\n  id: string,\n  cardId: string\n): LandsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialLandsPileCards = (): LandsPileCardsEntity[] => {\n  const shuffled = arrayShuffle(Array.from(landCards.keys()));\n  const entities = shuffled.map((cardId) =>\n    createLandsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsFacade.html":{"url":"injectables/LandsPileCardsFacade.html","title":"injectable - LandsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allLandsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedLandsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeLandsPileCard\n                            \n                            \n                                selectLandsPileCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLandsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveLandsPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLandsPileCard\n                        \n                    \n                \n            \n            \n                \nselectLandsPileCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport * as LandsPileCardsFeature from './lands-pile-cards.reducer';\nimport * as LandsPileCardsSelectors from './lands-pile-cards.selectors';\n\n@Injectable()\nexport class LandsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  );\n  allLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  );\n  selectedLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsSavedGame());\n  }\n\n  selectLandsPileCard(pivotId: string): void {\n    this.store.dispatch(\n      LandsPileCardsActions.selectLandsPileCard({ id: pivotId })\n    );\n  }\n\n  removeLandsPileCard(id: string): void {\n    this.store.dispatch(LandsPileCardsActions.removeLandsPileCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsPartialState.html":{"url":"interfaces/LandsPileCardsPartialState.html","title":"interface - LandsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            LANDS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LANDS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LANDS_PILE_CARDS_FEATURE_KEY:         LandsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsState.html":{"url":"interfaces/LandsPileCardsState.html","title":"interface - LandsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhasesComponent.html":{"url":"components/PhasesComponent.html","title":"component - PhasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/phases/phases/phases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-phases\n            \n\n            \n                styleUrls\n                ./phases.component.css\n            \n\n\n\n            \n                templateUrl\n                ./phases.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DomainColor\n                            \n                            \n                                GamePhase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAction\n                            \n                            \n                                getEventCard\n                            \n                            \n                                getPhase\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getSelectedEventsPileCard\n                            \n                            \n                                removeSelectedEventsPileCard\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                unsetAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, eventsPileCards: EventsPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAction\n                        \n                    \n                \n            \n            \n                \ngetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventCard\n                        \n                    \n                \n            \n            \n                \ngetEventCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetAction\n                        \n                    \n                \n            \n            \n                \nunsetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DomainColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DomainColor\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GamePhase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GamePhase\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  GameFacade,\n} from '@taormina/data-access-game';\nimport { eventCards } from '@taormina/shared-constants';\nimport {\n  ActionName,\n  DomainColor,\n  EventCard,\n  GamePhase,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'taormina-phases',\n  templateUrl: './phases.component.html',\n  styleUrls: ['./phases.component.css'],\n})\nexport class PhasesComponent {\n  GamePhase = GamePhase;\n  DomainColor = DomainColor;\n\n  constructor(\n    private game: GameFacade,\n    private eventsPileCards: EventsPileCardsFacade\n  ) {}\n\n  getPhase(): Observable {\n    return this.game.phase$;\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.game.setPhase(phase);\n  }\n\n  getPlayer(): Observable {\n    return this.game.player$;\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.game.setPlayer(player);\n  }\n\n  getEventCard(cardId: string): EventCard | undefined {\n    return eventCards.get(cardId);\n  }\n\n  getSelectedEventsPileCard(): Observable {\n    return this.eventsPileCards.selectedEventsPileCards$;\n  }\n\n  removeSelectedEventsPileCard(): void {\n    this.eventsPileCards.removeSelected();\n  }\n\n  getAction(): Observable {\n    return this.game.action$;\n  }\n\n  unsetAction(): void {\n    this.game.setAction(undefined);\n  }\n}\n\n    \n\n    \n        \n  \n    Current Player:\n    \n      \n        {{ player.key }}\n    \n  \n  \n    Current Phase:\n    \n      \n        {{ phase.key }}\n    \n  \n  \n    Current event:\n    \n      \n        {{ event.name }}\n      \n    \n    \n    \n      Finish event\n    \n  \n  \n    Current action:\n    \n      {{ action }}\n    \n    \n    Finish action\n  \n\n\n    \n\n    \n                \n                    ./phases.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Current Player:                  {{ player.key }}            Current Phase:                  {{ phase.key }}            Current event:                  {{ event.name }}                        Finish event            Current action:          {{ action }}            Finish action  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhasesModule.html":{"url":"modules/PhasesModule.html","title":"module - PhasesModule","body":"\n                   \n\n\n\n\n    Modules\n    PhasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_declarations\n\n\n\ncluster_PhasesModule_exports\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\n\n\nPhasesModule\n\nPhasesModule\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/phases/phases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PhasesComponent } from './phases/phases.component';\n\n@NgModule({\n  declarations: [PhasesComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [PhasesComponent],\n})\nexport class PhasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PilesModule.html":{"url":"modules/PilesModule.html","title":"module - PilesModule","body":"\n                   \n\n\n\n\n    Modules\n    PilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_declarations\n\n\n\ncluster_PilesModule_imports\n\n\n\ncluster_PilesModule_exports\n\n\n\n\nPilesComponent\n\nPilesComponent\n\n\n\nPilesModule\n\nPilesModule\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nPilesModule -->\n\nUiCardModule->PilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/piles/piles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiCardModule } from '@taormina/ui-card';\nimport { PilesComponent } from './piles/piles.component';\n\n@NgModule({\n  declarations: [PilesComponent],\n  imports: [CommonModule, UiCardModule],\n  exports: [PilesComponent],\n})\nexport class PilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsEffects.html":{"url":"injectables/StockPilesCardsEffects.html","title":"injectable - StockPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                removeCards$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, stockPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { forkJoin } from 'rxjs';\nimport { map, mergeMap, take } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport {\n  createInitialStockPilesCards,\n  createStockPilesCardsEntity,\n  StockPilesCardsEntity,\n} from './stock-piles-cards.models';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  removeCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private stockPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsEntity.html":{"url":"interfaces/StockPilesCardsEntity.html","title":"interface - StockPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'StockPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  actionCards,\n  developmentCards,\n  stockPiles,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'StockPilesCards' data\n */\nexport interface StockPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string; // Foreign key to stock piles\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createStockPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): StockPilesCardsEntity =>\n  ({\n    id,\n    pileId,\n    cardType,\n    cardId,\n  } as StockPilesCardsEntity);\n\nexport const createInitialStockPilesCards = (): StockPilesCardsEntity[] => {\n  const stockPilesCards: StockPilesCardsEntity[] = [];\n\n  const shuffledCards = arrayShuffle([\n    ...Array.from(actionCards.values()),\n    ...Array.from(developmentCards.values()),\n  ]);\n\n  for (let i = 0; i = shuffledCards.length) break;\n      stockPilesCards.push(\n        createStockPilesCardsEntity(\n          uuidv4(),\n          stockPiles[i],\n          shuffledCards[cardIndex].interface,\n          shuffledCards[cardIndex].id\n        )\n      );\n    }\n  }\n\n  return stockPilesCards;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsFacade.html":{"url":"injectables/StockPilesCardsFacade.html","title":"injectable - StockPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allStockPilesCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedStockPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToStockPileBottom\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeCardsFromStockPileTop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToStockPileBottom\n                        \n                    \n                \n            \n            \n                \naddCardsToStockPileBottom(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:36\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCardsFromStockPileTop\n                        \n                    \n                \n            \n            \n                \nremoveCardsFromStockPileTop(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  );\n  allStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  );\n  selectedStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsSavedGame());\n  }\n\n  removeCardsFromStockPileTop(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.removeCardsFromStockPileTop({ pileId, cards })\n    );\n  }\n\n  addCardsToStockPileBottom(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.addCardsToStockPileBottom({ pileId, cards })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsPartialState.html":{"url":"interfaces/StockPilesCardsPartialState.html","title":"interface - StockPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            STOCK_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        STOCK_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STOCK_PILES_CARDS_FEATURE_KEY:         StockPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsState.html":{"url":"interfaces/StockPilesCardsState.html","title":"interface - StockPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiCardModule.html":{"url":"modules/UiCardModule.html","title":"module - UiCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UiCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_declarations\n\n\n\ncluster_UiCardModule_imports\n\n\n\ncluster_UiCardModule_exports\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardComponent->UiCardModule\n\n\n\n\n\nCardBackModule \n\nCardBackModule \n\nCardBackModule  -->\n\nUiCardModule->CardBackModule \n\n\n\n\n\nCardBackModule\n\nCardBackModule\n\nUiCardModule -->\n\nCardBackModule->UiCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/ui-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardBackModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardBackModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CardComponent } from './card/card.component';\nimport { CardBackModule } from './card-back/card-back.module';\n\n@NgModule({\n  imports: [CommonModule, CardBackModule],\n  declarations: [CardComponent],\n  exports: [CardBackModule],\n})\nexport class UiCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 14.0.4\n        \n            @angular/cdk : 14.0.4\n        \n            @angular/common : 14.0.4\n        \n            @angular/compiler : 14.0.4\n        \n            @angular/core : 14.0.4\n        \n            @angular/forms : 14.0.4\n        \n            @angular/material : 14.0.4\n        \n            @angular/platform-browser : 14.0.4\n        \n            @angular/platform-browser-dynamic : 14.0.4\n        \n            @angular/router : 14.0.4\n        \n            @ngrx/effects : 14.0.1\n        \n            @ngrx/entity : 14.0.1\n        \n            @ngrx/router-store : 14.0.1\n        \n            @ngrx/store : 14.0.1\n        \n            @nrwl/angular : 14.4.0\n        \n            @storybook/core-server : 6.4.22\n        \n            array-shuffle : ^2.0.0\n        \n            eslint-plugin-html : ^6.1.1\n        \n            rxjs : ^6.6.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : 0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionName   (libs/.../action.ts)\n                        \n                        \n                            AgglomerationType   (libs/.../agglomeration.ts)\n                        \n                        \n                            BuildingName   (libs/.../development.ts)\n                        \n                        \n                            DevelopmentType   (libs/.../development.ts)\n                        \n                        \n                            DiceId   (libs/.../dice.ts)\n                        \n                        \n                            DomainColor   (libs/.../domain.ts)\n                        \n                        \n                            EventName   (libs/.../event.ts)\n                        \n                        \n                            EventValue   (libs/.../dice.ts)\n                        \n                        \n                            GamePhase   (libs/.../phase.ts)\n                        \n                        \n                            LandType   (libs/.../resources.ts)\n                        \n                        \n                            MasteryPointsType   (libs/.../development.ts)\n                        \n                        \n                            ResourceType   (libs/.../resources.ts)\n                        \n                        \n                            RowValue   (libs/.../domain.ts)\n                        \n                        \n                            WarriorName   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/action.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionName\n                    \n                \n                        \n                            \n                                 Soothsayer\n                            \n                        \n                        \n                            \n                                Value : Soothsayer\n                            \n                        \n                        \n                            \n                                 Pathfinder\n                            \n                        \n                        \n                            \n                                Value : Pathfinder\n                            \n                        \n                        \n                            \n                                 Goldsmith\n                            \n                        \n                        \n                            \n                                Value : Goldsmith\n                            \n                        \n                        \n                            \n                                 TradeRoute\n                            \n                        \n                        \n                            \n                                Value : Trade route\n                            \n                        \n                        \n                            \n                                 Relocation\n                            \n                        \n                        \n                            \n                                Value : Relocation\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/agglomeration.ts\n    \n        \n            \n                \n                    \n                        \n                        AgglomerationType\n                    \n                \n                        \n                            \n                                 Road\n                            \n                        \n                        \n                            \n                                Value : ROAD\n                            \n                        \n                        \n                            \n                                 Hamlet\n                            \n                        \n                        \n                            \n                                Value : HAMLET\n                            \n                        \n                        \n                            \n                                 Town\n                            \n                        \n                        \n                            \n                                Value : TOWN\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/development.ts\n    \n        \n            \n                \n                    \n                        \n                        BuildingName\n                    \n                \n                        \n                            \n                                 Brickyard\n                            \n                        \n                        \n                            \n                                Value : Brickyard\n                            \n                        \n                        \n                            \n                                 Sawmill\n                            \n                        \n                        \n                            \n                                Value : Sawmill\n                            \n                        \n                        \n                            \n                                 Mill\n                            \n                        \n                        \n                            \n                                Value : Mill\n                            \n                        \n                        \n                            \n                                 Foundry\n                            \n                        \n                        \n                            \n                                Value : Foundry\n                            \n                        \n                        \n                            \n                                 Weaving\n                            \n                        \n                        \n                            \n                                Value : Weaving\n                            \n                        \n                        \n                            \n                                 Warehouse\n                            \n                        \n                        \n                            \n                                Value : Warehouse\n                            \n                        \n                        \n                            \n                                 Market\n                            \n                        \n                        \n                            \n                                Value : Market\n                            \n                        \n                        \n                            \n                                 TollBridge\n                            \n                        \n                        \n                            \n                                Value : Toll bridge\n                            \n                        \n                        \n                            \n                                 Monastery\n                            \n                        \n                        \n                            \n                                Value : Monastery\n                            \n                        \n                        \n                            \n                                 CommunityCenter\n                            \n                        \n                        \n                            \n                                Value : Community center\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DevelopmentType\n                    \n                \n                        \n                            \n                                 Building\n                            \n                        \n                        \n                            \n                                Value : BUILDING\n                            \n                        \n                        \n                            \n                                 Ship\n                            \n                        \n                        \n                            \n                                Value : SHIP\n                            \n                        \n                        \n                            \n                                 Warrior\n                            \n                        \n                        \n                            \n                                Value : WARRIOR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MasteryPointsType\n                    \n                \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Strength\n                            \n                        \n                        \n                            \n                                Value : STRENGTH\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        WarriorName\n                    \n                \n                        \n                            \n                                 Altair\n                            \n                        \n                        \n                            \n                                Value : Altaïr\n                            \n                        \n                        \n                            \n                                 Ezio\n                            \n                        \n                        \n                            \n                                Value : Ezio\n                            \n                        \n                        \n                            \n                                 Evie\n                            \n                        \n                        \n                            \n                                Value : Evie\n                            \n                        \n                        \n                            \n                                 Jacob\n                            \n                        \n                        \n                            \n                                Value : Jacob\n                            \n                        \n                        \n                            \n                                 Kassandra\n                            \n                        \n                        \n                            \n                                Value : Kassandra\n                            \n                        \n                        \n                            \n                                 Alexios\n                            \n                        \n                        \n                            \n                                Value : Alexios\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/dice.ts\n    \n        \n            \n                \n                    \n                        \n                        DiceId\n                    \n                \n                        \n                            \n                                 Resource\n                            \n                        \n                        \n                            \n                                Value : RESOURCE\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventValue\n                    \n                \n                        \n                            \n                                 Thieves\n                            \n                        \n                        \n                            \n                                Value : THIEVES\n                            \n                        \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Celebration\n                            \n                        \n                        \n                            \n                                Value : CELEBRATION\n                            \n                        \n                        \n                            \n                                 Harvest\n                            \n                        \n                        \n                            \n                                Value : HARVEST\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/domain.ts\n    \n        \n            \n                \n                    \n                        \n                        DomainColor\n                    \n                \n                        \n                            \n                                 Red\n                            \n                        \n                        \n                            \n                                Value : RED\n                            \n                        \n                        \n                            \n                                 Blue\n                            \n                        \n                        \n                            \n                                Value : BLUE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RowValue\n                    \n                \n                        \n                            \n                                 Lower\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Middle\n                            \n                        \n                        \n                            \n                                 Up\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Upper\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/event.ts\n    \n        \n            \n                \n                    \n                        \n                        EventName\n                    \n                \n                        \n                            \n                                 Festival\n                            \n                        \n                        \n                            \n                                Value : Festival\n                            \n                        \n                        \n                            \n                                 AuspiciousYear\n                            \n                        \n                        \n                            \n                                Value : Auspicious year\n                            \n                        \n                        \n                            \n                                 Hawker\n                            \n                        \n                        \n                            \n                                Value : Hawker\n                            \n                        \n                        \n                            \n                                 Invention\n                            \n                        \n                        \n                            \n                                Value : Invention\n                            \n                        \n                        \n                            \n                                 MerchantShipTravel\n                            \n                        \n                        \n                            \n                                Value : Merchant ship travel\n                            \n                        \n                        \n                            \n                                 Quarrel\n                            \n                        \n                        \n                            \n                                Value : Quarrel\n                            \n                        \n                        \n                            \n                                 SiblingRivalry\n                            \n                        \n                        \n                            \n                                Value : Sibling rivalry\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/phase.ts\n    \n        \n            \n                \n                    \n                        \n                        GamePhase\n                    \n                \n                        \n                            \n                                 InitialThrow\n                            \n                        \n                        \n                            \n                                Value : INITIAL THROW\n                            \n                        \n                        \n                            \n                                 InitialDraw\n                            \n                        \n                        \n                            \n                                Value : INITIAL DRAW\n                            \n                        \n                        \n                            \n                                 LoopThrow\n                            \n                        \n                        \n                            \n                                Value : LOOP THROW\n                            \n                        \n                        \n                            \n                                 LoopActions\n                            \n                        \n                        \n                            \n                                Value : LOOP ACTIONS\n                            \n                        \n                        \n                            \n                                 LoopDraw\n                            \n                        \n                        \n                            \n                                Value : LOOP DRAW\n                            \n                        \n                        \n                            \n                                 LoopExchange\n                            \n                        \n                        \n                            \n                                Value : LOOP EXCHANGE\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/resources.ts\n    \n        \n            \n                \n                    \n                        \n                        LandType\n                    \n                \n                        \n                            \n                                 ClayPit\n                            \n                        \n                        \n                            \n                                Value : CLAYPIT\n                            \n                        \n                        \n                            \n                                 Forest\n                            \n                        \n                        \n                            \n                                Value : FOREST\n                            \n                        \n                        \n                            \n                                 GoldMine\n                            \n                        \n                        \n                            \n                                Value : GOLDMINE\n                            \n                        \n                        \n                            \n                                 Field\n                            \n                        \n                        \n                            \n                                Value : FIELD\n                            \n                        \n                        \n                            \n                                 StoneQuarry\n                            \n                        \n                        \n                            \n                                Value : STONEQUARRY\n                            \n                        \n                        \n                            \n                                 Pasture\n                            \n                        \n                        \n                            \n                                Value : PASTURE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 Clay\n                            \n                        \n                        \n                            \n                                Value : CLAY\n                            \n                        \n                        \n                            \n                                 Wood\n                            \n                        \n                        \n                            \n                                Value : WOOD\n                            \n                        \n                        \n                            \n                                 Gold\n                            \n                        \n                        \n                            \n                                Value : GOLD\n                            \n                        \n                        \n                            \n                                 Wheat\n                            \n                        \n                        \n                            \n                                Value : WHEAT\n                            \n                        \n                        \n                            \n                                 Stone\n                            \n                        \n                        \n                            \n                                Value : STONE\n                            \n                        \n                        \n                            \n                                 Wool\n                            \n                        \n                        \n                            \n                                Value : WOOL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBuilding   (libs/.../development.ts)\n                        \n                        \n                            createHamlet   (libs/.../agglomeration.ts)\n                        \n                        \n                            createRoad   (libs/.../agglomeration.ts)\n                        \n                        \n                            createShip   (libs/.../development.ts)\n                        \n                        \n                            createTown   (libs/.../agglomeration.ts)\n                        \n                        \n                            createWarrior   (libs/.../development.ts)\n                        \n                        \n                            eventFromValue   (libs/.../dice.ts)\n                        \n                        \n                            getImgSrc   (libs/.../assets.ts)\n                        \n                        \n                            getRandomEventDieValue   (libs/.../dice.ts)\n                        \n                        \n                            getRandomProductionDieValue   (libs/.../dice.ts)\n                        \n                        \n                            isActionCard   (libs/.../action.ts)\n                        \n                        \n                            isAgglomerationCard   (libs/.../agglomeration.ts)\n                        \n                        \n                            isCanPrint   (libs/.../print.ts)\n                        \n                        \n                            isDevelopmentCard   (libs/.../development.ts)\n                        \n                        \n                            isEventCard   (libs/.../event.ts)\n                        \n                        \n                            isHasName   (libs/.../name.ts)\n                        \n                        \n                            isLandCard   (libs/.../land.ts)\n                        \n                        \n                            mapDomainColorToDomainId   (libs/.../domain.ts)\n                        \n                        \n                            mapDomainColorToHandId   (libs/.../domain.ts)\n                        \n                        \n                            randomDiceValue   (libs/.../dice.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/structures/development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBuilding\n                        \n                    \n                \n            \n            \n                \ncreateBuilding(id: string, name: BuildingName, cost: Map, tradePoints?: number, givesKnowledge?: boolean, noDuplicate?: boolean, victoryPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                BuildingName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tradePoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    givesKnowledge\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    noDuplicate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    victoryPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShip\n                        \n                    \n                \n            \n            \n                \ncreateShip(id: string, type: s/ShipName.html\" target=\"_self\">ShipNameKey)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                ShipNameKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWarrior\n                        \n                    \n                \n            \n            \n                \ncreateWarrior(id: string, name: WarriorName, cost: Map, strengthPoints?: number, celebrationPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                WarriorName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    strengthPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    celebrationPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDevelopmentCard\n                        \n                    \n                \n            \n            \n                \nisDevelopmentCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/agglomeration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createHamlet\n                        \n                    \n                \n            \n            \n                \ncreateHamlet(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRoad\n                        \n                    \n                \n            \n            \n                \ncreateRoad(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTown\n                        \n                    \n                \n            \n            \n                \ncreateTown(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAgglomerationCard\n                        \n                    \n                \n            \n            \n                \nisAgglomerationCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/dice.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eventFromValue\n                        \n                    \n                \n            \n            \n                \neventFromValue(value: DiceValue)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomEventDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomEventDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         EventValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomProductionDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomProductionDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         ResourceValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomDiceValue\n                        \n                    \n                \n            \n            \n                \nrandomDiceValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         DiceValue\n\n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/assets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n            \n                \ngetImgSrc(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isActionCard\n                        \n                    \n                \n            \n            \n                \nisActionCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/print.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCanPrint\n                        \n                    \n                \n            \n            \n                \nisCanPrint(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CanPrint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/event.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isEventCard\n                        \n                    \n                \n            \n            \n                \nisEventCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isHasName\n                        \n                    \n                \n            \n            \n                \nisHasName(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HasName\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/land.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLandCard\n                        \n                    \n                \n            \n            \n                \nisLandCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/domain.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapDomainColorToDomainId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToDomainId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDomainColorToHandId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToHandId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nTaormina\nThis project was generated using Nx.\nEnvironment\nGlobally installed packages\n├── @angular/cli@14.0.5\n├── corepack@0.10.0\n├── npm@8.13.2\n├── nx@14.4.2\n└── updtr@4.0.0Node version\nv16.16.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Laure-Hélène Bruneton\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardBackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataAccessGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DomainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureEngineModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HandModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_CardBackModule\n\n\n\ncluster_CardBackModule_declarations\n\n\n\ncluster_CardBackModule_exports\n\n\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_declarations\n\n\n\ncluster_DiceModule_exports\n\n\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_declarations\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\ncluster_HandModule\n\n\n\ncluster_HandModule_declarations\n\n\n\ncluster_HandModule_exports\n\n\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_declarations\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_declarations\n\n\n\ncluster_PilesModule_imports\n\n\n\ncluster_PilesModule_exports\n\n\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_declarations\n\n\n\ncluster_UiCardModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nCardBackComponent\n\nCardBackComponent\n\n\n\nCardBackModule\n\nCardBackModule\n\nCardBackModule -->\n\nCardBackComponent->CardBackModule\n\n\n\n\n\nCardBackComponent \n\nCardBackComponent \n\nCardBackComponent  -->\n\nCardBackModule->CardBackComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardBackModule->UiCardModule\n\n\n\n\n\nAgglomerationPilesCardsFacade\n\nAgglomerationPilesCardsFacade\n\nDataAccessGameModule -->\n\nAgglomerationPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiceComponent\n\nDiceComponent\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDomainComponent\n\nDomainComponent\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\n\n\nHandComponent\n\nHandComponent\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPilesComponent\n\nPilesComponent\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\nPilesModule -->\n\nUiCardModule->PilesModule\n\n\n\n\n\nCardBackModule \n\nCardBackModule \n\nCardBackModule  -->\n\nUiCardModule->CardBackModule \n\n\n\n\n\nCardComponent\n\nCardComponent\n\nUiCardModule -->\n\nCardComponent->UiCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0-0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs\n\n\n\nFilename\nline #\nTODO\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n617\ntest actions order: event > steal on thieves > production\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n71\nthrow error instead of filtering out undefined ?\n\n\n\nFIXMEs\n\n\n\nFilename\nline #\nFIXME\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n935\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n986\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1054\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1171\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1216\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1321\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1362\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1450\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1552\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1603\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1707\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1755\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1803\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1851\nshould test error thrown\n\n\n\nESLINT-DISABLE-NEXT-LINEs\n\n\n\nFilename\nline #\nESLINT-DISABLE-NEXT-LINE\n\n\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n812\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n818\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/shared-models/src/lib/interfaces/name.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/interfaces/print.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/action.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/agglomeration.ts\n95\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/development.ts\n111\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/event.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/land.ts\n37\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/types/dice.ts\n1\nno-magic-numbers\n\n\nlibs/shared-models/src/lib/types/resources.ts\n19\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n82\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n116\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n120\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n53\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n66\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n74\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n99\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n103\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n125\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n129\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n191\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n195\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n229\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n233\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n258\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n262\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n294\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n298\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n333\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n337\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n371\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n375\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n400\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n404\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n913\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n917\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n951\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n955\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n980\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n984\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1076\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1134\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n87\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n106\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n220\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n243\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n394\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n73\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n85\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n138\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n155\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n165\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n175\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n185\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n195\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n234\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n379\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n391\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n395\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n404\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n413\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n424\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n431\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n443\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n452\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/game/game.effects.ts\n32\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.spec.ts\n85\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.selectors.ts\n49\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n60\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n73\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n99\nindent\n\n\n\nPRETTIER-IGNOREs\n\n\n\nFilename\nline #\nPRETTIER-IGNORE\n\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n159\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n161\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n332\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DiceValue   (libs/.../dice.ts)\n                        \n                        \n                            DomainCardType   (libs/.../domain.ts)\n                        \n                        \n                            ResourceCount   (libs/.../resources.ts)\n                        \n                        \n                            ResourceValue   (libs/.../dice.ts)\n                        \n                        \n                            ShipNameKey   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/dice.ts\n    \n    \n        \n            \n                \n                    \n                    DiceValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceValue\n                \n            \n            \n                \n                            DiceValue\n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/domain.ts\n    \n    \n        \n            \n                \n                    \n                    DomainCardType\n                \n            \n            \n                \n                         |  |  |  |  | \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/resources.ts\n    \n    \n        \n            \n                \n                    \n                    ResourceCount\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/development.ts\n    \n    \n        \n            \n                \n                    \n                    ShipNameKey\n                \n            \n            \n                \n                            ResourceType | \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
