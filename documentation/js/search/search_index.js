var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCard.html",[0,0.151,1,3.067]],["body/interfaces/ActionCard.html",[0,0.296,1,5.716,2,0.997,3,0.151,4,0.151,5,0.151,6,1.962,7,4.012,8,2.262,9,2.207,10,2.9,11,2.278,12,4.351,13,0.332,14,0.593,15,1.944,16,1.887,17,6.337,18,1.261,19,0.547,20,0.012,21,5.017,22,0.418,23,3.456,24,4.167,25,4.012,26,4.748,27,4.427,28,5.056,29,0.272,30,1.626,31,4.154,32,2.659,33,5.056,34,1.721,35,1.721,36,1.777,37,1.835,38,2.445,39,2.445,40,2.92,41,2.92,42,4.427,43,3.744,44,1.268,45,1.194,46,3.456,47,0.009,48,0.009]],["title/components/ActionsComponent.html",[49,1.52,50,1.946]],["body/components/ActionsComponent.html",[3,0.062,4,0.062,5,0.062,9,1.678,10,2.206,13,0.137,16,1.012,19,0.159,20,0.012,22,0.322,29,0.075,31,1.866,44,1.83,47,0.005,48,0.005,49,1.555,50,2.292,51,1.709,52,1.098,53,1.149,54,1.098,55,1.098,56,3.151,57,1.828,58,1.098,59,3.783,60,3.623,61,1.709,62,1.866,63,4.283,64,1.784,65,3.391,66,1.272,67,4.931,68,4.931,69,4.931,70,4.317,71,4.931,72,4.931,73,4.931,74,4.931,75,4.931,76,4.931,77,4.931,78,4.931,79,4.931,80,4.931,81,4.931,82,3.913,83,4.931,84,4.931,85,4.317,86,4.931,87,1.118,88,1.529,89,2.847,90,2.604,91,2.998,92,2.604,93,2.998,94,2.753,95,3.17,96,2.753,97,3.17,98,3.137,99,3.17,100,2.139,101,2.087,102,0.627,103,0.424,104,2.253,105,2.087,106,2.811,107,2.931,108,2.087,109,2.087,110,4.644,111,2.087,112,2.087,113,2.087,114,2.087,115,2.087,116,2.087,117,2.087,118,2.087,119,2.087,120,2.087,121,2.087,122,2.087,123,2.087,124,2.087,125,2.087,126,2.087,127,2.087,128,0.387,129,1.269,130,1.427,131,1.342,132,1.427,133,1.269,134,0.32,135,1.427,136,1.529,137,2.318,138,2.318,139,2.318,140,2.484,141,2.253,142,1.205,143,2.318,144,0.647,145,0.81,146,1.052,147,2.318,148,0.838,149,0.97,150,0.399,151,2.417,152,2.969,153,3.391,154,2.062,155,3.391,156,2.087,157,1.828,158,5.087,159,5.087,160,5.81,161,3.971,162,5.81,163,2.087,164,3.391,165,1.828,166,3.391,167,2.087,168,2.087,169,2.087,170,2.087,171,1.828,172,1.828,173,1.828,174,2.087,175,4.931,176,4.101,177,1.79,178,6.226,179,2.485,180,3.391,181,4.672,182,6.777,183,7.071,184,7.071,185,7.071,186,4.672,187,5.062,188,2.484,189,5.087,190,1.709,191,2.969,192,5.062,193,2.969,194,2.691,195,2.969,196,3.391,197,1.958,198,3.391,199,3.391,200,2.318,201,1.529,202,1.342,203,1.657,204,1.427,205,1.529,206,1.098,207,1.709,208,1.64,209,1.098,210,2.594,211,1.098,212,1.098,213,0.97,214,1.098,215,0.97,216,1.098,217,0.97,218,1.098,219,0.97,220,1.098,221,0.97,222,1.098,223,0.97,224,1.098,225,0.97,226,1.098,227,0.97,228,1.098,229,0.97,230,1.098,231,1.009,232,0.71,233,1.098,234,1.098]],["title/modules/ActionsModule.html",[235,1.873,236,2.862]],["body/modules/ActionsModule.html",[3,0.176,4,0.176,5,0.176,20,0.012,22,0.424,29,0.212,47,0.01,48,0.01,50,4.019,56,2.364,128,1.092,150,1.126,236,5.736,237,2.364,238,2.964,239,5.154,240,5.154,241,5.154,242,3.189,243,2.633,244,2.364,245,5.886,246,3.591,247,3.591,248,3.189,249,3.313,250,2.633,251,5.886,252,2.633]],["title/interfaces/AgglomerationCard.html",[0,0.151,253,2.862]],["body/interfaces/AgglomerationCard.html",[0,0.278,2,0.757,3,0.115,4,0.115,5,0.115,6,1.489,8,1.717,10,2.41,11,1.893,12,3.784,13,0.252,14,0.493,15,1.936,18,1.184,19,0.625,20,0.012,22,0.428,23,2.623,29,0.278,30,1.561,32,2.019,34,2.419,35,2.118,36,1.349,37,1.393,38,1.856,39,1.856,40,2.216,41,3.897,43,3.111,44,1.693,45,0.907,46,2.623,47,0.007,48,0.007,103,1.372,137,4.613,138,2.623,148,3.039,176,3.463,253,5.28,254,3.046,255,4.935,256,5.398,257,5.398,258,3.892,259,5.641,260,3.714,261,3.463,262,2.811,263,3.945,264,3.36,265,3.682,266,3.36,267,3.945,268,3.36,269,3.838,270,2.623,271,2.623,272,2.811,273,3.838,274,6.749,275,3.046,276,4.943,277,4.943,278,3.36,279,3.594,280,4.717,281,4.256,282,5.387,283,4.254,284,3.36,285,2.333,286,4.717,287,3.36,288,3.36,289,5.387,290,3.36,291,3.36,292,3.838,293,3.36,294,3.36,295,3.36]],["title/injectables/AgglomerationPilesCardsEffects.html",[296,0.989,297,3.323]],["body/injectables/AgglomerationPilesCardsEffects.html",[3,0.101,4,0.101,5,0.101,9,1.679,13,0.223,14,0.451,15,1.201,16,0.802,19,0.259,20,0.012,22,0.429,29,0.122,44,1.876,45,1.166,47,0.007,48,0.007,61,3.564,87,1.627,94,4.102,100,1.751,102,1.02,103,0.69,128,0.629,134,1.039,146,1.71,148,2.334,149,1.577,150,0.649,151,2.052,176,4.547,177,1.791,179,1.734,232,2.748,279,2.849,296,1.166,297,3.915,298,1.317,299,1.297,300,4.358,301,4.122,302,1.96,303,2.418,304,2.601,305,5.09,306,1.96,307,5.813,308,2.855,309,3.394,310,1.858,311,1.644,312,4.215,313,4.085,314,4.934,315,3.915,316,5.09,317,3.394,318,4.934,319,3.534,320,3,321,3,322,3,323,3,324,3,325,3,326,3,327,3,328,3,329,3.915,330,3,331,3,332,2.554,333,3,334,3.915,335,3.394,336,3.357,337,4.32,338,4.32,339,4.934,340,2.702,341,4.934,342,4.32,343,5.587,344,5.064,345,2.595,346,3.915,347,4.934,348,4.32,349,3.613,350,3.915,351,4.32,352,4.32,353,3.915,354,4.32,355,3.394,356,1.71,357,0.851,358,1.96,359,2.972,360,2.972,361,2.486,362,2.486,363,0.96,364,1.193,365,2.972,366,1.641,367,2.972,368,1.785]],["title/interfaces/AgglomerationPilesCardsEntity.html",[0,0.151,130,2.862]],["body/interfaces/AgglomerationPilesCardsEntity.html",[0,0.246,2,0.91,3,0.138,4,0.138,5,0.138,8,2.064,13,0.303,14,0.559,15,1.934,18,1.282,19,0.523,20,0.012,22,0.379,29,0.246,30,1.901,44,1.157,45,1.617,47,0.008,48,0.008,94,3.926,130,4.981,134,0.707,144,1.892,145,1.79,147,4.679,232,2.079,253,4.679,259,3.661,284,4.039,290,4.039,294,4.039,299,0.882,300,2.965,301,2.805,316,4.039,369,2.805,370,3.713,371,3.484,372,5.007,373,4.039,374,4.847,375,5.347,376,4.847,377,2.231,378,2.539,379,4.011,380,2.427,381,2.539,382,7.287,383,6.107,384,6.846,385,6.846,386,6.846,387,6.846,388,6.846,389,6.107,390,6.107]],["title/injectables/AgglomerationPilesCardsFacade.html",[95,2.691,296,0.989]],["body/injectables/AgglomerationPilesCardsFacade.html",[3,0.104,4,0.104,5,0.104,9,1.714,13,0.229,14,0.461,15,1.226,16,1.395,18,1.095,19,0.451,20,0.012,22,0.395,29,0.126,47,0.007,48,0.007,66,1.889,87,1.66,95,3.237,100,2.166,102,1.775,103,1.201,106,2.347,107,3.026,128,0.647,134,1.223,144,1.082,150,0.668,151,1.452,176,3.797,190,2.537,232,2.903,296,1.189,298,1.354,299,1.526,300,5.127,301,4.849,303,2.689,304,2.893,308,3.195,310,2.283,311,2.02,337,3.056,340,1.622,357,0.875,362,2.556,363,0.987,365,3.056,366,1.688,367,3.056,368,1.836,372,3.237,374,4.687,375,3.056,376,2.77,377,1.688,391,2.122,392,5.906,393,5.906,394,5.906,395,5.906,396,2.076,397,5.906,398,5.035,399,5.035,400,2.016,401,3.056,402,3.056,403,2.908,404,2.908,405,2.648,406,2.648,407,2.908,408,2.908,409,3.056,410,5.035,411,2.77,412,5.035,413,3.056,414,4.124,415,5.035,416,2.556,417,6.253,418,5.035,419,3.49,420,5.035,421,3.056,422,5.035,423,2.386,424,5.035,425,3.056,426,2.908,427,2.908,428,1.609,429,2.771,430,2.908,431,2.908,432,2.908,433,2.908,434,2.908,435,5.035,436,3.49,437,4.419,438,3.49,439,3.49,440,2.77]],["title/interfaces/AgglomerationPilesCardsPartialState.html",[0,0.151,441,3.323]],["body/interfaces/AgglomerationPilesCardsPartialState.html",[0,0.213,2,0.869,3,0.132,4,0.132,5,0.132,11,1.549,13,0.289,14,0.612,15,1.629,18,0.908,19,0.337,20,0.012,22,0.396,29,0.277,30,1.795,34,1.5,35,1.5,36,1.549,37,1.6,45,1.4,47,0.008,48,0.008,94,4.302,130,3.013,134,0.676,176,3.809,232,2.436,299,0.843,300,2.834,301,2.68,315,3.498,329,3.498,332,2.36,334,3.498,350,3.498,353,3.498,357,1.106,362,3.229,363,1.247,364,1.549,396,2.515,428,2.728,440,3.498,441,4.702,442,1.901,443,6.537,444,5.925,445,2.651,446,2.651,447,2.651,448,1.901,449,2.464,450,2.994,451,3.201,452,2.464,453,3.201,454,1.833,455,2.319,456,2.426,457,3.86,458,5.188,459,3.86,460,2.049,461,2.049,462,2.132,463,3.201,464,3.86,465,3.86,466,3.86,467,5.188,468,2.554,469,3.86,470,3.86]],["title/interfaces/AgglomerationPilesCardsState.html",[0,0.151,444,3.323]],["body/interfaces/AgglomerationPilesCardsState.html",[0,0.207,2,0.831,3,0.126,4,0.126,5,0.126,11,2.02,13,0.277,14,0.598,15,1.592,18,1.163,19,0.537,20,0.012,22,0.389,29,0.273,30,1.762,34,1.434,35,1.434,36,1.481,37,1.53,45,1.358,47,0.008,48,0.008,94,4.204,103,1.428,130,2.88,134,0.646,176,3.694,232,2.391,299,0.806,300,2.709,301,2.562,315,3.344,329,3.344,332,2.316,334,3.344,350,3.344,353,3.344,357,1.057,362,3.086,363,1.192,364,1.481,396,2.729,428,2.714,440,3.344,441,3.344,442,1.817,443,5.032,444,5.574,445,2.571,446,2.571,447,2.926,448,1.817,449,2.39,450,3.394,451,3.473,452,3.155,453,3.473,454,1.753,455,2.217,456,2.319,457,3.69,458,5.032,459,3.69,460,1.959,461,1.959,462,2.038,463,3.143,464,3.69,465,3.69,466,3.69,467,5.032,468,2.478,469,3.69,470,3.69]],["title/components/AppComponent.html",[49,1.52,213,1.946]],["body/components/AppComponent.html",[3,0.143,4,0.187,5,0.143,13,0.315,16,1.649,19,0.367,20,0.012,22,0.347,29,0.173,35,1.634,47,0.008,48,0.008,49,2.535,50,2.232,51,3.159,52,2.526,53,2.643,54,2.526,55,2.526,58,2.526,59,4.449,60,4.262,62,3.451,64,3.298,66,2.353,87,1.584,98,4.592,99,4.758,100,1.72,102,1.443,103,0.976,104,3.298,106,1.743,107,2.518,128,0.891,135,3.282,136,3.517,150,0.918,179,2.204,206,2.526,207,3.159,208,3.032,209,2.526,210,3.893,211,2.526,212,2.526,213,3.44,214,2.526,215,2.232,216,2.526,217,2.232,218,2.526,219,2.232,220,2.526,221,2.232,222,2.526,223,2.232,224,2.526,225,2.232,226,2.526,227,2.232,228,2.526,229,2.232,230,2.526,231,2.322,232,1.634,233,2.526,234,2.526,279,3.621,348,4.204,471,5.541,472,4.802,473,5.49,474,6.982,475,6.27,476,7.402,477,4.802,478,4.802,479,4.802,480,2.773,481,4.802,482,4.802]],["title/modules/AppModule.html",[235,1.873,483,3.067]],["body/modules/AppModule.html",[3,0.144,4,0.144,5,0.144,20,0.012,22,0.46,29,0.174,47,0.008,48,0.008,104,3.314,128,0.897,133,2.941,134,0.742,135,3.307,150,0.925,213,3.915,237,1.943,238,2.621,242,2.819,243,2.164,244,1.943,246,3.175,248,2.819,252,2.819,356,2.438,357,1.58,468,2.717,471,3.839,483,6.201,484,4.236,485,4.236,486,4.236,487,4.236,488,6.109,489,5.394,490,5.394,491,4.838,492,6.301,493,6.301,494,5.517,495,3.839,496,6.301,497,4.838,498,4.236,499,4.236,500,4.838,501,4.838,502,4.838,503,4.838,504,4.838,505,4.838,506,6.301,507,4.838,508,4.838,509,4.838,510,4.838,511,4.838,512,4.236]],["title/components/BoardComponent.html",[49,1.52,215,1.946]],["body/components/BoardComponent.html",[3,0.141,4,0.141,5,0.141,13,0.31,14,0.568,16,1.465,20,0.012,22,0.343,29,0.17,47,0.008,48,0.008,49,2.514,50,2.195,51,3.125,52,2.484,53,2.599,54,2.484,55,2.484,56,3.067,58,2.484,59,4.439,60,4.252,62,3.414,64,3.263,100,2.018,128,0.876,144,1.464,150,0.903,179,2.18,206,2.484,207,3.125,208,2.999,209,2.484,210,3.868,211,2.484,212,2.484,213,2.195,214,2.484,215,3.418,216,2.484,217,2.195,218,2.484,219,2.195,220,2.484,221,2.195,222,2.484,223,2.195,224,2.484,225,2.195,226,2.484,227,2.195,228,2.484,229,2.195,230,2.484,231,2.284,232,1.607,233,2.484,234,2.484,310,2.351,311,2.08,377,2.284,513,4.723,514,6.202,515,6.926,516,6.202,517,6.864,518,6.864,519,7.84,520,7.84,521,4.723,522,4.723,523,4.723,524,4.723]],["title/modules/BoardModule.html",[235,1.873,525,2.862]],["body/modules/BoardModule.html",[3,0.148,4,0.148,5,0.148,20,0.012,22,0.458,29,0.178,47,0.009,48,0.009,56,1.991,128,0.92,150,0.948,215,3.929,236,5.43,237,1.991,238,2.663,242,2.864,243,2.218,244,1.991,246,3.226,247,3.226,248,2.864,249,2.976,250,2.218,252,2.864,525,5.918,526,4.342,527,4.342,528,4.342,529,4.342,530,5.43,531,5.43,532,5.43,533,5.43,534,5.43,535,4.959,536,4.959,537,4.959,538,4.959,539,4.959,540,4.959,541,4.959,542,4.959]],["title/interfaces/CanPrint.html",[0,0.151,265,2.862]],["body/interfaces/CanPrint.html",[0,0.219,2,1.202,3,0.182,4,0.182,5,0.182,6,2.824,13,0.4,18,1.116,20,0.012,29,0.262,32,3.206,34,2.074,35,2.074,36,2.142,37,2.213,38,2.947,39,2.947,40,3.519,41,4.203,43,3.519,44,1.528,47,0.01,48,0.01,66,2.731,100,1.672,106,2.213,265,5.319,275,6.397,543,4.837,544,6.095,545,5.336,546,6.095]],["title/components/CardBackComponent.html",[49,1.52,217,1.946]],["body/components/CardBackComponent.html",[3,0.119,4,0.119,5,0.119,13,0.261,14,0.505,16,1.304,18,0.972,19,0.523,20,0.012,22,0.306,29,0.143,47,0.007,48,0.007,49,2.302,50,1.847,51,2.781,52,2.09,53,2.187,54,2.09,55,2.09,58,2.09,59,4.327,60,4.145,62,3.038,64,2.903,100,1.88,128,0.737,144,1.231,150,0.76,179,2.816,200,3.773,202,3.548,204,2.716,206,2.09,207,2.781,208,2.669,209,2.09,210,3.604,211,2.09,212,2.09,213,1.847,214,2.09,215,1.847,216,2.09,217,3.185,218,2.09,219,1.847,220,2.09,221,1.847,222,2.09,223,1.847,224,2.09,225,1.847,226,2.09,227,1.847,228,2.09,229,1.847,230,2.09,231,1.922,232,1.353,233,2.09,234,2.09,255,3.855,260,2.187,310,1.764,311,1.561,547,4.628,548,5.273,549,6.358,550,3.974,551,5.033,552,6.341,553,5.519,554,4.377,555,5.913,556,4.042,557,6.852,558,5.552,559,3.479,560,3.974,561,3.974,562,3.974,563,3.974,564,4.644,565,2.91,566,3.974,567,3.154,568,5.999,569,4.833,570,5.552,571,5.519,572,3.974,573,4.833,574,4.833,575,5.438,576,4.833,577,4.833,578,4.833,579,5.519,580,3.479,581,3.479,582,3.974,583,3.974,584,3.974,585,3.974,586,5.519,587,3.974,588,3.479,589,3.974,590,5.438,591,3.974,592,3.154,593,3.154,594,3.479,595,3.479,596,3.479,597,3.974,598,3.974,599,3.974,600,5.519,601,3.974,602,3.974]],["title/modules/CardBackModule.html",[235,1.873,603,2.862]],["body/modules/CardBackModule.html",[3,0.174,4,0.174,5,0.174,20,0.012,22,0.423,29,0.21,47,0.01,48,0.01,128,1.082,150,1.116,179,2.05,217,4.014,237,2.342,238,2.948,242,3.171,243,2.61,244,2.342,246,3.571,247,3.571,248,3.171,249,3.295,250,2.61,252,2.61,547,3.749,548,4.272,549,5.625,603,5.725,604,5.107,605,5.107,606,5.107,607,5.833,608,5.833]],["title/components/CardComponent.html",[49,1.52,219,1.946]],["body/components/CardComponent.html",[3,0.16,4,0.16,5,0.16,16,1.587,20,0.011,22,0.296,29,0.193,47,0.009,48,0.009,49,2.667,50,2.486,51,3.385,52,2.814,54,2.814,55,2.814,58,2.814,59,4.512,60,4.322,64,3.534,128,0.992,150,1.023,179,2.847,206,2.814,207,3.385,208,3.249,209,2.814,210,4.053,211,2.814,212,2.814,213,2.486,214,2.814,215,2.486,216,2.814,217,2.486,218,2.814,219,3.582,220,2.814,221,2.486,222,2.814,223,2.486,224,2.814,225,2.486,226,2.814,227,2.486,228,2.814,229,2.486,230,2.814,231,2.587,232,1.821,233,2.814,234,2.814,547,3.439,609,5.349,610,6.719,611,6.719]],["title/components/CardFrontComponent.html",[49,1.52,221,1.946]],["body/components/CardFrontComponent.html",[3,0.125,4,0.125,5,0.125,13,0.376,14,0.524,16,1.352,18,1.074,19,0.498,20,0.012,22,0.317,29,0.151,47,0.008,48,0.008,49,2.366,50,1.946,51,2.883,52,2.202,53,2.304,54,2.202,55,2.202,58,2.202,59,4.362,60,4.179,62,3.149,64,3.009,100,1.788,128,0.776,144,1.297,150,0.801,179,2.845,200,3.911,202,3.678,206,2.202,207,2.883,208,2.766,209,2.202,210,3.685,211,2.202,212,2.202,213,1.946,214,2.202,215,1.946,216,2.202,217,1.946,218,2.202,219,1.946,220,2.202,221,3.256,222,2.202,223,1.946,224,2.202,225,1.946,226,2.202,227,1.946,228,2.202,229,1.946,230,2.202,231,2.024,232,1.425,233,2.202,234,2.202,283,2.862,310,1.338,311,1.184,547,4.503,548,5.13,551,3.323,555,6.009,556,4.19,558,5.707,564,4.773,565,3.066,568,6.133,569,6.422,570,6.133,573,5.009,574,5.009,575,5.559,576,5.009,577,5.009,578,5.009,580,3.666,581,3.666,588,5.009,590,3.323,592,3.323,593,3.323,595,3.666,596,3.666,612,6.262,613,4.187,614,5.721,615,6.518,616,5.721,617,6.518,618,4.187,619,4.187,620,4.187,621,5.721,622,3.678,623,4.187,624,4.187,625,5.721,626,5.721,627,4.187]],["title/modules/CardFrontModule.html",[235,1.873,628,2.862]],["body/modules/CardFrontModule.html",[3,0.174,4,0.174,5,0.174,20,0.012,22,0.423,29,0.21,47,0.01,48,0.01,128,1.082,150,1.116,179,2.05,221,4.014,237,2.342,238,2.948,242,3.171,243,2.61,244,2.342,246,3.571,247,3.571,248,3.171,249,3.295,250,2.61,252,2.61,547,3.749,548,4.272,612,5.625,628,5.725,629,5.107,630,5.107,631,5.107,632,5.833,633,5.833]],["title/interfaces/Chainable.html",[0,0.151,634,3.067]],["body/interfaces/Chainable.html",[0,0.187,2,1.027,3,0.156,4,0.156,5,0.156,13,0.342,16,1.231,18,1.234,19,0.398,20,0.012,34,1.773,35,1.773,36,1.831,37,1.891,38,2.519,39,2.519,47,0.009,48,0.009,66,2.479,100,1.429,102,1.565,103,1.343,106,1.891,107,2.653,208,2.519,471,5.244,634,4.839,635,6.607,636,4.561,637,6.354,638,5.785,639,6.896,640,4.561,641,6.354,642,4.561,643,4.561,644,4.561,645,3.56,646,3.56,647,4.561,648,6.896,649,4.561,650,4.561,651,4.561,652,4.561,653,4.561,654,5.785,655,4.839,656,6.354,657,4.561,658,4.561,659,4.561,660,4.561,661,4.561,662,4.561,663,4.561]],["title/interfaces/Chainable-1.html",[0,0.126,281,2.017,634,2.558]],["body/interfaces/Chainable-1.html",[0,0.187,2,1.027,3,0.156,4,0.156,5,0.156,13,0.342,16,1.231,18,1.234,19,0.398,20,0.012,34,1.773,35,1.773,36,1.831,37,1.891,38,2.519,39,2.519,47,0.009,48,0.009,66,2.479,100,1.429,102,1.565,103,1.343,106,1.891,107,2.653,179,2.322,208,2.519,634,4.839,636,4.561,637,6.354,638,5.785,639,6.896,640,4.561,641,6.354,642,4.561,643,4.561,644,4.561,645,3.56,646,3.56,647,4.561,648,6.896,649,4.561,650,4.561,651,4.561,652,4.561,653,4.561,654,5.785,655,4.839,656,6.354,657,4.561,658,4.561,659,4.561,660,4.561,661,4.561,662,4.561,663,4.561,664,6.607]],["title/modules/DataAccessGameModule.html",[235,1.873,489,2.862]],["body/modules/DataAccessGameModule.html",[3,0.107,4,0.107,5,0.107,20,0.012,22,0.474,29,0.129,47,0.007,48,0.007,89,4.167,91,4.387,93,4.387,95,4.638,97,4.638,128,0.667,134,0.789,150,0.688,177,3.025,232,2.73,237,1.445,238,2.14,242,2.302,243,1.609,244,1.445,248,2.302,249,2.391,250,1.609,252,1.609,297,2.855,299,0.688,301,3.652,356,1.812,357,0.902,366,3.592,489,5.74,498,3.15,499,3.15,512,4.505,665,3.15,666,3.15,667,4.932,668,4.638,669,4.932,670,3.597,671,3.15,672,2.855,673,6.007,674,3.652,675,7.429,676,7.429,677,3.597,678,2.855,679,6.007,680,3.652,681,3.597,682,2.855,683,6.007,684,3.652,685,3.597,686,6.007,687,3.597,688,2.855,689,3.597,690,3.597,691,3.597,692,3.597,693,2.855,694,6.007,695,3.861,696,3.597,697,2.855,698,6.007,699,3.861,700,3.597,701,2.855,702,6.007,703,3.652,704,3.597,705,3.597,706,3.597,707,3.597,708,7.429,709,3.597,710,3.597,711,3.597,712,3.597,713,3.597,714,3.597,715,3.597,716,3.597,717,3.597,718,3.597,719,3.597,720,3.597,721,3.597,722,3.597,723,3.597,724,3.597,725,3.597,726,3.597,727,3.597,728,3.597,729,3.597]],["title/interfaces/DevelopmentCard.html",[0,0.151,730,2.691]],["body/interfaces/DevelopmentCard.html",[0,0.271,2,0.685,3,0.104,4,0.104,5,0.104,6,1.349,8,1.555,10,2.246,11,1.764,12,3.583,13,0.228,14,0.459,15,1.92,16,1.915,18,1.209,19,0.639,20,0.012,22,0.395,23,2.376,24,3.227,25,2.759,29,0.265,30,1.844,32,1.828,34,1.183,35,1.183,36,1.222,37,1.262,38,1.681,39,1.681,40,2.007,41,3.727,43,2.899,44,1.618,45,1.186,46,2.376,47,0.007,48,0.007,103,1.648,139,2.376,141,3.395,148,2.953,187,3.984,256,5.703,257,5.223,260,4.52,263,3.677,264,3.044,267,3.677,268,3.044,271,2.376,272,2.546,279,2.899,280,3.044,281,3.403,288,3.044,345,1.828,452,3.28,730,4.839,731,2.759,732,6.245,733,6.245,734,6.453,735,6.245,736,6.245,737,6.245,738,5.993,739,3.984,740,3.476,741,3.984,742,3.984,743,3.476,744,3.476,745,6.453,746,3.044,747,4.395,748,3.476,749,3.476,750,3.476,751,3.476,752,3.476,753,3.044,754,3.476,755,3.044,756,3.044,757,5.159,758,3.476,759,3.476,760,3.044,761,4.395,762,3.476,763,3.476,764,3.476,765,3.044]],["title/components/DiceComponent.html",[49,1.52,223,1.946]],["body/components/DiceComponent.html",[3,0.109,4,0.109,5,0.109,13,0.24,14,0.476,16,1.559,19,0.397,20,0.012,22,0.401,29,0.131,36,1.826,44,1.655,47,0.007,48,0.007,49,2.198,50,1.696,51,2.619,52,1.919,53,2.008,54,1.919,55,1.919,56,3.116,58,1.919,59,4.267,60,4.087,62,2.86,64,2.734,66,1.95,87,1.203,88,2.672,89,3.81,98,4.434,99,4.241,100,2.092,102,1.562,103,1.056,104,3.184,106,2.632,107,2.65,110,4.481,128,0.677,133,2.218,134,0.559,135,2.494,136,2.672,142,2.107,144,1.13,145,1.416,146,1.838,148,2.087,149,1.696,150,0.698,151,1.517,152,3.194,154,3.681,179,1.826,200,3.552,201,2.672,202,2.345,203,2.895,204,2.494,205,2.672,206,1.919,207,2.619,208,2.513,209,1.919,210,3.47,211,1.919,212,1.919,213,1.696,214,1.919,215,1.696,216,1.919,217,1.696,218,1.919,219,1.696,220,1.919,221,1.696,222,1.919,223,3.067,224,1.919,225,1.696,226,1.919,227,1.696,228,1.919,229,1.696,230,1.919,231,1.764,232,1.242,233,1.919,234,1.919,310,1.166,311,2.156,345,2.734,480,2.107,622,3.341,766,3.648,767,5.197,768,6.054,769,5.197,770,7.249,771,6.598,772,6.598,773,6.598,774,6.598,775,4.55,776,6.598,777,5.197,778,3.648,779,3.648,780,3.648,781,3.648,782,4.55,783,4.011,784,3.648,785,3.648,786,2.345,787,2.672,788,3.648,789,3.648,790,3.648,791,3.648,792,3.648,793,3.648,794,5.777,795,3.16]],["title/modules/DiceModule.html",[235,1.873,530,2.862]],["body/modules/DiceModule.html",[3,0.173,4,0.173,5,0.173,20,0.012,22,0.439,29,0.209,47,0.009,48,0.009,56,2.332,128,1.077,150,1.111,223,4.012,237,2.332,238,2.94,242,3.162,243,2.598,244,2.332,246,3.562,247,3.562,248,3.162,249,3.286,250,2.598,252,2.598,530,5.72,796,5.084,797,5.084,798,5.084,799,5.807,800,5.807,801,6.189,802,4.608]],["title/injectables/DiscardPileCardsEffects.html",[296,0.989,672,3.323]],["body/injectables/DiscardPileCardsEffects.html",[3,0.118,4,0.118,5,0.118,9,1.869,13,0.259,14,0.502,16,0.932,19,0.301,20,0.012,22,0.422,29,0.142,44,1.864,47,0.007,48,0.007,61,3.745,87,1.3,100,1.874,102,1.185,103,0.802,128,0.731,134,1.1,148,2.883,149,1.833,150,0.754,177,2.961,179,1.929,296,1.297,298,1.53,299,1.373,302,2.277,303,2.627,304,2.825,306,2.277,310,2.019,311,1.786,312,4.404,313,4.293,319,3.84,320,3.338,321,3.338,322,3.338,323,3.338,324,3.338,325,3.338,326,3.338,327,3.338,328,3.338,330,3.338,331,3.338,332,2.451,333,3.338,336,2.277,356,1.987,358,2.277,363,1.115,364,1.386,378,2.17,379,2.17,380,2.074,480,2.277,672,4.357,674,4.365,803,4.615,804,6.316,805,3.943,806,5.49,807,5.49,808,4.357,809,4.357,810,5.49,811,5.49,812,4.357,813,3.453,814,5.49,815,4.357,816,4.668,817,3.13,818,5.49,819,4.357,820,4.357,821,3.453,822,2.888,823,4.021,824,3.453]],["title/interfaces/DiscardPileCardsEntity.html",[0,0.151,825,3.067]],["body/interfaces/DiscardPileCardsEntity.html",[0,0.252,2,1.13,3,0.171,4,0.171,5,0.171,8,2.563,13,0.376,14,0.642,15,2.031,18,1.321,19,0.579,20,0.012,29,0.252,30,1.437,47,0.009,48,0.009,134,0.878,177,2.545,299,1.096,369,3.483,370,3.483,371,3.687,381,3.153,674,3.483,803,3.683,816,3.916,824,5.016,825,5.549,826,5.01]],["title/injectables/DiscardPileCardsFacade.html",[296,0.989,667,2.862]],["body/injectables/DiscardPileCardsFacade.html",[3,0.115,4,0.115,5,0.115,9,1.841,13,0.253,14,0.495,15,0.94,16,1.278,18,0.592,19,0.544,20,0.012,22,0.409,29,0.139,31,2.977,32,2.845,47,0.007,48,0.007,66,2.03,87,1.784,100,2.123,102,1.626,103,1.1,106,2.267,107,2.965,128,0.716,134,1.205,141,2.845,144,1.196,145,1.498,150,0.738,151,1.606,177,3.082,179,1.901,190,2.726,296,1.278,298,1.498,299,1.504,303,2.814,304,3.027,308,3.303,310,2.163,311,1.913,340,1.795,357,0.968,363,1.092,366,1.867,368,2.031,391,2.347,396,2.194,400,2.23,403,3.124,404,3.124,405,2.845,406,2.845,407,3.124,408,3.124,414,4.468,426,3.124,427,3.124,428,1.729,429,2.977,430,3.124,431,3.124,432,3.124,433,3.124,434,3.124,437,2.639,559,4.736,667,3.697,674,4.78,803,5.054,822,2.828,823,4.573,827,6.244,828,6.244,829,6.244,830,5.409,831,3.861,832,5.409,833,3.861,834,3.861,835,3.861,836,5.409,837,3.381,838,5.409,839,3.064,840,5.409,841,3.064,842,5.409,843,3.861,844,3.861,845,3.861,846,3.861,847,3.861,848,3.861]],["title/interfaces/DiscardPileCardsPartialState.html",[0,0.151,849,3.323]],["body/interfaces/DiscardPileCardsPartialState.html",[0,0.219,2,0.902,3,0.137,4,0.137,5,0.137,11,1.607,13,0.3,14,0.624,18,0.931,19,0.349,20,0.012,22,0.402,29,0.28,30,1.821,34,1.556,35,1.556,36,1.607,37,1.66,45,1.08,47,0.008,48,0.008,134,0.701,177,2.636,299,0.874,332,2.395,357,1.147,363,1.293,364,1.607,396,2.552,428,2.699,442,1.971,445,2.716,446,2.716,447,2.716,448,1.971,449,2.525,450,2.046,451,3.249,452,2.525,453,3.249,454,1.902,455,2.405,456,2.517,460,2.125,461,2.125,462,2.211,463,3.249,468,2.618,674,2.78,803,2.939,812,3.629,815,3.629,816,4.659,819,3.629,820,3.629,822,3.349,823,4.446,825,3.349,849,4.818,850,6.617,851,5.998,852,4.003,853,5.316,854,4.003,855,4.003,856,4.003,857,4.003,858,5.316,859,4.003,860,4.003,861,4.003]],["title/interfaces/DiscardPileCardsState.html",[0,0.151,851,3.323]],["body/interfaces/DiscardPileCardsState.html",[0,0.212,2,0.86,3,0.13,4,0.13,5,0.13,11,2.068,13,0.286,14,0.609,18,1.175,19,0.544,20,0.012,22,0.394,29,0.276,30,1.787,34,1.485,35,1.485,36,1.534,37,1.584,45,1.031,47,0.008,48,0.008,103,1.449,134,0.669,177,2.587,299,0.835,332,2.35,357,1.094,363,1.234,364,1.534,396,2.753,428,2.682,442,1.881,445,2.633,446,2.633,447,2.979,448,1.881,449,2.447,450,3.188,451,3.505,452,3.188,453,3.505,454,1.815,455,2.295,456,2.402,460,2.028,461,2.028,462,2.11,463,3.188,468,2.537,674,2.653,803,2.805,812,3.463,815,3.463,816,4.551,819,3.463,820,3.463,822,3.196,823,4.31,825,3.196,849,3.463,850,5.152,851,5.655,852,3.821,853,5.152,854,3.821,855,3.821,856,3.821,857,3.821,858,5.152,859,3.821,860,3.821,861,3.821]],["title/interfaces/Domain.html",[0,0.151,186,3.067]],["body/interfaces/Domain.html",[0,0.273,2,1.132,3,0.171,4,0.171,5,0.171,6,2.228,8,2.569,11,2.467,13,0.377,14,0.642,15,2.032,18,1.211,19,0.536,20,0.012,22,0.389,29,0.253,30,1.44,47,0.009,48,0.009,186,5.554,197,4.054,255,5.012,258,4.083,261,4.875,262,4.205,270,3.925,381,3.16,862,5.742,863,5.742]],["title/components/DomainComponent.html",[49,1.52,225,1.946]],["body/components/DomainComponent.html",[3,0.058,4,0.058,5,0.058,13,0.128,14,0.294,16,1.791,18,1.287,19,0.574,20,0.012,22,0.344,29,0.07,44,1.771,45,1.468,47,0.004,48,0.004,49,1.483,50,0.906,51,1.616,52,2.149,53,1.073,54,1.026,55,1.026,56,3.211,58,1.026,59,3.714,60,3.557,62,1.765,64,1.687,66,1.204,87,1.058,90,1.95,91,2.878,98,2.993,99,3.043,100,2.184,102,2.236,103,1.513,104,1.026,106,2.702,107,2.495,110,4.298,128,0.362,129,1.186,133,1.186,134,0.299,135,1.333,136,1.428,137,3.846,138,3.846,139,3.846,140,4.121,141,2.96,143,3.846,144,1.266,145,0.757,146,0.983,148,0.783,149,0.906,150,0.373,151,1.334,158,1.707,179,1.127,181,2.349,186,3.832,194,2.546,197,1.126,201,1.428,202,1.254,204,1.333,205,1.428,206,1.026,207,1.616,208,1.551,209,1.026,210,2.49,211,1.026,212,1.026,213,0.906,214,1.026,215,0.906,216,1.026,217,0.906,218,1.026,219,0.906,220,1.026,221,0.906,222,1.026,223,0.906,224,1.026,225,2.2,226,1.026,227,0.906,228,1.026,229,0.906,230,1.026,231,0.943,232,0.664,233,1.026,234,1.026,253,2.793,310,1.986,311,1.757,340,2.887,371,1.828,373,1.707,377,0.943,455,1.687,556,2.349,564,2.349,565,1.428,567,2.546,590,1.548,592,1.548,593,1.548,594,1.707,730,2.627,864,1.95,865,4.086,866,3.208,867,4.926,868,4.926,869,3.208,870,3.208,871,3.208,872,2.809,873,4.734,874,3.208,875,3.208,876,3.208,877,3.208,878,3.208,879,3.208,880,3.208,881,2.546,882,3.208,883,2.546,884,2.809,885,2.546,886,4.902,887,1.95,888,3.208,889,1.95,890,3.208,891,1.95,892,3.208,893,1.95,894,3.208,895,1.95,896,2.809,897,1.95,898,1.95,899,1.95,900,1.95,901,3.208,902,1.95,903,2.793,904,1.95,905,1.95,906,3.208,907,1.95,908,3.208,909,1.95,910,3.208,911,1.95,912,3.208,913,1.95,914,2.809,915,1.95,916,3.576,917,3.208,918,1.95,919,2.809,920,1.95,921,2.809,922,1.95,923,2.809,924,1.95,925,1.95,926,1.95,927,1.95,928,1.95,929,1.95,930,1.95,931,1.95,932,1.548,933,1.548,934,1.428,935,3.578,936,1.95,937,1.95,938,1.95,939,3.208,940,1.95,941,3.208,942,3.208,943,1.95,944,1.95,945,1.95,946,1.95,947,2.809,948,3.208,949,3.208,950,1.95,951,1.95,952,1.95,953,3.208,954,1.95,955,1.707,956,1.707,957,1.95,958,1.95,959,1.95,960,1.95,961,1.95,962,1.95,963,1.95,964,1.95,965,3.208,966,3.208,967,3.208,968,7.172,969,2.809,970,4.734,971,3.208,972,2.809,973,4.734,974,2.809,975,3.208,976,3.208,977,2.809,978,6.212,979,6.212,980,3.208,981,2.809,982,2.809,983,2.809,984,3.208,985,2.809,986,4.734,987,1.95]],["title/modules/DomainModule.html",[235,1.873,531,2.862]],["body/modules/DomainModule.html",[3,0.17,4,0.17,5,0.17,20,0.012,22,0.436,29,0.204,47,0.009,48,0.009,56,2.281,128,1.053,150,1.086,179,1.996,225,4.001,237,2.281,238,2.9,242,3.12,243,2.541,244,2.281,246,3.513,247,3.513,248,3.12,249,3.241,250,2.541,252,3.12,531,5.793,988,4.972,989,4.972,990,4.972,991,4.972,992,5.286,993,5.679,994,5.679,995,4.972]],["title/injectables/DomainsCardsEffects.html",[296,0.989,678,3.323]],["body/injectables/DomainsCardsEffects.html",[3,0.032,4,0.032,5,0.032,9,0.645,13,0.07,14,0.173,15,1.638,16,0.608,18,0.48,19,0.275,20,0.012,22,0.317,29,0.038,30,1.952,34,1.754,35,1.754,36,1.811,37,1.871,38,2.25,39,2.25,44,1.921,45,0.851,47,0.003,48,0.003,61,2.018,66,0.711,82,2.042,87,0.625,90,2.645,100,1.685,102,0.773,103,0.523,106,0.688,110,1.486,128,0.196,129,2.645,134,0.959,144,0.587,145,0.411,146,0.534,147,1.296,148,2.153,149,0.492,150,0.203,151,2.23,161,2.142,178,2.487,179,0.372,181,1.388,189,0.927,192,3.453,193,4.511,194,4.404,195,5.576,197,1.809,260,0.583,276,1.388,277,1.388,279,3.839,281,2.975,283,1.296,285,3.571,296,0.448,298,0.411,299,1.197,302,0.611,303,1.07,304,1.151,306,0.611,308,1.402,310,1.828,311,1.617,312,4.008,313,3.97,319,1.564,320,1.152,321,1.152,322,1.152,323,1.152,324,1.152,325,1.152,326,1.152,327,1.152,328,1.152,330,1.152,331,2.435,332,2.438,333,1.152,336,0.611,338,4.074,340,1.675,343,3.81,344,5.34,345,3.497,346,4.874,349,3.187,351,5.892,352,4.074,354,4.074,356,0.534,357,0.266,358,0.611,359,0.927,360,0.927,361,0.776,363,0.299,364,0.372,366,0.512,368,0.557,371,1.947,377,0.512,378,0.583,379,1.416,380,0.557,405,0.997,406,1.648,567,3.179,645,3.18,646,3.18,678,1.504,680,3.806,756,0.927,826,2.435,881,2.042,883,2.042,885,2.042,886,2.142,903,1.759,933,0.84,981,5.377,982,4.511,983,3.507,985,1.66,996,4.024,997,2.573,998,2.573,999,2.573,1000,2.042,1001,2.573,1002,2.573,1003,2.253,1004,1.896,1005,2.573,1006,2.573,1007,1.059,1008,1.896,1009,1.059,1010,1.059,1011,1.059,1012,1.896,1013,4.306,1014,5.152,1015,1.896,1016,1.896,1017,3.133,1018,3.133,1019,3.133,1020,3.133,1021,4.005,1022,1.896,1023,6.142,1024,1.896,1025,4.661,1026,3.133,1027,6.468,1028,5.008,1029,5.34,1030,5.152,1031,1.059,1032,1.896,1033,2.142,1034,2.142,1035,2.253,1036,1.896,1037,1.059,1038,1.896,1039,3.133,1040,1.896,1041,1.896,1042,4.351,1043,1.66,1044,1.896,1045,1.896,1046,1.896,1047,1.896,1048,1.896,1049,1.896,1050,1.896,1051,1.896,1052,1.896,1053,3.133,1054,3.133,1055,1.896,1056,3.133,1057,1.896,1058,4.074,1059,1.896,1060,1.896,1061,1.896,1062,1.896,1063,1.896,1064,1.896,1065,4.005,1066,1.896,1067,5.152,1068,3.133,1069,3.133,1070,1.896,1071,4.653,1072,1.059,1073,1.896,1074,4.005,1075,1.896,1076,1.896,1077,4.874,1078,3.507,1079,3.507,1080,4.653,1081,1.059,1082,1.896,1083,1.896,1084,4.653,1085,4.653,1086,3.133,1087,3.133,1088,4.653,1089,4.653,1090,1.896,1091,4.653,1092,1.896,1093,3.133,1094,1.896,1095,3.133,1096,1.896,1097,1.059,1098,1.896,1099,2.253,1100,1.896,1101,3.133,1102,1.896,1103,1.896,1104,1.896,1105,1.059,1106,1.896,1107,1.504,1108,2.253,1109,1.059,1110,1.896,1111,1.896,1112,1.896,1113,1.059,1114,1.896,1115,1.896,1116,1.66,1117,1.059,1118,1.896,1119,1.896,1120,1.896,1121,1.896,1122,1.896,1123,1.059,1124,1.896,1125,2.295,1126,1.059,1127,1.059,1128,1.896,1129,1.66,1130,1.059,1131,1.059,1132,0.776,1133,0.927,1134,0.927,1135,1.059,1136,1.059,1137,2.573,1138,1.896,1139,1.896,1140,1.388,1141,1.388,1142,1.388,1143,1.388,1144,1.059]],["title/interfaces/DomainsCardsEntity.html",[0,0.151,129,2.546]],["body/interfaces/DomainsCardsEntity.html",[0,0.195,2,0.596,3,0.09,4,0.09,5,0.09,8,1.351,10,1.351,13,0.198,14,0.414,15,1.712,18,1.188,19,0.553,20,0.012,22,0.301,29,0.195,30,1.362,34,1.541,35,1.028,44,0.758,45,1.85,47,0.006,48,0.006,90,2.752,103,0.92,129,3.928,134,0.463,137,4.807,138,4.416,139,5.056,143,5.354,144,1.403,145,1.172,197,1.744,260,3.319,276,3.316,277,3.316,281,4.98,283,5.295,285,4.994,286,2.645,299,0.578,369,1.836,370,2.752,371,3.034,377,1.461,378,1.662,379,4.671,380,1.589,381,1.662,517,7.033,518,7.033,680,1.836,826,4.123,886,4.636,996,1.942,1028,5.938,1029,5.87,1033,4.636,1034,4.636,1035,7.431,1058,5.938,1108,2.645,1145,5.127,1146,5.127,1147,4.527,1148,4.527,1149,4.527,1150,4.527,1151,4.527,1152,4.527,1153,4.527,1154,4.527,1155,4.527,1156,4.527,1157,4.527,1158,4.527,1159,4.527,1160,4.527,1161,4.527,1162,4.527,1163,4.527,1164,4.527,1165,3.593,1166,3.593,1167,4.527]],["title/injectables/DomainsCardsFacade.html",[91,2.546,296,0.989]],["body/injectables/DomainsCardsFacade.html",[3,0.062,4,0.062,5,0.062,9,1.155,13,0.137,14,0.311,15,1.415,16,1.801,18,1.295,19,0.592,20,0.012,22,0.339,29,0.075,44,1.654,45,0.494,47,0.005,48,0.005,66,1.273,70,4.319,82,3.915,87,1.119,91,2.063,100,2.223,102,2.291,103,1.55,106,2.894,107,3.286,110,4.439,128,0.387,134,1.246,144,0.647,145,0.811,146,1.053,150,0.4,151,0.869,190,1.71,197,2.474,260,3.199,296,0.802,298,0.811,299,1.555,303,2.052,304,2.207,308,2.6,310,1.37,311,1.534,340,0.971,357,0.524,363,0.591,366,1.01,368,1.099,371,2.427,391,1.27,396,1.506,400,1.206,401,1.829,403,1.96,404,1.96,405,1.785,406,1.785,407,1.96,408,1.96,409,1.829,411,1.658,413,1.829,414,3.357,417,4.75,421,1.829,426,1.96,427,1.96,428,1.085,429,1.868,430,1.96,431,1.96,432,1.96,433,1.96,434,1.96,437,4.186,622,1.343,680,4.943,826,3.879,881,2.693,883,2.693,884,2.971,885,2.693,886,4.741,914,2.971,916,4.917,919,2.971,921,2.971,923,2.971,934,3.613,996,5.227,1000,2.693,1003,4.319,1033,3.372,1034,3.372,1043,2.971,1132,1.53,1133,1.829,1134,1.829,1145,4.86,1168,4.285,1169,4.285,1170,4.933,1171,4.285,1172,3.393,1173,3.393,1174,3.393,1175,3.393,1176,3.393,1177,3.393,1178,4.285,1179,3.393,1180,3.393,1181,4.319,1182,4.285,1183,3.393,1184,4.933,1185,2.089,1186,2.089,1187,2.089,1188,2.089,1189,3.393,1190,2.089,1191,3.393,1192,2.089,1193,3.393,1194,2.089,1195,3.393,1196,2.089,1197,3.393,1198,2.089,1199,3.393,1200,2.089,1201,2.089,1202,2.089,1203,3.393,1204,2.089,1205,2.089,1206,3.393,1207,2.089,1208,3.393,1209,3.613,1210,2.089,1211,1.829,1212,2.089,1213,2.089,1214,3.393,1215,2.089,1216,2.089,1217,2.089,1218,2.089,1219,2.089,1220,3.393,1221,2.089,1222,3.393,1223,1.658,1224,1.829,1225,2.089,1226,2.089,1227,2.089,1228,2.089,1229,2.089,1230,2.089,1231,2.089,1232,2.089,1233,2.089,1234,2.089,1235,2.089,1236,2.089,1237,2.089,1238,2.089,1239,2.089,1240,2.089,1241,2.089,1242,2.089,1243,2.089,1244,2.089,1245,2.089,1246,2.089,1247,2.089,1248,2.089,1249,2.089]],["title/interfaces/DomainsCardsPartialState.html",[0,0.151,1250,3.323]],["body/interfaces/DomainsCardsPartialState.html",[0,0.19,2,0.734,3,0.111,4,0.111,5,0.111,11,1.308,13,0.244,14,0.482,15,1.62,18,0.808,19,0.284,20,0.012,22,0.369,29,0.263,30,1.955,44,1.322,45,1.66,47,0.007,48,0.007,90,3.721,129,2.263,134,0.57,161,2.544,197,3.044,279,2.149,299,0.712,332,2.317,345,1.958,357,0.933,363,1.052,364,1.308,396,2.34,428,2.737,442,1.605,445,2.358,446,2.358,447,2.358,448,1.605,449,2.192,450,2.738,451,2.978,452,2.192,453,2.978,454,1.548,463,2.978,468,2.273,680,2.263,996,2.392,1025,2.954,1033,3.603,1034,3.603,1077,2.954,1107,2.954,1125,2.726,1132,2.726,1140,2.726,1141,2.726,1142,2.726,1143,2.726,1250,4.183,1251,6.152,1252,5.577,1253,5.829,1254,3.259,1255,4.615,1256,3.259,1257,3.259,1258,3.259,1259,3.259,1260,3.259,1261,4.615,1262,3.259,1263,3.259,1264,3.259,1265,3.259,1266,3.259,1267,3.259,1268,3.259,1269,3.259,1270,5.359,1271,3.259,1272,5.829,1273,3.259,1274,3.259,1275,3.259,1276,3.259,1277,5.829,1278,3.259,1279,5.829,1280,3.259,1281,4.615,1282,3.259,1283,3.259,1284,4.615,1285,3.259,1286,3.259,1287,2.726,1288,3.259,1289,3.259,1290,3.259,1291,3.259,1292,3.259,1293,3.259]],["title/interfaces/DomainsCardsState.html",[0,0.151,1252,3.323]],["body/interfaces/DomainsCardsState.html",[0,0.185,2,0.708,3,0.107,4,0.107,5,0.107,11,1.806,13,0.236,14,0.47,15,1.595,18,1.105,19,0.501,20,0.012,22,0.363,29,0.26,30,1.939,44,1.289,45,1.638,47,0.007,48,0.007,90,3.649,103,1.045,129,2.184,134,0.551,161,2.455,197,2.968,279,2.074,299,0.687,332,2.286,345,1.89,357,0.901,363,1.016,364,1.262,396,2.61,428,2.728,442,1.549,445,2.3,446,2.3,447,2.685,448,1.549,449,2.138,450,2.685,451,3.322,452,2.999,453,3.322,454,1.494,463,2.931,468,2.216,680,2.184,996,2.309,1025,2.851,1033,3.513,1034,3.513,1077,2.851,1107,2.851,1125,2.631,1132,2.631,1140,2.631,1141,2.631,1142,2.631,1143,2.631,1250,2.851,1251,4.501,1252,5.199,1253,6.502,1254,3.145,1255,4.501,1256,3.145,1257,3.145,1258,3.145,1259,3.145,1260,3.145,1261,4.501,1262,3.145,1263,3.145,1264,3.145,1265,3.145,1266,3.145,1267,3.145,1268,3.145,1269,3.145,1270,5.255,1271,3.145,1272,5.736,1273,3.145,1274,3.145,1275,3.145,1276,3.145,1277,5.736,1278,3.145,1279,5.736,1280,3.145,1281,4.501,1282,3.145,1283,3.145,1284,4.501,1285,3.145,1286,3.145,1287,2.631,1288,3.145,1289,3.145,1290,3.145,1291,3.145,1292,3.145,1293,3.145]],["title/interfaces/EventCard.html",[0,0.151,1294,3.067]],["body/interfaces/EventCard.html",[0,0.296,2,0.997,3,0.151,4,0.151,5,0.151,6,1.962,8,2.262,10,2.9,11,2.278,12,4.351,13,0.332,14,0.593,15,1.944,16,1.887,17,6.337,18,1.261,19,0.547,20,0.012,22,0.418,23,3.456,24,4.167,25,4.012,26,4.748,27,4.427,29,0.272,30,1.626,32,2.659,34,1.721,35,1.721,36,1.777,37,1.835,38,2.445,39,2.445,40,2.92,41,2.92,43,3.744,44,1.268,45,1.194,46,3.456,47,0.009,48,0.009,730,3.25,795,3.941,1294,5.528,1295,4.012,1296,6.194,1297,5.056,1298,7.548,1299,5.056,1300,4.427]],["title/injectables/EventsPileCardsEffects.html",[296,0.989,682,3.323]],["body/injectables/EventsPileCardsEffects.html",[3,0.118,4,0.118,5,0.118,9,1.869,13,0.259,14,0.502,16,0.932,19,0.301,20,0.012,22,0.431,29,0.142,44,1.864,47,0.007,48,0.007,61,3.745,87,1.81,100,1.874,102,1.185,103,0.802,128,0.731,134,1.1,148,2.883,149,1.833,150,0.754,151,2.283,177,2.983,296,1.297,298,1.53,299,1.373,302,2.277,303,2.627,304,2.825,306,2.277,308,3.055,310,2.019,311,1.786,312,4.404,313,4.293,319,3.84,320,3.338,321,3.338,322,3.338,323,3.338,324,3.338,325,3.338,326,3.338,327,3.338,328,3.338,330,3.338,331,3.338,332,2.451,333,3.338,336,2.277,356,1.987,357,0.989,358,2.277,363,1.115,364,1.386,366,1.907,682,4.357,684,4.365,813,3.453,817,3.13,821,3.453,1301,4.615,1302,6.316,1303,6.316,1304,3.943,1305,5.49,1306,4.357,1307,4.778,1308,6.286,1309,5.49,1310,4.357,1311,5.49,1312,5.49,1313,4.357,1314,2.888,1315,4.625,1316,3.453]],["title/interfaces/EventsPileCardsEntity.html",[0,0.151,1317,2.691]],["body/interfaces/EventsPileCardsEntity.html",[0,0.262,2,1.036,3,0.157,4,0.157,5,0.157,8,2.349,13,0.345,14,0.608,15,1.993,18,1.27,19,0.507,20,0.012,22,0.403,29,0.262,30,1.98,44,1.317,47,0.009,48,0.009,134,0.805,144,1.627,177,2.411,285,3.193,293,4.598,299,1.004,369,3.193,370,4.038,371,3.664,377,2.539,378,2.89,379,2.89,380,2.762,381,2.89,554,3.193,684,3.193,1287,4.864,1301,3.376,1307,4.269,1308,4.598,1317,4.92,1318,4.168,1319,4.168,1320,3.846,1321,5.251,1322,6.641,1323,4.598,1324,5.251,1325,5.251,1326,5.251,1327,4.598,1328,5.251]],["title/injectables/EventsPileCardsFacade.html",[296,0.989,668,2.691]],["body/injectables/EventsPileCardsFacade.html",[3,0.118,4,0.118,5,0.118,9,1.871,13,0.259,14,0.503,16,0.933,19,0.302,20,0.012,22,0.398,29,0.142,47,0.007,48,0.007,66,2.062,87,1.812,100,2.168,102,1.187,103,0.803,106,2.608,107,3.214,128,0.732,134,1.227,150,0.755,151,1.643,177,3.105,190,2.769,296,1.298,298,1.533,299,1.53,303,2.842,304,3.057,305,5.983,308,3.327,310,2.02,311,1.787,340,1.836,357,0.991,363,1.117,366,1.91,368,2.077,391,2.401,396,2.221,400,2.281,402,3.458,403,3.174,404,3.174,405,2.891,406,2.891,407,3.174,408,3.174,414,4.295,416,2.893,423,2.7,426,3.174,427,3.174,428,1.757,429,3.025,430,3.174,431,3.174,432,3.174,433,3.174,434,3.174,668,3.533,684,4.865,1223,3.134,1301,5.144,1314,2.893,1315,4.629,1316,3.458,1329,6.321,1330,6.321,1331,6.833,1332,6.833,1333,3.134,1334,2.893,1335,3.458,1336,5.496,1337,3.458,1338,5.496,1339,3.458,1340,5.496,1341,3.95,1342,3.95,1343,3.95,1344,3.95,1345,3.95,1346,3.95]],["title/interfaces/EventsPileCardsPartialState.html",[0,0.151,1347,3.323]],["body/interfaces/EventsPileCardsPartialState.html",[0,0.208,2,0.838,3,0.127,4,0.127,5,0.127,11,1.493,13,0.279,14,0.601,18,1.007,19,0.325,20,0.012,22,0.39,29,0.274,30,1.849,34,1.446,35,1.446,36,1.493,37,1.542,44,1.449,45,1.665,47,0.008,48,0.008,134,0.651,177,2.559,299,0.813,332,2.324,357,1.066,363,1.201,364,1.493,396,2.477,428,2.717,442,1.832,445,2.585,446,2.585,447,2.585,448,1.832,449,2.404,450,3.298,451,3.153,452,2.404,453,3.153,454,1.767,455,2.235,456,2.338,460,1.975,461,1.975,462,2.054,463,3.153,468,2.492,684,2.583,1301,2.731,1306,3.372,1307,4.531,1310,3.372,1313,3.372,1314,3.112,1315,4.232,1317,2.731,1347,4.586,1348,6.455,1349,5.85,1350,3.72,1351,5.06,1352,3.72,1353,3.72,1354,3.72,1355,3.72,1356,5.75,1357,3.72,1358,3.72,1359,3.72,1360,3.72,1361,3.72,1362,3.72,1363,5.75,1364,5.06,1365,3.72]],["title/interfaces/EventsPileCardsState.html",[0,0.151,1349,3.323]],["body/interfaces/EventsPileCardsState.html",[0,0.202,2,0.802,3,0.121,4,0.121,5,0.121,11,1.971,13,0.267,14,0.588,18,1.179,19,0.529,20,0.012,22,0.383,29,0.27,30,1.821,34,1.385,35,1.385,36,1.43,37,1.477,44,1.407,45,1.635,47,0.008,48,0.008,103,1.407,134,0.624,177,2.512,299,0.778,332,2.282,357,1.02,363,1.15,364,1.43,396,2.703,428,2.704,442,1.754,445,2.51,446,2.51,447,2.872,448,1.754,449,2.333,450,3.506,451,3.441,452,3.122,453,3.441,454,1.692,455,2.14,456,2.239,460,1.891,461,1.891,462,1.967,463,3.096,468,2.418,684,2.473,1301,2.615,1306,3.228,1307,4.449,1310,3.228,1313,3.228,1314,2.979,1315,4.108,1317,2.615,1347,3.228,1348,4.911,1349,5.492,1350,3.562,1351,4.911,1352,3.562,1353,3.562,1354,3.562,1355,3.562,1356,5.621,1357,3.562,1358,3.562,1359,3.562,1360,3.562,1361,3.562,1362,3.562,1363,5.621,1364,4.911,1365,3.562]],["title/modules/FeatureEngineModule.html",[235,1.873,1366,3.323]],["body/modules/FeatureEngineModule.html",[3,0.191,4,0.191,5,0.191,20,0.012,22,0.415,29,0.23,47,0.01,48,0.01,56,2.569,128,1.186,150,1.223,237,2.569,248,3.351,249,3.481,250,2.862,252,2.862,1366,5.944,1367,6.397,1368,6.397]],["title/modules/FeatureGameModule.html",[235,1.873,490,2.862]],["body/modules/FeatureGameModule.html",[3,0.176,4,0.176,5,0.176,20,0.012,22,0.424,29,0.212,47,0.01,48,0.01,56,2.364,128,1.092,150,1.126,237,2.364,238,2.964,242,3.189,243,2.633,244,2.364,247,3.591,248,3.189,249,3.313,250,2.633,252,3.189,490,5.736,525,5.91,671,5.154,1369,5.154,1370,5.886,1371,5.154,1372,5.886,1373,5.886]],["title/injectables/GameEffects.html",[296,0.989,688,3.323]],["body/injectables/GameEffects.html",[3,0.111,4,0.111,5,0.111,13,0.245,14,0.483,16,0.881,19,0.285,20,0.012,22,0.424,29,0.134,34,1.796,35,1.796,36,1.854,37,1.916,38,2.552,39,2.552,44,1.671,45,1.908,47,0.007,48,0.007,61,3.678,87,1.74,100,1.828,102,1.12,103,0.758,128,0.691,134,1.078,144,1.155,148,2.46,149,1.732,150,0.713,151,2.195,296,1.247,298,1.446,299,1.345,306,2.152,308,2.98,310,1.958,311,2.357,312,4.334,313,4.216,336,2.152,356,1.878,357,0.935,460,3.096,565,2.73,645,3.607,646,3.607,688,4.188,1013,5.363,1129,4.62,1374,3.263,1375,4.861,1376,6.126,1377,6.126,1378,6.126,1379,3.727,1380,5.277,1381,6.126,1382,5.277,1383,5.277,1384,3.727,1385,5.277,1386,5.363,1387,6.662,1388,6.662,1389,6.662,1390,6.662,1391,6.662,1392,6.662,1393,3.727,1394,5.277,1395,5.277,1396,5.347,1397,5.363,1398,6.662,1399,5.277,1400,3.727,1401,2.73,1402,2.73,1403,2.548,1404,3.263,1405,3.263,1406,3.263]],["title/injectables/GameFacade.html",[89,2.418,296,0.989]],["body/injectables/GameFacade.html",[3,0.104,4,0.104,5,0.104,9,2.504,13,0.229,14,0.46,16,1.618,19,0.523,20,0.012,21,4.151,22,0.395,29,0.125,45,1.393,47,0.007,48,0.007,66,1.886,87,1.148,89,2.902,100,2.24,102,2.058,103,1.392,106,2.734,107,3.298,128,0.646,134,1.259,142,3.729,144,1.079,145,1.351,150,0.666,154,4.163,190,2.532,258,3.254,296,1.187,298,1.351,299,1.571,303,2.686,308,3.192,310,2.281,311,2.13,340,1.618,357,0.873,400,2.01,403,2.902,404,2.902,405,2.643,406,2.643,407,2.902,408,2.902,414,2.902,426,2.902,427,2.902,428,1.606,429,2.766,430,2.902,431,2.902,432,2.902,433,2.902,434,2.902,480,2.01,775,4.4,782,4.4,783,3.926,1375,5.125,1396,4.319,1401,2.549,1402,2.549,1403,2.379,1404,3.048,1405,3.048,1406,3.048,1407,3.481,1408,4.68,1409,5.015,1410,4.68,1411,5.025,1412,4.4,1413,4.4,1414,6.457,1415,6.457,1416,5.025,1417,3.481,1418,5.025,1419,3.481,1420,3.481,1421,4.4,1422,3.481,1423,4.4,1424,3.481,1425,3.481,1426,3.481,1427,3.481,1428,5.025,1429,5.025,1430,3.481,1431,5.025,1432,3.481,1433,5.025,1434,3.481,1435,5.025,1436,3.481,1437,5.025,1438,3.481,1439,3.481,1440,3.481,1441,3.481,1442,3.481,1443,3.481,1444,3.481,1445,3.481,1446,3.481]],["title/interfaces/GamePartialState.html",[0,0.151,1403,2.862]],["body/interfaces/GamePartialState.html",[0,0.223,2,0.93,3,0.141,4,0.141,5,0.141,9,2.501,13,0.31,14,0.567,19,0.36,20,0.012,21,3.982,22,0.383,29,0.275,30,1.735,45,1.915,47,0.008,48,0.008,104,2.48,134,0.723,142,3.577,144,1.461,145,1.829,154,4.468,258,3.121,299,0.902,311,2.216,357,1.182,428,2.682,449,2.577,454,1.961,783,4.207,786,3.982,787,3.453,1396,5.068,1401,3.453,1402,3.453,1403,4.234,1408,5.491,1409,5.382,1410,5.491,1447,4.128,1448,6.684,1449,6.058,1450,6.058,1451,4.128,1452,4.128,1453,4.128,1454,4.128,1455,4.128,1456,4.128,1457,4.128,1458,4.128,1459,4.128]],["title/injectables/GameRulesService.html",[99,2.691,296,0.989]],["body/injectables/GameRulesService.html",[3,0.048,4,0.048,5,0.048,9,1.423,10,1.217,13,0.105,14,0.249,15,1.322,16,1.203,18,1.16,19,0.518,20,0.012,22,0.282,29,0.058,30,1.495,31,1.497,44,1.175,45,1.811,47,0.004,48,0.004,56,3.018,66,1.021,85,3.661,87,0.897,88,1.173,89,2.415,90,2.156,91,2.542,92,2.156,93,2.542,94,2.28,95,2.688,96,2.28,97,2.688,99,1.749,100,2.047,102,1.531,103,1.035,104,1.866,106,2.306,107,2.915,110,2.048,128,0.297,133,0.974,134,0.246,137,1.86,138,1.095,139,2.858,140,1.173,141,1.866,142,0.925,143,1.86,144,0.843,145,0.622,146,0.807,147,2.424,148,2.478,149,0.744,150,0.306,151,2.378,154,0.974,157,1.402,159,1.402,161,4.452,165,3.106,171,1.402,172,2.382,173,3.106,177,1.288,178,4.73,179,2.641,187,1.271,190,0.807,191,5.402,260,1.952,279,4.234,281,2.941,285,1.654,296,0.643,298,0.622,303,1.739,310,1.972,311,1.918,332,2.148,344,4.896,345,3.777,346,3.718,349,3.978,361,1.173,371,2.096,372,3.675,374,1.271,376,2.159,377,0.774,405,2.2,406,2.2,473,1.402,551,1.271,622,2.688,655,2.598,667,2.858,668,2.688,669,2.858,755,4.46,786,1.03,787,1.173,795,2.156,816,2.424,886,2.424,934,1.173,935,3.661,947,5.005,955,3.106,1000,2.815,1125,3.978,1140,3.978,1141,3.978,1142,3.978,1143,3.978,1146,1.271,1181,3.106,1209,2.598,1296,1.271,1307,2.28,1317,3.012,1318,1.271,1375,3.319,1460,6.581,1461,1.602,1462,3.106,1463,3.547,1464,3.106,1465,3.547,1466,3.547,1467,3.547,1468,2.815,1469,3.547,1470,3.547,1471,2.721,1472,2.721,1473,2.721,1474,4.182,1475,4.182,1476,3.547,1477,2.858,1478,1.602,1479,1.602,1480,3.482,1481,1.602,1482,1.602,1483,4.182,1484,1.602,1485,2.721,1486,1.602,1487,1.602,1488,2.721,1489,1.602,1490,2.721,1491,1.602,1492,1.602,1493,1.602,1494,1.602,1495,1.602,1496,1.602,1497,4.182,1498,5.094,1499,4.182,1500,2.721,1501,1.602,1502,2.721,1503,6.17,1504,2.721,1505,1.602,1506,2.721,1507,2.721,1508,1.602,1509,2.721,1510,1.602,1511,1.602,1512,2.721,1513,2.721,1514,1.602,1515,2.721,1516,2.721,1517,2.721,1518,2.721,1519,1.602,1520,2.721,1521,2.721,1522,1.602,1523,2.721,1524,2.721,1525,1.602,1526,2.721,1527,2.721,1528,2.721,1529,1.602,1530,1.271,1531,1.602,1532,1.602,1533,1.602,1534,1.602,1535,1.602,1536,1.602,1537,1.602,1538,1.602,1539,1.602,1540,1.602,1541,1.602,1542,1.602,1543,1.602,1544,1.602,1545,1.602,1546,1.602,1547,1.602,1548,1.602,1549,1.602,1550,2.721,1551,2.721,1552,2.721,1553,2.721,1554,2.382,1555,1.602,1556,2.721,1557,1.602,1558,1.402,1559,1.602,1560,2.721,1561,1.602,1562,2.721,1563,2.721,1564,1.602,1565,1.402,1566,1.602,1567,1.602,1568,1.602,1569,1.602,1570,1.602,1571,1.602,1572,1.602,1573,3.547,1574,1.602,1575,2.721,1576,1.602,1577,6.514,1578,4.182,1579,4.182,1580,1.602,1581,1.602,1582,3.547,1583,3.547,1584,1.602,1585,1.602,1586,3.547,1587,4.182,1588,1.602,1589,1.602,1590,1.602,1591,3.547,1592,4.182,1593,4.685,1594,1.602,1595,1.602,1596,1.602,1597,1.602,1598,2.721,1599,2.721,1600,2.721,1601,3.547,1602,1.602,1603,1.602,1604,1.602,1605,1.602,1606,1.602,1607,1.602,1608,1.602]],["title/interfaces/GameState.html",[0,0.151,1449,3.323]],["body/interfaces/GameState.html",[0,0.21,2,0.85,3,0.129,4,0.129,5,0.129,9,2.659,13,0.283,14,0.534,19,0.584,20,0.012,21,4.559,22,0.366,29,0.267,30,1.66,45,1.997,47,0.008,48,0.008,104,2.268,134,0.661,142,4.095,144,1.336,145,1.673,154,4.749,258,3.573,299,0.825,311,2.16,357,1.082,428,2.646,449,2.428,454,1.794,783,4.749,786,4.559,787,3.158,1396,5.595,1401,3.158,1402,3.158,1403,2.948,1408,6.062,1409,5.721,1410,6.062,1447,3.776,1448,5.111,1449,5.628,1450,5.794,1451,3.776,1452,3.776,1453,3.776,1454,3.776,1455,3.776,1456,3.776,1457,3.776,1458,3.776,1459,3.776]],["title/interfaces/Hand.html",[0,0.151,188,3.067]],["body/interfaces/Hand.html",[0,0.273,2,1.132,3,0.171,4,0.171,5,0.171,6,2.228,8,2.569,11,2.467,13,0.377,14,0.642,15,2.032,18,1.211,19,0.536,20,0.012,22,0.389,29,0.253,30,1.44,47,0.009,48,0.009,188,5.554,255,5.012,258,4.083,261,4.875,262,4.205,270,3.925,381,3.16,1609,5.742,1610,4.268,1611,5.742]],["title/components/HandComponent.html",[49,1.52,227,1.946]],["body/components/HandComponent.html",[1,4.336,3,0.105,4,0.105,5,0.105,13,0.23,14,0.462,16,1.741,18,1.244,19,0.546,20,0.012,22,0.396,29,0.126,31,3.936,44,1.625,45,1.69,47,0.007,48,0.007,49,2.149,50,1.629,51,2.544,52,1.843,53,1.929,54,1.843,55,1.843,56,3.133,58,1.843,59,4.237,60,4.058,62,2.779,64,2.656,66,1.895,87,1.156,92,3.07,93,3.938,100,2.109,102,2.063,103,1.396,104,1.843,106,2.493,107,2.028,110,3.418,128,0.65,131,2.253,133,2.131,134,0.537,141,3.762,144,1.565,145,1.36,146,1.766,148,1.407,149,1.629,150,0.67,179,1.775,188,5.029,206,1.843,207,2.544,208,2.442,209,1.843,210,3.407,211,1.843,212,1.843,213,1.629,214,1.843,215,1.629,216,1.843,217,1.629,218,1.843,219,1.629,220,1.843,221,1.629,222,1.843,223,1.629,224,1.843,225,1.629,226,1.843,227,3.011,228,1.843,229,1.629,230,1.843,231,1.695,232,1.193,233,1.843,234,1.843,310,1.614,311,1.428,340,3.011,371,2.259,377,1.695,480,2.024,556,3.698,564,3.698,730,3.805,872,4.421,896,4.421,916,2.395,932,2.781,956,3.068,977,4.421,1480,4.693,1530,2.781,1610,2.131,1612,3.504,1613,5.92,1614,5.05,1615,5.05,1616,6.478,1617,5.05,1618,4.421,1619,3.504,1620,5.05,1621,3.504,1622,5.05,1623,3.504,1624,3.504,1625,3.504,1626,5.05,1627,3.504,1628,4.421,1629,3.504,1630,3.504,1631,3.504,1632,3.504,1633,3.068,1634,3.504,1635,3.504,1636,3.504,1637,3.504,1638,5.05,1639,5.05]],["title/modules/HandModule.html",[235,1.873,532,2.862]],["body/modules/HandModule.html",[3,0.176,4,0.176,5,0.176,20,0.012,22,0.424,29,0.212,47,0.01,48,0.01,56,2.364,128,1.092,150,1.126,227,4.019,237,2.364,238,2.964,242,3.189,243,2.633,244,2.364,246,3.591,247,3.591,248,3.189,249,3.313,250,2.633,252,2.633,532,5.736,1640,5.154,1641,5.154,1642,5.154,1643,5.886,1644,5.886]],["title/injectables/HandsCardsEffects.html",[296,0.989,693,3.323]],["body/injectables/HandsCardsEffects.html",[3,0.119,4,0.119,5,0.119,9,1.881,10,2.472,13,0.261,14,0.506,16,0.94,19,0.304,20,0.012,22,0.423,29,0.143,44,1.87,47,0.007,48,0.007,61,3.756,87,1.312,92,4.532,100,1.881,102,1.196,103,0.809,128,0.738,134,1.104,148,2.893,149,1.85,150,0.761,296,1.305,298,1.544,299,1.378,302,2.298,303,2.64,304,2.839,306,2.298,310,2.029,311,1.795,312,4.415,313,4.305,319,3.859,320,3.359,321,3.359,322,3.359,323,3.359,324,3.359,325,3.359,326,3.359,327,3.359,328,3.359,330,3.359,331,3.359,332,2.458,333,3.359,336,2.298,356,2.005,358,2.298,363,1.125,364,1.399,378,2.191,379,2.191,380,2.094,480,2.298,693,4.385,695,4.63,808,4.385,809,4.385,817,3.159,1480,4.686,1610,3.359,1633,4.838,1645,4.924,1646,5.557,1647,3.98,1648,5.525,1649,4.838,1650,5.525,1651,5.525,1652,3.98,1653,5.525,1654,5.525,1655,5.525,1656,5.525,1657,5.525,1658,3.98,1659,2.915,1660,3.485]],["title/interfaces/HandsCardsEntity.html",[0,0.151,131,2.691]],["body/interfaces/HandsCardsEntity.html",[0,0.262,2,1.036,3,0.157,4,0.157,5,0.157,8,2.349,10,2.349,13,0.345,14,0.608,15,1.993,18,1.306,19,0.585,20,0.012,22,0.291,29,0.239,30,1.317,31,4.009,32,4.026,47,0.009,48,0.009,92,4.038,131,4.682,134,0.805,141,3.831,144,1.627,145,2.038,299,1.004,369,3.193,370,4.038,371,3.608,381,2.89,695,3.376,826,4.903,1165,5.271,1166,5.271,1480,5.512,1610,3.193,1645,3.589,1660,4.598]],["title/injectables/HandsCardsFacade.html",[93,2.546,296,0.989]],["body/injectables/HandsCardsFacade.html",[3,0.111,4,0.111,5,0.111,9,1.798,10,2.982,13,0.245,14,0.483,15,1.492,16,1.575,18,1.196,19,0.509,20,0.012,22,0.404,29,0.134,31,2.054,47,0.007,48,0.007,66,1.982,87,1.231,93,3.211,100,2.17,102,2.003,103,1.355,106,2.652,107,3.243,128,0.692,134,1.226,141,1.963,144,1.157,145,1.448,150,0.714,190,2.661,296,1.248,298,1.448,299,1.53,303,2.772,304,2.982,308,3.268,310,1.959,311,1.734,340,1.735,357,0.936,363,1.056,366,1.805,368,1.963,391,2.269,396,2.155,400,2.155,403,3.05,404,3.05,405,2.778,406,2.778,407,3.05,408,3.05,411,2.962,414,3.849,416,2.734,423,2.551,425,3.268,426,3.05,427,3.05,428,1.688,429,2.907,430,3.05,431,3.05,432,3.05,433,3.05,434,3.05,480,2.155,554,3.727,695,5.142,839,2.962,841,2.962,916,3.61,1333,2.962,1334,2.734,1480,4.19,1610,3.727,1618,4.625,1628,4.625,1645,5.468,1659,2.734,1661,6.131,1662,6.131,1663,6.131,1664,5.282,1665,6.666,1666,3.732,1667,5.282,1668,3.732,1669,3.732,1670,5.282,1671,5.282,1672,5.282,1673,3.732,1674,3.732,1675,3.732,1676,3.732,1677,3.732,1678,3.732,1679,3.732,1680,3.732]],["title/interfaces/HandsCardsPartialState.html",[0,0.151,1681,3.323]],["body/interfaces/HandsCardsPartialState.html",[0,0.214,2,0.874,3,0.132,4,0.132,5,0.132,11,1.557,13,0.291,14,0.614,15,1.633,18,0.911,19,0.339,20,0.012,22,0.397,29,0.277,30,1.798,45,1.405,47,0.008,48,0.008,92,4.359,131,2.848,134,0.679,299,0.847,332,2.365,357,1.111,363,1.253,364,1.557,396,2.52,428,2.744,442,1.91,445,2.66,446,2.66,447,2.66,448,1.91,449,2.473,450,3.002,451,3.208,452,2.473,453,3.208,454,1.843,460,2.059,461,2.059,462,2.143,463,3.208,468,2.563,695,2.848,1610,3.615,1645,3.029,1659,3.245,1681,4.718,1682,6.548,1683,5.935,1684,3.88,1685,5.205,1686,3.88,1687,3.88,1688,3.88,1689,3.88,1690,3.88,1691,5.205,1692,3.88,1693,3.88,1694,3.88,1695,3.88,1696,3.88,1697,3.88,1698,3.88,1699,3.88,1700,3.88]],["title/interfaces/HandsCardsState.html",[0,0.151,1683,3.323]],["body/interfaces/HandsCardsState.html",[0,0.208,2,0.835,3,0.126,4,0.126,5,0.126,11,2.026,13,0.278,14,0.6,15,1.596,18,1.165,19,0.538,20,0.012,22,0.39,29,0.273,30,1.765,45,1.362,47,0.008,48,0.008,92,4.279,103,1.431,131,2.722,134,0.649,299,0.81,332,2.321,357,1.062,363,1.198,364,1.488,396,2.732,428,2.732,442,1.826,445,2.58,446,2.58,447,2.933,448,1.826,449,2.398,450,3.399,451,3.478,452,3.16,453,3.478,454,1.761,460,1.968,461,1.968,462,2.048,463,3.149,468,2.486,695,2.722,1610,3.505,1645,2.894,1659,3.101,1681,3.361,1682,5.048,1683,5.586,1684,3.708,1685,5.048,1686,3.708,1687,3.708,1688,3.708,1689,3.708,1690,3.708,1691,5.048,1692,3.708,1693,3.708,1694,3.708,1695,3.708,1696,3.708,1697,3.708,1698,3.708,1699,3.708,1700,3.708]],["title/interfaces/HasColor.html",[0,0.151,261,2.691]],["body/interfaces/HasColor.html",[0,0.227,2,1.246,3,0.189,4,0.189,5,0.189,6,2.452,13,0.415,14,0.68,19,0.483,20,0.011,22,0.35,29,0.227,47,0.01,48,0.01,103,1.511,255,4.959,258,4.109,261,4.78,270,4.319,1701,6.318]],["title/interfaces/HasCost.html",[0,0.151,263,3.067]],["body/interfaces/HasCost.html",[0,0.229,2,1.252,3,0.19,4,0.19,5,0.19,6,2.464,13,0.417,14,0.682,19,0.485,20,0.011,22,0.351,29,0.229,47,0.01,48,0.01,148,3.179,256,5.983,263,5.461,271,4.34,272,4.65,1702,6.349]],["title/interfaces/HasId.html",[0,0.151,12,2.546]],["body/interfaces/HasId.html",[0,0.231,2,1.268,3,0.192,4,0.192,5,0.192,6,2.495,12,4.566,13,0.422,14,0.687,15,1.996,18,1.22,19,0.491,20,0.011,29,0.231,47,0.01,48,0.01,1703,6.428]],["title/interfaces/HasName.html",[0,0.151,24,2.691]],["body/interfaces/HasName.html",[0,0.22,2,1.208,3,0.183,4,0.183,5,0.183,6,2.376,13,0.402,14,0.668,16,1.907,18,1.238,19,0.468,20,0.012,24,5.012,29,0.263,32,3.221,34,2.084,35,2.084,36,2.152,37,2.223,38,2.961,39,2.961,40,3.536,41,3.536,43,3.536,44,1.536,47,0.01,48,0.01,1704,4.86,1705,5.362,1706,6.123]],["title/interfaces/HasRules.html",[0,0.151,26,3.067]],["body/interfaces/HasRules.html",[0,0.231,2,1.268,3,0.192,4,0.192,5,0.192,6,2.495,13,0.422,14,0.687,17,6.509,18,1.22,19,0.491,20,0.011,26,5.501,29,0.231,47,0.01,48,0.01,1707,6.428]],["title/interfaces/HasVictoryPoints.html",[0,0.151,267,3.067]],["body/interfaces/HasVictoryPoints.html",[0,0.23,2,1.261,3,0.191,4,0.191,5,0.191,6,2.482,13,0.42,14,0.685,19,0.489,20,0.011,29,0.23,47,0.01,48,0.01,103,1.522,257,5.997,260,4.371,267,5.485,1708,6.397]],["title/interfaces/LandCard.html",[0,0.151,903,2.862]],["body/interfaces/LandCard.html",[0,0.292,2,0.935,3,0.142,4,0.142,5,0.142,6,1.839,8,2.121,10,2.782,11,2.185,12,4.218,13,0.311,14,0.569,15,1.91,18,1.172,19,0.638,20,0.012,22,0.434,23,3.24,29,0.275,30,1.74,32,2.493,34,1.613,35,1.613,36,1.666,37,1.721,38,2.292,39,2.292,40,2.737,41,2.737,43,3.59,44,1.189,45,1.12,46,3.24,47,0.008,48,0.008,103,1.264,140,3.472,143,5.034,192,4.934,255,4.771,258,3.853,261,3.997,262,3.472,265,4.25,266,4.15,270,3.24,272,3.472,275,3.762,622,5.045,783,4.649,903,5.227,1709,3.762,1710,6.696,1711,4.74,1712,4.74,1713,4.74,1714,4.15]],["title/injectables/LandsPileCardsEffects.html",[296,0.989,697,3.323]],["body/injectables/LandsPileCardsEffects.html",[3,0.13,4,0.13,5,0.13,9,1.998,13,0.286,14,0.537,16,1.027,19,0.332,20,0.012,22,0.424,29,0.157,44,1.92,47,0.008,48,0.008,61,3.858,87,1.434,96,4.574,100,1.824,102,1.307,103,0.884,128,0.806,134,1.091,148,2.669,149,2.021,150,0.832,177,2.96,296,1.387,298,1.688,299,1.361,302,2.511,303,2.764,304,2.973,306,2.511,310,1.876,311,1.66,312,4.291,313,4.109,319,4.041,320,3.569,321,3.569,322,3.569,323,3.569,324,3.569,325,3.569,326,3.569,327,3.569,328,3.569,330,3.569,331,3.569,332,2.525,333,3.569,336,2.511,356,2.191,358,2.511,363,1.23,364,1.528,480,2.511,697,4.659,699,4.574,1715,4.864,1716,4.349,1717,5.871,1718,4.659,1719,5.819,1720,4.349,1721,5.871,1722,4.659,1723,5.871,1724,4.349,1725,3.185,1726,4.3]],["title/interfaces/LandsPileCardsEntity.html",[0,0.151,132,2.862]],["body/interfaces/LandsPileCardsEntity.html",[0,0.264,2,1.053,3,0.159,4,0.159,5,0.159,8,2.388,13,0.35,14,0.614,15,2.001,18,1.274,19,0.513,20,0.012,22,0.406,29,0.264,30,1.931,44,1.339,47,0.009,48,0.009,96,4.314,132,5.263,134,0.818,144,1.654,177,2.436,299,1.021,369,3.245,370,4.08,371,3.677,377,2.581,378,2.938,379,2.938,380,2.808,381,2.938,554,3.245,699,3.432,933,4.236,1287,4.915,1319,4.236,1320,3.91,1323,4.674,1327,4.674,1715,3.649,1719,4.674,1727,5.338,1728,5.338,1729,5.338]],["title/injectables/LandsPileCardsFacade.html",[97,2.691,296,0.989]],["body/injectables/LandsPileCardsFacade.html",[3,0.117,4,0.117,5,0.117,9,1.859,13,0.257,14,0.5,15,1.531,16,1.486,18,1.137,19,0.481,20,0.012,22,0.396,29,0.141,47,0.007,48,0.007,66,2.049,87,1.801,97,3.51,100,2.13,102,1.89,103,1.279,106,2.471,107,3.117,128,0.726,134,1.209,150,0.748,151,1.628,177,3.087,190,2.751,296,1.29,298,1.519,299,1.508,303,2.831,304,3.045,308,3.318,310,2.01,311,1.779,340,1.819,357,0.982,363,1.107,366,1.892,368,2.059,391,2.379,396,2.211,400,2.26,403,3.154,404,3.154,405,2.873,406,2.873,407,3.154,408,3.154,414,4.282,416,2.866,423,2.675,426,3.154,427,3.154,428,1.745,429,3.006,430,3.154,431,3.154,432,3.154,433,3.154,434,3.154,437,2.675,699,5.069,916,3.733,1211,3.427,1223,3.106,1333,3.106,1334,2.866,1337,3.427,1339,3.427,1715,5.39,1725,2.866,1726,4.607,1730,6.29,1731,6.29,1732,5.461,1733,5.461,1734,5.461,1735,5.461,1736,5.461,1737,5.461,1738,5.461,1739,3.914,1740,3.914,1741,3.914,1742,3.914,1743,3.914,1744,3.914]],["title/interfaces/LandsPileCardsPartialState.html",[0,0.151,1745,3.323]],["body/interfaces/LandsPileCardsPartialState.html",[0,0.217,2,0.894,3,0.135,4,0.135,5,0.135,11,1.593,13,0.298,14,0.621,15,1.652,18,0.925,19,0.346,20,0.012,22,0.401,29,0.279,30,1.815,45,1.071,47,0.008,48,0.008,96,4.362,132,3.098,134,0.695,177,2.627,299,0.867,332,2.386,357,1.137,363,1.282,364,1.593,396,2.543,428,2.718,442,1.954,445,2.7,446,2.7,447,2.7,448,1.954,449,2.51,450,2.7,451,3.237,452,2.51,453,3.237,454,1.885,460,2.106,461,2.106,462,2.191,463,3.237,468,2.602,699,2.913,1715,3.098,1718,3.597,1722,3.597,1725,3.319,1726,4.42,1745,4.79,1746,6.598,1747,5.98,1748,3.968,1749,5.285,1750,3.968,1751,3.968,1752,3.968,1753,3.968,1754,5.285,1755,3.968,1756,3.968,1757,3.968,1758,3.968,1759,3.968]],["title/interfaces/LandsPileCardsState.html",[0,0.151,1747,3.323]],["body/interfaces/LandsPileCardsState.html",[0,0.211,2,0.853,3,0.129,4,0.129,5,0.129,11,2.056,13,0.284,14,0.607,15,1.614,18,1.172,19,0.543,20,0.012,22,0.393,29,0.275,30,1.781,45,1.022,47,0.008,48,0.008,96,4.261,103,1.444,132,2.958,134,0.663,177,2.578,299,0.828,332,2.342,357,1.085,363,1.224,364,1.521,396,2.747,428,2.703,442,1.866,445,2.618,446,2.618,447,2.966,448,1.866,449,2.433,450,3.319,451,3.497,452,3.18,453,3.497,454,1.8,460,2.011,461,2.011,462,2.092,463,3.177,468,2.523,699,2.781,1715,2.958,1718,3.434,1722,3.434,1725,3.169,1726,4.285,1745,3.434,1746,5.123,1747,5.636,1748,3.789,1749,5.123,1750,3.789,1751,3.789,1752,3.789,1753,3.789,1754,5.123,1755,3.789,1756,3.789,1757,3.789,1758,3.789,1759,3.789]],["title/components/PhasesComponent.html",[49,1.52,229,1.946]],["body/components/PhasesComponent.html",[3,0.098,4,0.098,5,0.098,9,2.375,13,0.214,14,0.439,16,1.649,18,0.871,19,0.479,20,0.012,21,2.099,22,0.369,29,0.118,44,1.674,45,1.133,47,0.006,48,0.006,49,2.064,50,1.518,51,2.417,52,1.717,53,1.797,54,1.717,55,1.717,56,3.193,58,1.717,59,4.183,60,4.006,62,2.64,64,2.523,66,1.8,87,1.582,88,2.391,89,3.618,100,2.16,102,1.883,103,1.274,104,2.99,106,2.741,107,2.971,110,4.36,128,0.606,133,1.985,134,0.5,142,4.36,144,1.486,145,1.267,146,1.645,150,0.624,151,1.995,154,3.456,179,1.686,200,3.278,201,2.391,202,2.099,203,2.591,204,2.232,205,2.391,206,1.717,207,2.417,208,2.319,209,1.717,210,3.296,211,1.717,212,1.717,213,1.518,214,1.717,215,1.518,216,1.717,217,1.518,218,1.717,219,1.518,220,1.717,221,1.518,222,1.717,223,1.518,224,1.717,225,1.518,226,1.717,227,1.518,228,1.717,229,2.912,230,1.717,231,1.579,232,1.111,233,1.717,234,1.717,258,3.804,310,1.533,311,1.356,371,1.461,377,1.579,668,4.028,795,3.809,1294,4.164,1307,3.654,1317,2.099,1318,2.591,1409,4.164,1412,4.199,1413,4.199,1421,4.199,1423,4.199,1760,3.265,1761,4.796,1762,5.685,1763,4.796,1764,6.265,1765,4.796,1766,6.265,1767,6.265,1768,6.265,1769,6.265,1770,6.265,1771,4.796,1772,3.265,1773,4.796,1774,3.265,1775,3.265,1776,3.265,1777,3.265,1778,3.265,1779,3.265,1780,3.265,1781,3.265,1782,3.265,1783,3.265,1784,3.265,1785,3.265,1786,3.265,1787,3.265,1788,3.265,1789,3.265,1790,3.265,1791,3.265,1792,7.398,1793,4.796,1794,4.796,1795,4.796,1796,6.265]],["title/modules/PhasesModule.html",[235,1.873,533,2.862]],["body/modules/PhasesModule.html",[3,0.173,4,0.173,5,0.173,20,0.012,22,0.439,29,0.209,47,0.009,48,0.009,56,2.332,128,1.077,150,1.111,229,4.012,237,2.332,238,2.94,242,3.162,243,2.598,244,2.332,246,3.562,247,3.562,248,3.162,249,3.286,250,2.598,252,2.598,533,5.72,801,6.189,802,4.608,1797,5.084,1798,5.084,1799,5.084,1800,5.807,1801,5.807]],["title/modules/PilesModule.html",[235,1.873,534,2.862]],["body/modules/PilesModule.html",[3,0.17,4,0.17,5,0.17,20,0.012,22,0.436,29,0.204,47,0.009,48,0.009,56,2.281,128,1.053,150,1.086,179,1.996,231,4.162,237,2.281,238,2.9,242,3.12,243,2.541,244,2.281,246,3.513,247,3.513,248,3.12,249,3.241,250,2.541,252,3.12,534,5.793,992,5.286,995,4.972,1802,4.972,1803,5.679,1804,4.972,1805,4.972,1806,5.679,1807,5.679]],["title/injectables/StockPilesCardsEffects.html",[296,0.989,701,3.323]],["body/injectables/StockPilesCardsEffects.html",[3,0.092,4,0.092,5,0.092,9,1.57,10,2.063,13,0.203,14,0.422,15,1.123,16,0.732,19,0.421,20,0.012,22,0.426,29,0.111,44,1.717,45,1.443,47,0.006,48,0.006,61,3.449,87,1.521,100,1.791,102,0.931,103,0.629,128,0.574,134,1.049,146,1.56,147,3.152,148,2.622,149,1.439,150,0.592,151,1.918,232,2.745,244,1.852,296,1.09,298,1.202,299,1.309,302,1.788,303,2.292,304,2.466,306,1.788,308,2.732,310,1.952,311,1.727,312,4.3,313,4.208,319,3.35,320,2.804,321,2.804,322,2.804,323,2.804,324,2.804,325,2.804,326,2.804,327,2.804,328,2.804,330,2.804,331,2.804,332,2.403,333,2.804,336,1.788,340,2.561,342,4.038,345,2.426,349,3.378,356,1.56,357,0.777,358,1.788,361,2.268,363,0.876,364,1.088,366,1.497,368,1.629,371,2.732,372,3.925,378,1.704,379,1.704,380,1.629,701,3.66,703,4.162,808,3.66,809,3.66,826,3.712,1099,4.825,1477,4.98,1554,5.346,1558,4.038,1565,5.993,1646,4.825,1649,4.038,1808,4.4,1809,5.511,1810,5.511,1811,3.097,1812,4.612,1813,4.612,1814,4.612,1815,3.097,1816,4.612,1817,3.66,1818,4.825,1819,3.097,1820,4.612,1821,3.66,1822,4.612,1823,3.097,1824,4.612,1825,4.612,1826,4.612,1827,4.612,1828,4.612,1829,3.66,1830,4.038,1831,4.038,1832,3.767,1833,4.612,1834,4.612,1835,4.612,1836,3.66,1837,3.097,1838,3.097,1839,2.268,1840,4.174,1841,2.711,1842,2.711,1843,2.711]],["title/interfaces/StockPilesCardsEntity.html",[0,0.151,1832,2.862]],["body/interfaces/StockPilesCardsEntity.html",[0,0.248,2,0.923,3,0.14,4,0.14,5,0.14,8,2.094,10,2.094,13,0.307,14,0.564,15,1.941,18,1.285,19,0.56,20,0.012,22,0.406,29,0.248,30,1.838,31,3.795,32,3.855,44,1.174,47,0.008,48,0.008,134,0.717,141,3.627,144,1.911,145,1.816,232,2.347,285,2.845,299,0.895,369,2.845,370,3.748,371,3.499,372,5.027,377,2.263,378,2.576,379,3.393,380,2.462,381,2.576,554,2.845,703,2.845,826,4.754,932,3.714,1165,4.893,1166,4.893,1319,4.893,1320,3.428,1477,5.009,1530,3.714,1808,3.008,1818,4.098,1832,5.345,1840,3.199,1841,5.398,1844,4.68,1845,4.68,1846,4.68,1847,4.68,1848,4.68,1849,4.68,1850,4.68,1851,4.68,1852,4.68,1853,4.68]],["title/injectables/StockPilesCardsFacade.html",[296,0.989,669,2.862]],["body/injectables/StockPilesCardsFacade.html",[3,0.112,4,0.112,5,0.112,9,1.809,10,3.439,13,0.247,14,0.486,16,1.455,18,1.123,19,0.471,20,0.012,22,0.405,29,0.136,31,2.072,47,0.007,48,0.007,66,1.994,87,1.753,100,2.109,102,1.851,103,1.252,106,2.429,107,3.087,128,0.698,134,1.198,141,1.981,144,1.167,145,1.461,150,0.72,151,1.566,190,2.678,232,2.882,296,1.256,298,1.461,299,1.495,303,2.783,304,2.994,308,3.277,310,1.969,311,1.742,340,1.75,357,0.944,363,1.065,366,1.821,368,1.981,372,4.708,391,2.289,396,2.165,400,2.174,403,3.069,404,3.069,405,2.796,406,2.796,407,3.069,408,3.069,414,4.23,423,2.574,426,3.069,427,3.069,428,1.699,429,2.925,430,3.069,431,3.069,432,3.069,433,3.069,434,3.069,437,3.633,554,4.453,669,3.633,703,4.752,837,3.297,839,2.988,841,2.988,1224,3.297,1334,2.758,1335,3.297,1808,5.025,1839,2.758,1840,4.21,1842,3.297,1843,3.297,1854,6.16,1855,6.16,1856,6.16,1857,6.16,1858,3.765,1859,3.765,1860,3.765,1861,5.315,1862,5.315,1863,5.315,1864,3.765,1865,3.765,1866,3.765,1867,3.765]],["title/interfaces/StockPilesCardsPartialState.html",[0,0.151,1868,3.323]],["body/interfaces/StockPilesCardsPartialState.html",[0,0.216,2,0.886,3,0.134,4,0.134,5,0.134,11,1.579,13,0.295,14,0.618,18,0.92,19,0.343,20,0.012,22,0.399,29,0.278,30,1.808,34,1.529,35,1.529,36,1.579,37,1.631,45,1.061,47,0.008,48,0.008,134,0.689,232,2.454,299,0.859,332,2.378,357,1.127,363,1.27,364,1.579,396,2.534,428,2.715,442,1.937,445,2.685,446,2.685,447,2.685,448,1.937,449,2.496,450,2.01,451,3.226,452,2.496,453,3.226,454,1.869,455,2.363,456,2.473,460,2.088,461,2.088,462,2.172,463,3.226,468,2.587,703,2.731,1477,4.929,1808,2.888,1817,3.565,1821,3.565,1832,3.071,1836,3.565,1839,3.29,1840,4.101,1868,4.762,1869,6.579,1870,5.963,1871,3.934,1872,5.254,1873,3.934,1874,3.934,1875,3.934,1876,3.934,1877,5.254,1878,3.934,1879,3.934,1880,3.934,1881,3.934,1882,3.934,1883,3.934]],["title/interfaces/StockPilesCardsState.html",[0,0.151,1870,3.323]],["body/interfaces/StockPilesCardsState.html",[0,0.209,2,0.846,3,0.128,4,0.128,5,0.128,11,2.045,13,0.282,14,0.604,18,1.169,19,0.541,20,0.012,22,0.392,29,0.275,30,1.775,34,1.461,35,1.461,36,1.508,37,1.558,45,1.014,47,0.008,48,0.008,103,1.439,134,0.658,232,2.409,299,0.821,332,2.334,357,1.076,363,1.213,364,1.508,396,2.741,428,2.7,442,1.85,445,2.603,446,2.603,447,2.953,448,1.85,449,2.42,450,3.166,451,3.49,452,3.172,453,3.49,454,1.785,455,2.257,456,2.362,460,1.994,461,1.994,462,2.075,463,3.166,468,2.508,703,2.609,1477,4.837,1808,2.758,1817,3.405,1821,3.405,1832,2.933,1836,3.405,1839,3.143,1840,3.977,1868,3.405,1869,5.094,1870,5.616,1871,3.757,1872,5.094,1873,3.757,1874,3.757,1875,3.757,1876,3.757,1877,5.094,1878,3.757,1879,3.757,1880,3.757,1881,3.757,1882,3.757,1883,3.757]],["title/modules/UiCardModule.html",[235,1.873,992,2.691]],["body/modules/UiCardModule.html",[3,0.161,4,0.161,5,0.161,20,0.012,22,0.44,29,0.194,47,0.009,48,0.009,128,0.998,150,1.029,179,2.371,219,3.772,237,2.162,238,2.806,242,3.018,243,2.408,244,2.162,246,3.399,247,3.399,248,3.018,249,3.135,250,2.408,252,3.018,547,3.46,549,4.272,603,5.843,612,4.272,628,5.843,992,5.495,1884,4.713,1885,4.713,1886,4.713,1887,5.383,1888,5.383,1889,5.383,1890,5.383,1891,5.383,1892,5.383]],["title/dependencies.html",[238,2.095,1893,3.058]],["body/dependencies.html",[20,0.012,34,1.941,47,0.009,48,0.009,128,1.058,146,2.874,207,2.874,238,2.372,250,2.552,308,2.552,356,2.874,357,1.431,358,3.294,380,3,448,2.459,494,6.122,495,5.549,554,3.468,802,4.527,1320,4.178,1894,5.704,1895,8.534,1896,5.704,1897,5.704,1898,5.704,1899,5.704,1900,5.704,1901,7.882,1902,5.704,1903,5.704,1904,5.704,1905,5.704,1906,5.704,1907,5.704,1908,5.704,1909,5.704,1910,5.704,1911,5.704,1912,5.704,1913,5.704,1914,5.704,1915,5.704]],["title/miscellaneous/enumerations.html",[1916,2.245,1917,4.411]],["body/miscellaneous/enumerations.html",[6,2.951,13,0.237,20,0.012,21,3.317,47,0.007,48,0.007,61,1.82,142,2.98,258,2.6,259,4.096,271,3.527,281,2.086,283,2.469,311,2.496,345,2.715,461,2.399,575,2.867,738,4.519,739,4.096,742,4.096,747,4.519,757,5.272,761,4.519,786,3.317,795,3.993,934,3.78,969,4.519,972,6.083,974,4.519,1116,4.519,1146,4.096,1296,4.096,1462,3.163,1464,4.519,1468,4.096,1710,4.519,1916,2.322,1917,3.163,1918,3.163,1919,3.163,1920,5.213,1921,5.161,1922,4.096,1923,4.096,1924,3.163,1925,3.612,1926,4.519,1927,3.612,1928,5.161,1929,5.161,1930,5.161,1931,3.612,1932,3.612,1933,5.161,1934,3.612,1935,5.161,1936,5.161,1937,5.161,1938,3.163,1939,5.161,1940,5.161,1941,5.161,1942,5.161,1943,5.161,1944,5.161,1945,5.161,1946,3.612,1947,3.612,1948,3.612,1949,5.161,1950,3.612,1951,3.612,1952,3.612,1953,3.612,1954,5.161,1955,5.161,1956,5.161,1957,5.161,1958,5.161,1959,2.867,1960,5.161,1961,3.163,1962,5.161,1963,5.161,1964,3.612,1965,3.612,1966,3.612,1967,3.612,1968,3.612,1969,3.612,1970,3.612,1971,3.612,1972,5.161,1973,5.161,1974,3.612,1975,3.612,1976,3.612,1977,5.161,1978,3.612,1979,3.612,1980,3.612,1981,3.612,1982,3.612,1983,3.612,1984,5.161,1985,3.612,1986,6.568,1987,3.612,1988,3.612,1989,3.612,1990,3.612,1991,2.867,1992,5.161,1993,5.161,1994,5.161,1995,5.161,1996,5.161,1997,5.161,1998,5.161,1999,5.161,2000,5.161,2001,5.161,2002,5.161,2003,5.161]],["title/miscellaneous/functions.html",[1916,2.245,2004,4.411]],["body/miscellaneous/functions.html",[1,2.492,6,3.007,7,2.7,13,0.223,15,1.723,16,1.996,18,1.283,19,0.642,20,0.012,24,2.187,42,2.979,43,4.219,47,0.007,48,0.007,102,2.497,103,1.689,106,3.05,148,2.566,253,4.367,254,2.7,255,4.304,256,4.68,257,3.62,258,3.999,260,4.119,265,2.326,278,2.979,287,4.328,291,2.979,295,2.979,311,0.962,452,2.657,543,2.7,545,2.979,555,3.923,622,2.187,730,4.107,731,2.7,732,4.328,733,4.328,735,4.328,736,4.328,737,4.328,739,3.923,741,2.7,742,3.923,746,4.328,753,2.979,760,4.328,765,2.979,783,3.539,786,3.178,867,4.328,868,4.328,903,2.326,1209,4.264,1294,2.492,1295,2.7,1300,2.979,1386,5.097,1397,5.097,1704,2.7,1705,2.979,1709,2.7,1714,2.979,1916,2.187,1918,2.979,1919,5.594,1920,5.071,1922,5.071,1923,3.923,1924,2.979,2004,2.979,2005,4.943,2006,4.943,2007,4.943,2008,4.943,2009,5.822,2010,4.943,2011,4.943,2012,4.943,2013,3.403,2014,4.943,2015,4.943,2016,4.943,2017,3.403,2018,4.943,2019,3.403,2020,4.943,2021,4.943,2022,5.822,2023,3.403,2024,7.63,2025,3.403,2026,3.403,2027,3.403,2028,3.403,2029,3.403,2030,3.403,2031,3.403,2032,3.403,2033,3.403,2034,3.403,2035,3.403,2036,3.403,2037,3.403]],["title/index.html",[13,0.229,2038,2.772,2039,2.772]],["body/index.html",[20,0.011,47,0.01,48,0.01,60,3.263,429,3.565,488,5.14,2040,6.477,2041,6.477,2042,6.477,2043,6.477,2044,6.477,2045,6.477,2046,6.477,2047,6.477,2048,6.477,2049,6.477,2050,6.477,2051,5.671,2052,6.477]],["title/license.html",[2038,2.772,2039,2.772,2053,2.772]],["body/license.html",[9,1.863,20,0.009,47,0.009,48,0.009,190,3.435,244,2.198,655,4.009,795,3.328,2053,4.344,2054,4.793,2055,7.424,2056,5.474,2057,5.474,2058,5.474,2059,5.474,2060,5.474,2061,6.817,2062,5.474,2063,5.474,2064,5.474,2065,5.474,2066,5.474,2067,5.474,2068,6.817,2069,8.424,2070,5.474,2071,5.474,2072,5.474,2073,5.474,2074,7.424,2075,5.474,2076,6.817,2077,5.474,2078,5.474,2079,5.474,2080,5.474,2081,5.474,2082,5.474,2083,5.474,2084,5.474,2085,5.474,2086,6.817,2087,5.474,2088,5.474,2089,5.474,2090,5.474,2091,5.474,2092,5.474,2093,6.817,2094,6.817,2095,5.474,2096,5.474,2097,5.474,2098,5.474,2099,5.474,2100,5.474,2101,5.474,2102,5.474,2103,5.474,2104,5.474,2105,5.474,2106,5.474,2107,5.474,2108,5.474,2109,5.474,2110,5.474,2111,5.474,2112,5.474,2113,5.474,2114,5.474,2115,5.474,2116,5.474,2117,5.474,2118,5.474,2119,5.474,2120,5.474,2121,5.474,2122,5.474]],["title/modules.html",[237,2.298]],["body/modules.html",[20,0.009,47,0.009,48,0.009,181,4.224,236,3.942,237,2.316,483,4.224,489,3.942,490,3.942,495,6.869,525,3.942,530,3.942,531,3.942,532,3.942,533,3.942,534,3.942,603,3.942,628,3.942,992,3.708,1366,4.577,2123,8.655,2124,8.655,2125,8.681,2126,5.768]],["title/overview.html",[2127,5.01]],["body/overview.html",[2,0.718,20,0.012,47,0.007,48,0.007,50,3.466,51,1.835,89,3.493,91,3.678,93,3.678,95,3.889,97,3.889,213,3.466,215,3.466,217,3.466,219,2.812,221,3.466,223,3.466,225,3.466,227,3.466,229,3.466,231,3.605,236,4.952,237,1.463,238,2.159,239,3.19,240,3.19,241,3.19,242,2.323,243,1.63,244,1.463,298,1.414,483,5.831,484,3.19,485,3.19,486,3.19,487,3.19,488,4.801,489,5.728,490,4.952,525,5.784,526,3.19,527,3.19,528,3.19,529,3.19,530,4.952,531,5.21,532,4.952,533,4.952,534,5.21,603,5.378,604,3.19,605,3.19,606,3.19,628,5.378,629,3.19,630,3.19,631,3.19,665,3.19,666,3.19,667,4.135,668,3.889,669,4.135,796,3.19,797,3.19,798,3.19,988,3.19,989,3.19,990,3.19,991,3.19,992,5.169,1369,3.19,1371,3.19,1640,3.19,1641,3.19,1642,3.19,1797,3.19,1798,3.19,1799,3.19,1802,3.19,1804,3.19,1805,3.19,1884,3.19,1885,3.19,1886,3.19,2127,3.19,2128,3.643,2129,3.643,2130,3.643,2131,3.643]],["title/properties.html",[14,0.461,1893,3.058]],["body/properties.html",[14,0.613,20,0.011,47,0.01,48,0.01,285,4.071,2051,5.862,2053,5.313,2054,5.862,2132,6.695]],["title/todo.html",[1829,2.772,2038,2.772,2039,2.772]],["body/todo.html",[6,2.525,7,1.596,19,0.566,20,0.009,34,1.12,35,1.12,36,1.156,37,1.931,38,4.141,39,4.071,40,3.48,41,4.281,44,1.859,45,0.475,47,0.004,48,0.004,56,3.038,57,3.655,61,1.013,134,1.317,177,1.751,232,2.653,244,0.808,254,1.596,276,3.895,277,3.895,281,1.161,299,1.643,300,3.874,301,3.664,302,3.758,332,2.416,345,1.058,442,2.079,455,2.537,456,2.654,543,1.596,645,5.583,646,5.583,674,1.223,680,5.146,684,1.223,703,2.932,731,1.596,794,1.761,795,1.223,803,1.293,996,5.441,1078,2.88,1079,1.761,1295,1.596,1301,1.293,1374,1.761,1460,6.415,1468,1.596,1704,1.596,1709,1.596,1808,3.1,1829,1.596,1830,1.761,1831,1.761,1959,1.596,1991,1.596,2133,2.011,2134,4.823,2135,7.327,2136,2.011,2137,7.327,2138,2.011,2139,2.011,2140,2.011,2141,2.011,2142,2.011,2143,2.011,2144,7.229,2145,2.011,2146,2.011,2147,2.011,2148,2.011,2149,2.011,2150,2.011,2151,2.011,2152,2.011,2153,2.011,2154,2.011,2155,2.011,2156,2.011,2157,2.011,2158,2.011,2159,3.289,2160,3.289,2161,2.011,2162,6.288,2163,6.288,2164,6.288,2165,2.011,2166,3.289,2167,3.289,2168,2.011,2169,2.011,2170,2.011,2171,2.011,2172,8.09,2173,2.011,2174,2.011,2175,2.011,2176,4.823,2177,7.795,2178,2.011,2179,7.414,2180,2.011,2181,2.011,2182,3.289,2183,2.011,2184,2.011,2185,2.011,2186,2.011,2187,3.289,2188,2.011,2189,2.011,2190,2.011,2191,2.011,2192,2.011,2193,2.011,2194,2.011,2195,2.011,2196,2.011,2197,2.011,2198,2.011,2199,3.289,2200,2.011,2201,2.011,2202,2.011,2203,2.011,2204,2.011,2205,2.011,2206,2.011,2207,2.011,2208,2.011,2209,2.011,2210,2.011,2211,2.011,2212,2.011,2213,3.289,2214,3.289,2215,2.011,2216,2.011,2217,2.011,2218,2.011,2219,2.011,2220,2.011,2221,2.011,2222,2.011,2223,2.011,2224,2.011,2225,2.011,2226,2.011,2227,2.011,2228,2.011,2229,2.011,2230,2.011,2231,2.011,2232,4.174,2233,2.011,2234,2.011,2235,2.011,2236,2.011]],["title/miscellaneous/typealiases.html",[1916,2.245,2237,5.038]],["body/miscellaneous/typealiases.html",[6,3.155,13,0.411,19,0.478,20,0.011,47,0.01,48,0.01,271,4.277,741,5.867,783,4.495,1029,5.867,1145,5.867,1209,5.763,1916,4.022,1920,4.966,1922,5.867,1923,4.966,1926,5.478,1938,5.478,1959,4.966,1961,5.478,1991,4.966,2238,6.257]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":285,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/StockPilesCardsEntity.html":{},"properties.html":{}}}],["0.11.4",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":600,"title":{},"body":{"components/CardBackComponent.html":{}}}],["0.2.0",{"_index":2132,"title":{},"body":{"properties.html":{}}}],["0.3em",{"_index":584,"title":{},"body":{"components/CardBackComponent.html":{}}}],["0.5em",{"_index":601,"title":{},"body":{"components/CardBackComponent.html":{}}}],["1",{"_index":281,"title":{"interfaces/Chainable-1.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["100",{"_index":569,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["103",{"_index":2183,"title":{},"body":{"todo.html":{}}}],["1054",{"_index":2146,"title":{},"body":{"todo.html":{}}}],["106",{"_index":2209,"title":{},"body":{"todo.html":{}}}],["1076",{"_index":2206,"title":{},"body":{"todo.html":{}}}],["11",{"_index":2129,"title":{},"body":{"overview.html":{}}}],["111",{"_index":2169,"title":{},"body":{"todo.html":{}}}],["1134",{"_index":2207,"title":{},"body":{"todo.html":{}}}],["116",{"_index":2174,"title":{},"body":{"todo.html":{}}}],["1171",{"_index":2147,"title":{},"body":{"todo.html":{}}}],["120",{"_index":2175,"title":{},"body":{"todo.html":{}}}],["1216",{"_index":2148,"title":{},"body":{"todo.html":{}}}],["125",{"_index":2184,"title":{},"body":{"todo.html":{}}}],["129",{"_index":2185,"title":{},"body":{"todo.html":{}}}],["1321",{"_index":2149,"title":{},"body":{"todo.html":{}}}],["1362",{"_index":2150,"title":{},"body":{"todo.html":{}}}],["138",{"_index":2215,"title":{},"body":{"todo.html":{}}}],["14",{"_index":2128,"title":{},"body":{"overview.html":{}}}],["14.0.1",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["14.0.4",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["14.4.0",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["1450",{"_index":2151,"title":{},"body":{"todo.html":{}}}],["15",{"_index":586,"title":{},"body":{"components/CardBackComponent.html":{}}}],["155",{"_index":2216,"title":{},"body":{"todo.html":{}}}],["1552",{"_index":2152,"title":{},"body":{"todo.html":{}}}],["159",{"_index":2234,"title":{},"body":{"todo.html":{}}}],["1603",{"_index":2153,"title":{},"body":{"todo.html":{}}}],["161",{"_index":2235,"title":{},"body":{"todo.html":{}}}],["165",{"_index":2217,"title":{},"body":{"todo.html":{}}}],["17",{"_index":2130,"title":{},"body":{"overview.html":{}}}],["1707",{"_index":2154,"title":{},"body":{"todo.html":{}}}],["175",{"_index":2218,"title":{},"body":{"todo.html":{}}}],["1755",{"_index":2155,"title":{},"body":{"todo.html":{}}}],["1803",{"_index":2156,"title":{},"body":{"todo.html":{}}}],["185",{"_index":2219,"title":{},"body":{"todo.html":{}}}],["1851",{"_index":2157,"title":{},"body":{"todo.html":{}}}],["19",{"_index":2171,"title":{},"body":{"todo.html":{}}}],["191",{"_index":2186,"title":{},"body":{"todo.html":{}}}],["195",{"_index":2187,"title":{},"body":{"todo.html":{}}}],["1px",{"_index":594,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{}}}],["2",{"_index":283,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardFrontComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":596,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["2021",{"_index":2057,"title":{},"body":{"license.html":{}}}],["21",{"_index":2176,"title":{},"body":{"todo.html":{}}}],["220",{"_index":2210,"title":{},"body":{"todo.html":{}}}],["229",{"_index":2188,"title":{},"body":{"todo.html":{}}}],["233",{"_index":2189,"title":{},"body":{"todo.html":{}}}],["234",{"_index":2220,"title":{},"body":{"todo.html":{}}}],["24",{"_index":2167,"title":{},"body":{"todo.html":{}}}],["243",{"_index":2211,"title":{},"body":{"todo.html":{}}}],["258",{"_index":2190,"title":{},"body":{"todo.html":{}}}],["262",{"_index":2191,"title":{},"body":{"todo.html":{}}}],["294",{"_index":2192,"title":{},"body":{"todo.html":{}}}],["298",{"_index":2193,"title":{},"body":{"todo.html":{}}}],["2px",{"_index":588,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["2rem",{"_index":205,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["3",{"_index":293,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["30",{"_index":625,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["32",{"_index":2229,"title":{},"body":{"todo.html":{}}}],["332",{"_index":2236,"title":{},"body":{"todo.html":{}}}],["333",{"_index":2194,"title":{},"body":{"todo.html":{}}}],["337",{"_index":2195,"title":{},"body":{"todo.html":{}}}],["37",{"_index":2170,"title":{},"body":{"todo.html":{}}}],["371",{"_index":2196,"title":{},"body":{"todo.html":{}}}],["375",{"_index":2197,"title":{},"body":{"todo.html":{}}}],["379",{"_index":2221,"title":{},"body":{"todo.html":{}}}],["39",{"_index":2131,"title":{},"body":{"overview.html":{}}}],["391",{"_index":2222,"title":{},"body":{"todo.html":{}}}],["394",{"_index":2212,"title":{},"body":{"todo.html":{}}}],["395",{"_index":2223,"title":{},"body":{"todo.html":{}}}],["400",{"_index":2198,"title":{},"body":{"todo.html":{}}}],["404",{"_index":2199,"title":{},"body":{"todo.html":{}}}],["413",{"_index":2224,"title":{},"body":{"todo.html":{}}}],["424",{"_index":2225,"title":{},"body":{"todo.html":{}}}],["431",{"_index":2226,"title":{},"body":{"todo.html":{}}}],["443",{"_index":2227,"title":{},"body":{"todo.html":{}}}],["452",{"_index":2228,"title":{},"body":{"todo.html":{}}}],["49",{"_index":2230,"title":{},"body":{"todo.html":{}}}],["4em",{"_index":583,"title":{},"body":{"components/CardBackComponent.html":{}}}],["5",{"_index":2166,"title":{},"body":{"todo.html":{}}}],["50",{"_index":579,"title":{},"body":{"components/CardBackComponent.html":{}}}],["53",{"_index":2178,"title":{},"body":{"todo.html":{}}}],["6.1.1",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["6.4.22",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2231,"title":{},"body":{"todo.html":{}}}],["617",{"_index":2136,"title":{},"body":{"todo.html":{}}}],["66",{"_index":2180,"title":{},"body":{"todo.html":{}}}],["7",{"_index":1022,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["71",{"_index":2140,"title":{},"body":{"todo.html":{}}}],["73",{"_index":2213,"title":{},"body":{"todo.html":{}}}],["74",{"_index":2181,"title":{},"body":{"todo.html":{}}}],["8.3.2",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["812",{"_index":2161,"title":{},"body":{"todo.html":{}}}],["818",{"_index":2165,"title":{},"body":{"todo.html":{}}}],["82",{"_index":2173,"title":{},"body":{"todo.html":{}}}],["85",{"_index":2214,"title":{},"body":{"todo.html":{}}}],["87",{"_index":2208,"title":{},"body":{"todo.html":{}}}],["90",{"_index":621,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["913",{"_index":2200,"title":{},"body":{"todo.html":{}}}],["917",{"_index":2201,"title":{},"body":{"todo.html":{}}}],["935",{"_index":2143,"title":{},"body":{"todo.html":{}}}],["95",{"_index":2168,"title":{},"body":{"todo.html":{}}}],["951",{"_index":2202,"title":{},"body":{"todo.html":{}}}],["955",{"_index":2203,"title":{},"body":{"todo.html":{}}}],["980",{"_index":2204,"title":{},"body":{"todo.html":{}}}],["984",{"_index":2205,"title":{},"body":{"todo.html":{}}}],["986",{"_index":2145,"title":{},"body":{"todo.html":{}}}],["99",{"_index":2182,"title":{},"body":{"todo.html":{}}}],["_action",{"_index":331,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["above",{"_index":2092,"title":{},"body":{"license.html":{}}}],["access",{"_index":134,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["action.cardid",{"_index":1122,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.cards.map",{"_index":1826,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["action.cardtype",{"_index":1121,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.die",{"_index":1101,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.id",{"_index":1120,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["action.name",{"_index":1639,"title":{},"body":{"components/HandComponent.html":{}}}],["action.pileid",{"_index":342,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["action_card_interface_name",{"_index":31,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["actioncard",{"_index":1,"title":{"interfaces/ActionCard.html":{}},"body":{"interfaces/ActionCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["actioncards",{"_index":1530,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["actioncards.get(cardid",{"_index":1636,"title":{},"body":{"components/HandComponent.html":{}}}],["actioncards.get(handcard.cardid",{"_index":1606,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["actionname",{"_index":21,"title":{},"body":{"interfaces/ActionCard.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actions",{"_index":61,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["actions'},{'name",{"_index":212,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["actions.component.css",{"_index":63,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions.component.html",{"_index":65,"title":{},"body":{"components/ActionsComponent.html":{}}}],["actions/actions.component",{"_index":251,"title":{},"body":{"modules/ActionsModule.html":{}}}],["actions/actions.module",{"_index":537,"title":{},"body":{"modules/BoardModule.html":{}}}],["actionscomponent",{"_index":50,"title":{"components/ActionsComponent.html":{}},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["actionsmodule",{"_index":236,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["actual_component",{"_index":234,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["addcard",{"_index":804,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["addcards",{"_index":1646,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["addcardstohand",{"_index":1663,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstohand(handid",{"_index":1666,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["addcardstostockpilebottom",{"_index":1856,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardstostockpilebottom(pileid",{"_index":1858,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["addcardtodiscardpile",{"_index":830,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["addcardtodiscardpile(card",{"_index":832,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["agglomeration",{"_index":176,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomeration_card_interface_name",{"_index":137,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["agglomeration_piles_cards_feature_key",{"_index":443,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationcard",{"_index":253,"title":{"interfaces/AgglomerationCard.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["agglomerationcard.color",{"_index":386,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationcard.type",{"_index":385,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationcards",{"_index":373,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DomainComponent.html":{}}}],["agglomerationcards.get(cardid",{"_index":957,"title":{},"body":{"components/DomainComponent.html":{}}}],["agglomerationpilecard",{"_index":1576,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.cardid",{"_index":1584,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.id",{"_index":1581,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilecard.pileid",{"_index":1585,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["agglomerationpilescards",{"_index":94,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/GameRulesService.html":{}}}],["agglomerationpilescardsactions",{"_index":362,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.initagglomerationnewgame",{"_index":438,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":439,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.loadagglomerationpilescardsfailure",{"_index":334,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.loadagglomerationpilescardssuccess",{"_index":329,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.removeagglomerationpilecard",{"_index":440,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.selectagglomerationpilecard",{"_index":350,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.selectfirstcardfromagglomerationpile",{"_index":337,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsactions.setagglomerationpilescardserror",{"_index":353,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsactions.setagglomerationpilescardsinitialized",{"_index":315,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter",{"_index":457,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.getinitialstate",{"_index":459,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.removeone(id",{"_index":470,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsadapter.setall(agglomerationpilescards",{"_index":467,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardseffects",{"_index":297,"title":{"injectables/AgglomerationPilesCardsEffects.html":{}},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"modules/DataAccessGameModule.html":{}}}],["agglomerationpilescardsentity",{"_index":130,"title":{"interfaces/AgglomerationPilesCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsfacade",{"_index":95,"title":{"injectables/AgglomerationPilesCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["agglomerationpilescardsfeature",{"_index":365,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardspartialstate",{"_index":441,"title":{"interfaces/AgglomerationPilesCardsPartialState.html":{}},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsreducer",{"_index":464,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsselectors",{"_index":367,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile",{"_index":418,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile(id_agglomeration_road",{"_index":420,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getcardpivotsforpile(id_agglomeration_town",{"_index":422,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["agglomerationpilescardsselectors.getfirstcardpivotforpile",{"_index":341,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["agglomerationpilescardsstate",{"_index":444,"title":{"interfaces/AgglomerationPilesCardsState.html":{}},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["agglomerationpilescardsstore",{"_index":307,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["agglomerationtype",{"_index":259,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["agglomerationtype.hamlet",{"_index":290,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationtype.road",{"_index":284,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["agglomerationtype.town",{"_index":294,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["alexios",{"_index":1958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2238,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":576,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["allagglomerationpilescards",{"_index":392,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["alldiscardpilecards",{"_index":827,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldiscardpilecardsreverse",{"_index":828,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["alldomainscards",{"_index":1168,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["alleventspilecards",{"_index":1329,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["allhamletpivots",{"_index":393,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["allhandscards",{"_index":1661,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["alllandspilecards",{"_index":1730,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["allroadpivots",{"_index":394,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["allstockpilescards",{"_index":1854,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["alltownpivots",{"_index":395,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["altair",{"_index":1952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altaïr",{"_index":1953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":2084,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["angular/cli@14.0.5",{"_index":2046,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":250,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":802,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["app.component",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":213,"title":{"components/AppComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["appmodule",{"_index":483,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/taormina",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Chainable.html":{}}}],["apps/ui",{"_index":664,"title":{},"body":{"interfaces/Chainable-1.html":{}}}],["arising",{"_index":2120,"title":{},"body":{"license.html":{}}}],["array",{"_index":554,"title":{},"body":{"components/CardBackComponent.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["array.from(actioncards.values",{"_index":1846,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["array.from(agglomerationcards.values",{"_index":384,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["array.from(developmentcards.values",{"_index":1847,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle",{"_index":1319,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["arrayshuffle(array.from(eventcards.keys()).slice(1",{"_index":1324,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["arrayshuffle(array.from(landcards.keys",{"_index":1728,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["assertion",{"_index":2164,"title":{},"body":{"todo.html":{}}}],["associated",{"_index":2070,"title":{},"body":{"license.html":{}}}],["async",{"_index":968,"title":{},"body":{"components/DomainComponent.html":{}}}],["atmax",{"_index":1139,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["auspicious",{"_index":1970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auspiciousyear",{"_index":1462,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["authors",{"_index":2110,"title":{},"body":{"license.html":{}}}],["available",{"_index":181,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"modules.html":{}}}],["available_agglomeration_slot",{"_index":138,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_development_slot",{"_index":139,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{}}}],["available_land_slot",{"_index":140,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["availableagglomerationslot",{"_index":273,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["availablecol",{"_index":1590,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["availabledevelopmentslot",{"_index":744,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["availablelandslot",{"_index":1712,"title":{},"body":{"interfaces/LandCard.html":{}}}],["availableresources",{"_index":1028,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["back",{"_index":551,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"injectables/GameRulesService.html":{}}}],["back'},{'name",{"_index":218,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["back.component",{"_index":608,"title":{},"body":{"modules/CardBackModule.html":{}}}],["back.component.css",{"_index":552,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.html",{"_index":553,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts",{"_index":550,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:10",{"_index":561,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:11",{"_index":560,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:13",{"_index":562,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.component.ts:14",{"_index":563,"title":{},"body":{"components/CardBackComponent.html":{}}}],["back.module",{"_index":1891,"title":{},"body":{"modules/UiCardModule.html":{}}}],["back.module.ts",{"_index":607,"title":{},"body":{"modules/CardBackModule.html":{}}}],["back/card",{"_index":549,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"modules/UiCardModule.html":{}}}],["background",{"_index":571,"title":{},"body":{"components/CardBackComponent.html":{}}}],["belowmax",{"_index":1138,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["beyond",{"_index":1075,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["black",{"_index":593,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["blue",{"_index":1963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bluegoldminesandpastures",{"_index":1020,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["blueresourcecount",{"_index":1018,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["board",{"_index":514,"title":{},"body":{"components/BoardComponent.html":{}}}],["board'},{'name",{"_index":216,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["board.component.css",{"_index":515,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":516,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.component",{"_index":536,"title":{},"body":{"modules/BoardModule.html":{}}}],["board/board.module",{"_index":1373,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["boardcomponent",{"_index":215,"title":{"components/BoardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["boardmodule",{"_index":525,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":452,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":590,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["bottom",{"_index":582,"title":{},"body":{"components/CardBackComponent.html":{}}}],["box",{"_index":597,"title":{},"body":{"components/CardBackComponent.html":{}}}],["break",{"_index":1849,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["brickyard",{"_index":1939,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bridge",{"_index":1948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2125,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["bruneton",{"_index":2060,"title":{},"body":{"license.html":{}}}],["building",{"_index":747,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["building.givesknowledge",{"_index":750,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.noduplicate",{"_index":751,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.tradepoints",{"_index":749,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["building.victorypoints",{"_index":752,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["buildingname",{"_index":739,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["buy",{"_index":175,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buyagglomeration",{"_index":67,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydevelopment",{"_index":68,"title":{},"body":{"components/ActionsComponent.html":{}}}],["buydisabled",{"_index":69,"title":{},"body":{"components/ActionsComponent.html":{}}}],["c",{"_index":2056,"title":{},"body":{"license.html":{}}}],["can't",{"_index":346,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["canprint",{"_index":265,"title":{"interfaces/CanPrint.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["card",{"_index":179,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["card'},{'name",{"_index":220,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["card.cardid",{"_index":1567,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.cardtype",{"_index":1566,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["card.component.html",{"_index":610,"title":{},"body":{"components/CardComponent.html":{}}}],["card.id",{"_index":809,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card.module.ts",{"_index":1889,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card.type",{"_index":808,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["card/card.component",{"_index":1890,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card/src/lib/card",{"_index":548,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{}}}],["card/src/lib/card/card.component.ts",{"_index":609,"title":{},"body":{"components/CardComponent.html":{}}}],["card/src/lib/ui",{"_index":1888,"title":{},"body":{"modules/UiCardModule.html":{}}}],["card0",{"_index":1277,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.col",{"_index":1285,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.id",{"_index":1289,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card0.row",{"_index":1286,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1",{"_index":1279,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.col",{"_index":1282,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.id",{"_index":1290,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["card1.row",{"_index":1283,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["cardbackcomponent",{"_index":217,"title":{"components/CardBackComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["cardbackmodule",{"_index":603,"title":{"modules/CardBackModule.html":{}},"body":{"modules/CardBackModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardcomponent",{"_index":219,"title":{"components/CardComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["cardfrontcomponent",{"_index":221,"title":{"components/CardFrontComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["cardfrontmodule",{"_index":628,"title":{"modules/CardFrontModule.html":{}},"body":{"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardid",{"_index":371,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards",{"_index":10,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandCard.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.actions",{"_index":363,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.effects",{"_index":675,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.effects.spec.ts",{"_index":2172,"title":{},"body":{"todo.html":{}}}],["cards.effects.ts",{"_index":302,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["cards.effects.ts:11",{"_index":1720,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:12",{"_index":817,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:139",{"_index":1117,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:15",{"_index":317,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:177",{"_index":1126,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:19",{"_index":1658,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:20",{"_index":1819,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:212",{"_index":1130,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:22",{"_index":1724,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:23",{"_index":821,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:235",{"_index":1072,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:26",{"_index":335,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:31",{"_index":1823,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:317",{"_index":1081,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:32",{"_index":1109,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:348",{"_index":1123,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:36",{"_index":1652,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:364",{"_index":1037,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:381",{"_index":1031,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:39",{"_index":1716,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["cards.effects.ts:42",{"_index":813,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:422",{"_index":1007,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:429",{"_index":1011,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:43",{"_index":1113,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:444",{"_index":1127,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:46",{"_index":1647,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["cards.effects.ts:488",{"_index":1009,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:49",{"_index":355,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:50",{"_index":1837,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:51",{"_index":1304,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["cards.effects.ts:52",{"_index":805,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["cards.effects.ts:62",{"_index":1105,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.effects.ts:82",{"_index":1815,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:85",{"_index":309,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["cards.effects.ts:94",{"_index":1811,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["cards.effects.ts:96",{"_index":1097,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["cards.facade",{"_index":676,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["cards.facade.ts",{"_index":391,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:104",{"_index":1188,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:121",{"_index":1186,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:127",{"_index":1216,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:131",{"_index":1215,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:135",{"_index":1198,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:139",{"_index":1194,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:14",{"_index":1339,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:143",{"_index":1200,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:147",{"_index":1196,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:151",{"_index":1202,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:159",{"_index":1190,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:165",{"_index":1204,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:17",{"_index":1337,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:171",{"_index":1192,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:177",{"_index":1207,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:18",{"_index":841,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:19",{"_index":425,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:20",{"_index":1223,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:21",{"_index":837,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:22",{"_index":416,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:23",{"_index":1221,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:24",{"_index":839,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:25",{"_index":436,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["cards.facade.ts:26",{"_index":1224,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:27",{"_index":843,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:28",{"_index":421,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:29",{"_index":831,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:31",{"_index":419,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["cards.facade.ts:32",{"_index":1333,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:36",{"_index":423,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:38",{"_index":401,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:39",{"_index":834,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:40",{"_index":1334,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:42",{"_index":1210,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:43",{"_index":835,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:44",{"_index":1335,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:46",{"_index":1211,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["cards.facade.ts:48",{"_index":402,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["cards.facade.ts:49",{"_index":833,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["cards.facade.ts:50",{"_index":1218,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:52",{"_index":1668,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:54",{"_index":409,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:56",{"_index":1669,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:58",{"_index":1859,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["cards.facade.ts:60",{"_index":411,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/HandsCardsFacade.html":{}}}],["cards.facade.ts:66",{"_index":413,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:72",{"_index":1219,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:76",{"_index":1205,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:80",{"_index":1217,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:86",{"_index":1185,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.facade.ts:90",{"_index":1213,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["cards.map((card",{"_index":1649,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cards.models",{"_index":364,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["cards.models.ts",{"_index":369,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["cards.reducer",{"_index":366,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.reducer.ts",{"_index":442,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cards.selectors",{"_index":368,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["cards.selectors.ts",{"_index":2177,"title":{},"body":{"todo.html":{}}}],["cards.ts",{"_index":2160,"title":{},"body":{"todo.html":{}}}],["cards/agglomeration",{"_index":301,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/DataAccessGameModule.html":{},"todo.html":{}}}],["cards/discard",{"_index":674,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["cards/domains",{"_index":680,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["cards/events",{"_index":684,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["cards/hands",{"_index":695,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["cards/lands",{"_index":699,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["cards/stock",{"_index":703,"title":{},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["cardscount",{"_index":1483,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardsvictorypoints",{"_index":1550,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["cardtype",{"_index":826,"title":{},"body":{"interfaces/DiscardPileCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["catcherror",{"_index":359,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["catcherror((error",{"_index":352,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["celebration",{"_index":969,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["celebrationpoints",{"_index":732,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":987,"title":{},"body":{"components/DomainComponent.html":{}}}],["center",{"_index":575,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"miscellaneous/enumerations.html":{}}}],["chainable",{"_index":634,"title":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["change",{"_index":1389,"title":{},"body":{"injectables/GameEffects.html":{}}}],["changes",{"_index":1027,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["charge",{"_index":2065,"title":{},"body":{"license.html":{}}}],["child",{"_index":652,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["claim",{"_index":2113,"title":{},"body":{"license.html":{}}}],["class",{"_index":150,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"modules/UiCardModule.html":{}}}],["clay",{"_index":1998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["claypit",{"_index":1992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clear",{"_index":198,"title":{},"body":{"components/ActionsComponent.html":{}}}],["cleardomaincardselection",{"_index":70,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["cluster_actionsmodule",{"_index":239,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declarations",{"_index":240,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_exports",{"_index":241,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":526,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":527,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_exports",{"_index":528,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":529,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule",{"_index":604,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule_declarations",{"_index":605,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardbackmodule_exports",{"_index":606,"title":{},"body":{"modules/CardBackModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule",{"_index":629,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule_declarations",{"_index":631,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_cardfrontmodule_exports",{"_index":630,"title":{},"body":{"modules/CardFrontModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule",{"_index":665,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dataaccessgamemodule_providers",{"_index":666,"title":{},"body":{"modules/DataAccessGameModule.html":{},"overview.html":{}}}],["cluster_dicemodule",{"_index":796,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_declarations",{"_index":797,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_dicemodule_exports",{"_index":798,"title":{},"body":{"modules/DiceModule.html":{},"overview.html":{}}}],["cluster_domainmodule",{"_index":988,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_declarations",{"_index":991,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_exports",{"_index":989,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_domainmodule_imports",{"_index":990,"title":{},"body":{"modules/DomainModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule",{"_index":1369,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_exports",{"_index":1371,"title":{},"body":{"modules/FeatureGameModule.html":{},"overview.html":{}}}],["cluster_featuregamemodule_imports",{"_index":1370,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["cluster_handmodule",{"_index":1640,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_declarations",{"_index":1641,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_handmodule_exports",{"_index":1642,"title":{},"body":{"modules/HandModule.html":{},"overview.html":{}}}],["cluster_phasesmodule",{"_index":1797,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_declarations",{"_index":1799,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_exports",{"_index":1798,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule",{"_index":1802,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_declarations",{"_index":1804,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_exports",{"_index":1805,"title":{},"body":{"modules/PilesModule.html":{},"overview.html":{}}}],["cluster_pilesmodule_imports",{"_index":1803,"title":{},"body":{"modules/PilesModule.html":{}}}],["cluster_uicardmodule",{"_index":1884,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_declarations",{"_index":1886,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_exports",{"_index":1885,"title":{},"body":{"modules/UiCardModule.html":{},"overview.html":{}}}],["cluster_uicardmodule_imports",{"_index":1887,"title":{},"body":{"modules/UiCardModule.html":{}}}],["col",{"_index":1033,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["color",{"_index":255,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardBackComponent.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":203,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["combine",{"_index":426,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["combinelatest",{"_index":935,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["command",{"_index":648,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["commonmodule",{"_index":249,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["community",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["communitycenter",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["component",{"_index":49,"title":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["component_template",{"_index":211,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["components",{"_index":51,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":360,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["concatmap(([_action",{"_index":1040,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["concatmap((action",{"_index":338,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["conditions",{"_index":2091,"title":{},"body":{"license.html":{}}}],["connection",{"_index":2121,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":333,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["console.log('custom",{"_index":650,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["constants",{"_index":377,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["constructor(actions",{"_index":306,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["constructor(domainscards",{"_index":887,"title":{},"body":{"components/DomainComponent.html":{}}}],["constructor(game",{"_index":88,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["constructor(gamerules",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(handscards",{"_index":1619,"title":{},"body":{"components/HandComponent.html":{}}}],["constructor(private",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["constructor(store",{"_index":400,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["container",{"_index":201,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["content",{"_index":574,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["contract",{"_index":2117,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2086,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2068,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2055,"title":{},"body":{"license.html":{}}}],["corepack@0.10.0",{"_index":2047,"title":{},"body":{"index.html":{}}}],["cost",{"_index":256,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":567,"title":{},"body":{"components/CardBackComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["countandsteal",{"_index":1463,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["countandstealunprotectedgoldandwool",{"_index":1170,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["countstealresources",{"_index":997,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createactioncard",{"_index":33,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["createagglomerationcard",{"_index":274,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["createagglomerationpilescardsentity",{"_index":382,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["createavailabledomaincard",{"_index":1171,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createavailabledomaincard(domainid",{"_index":1187,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["createbuilding",{"_index":746,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createbuilding(id",{"_index":2023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcard",{"_index":998,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["createdevelopmentcard",{"_index":745,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["creatediscardpilecardsentity",{"_index":824,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{}}}],["creatediscardpilecardsentity(uuidv4",{"_index":807,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["createdomain",{"_index":863,"title":{},"body":{"interfaces/Domain.html":{}}}],["createdomainscardsentity",{"_index":1035,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createeffect",{"_index":312,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["createentityadapter",{"_index":445,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createeventcard",{"_index":1299,"title":{},"body":{"interfaces/EventCard.html":{}}}],["createeventspilecardsentity",{"_index":1321,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createeventspilecardsentity(uuidv4",{"_index":1328,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["createhamlet",{"_index":287,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createhamlet(id",{"_index":2028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createhand",{"_index":1611,"title":{},"body":{"interfaces/Hand.html":{}}}],["createhandscardsentity",{"_index":1660,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{}}}],["createhandscardsentity(uuidv4",{"_index":1650,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["createinitialagglomerationpilescards",{"_index":316,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["createinitialdomainscards",{"_index":1108,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["createinitialeventspilecards",{"_index":1308,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{}}}],["createinitiallandspilecards",{"_index":1719,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["createinitialstockpilescards",{"_index":1818,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createlandcard",{"_index":1713,"title":{},"body":{"interfaces/LandCard.html":{}}}],["createlandspilecardsentity",{"_index":1727,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createlandspilecardsentity(uuidv4",{"_index":1729,"title":{},"body":{"interfaces/LandsPileCardsEntity.html":{}}}],["createreducer",{"_index":449,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["createroad",{"_index":2005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createroad(id",{"_index":278,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createselector",{"_index":430,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["createship",{"_index":2006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createship(id",{"_index":753,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createstockpilescardsentity",{"_index":1841,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["createstockpilescardsentity(uuidv4",{"_index":1813,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["createtown",{"_index":2007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtown(id",{"_index":291,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior",{"_index":760,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["createwarrior(id",{"_index":2027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":1792,"title":{},"body":{"components/PhasesComponent.html":{}}}],["custom",{"_index":321,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["cypress",{"_index":644,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":658,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add(\"drag",{"_index":653,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.add('login",{"_index":649,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":661,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["damages",{"_index":2114,"title":{},"body":{"license.html":{}}}],["data",{"_index":370,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["dataaccessgamemodule",{"_index":489,"title":{"modules/DataAccessGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"modules.html":{},"overview.html":{}}}],["deal",{"_index":2073,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2122,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":246,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["declare",{"_index":642,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["default",{"_index":310,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["defined",{"_index":100,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["dependencies",{"_index":238,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["development",{"_index":187,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["development.name",{"_index":977,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["development_card_interface_name",{"_index":141,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["developmentcard",{"_index":730,"title":{"interfaces/DevelopmentCard.html":{}},"body":{"interfaces/DevelopmentCard.html":{},"components/DomainComponent.html":{},"interfaces/EventCard.html":{},"components/HandComponent.html":{},"miscellaneous/functions.html":{}}}],["developmentcards",{"_index":932,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["developmentcards.get(cardid",{"_index":956,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["developmenttype",{"_index":738,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["developmenttype.building",{"_index":748,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.ship",{"_index":758,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["developmenttype.warrior",{"_index":762,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["devtools",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["dice",{"_index":767,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice'},{'name",{"_index":224,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["dice.component.css",{"_index":768,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice.component.html",{"_index":769,"title":{},"body":{"components/DiceComponent.html":{}}}],["dice/dice.component",{"_index":800,"title":{},"body":{"modules/DiceModule.html":{}}}],["dice/dice.module",{"_index":538,"title":{},"body":{"modules/BoardModule.html":{}}}],["dicecomponent",{"_index":223,"title":{"components/DiceComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["diceid",{"_index":1921,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dicemodule",{"_index":530,"title":{"modules/DiceModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DiceModule.html":{},"modules.html":{},"overview.html":{}}}],["dicevalue",{"_index":1209,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["die",{"_index":622,"title":{},"body":{"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["dieiconname",{"_index":617,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["different",{"_index":1054,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["directive",{"_index":209,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["directives",{"_index":233,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["disable",{"_index":35,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["discard",{"_index":823,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discard_pile_cards_feature_key",{"_index":850,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecard",{"_index":812,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecards",{"_index":816,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/GameRulesService.html":{}}}],["discardpilecardsactions",{"_index":822,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.adddiscardpilecard",{"_index":811,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":847,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsactions.loaddiscardpilecardsfailure",{"_index":820,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.loaddiscardpilecardssuccess",{"_index":819,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsactions.setdiscardpilecardsinitialized",{"_index":815,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter",{"_index":852,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.addone(discardpilecard",{"_index":860,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.getinitialstate",{"_index":854,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsadapter.setall(discardpilecards",{"_index":858,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardseffects",{"_index":672,"title":{"injectables/DiscardPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{}}}],["discardpilecardsentity",{"_index":825,"title":{"interfaces/DiscardPileCardsEntity.html":{}},"body":{"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsfacade",{"_index":667,"title":{"injectables/DiscardPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["discardpilecardsfeature",{"_index":844,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardspartialstate",{"_index":849,"title":{"interfaces/DiscardPileCardsPartialState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsreducer",{"_index":855,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["discardpilecardsselectors",{"_index":845,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["discardpilecardsstate",{"_index":851,"title":{"interfaces/DiscardPileCardsState.html":{}},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["display",{"_index":202,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["distribute",{"_index":2082,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":2071,"title":{},"body":{"license.html":{}}}],["dom",{"_index":54,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain",{"_index":186,"title":{"interfaces/Domain.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{}}}],["domain'},{'name",{"_index":226,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["domain.color",{"_index":965,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.css",{"_index":865,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain.component.html",{"_index":866,"title":{},"body":{"components/DomainComponent.html":{}}}],["domain/domain.component",{"_index":994,"title":{},"body":{"modules/DomainModule.html":{}}}],["domain/domain.module",{"_index":539,"title":{},"body":{"modules/BoardModule.html":{}}}],["domaincard",{"_index":161,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.cardid",{"_index":1603,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.cardtype",{"_index":1602,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.col",{"_index":1587,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.domainid",{"_index":955,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["domaincard.id",{"_index":1583,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard.row",{"_index":1605,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincard?.cardtype",{"_index":162,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards",{"_index":1575,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards.filter",{"_index":160,"title":{},"body":{"components/ActionsComponent.html":{}}}],["domaincards.length",{"_index":1578,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincards[0",{"_index":1579,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["domaincardtype",{"_index":1145,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"miscellaneous/typealiases.html":{}}}],["domaincolor",{"_index":258,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["domaincolor.red",{"_index":1451,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["domaincomponent",{"_index":225,"title":{"components/DomainComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["domainid",{"_index":886,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["domainmodule",{"_index":531,"title":{"modules/DomainModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DomainModule.html":{},"modules.html":{},"overview.html":{}}}],["domains",{"_index":197,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domains.get(this.domainid",{"_index":936,"title":{},"body":{"components/DomainComponent.html":{}}}],["domains_cards_feature_key",{"_index":1251,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscard.id).includes(pivotid",{"_index":960,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards",{"_index":90,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["domainscards.filter((domaincard",{"_index":954,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscards.map((domainscard",{"_index":959,"title":{},"body":{"components/DomainComponent.html":{}}}],["domainscardsactions",{"_index":1132,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.adddomaincard",{"_index":1036,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.countandstealunprotectedgoldandwool",{"_index":1238,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.createdomaincard",{"_index":1237,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresources",{"_index":1229,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1231,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.increaseavailableresourcesfordie",{"_index":1230,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.loaddomainscardsfailure",{"_index":1112,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.loaddomainscardssuccess",{"_index":1111,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.putcardinpivot",{"_index":1236,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.setdomainscardserror",{"_index":1071,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.setdomainscardsinitialized",{"_index":1107,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsactions.toggledomaincardselection",{"_index":1234,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsactions.updatedomaincard",{"_index":1080,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsactions.updatedomainscards",{"_index":1030,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsadapter",{"_index":1254,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.addone(domaincard",{"_index":1268,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.getinitialstate",{"_index":1256,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.removeone(id",{"_index":1292,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.setall(domainscards",{"_index":1261,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updatemany(updates",{"_index":1266,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsadapter.updateone(update",{"_index":1264,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardseffects",{"_index":678,"title":{"injectables/DomainsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/DomainsCardsEffects.html":{}}}],["domainscardsentity",{"_index":129,"title":{"interfaces/DomainsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsfacade",{"_index":91,"title":{"injectables/DomainsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"overview.html":{}}}],["domainscardsfeature",{"_index":1133,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardspartialstate",{"_index":1250,"title":{"interfaces/DomainsCardsPartialState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsreducer",{"_index":1257,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsselectors",{"_index":1134,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.count_1",{"_index":1090,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_2",{"_index":1092,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_3",{"_index":1094,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.count_4",{"_index":1096,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getcardsvictorypointsfordomain(domainid",{"_index":1246,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getcelebrationpointsfordomain(domainid",{"_index":1248,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getdomainresourcecountseenbythieves",{"_index":1015,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getdomainunprotectedgoldminesandpastures",{"_index":1016,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardpivotwithlockedresources",{"_index":1039,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseauspiciousyear",{"_index":1083,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreaseoneproduction",{"_index":1100,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getlandcardspivotsincreasetwoproduction",{"_index":1102,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["domainscardsselectors.getmasterydomainfortype(type",{"_index":1245,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.getmerchantshipcountfordomain(domainid",{"_index":1247,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsselectors.hasdomaincommunitycenter(domainid",{"_index":1249,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["domainscardsstate",{"_index":1252,"title":{"interfaces/DomainsCardsState.html":{}},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["domainscardsstore",{"_index":1006,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["draw",{"_index":1984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drawcardfromstocktohand",{"_index":1469,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawcardfromstocktohand(pileid",{"_index":1479,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand",{"_index":1470,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["drawfirstcardsfromstocktohand(pileid",{"_index":1482,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["dual",{"_index":657,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["duel",{"_index":635,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duel/src/app/app.component.ts",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:12",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.component.ts:9",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["duel/src/app/app.module.ts",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/support/commands.ts",{"_index":636,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["e2e/src/support/commands.ts:15",{"_index":640,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["effects",{"_index":408,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["effectsmodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([agglomerationpilescardseffects",{"_index":720,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([discardpilecardseffects",{"_index":729,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([domainscardseffects",{"_index":711,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([eventspilecardseffects",{"_index":717,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([gameeffects",{"_index":707,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([handscardseffects",{"_index":714,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([landspilecardseffects",{"_index":726,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forfeature([stockpilescardseffects",{"_index":723,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["effectsmodule.forroot",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":208,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["email",{"_index":641,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["empty",{"_index":348,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{}}}],["enable",{"_index":286,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["engine",{"_index":136,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["engine.module.ts",{"_index":1368,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/feature",{"_index":1367,"title":{},"body":{"modules/FeatureEngineModule.html":{}}}],["engine/src/lib/game",{"_index":1460,"title":{},"body":{"injectables/GameRulesService.html":{},"todo.html":{}}}],["entities",{"_index":1287,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["entityadapter",{"_index":446,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["entitystate",{"_index":447,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["enumerations",{"_index":1917,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["environment.production",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":332,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["error(`can't",{"_index":755,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/GameRulesService.html":{}}}],["error(`couldn't",{"_index":1136,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["error.message",{"_index":354,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["errormsg",{"_index":453,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["eslint",{"_index":34,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{},"todo.html":{}}}],["eslint/explicit",{"_index":2179,"title":{},"body":{"todo.html":{}}}],["eslint/no",{"_index":39,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["event",{"_index":795,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{}}}],["event.name",{"_index":1795,"title":{},"body":{"components/PhasesComponent.html":{}}}],["event_0",{"_index":1326,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["event_card_interface_name",{"_index":1298,"title":{},"body":{"interfaces/EventCard.html":{}}}],["eventcard",{"_index":1294,"title":{"interfaces/EventCard.html":{}},"body":{"interfaces/EventCard.html":{},"components/PhasesComponent.html":{},"miscellaneous/functions.html":{}}}],["eventcards",{"_index":1318,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventcards.get(cardid",{"_index":1787,"title":{},"body":{"components/PhasesComponent.html":{}}}],["eventcards.get(pivot.cardid)?.name",{"_index":1499,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventdie",{"_index":1408,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["eventfromvalue",{"_index":2008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventfromvalue(value",{"_index":2030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eventname",{"_index":1296,"title":{},"body":{"interfaces/EventCard.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["eventname.auspiciousyear",{"_index":1500,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventname.festival",{"_index":1509,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["events",{"_index":1315,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["events_pile_cards_feature_key",{"_index":1348,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecards",{"_index":1307,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecards[0].id",{"_index":1359,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions",{"_index":1314,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.loadeventspilecardsfailure",{"_index":1311,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsactions.loadeventspilecardssuccess",{"_index":1310,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesinitializedeventspilecards",{"_index":1306,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsactions.setentitiesselectfirsteventspilecards",{"_index":1313,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter",{"_index":1350,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.getinitialstate",{"_index":1352,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.removeone",{"_index":1365,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsadapter.setall(eventspilecards",{"_index":1356,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardseffects",{"_index":682,"title":{"injectables/EventsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsEffects.html":{}}}],["eventspilecardsentity",{"_index":1317,"title":{"interfaces/EventsPileCardsEntity.html":{}},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{}}}],["eventspilecardsfacade",{"_index":668,"title":{"injectables/EventsPileCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["eventspilecardsfeature",{"_index":1316,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardspartialstate",{"_index":1347,"title":{"interfaces/EventsPileCardsPartialState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsreducer",{"_index":1353,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsselectors",{"_index":1341,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["eventspilecardsstate",{"_index":1349,"title":{"interfaces/EventsPileCardsState.html":{}},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["eventspilecardsstore",{"_index":1303,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["eventvalue",{"_index":786,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["eventvalue.event",{"_index":1507,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["eventvalue.thieves",{"_index":1528,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["evie",{"_index":1955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["example",{"_index":651,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["exchange",{"_index":1990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["existing",{"_index":660,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["explicit",{"_index":40,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["exports",{"_index":247,"title":{},"body":{"modules/ActionsModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["expose",{"_index":431,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["express",{"_index":2101,"title":{},"body":{"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ezio",{"_index":1954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade",{"_index":434,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["false",{"_index":463,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["featureenginemodule",{"_index":1366,"title":{"modules/FeatureEngineModule.html":{}},"body":{"modules/FeatureEngineModule.html":{},"modules.html":{}}}],["featuregamemodule",{"_index":490,"title":{"modules/FeatureGameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeatureGameModule.html":{},"modules.html":{},"overview.html":{}}}],["festival",{"_index":1464,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":319,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["field",{"_index":1995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["filename",{"_index":2134,"title":{},"body":{"todo.html":{}}}],["files",{"_index":2072,"title":{},"body":{"license.html":{}}}],["filter",{"_index":147,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["filter((die",{"_index":1527,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((handcard",{"_index":168,"title":{},"body":{"components/ActionsComponent.html":{}}}],["filter((pivot",{"_index":1498,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((stockpilecard",{"_index":1555,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filter((value",{"_index":1516,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["filtering",{"_index":1831,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["find",{"_index":756,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{}}}],["finish",{"_index":1796,"title":{},"body":{"components/PhasesComponent.html":{}}}],["first",{"_index":347,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["firstland",{"_index":1048,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstland.type",{"_index":1053,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["firstpivot",{"_index":1046,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["fitness",{"_index":2106,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":2142,"title":{},"body":{"todo.html":{}}}],["fixmes",{"_index":2141,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":200,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/PhasesComponent.html":{}}}],["following",{"_index":2090,"title":{},"body":{"license.html":{}}}],["force",{"_index":1388,"title":{},"body":{"injectables/GameEffects.html":{}}}],["foreign",{"_index":1165,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["forest",{"_index":1993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":1099,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["formsmodule",{"_index":801,"title":{},"body":{"modules/DiceModule.html":{},"modules/PhasesModule.html":{}}}],["foundid",{"_index":1270,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["foundry",{"_index":1942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["free",{"_index":2064,"title":{},"body":{"license.html":{}}}],["fromagglomerationpilescards",{"_index":687,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromagglomerationpilescards.agglomeration_piles_cards_feature_key",{"_index":715,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromagglomerationpilescards.agglomerationpilescardsreducer",{"_index":716,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards",{"_index":677,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discard_pile_cards_feature_key",{"_index":727,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdiscardpilecards.discardpilecardsreducer",{"_index":728,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards",{"_index":681,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domains_cards_feature_key",{"_index":709,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromdomainscards.domainscardsreducer",{"_index":710,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards",{"_index":685,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.events_pile_cards_feature_key",{"_index":724,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromeventspilecards.eventspilecardsreducer",{"_index":725,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame",{"_index":691,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromgame.gamereducer",{"_index":706,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards",{"_index":696,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.hands_cards_feature_key",{"_index":712,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromhandscards.handscardsreducer",{"_index":713,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards",{"_index":700,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.lands_pile_cards_feature_key",{"_index":718,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromlandspilecards.landspilecardsreducer",{"_index":719,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards",{"_index":704,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stock_piles_cards_feature_key",{"_index":721,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["fromstockpilescards.stockpilescardsreducer",{"_index":722,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["front",{"_index":614,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front'},{'name",{"_index":222,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["front.component",{"_index":633,"title":{},"body":{"modules/CardFrontModule.html":{}}}],["front.component.css",{"_index":615,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.html",{"_index":616,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts",{"_index":613,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:10",{"_index":619,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:11",{"_index":618,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.component.ts:13",{"_index":620,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["front.module",{"_index":1892,"title":{},"body":{"modules/UiCardModule.html":{}}}],["front.module.ts",{"_index":632,"title":{},"body":{"modules/CardFrontModule.html":{}}}],["front/card",{"_index":612,"title":{},"body":{"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{}}}],["function",{"_index":41,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["functions",{"_index":2004,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2089,"title":{},"body":{"license.html":{}}}],["game",{"_index":104,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["game.actions",{"_index":1402,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game.module.ts",{"_index":671,"title":{},"body":{"modules/DataAccessGameModule.html":{},"modules/FeatureGameModule.html":{}}}],["game.reducer",{"_index":1404,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game.selectors",{"_index":1406,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["game/src/lib/+state/agglomeration",{"_index":300,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/discard",{"_index":803,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/domains",{"_index":996,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/events",{"_index":1301,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts",{"_index":1374,"title":{},"body":{"injectables/GameEffects.html":{},"todo.html":{}}}],["game/src/lib/+state/game/game.effects.ts:16",{"_index":1384,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:26",{"_index":1400,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:49",{"_index":1393,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.effects.ts:59",{"_index":1379,"title":{},"body":{"injectables/GameEffects.html":{}}}],["game/src/lib/+state/game/game.facade.ts",{"_index":1407,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:20",{"_index":1438,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:21",{"_index":1432,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:24",{"_index":1430,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:25",{"_index":1434,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:26",{"_index":1436,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:27",{"_index":1416,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:35",{"_index":1417,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:39",{"_index":1425,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:43",{"_index":1427,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:47",{"_index":1420,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:51",{"_index":1426,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:55",{"_index":1422,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:59",{"_index":1424,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.facade.ts:63",{"_index":1419,"title":{},"body":{"injectables/GameFacade.html":{}}}],["game/src/lib/+state/game/game.reducer.ts",{"_index":1447,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["game/src/lib/+state/hands",{"_index":1645,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["game/src/lib/+state/lands",{"_index":1715,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["game/src/lib/+state/stock",{"_index":1808,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["game/src/lib/actions/actions.module.ts",{"_index":245,"title":{},"body":{"modules/ActionsModule.html":{}}}],["game/src/lib/actions/actions/actions.component.ts",{"_index":57,"title":{},"body":{"components/ActionsComponent.html":{},"todo.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:110",{"_index":113,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:121",{"_index":127,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:129",{"_index":126,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:133",{"_index":117,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:139",{"_index":124,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:143",{"_index":123,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:147",{"_index":116,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:151",{"_index":122,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:155",{"_index":121,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:165",{"_index":114,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:175",{"_index":111,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:179",{"_index":125,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:32",{"_index":101,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:42",{"_index":109,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:48",{"_index":105,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:52",{"_index":118,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:58",{"_index":119,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:71",{"_index":112,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:85",{"_index":108,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:89",{"_index":115,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/actions/actions/actions.component.ts:97",{"_index":120,"title":{},"body":{"components/ActionsComponent.html":{}}}],["game/src/lib/board/board.module.ts",{"_index":535,"title":{},"body":{"modules/BoardModule.html":{}}}],["game/src/lib/board/board/board.component.ts",{"_index":513,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:15",{"_index":524,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:16",{"_index":523,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:17",{"_index":522,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/board/board/board.component.ts:18",{"_index":521,"title":{},"body":{"components/BoardComponent.html":{}}}],["game/src/lib/data",{"_index":670,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["game/src/lib/dice/dice.module.ts",{"_index":799,"title":{},"body":{"modules/DiceModule.html":{}}}],["game/src/lib/dice/dice/dice.component.ts",{"_index":766,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:19",{"_index":777,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:23",{"_index":785,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:32",{"_index":781,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:36",{"_index":780,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:40",{"_index":778,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:44",{"_index":779,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/dice/dice/dice.component.ts:48",{"_index":784,"title":{},"body":{"components/DiceComponent.html":{}}}],["game/src/lib/domain/domain.module.ts",{"_index":993,"title":{},"body":{"modules/DomainModule.html":{}}}],["game/src/lib/domain/domain/domain.component.ts",{"_index":864,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:114",{"_index":900,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:122",{"_index":897,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:126",{"_index":891,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:130",{"_index":902,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:134",{"_index":918,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:142",{"_index":922,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:146",{"_index":920,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:150",{"_index":924,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:154",{"_index":915,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:39",{"_index":889,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:41",{"_index":929,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:42",{"_index":925,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:43",{"_index":930,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:44",{"_index":926,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:45",{"_index":927,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:46",{"_index":928,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:48",{"_index":931,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:49",{"_index":888,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:56",{"_index":898,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:60",{"_index":907,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:64",{"_index":893,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:68",{"_index":909,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:74",{"_index":911,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:80",{"_index":913,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:84",{"_index":895,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/domain/domain/domain.component.ts:99",{"_index":905,"title":{},"body":{"components/DomainComponent.html":{}}}],["game/src/lib/feature",{"_index":1372,"title":{},"body":{"modules/FeatureGameModule.html":{}}}],["game/src/lib/hand/hand.module.ts",{"_index":1643,"title":{},"body":{"modules/HandModule.html":{}}}],["game/src/lib/hand/hand/hand.component.ts",{"_index":1612,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:24",{"_index":1621,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:26",{"_index":1630,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:27",{"_index":1620,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:31",{"_index":1625,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:35",{"_index":1627,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:43",{"_index":1623,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:47",{"_index":1624,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/hand/hand/hand.component.ts:51",{"_index":1629,"title":{},"body":{"components/HandComponent.html":{}}}],["game/src/lib/phases/phases.module.ts",{"_index":1800,"title":{},"body":{"modules/PhasesModule.html":{}}}],["game/src/lib/phases/phases/phases.component.ts",{"_index":1760,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:22",{"_index":1782,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:23",{"_index":1771,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:30",{"_index":1775,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:34",{"_index":1779,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:38",{"_index":1776,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:42",{"_index":1780,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:46",{"_index":1774,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:50",{"_index":1777,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:54",{"_index":1778,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:58",{"_index":1772,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/phases/phases/phases.component.ts:62",{"_index":1781,"title":{},"body":{"components/PhasesComponent.html":{}}}],["game/src/lib/piles/piles.module.ts",{"_index":1806,"title":{},"body":{"modules/PilesModule.html":{}}}],["game/src/test/fixtures/domains",{"_index":2159,"title":{},"body":{"todo.html":{}}}],["game_feature_key",{"_index":1448,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions",{"_index":1401,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gameactions.seteventdie",{"_index":1392,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setnextproductiondie",{"_index":1399,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.setproductiondie",{"_index":1398,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throweventdie",{"_index":1382,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameactions.throwproductiondie",{"_index":1383,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gameeffects",{"_index":688,"title":{"injectables/GameEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameEffects.html":{}}}],["gameended",{"_index":1465,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["gamefacade",{"_index":89,"title":{"injectables/GameFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["gamepartialstate",{"_index":1403,"title":{"interfaces/GamePartialState.html":{}},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamephase",{"_index":142,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamephase.initialthrow",{"_index":787,"title":{},"body":{"components/DiceComponent.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{}}}],["gamephase.loopactions",{"_index":155,"title":{},"body":{"components/ActionsComponent.html":{}}}],["gamephase.loopthrow",{"_index":788,"title":{},"body":{"components/DiceComponent.html":{}}}],["gamereducer",{"_index":1452,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamerules",{"_index":98,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["gamerulesservice",{"_index":99,"title":{"injectables/GameRulesService.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["gameselectors",{"_index":1405,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{}}}],["gamestate",{"_index":1449,"title":{"interfaces/GameState.html":{}},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["gamestore",{"_index":1378,"title":{},"body":{"injectables/GameEffects.html":{}}}],["gap",{"_index":204,"title":{},"body":{"components/ActionsComponent.html":{},"components/CardBackComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/PhasesComponent.html":{}}}],["generated",{"_index":2041,"title":{},"body":{"index.html":{}}}],["getaction",{"_index":1764,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getactioncard",{"_index":1615,"title":{},"body":{"components/HandComponent.html":{}}}],["getactioncard(cardid",{"_index":1622,"title":{},"body":{"components/HandComponent.html":{}}}],["getagglomerationcard",{"_index":869,"title":{},"body":{"components/DomainComponent.html":{}}}],["getagglomerationcard(cardid",{"_index":890,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcardsvictorypointsfordomain",{"_index":1172,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcardsvictorypointsfordomain(domainid",{"_index":1189,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpoints",{"_index":870,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domain.id",{"_index":971,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpoints(domainid",{"_index":892,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcelebrationpointsfordomain",{"_index":1173,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcelebrationpointsfordomain(domainid",{"_index":1191,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getcolumnstemplate",{"_index":871,"title":{},"body":{"components/DomainComponent.html":{}}}],["getcolumnstemplate(domainid",{"_index":894,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdevelopmentcard",{"_index":872,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdevelopmentcard(cardid",{"_index":896,"title":{},"body":{"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["getdomain",{"_index":873,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainmaxcol",{"_index":1174,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxcol(domainid",{"_index":1193,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow",{"_index":1175,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmaxrow(domainid",{"_index":1195,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol",{"_index":1176,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainmincol(domainid",{"_index":1197,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow",{"_index":1177,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainminrow(domainid",{"_index":1199,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getdomainscards",{"_index":874,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainscards(domainid",{"_index":899,"title":{},"body":{"components/DomainComponent.html":{}}}],["getdomainselectedagglomerationslots",{"_index":71,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselecteddevelopmentcards",{"_index":72,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getdomainselectedlandcards",{"_index":73,"title":{},"body":{"components/ActionsComponent.html":{}}}],["geteventcard",{"_index":1765,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventcard(cardid",{"_index":1773,"title":{},"body":{"components/PhasesComponent.html":{}}}],["geteventdie",{"_index":771,"title":{},"body":{"components/DiceComponent.html":{}}}],["gethand",{"_index":1616,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards",{"_index":1617,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandscards(handid",{"_index":1626,"title":{},"body":{"components/HandComponent.html":{}}}],["gethandselecteddevelopmentcard",{"_index":74,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getimgsrc",{"_index":555,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"miscellaneous/functions.html":{}}}],["getimgsrc(name",{"_index":2032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlandcard",{"_index":875,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcard(cardid",{"_index":901,"title":{},"body":{"components/DomainComponent.html":{}}}],["getlandcardfrompivot",{"_index":1004,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getlandcardfrompivot(pivot",{"_index":1008,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["getmasterydomainfortype",{"_index":1178,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmasterydomainfortype(masterypointstype.strength",{"_index":940,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(masterypointstype.trade",{"_index":943,"title":{},"body":{"components/DomainComponent.html":{}}}],["getmasterydomainfortype(type",{"_index":1201,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain",{"_index":1179,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getmerchantshipcountfordomain(domainid",{"_index":1203,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["getnextproductiondie",{"_index":772,"title":{},"body":{"components/DiceComponent.html":{}}}],["getphase",{"_index":1766,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getpileselectedlandcard",{"_index":75,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getplayer",{"_index":1767,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getproductiondie",{"_index":773,"title":{},"body":{"components/DiceComponent.html":{}}}],["getrandomeventdievalue",{"_index":1386,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrandomproductiondievalue",{"_index":1397,"title":{},"body":{"injectables/GameEffects.html":{},"miscellaneous/functions.html":{}}}],["getrowstemplate",{"_index":876,"title":{},"body":{"components/DomainComponent.html":{}}}],["getrowstemplate(domainid",{"_index":904,"title":{},"body":{"components/DomainComponent.html":{}}}],["getselectedactioncard",{"_index":76,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedagglomerationpilecard",{"_index":77,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailableagglomerationslots",{"_index":78,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailabledevelopmentslots",{"_index":79,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedavailablelandslots",{"_index":80,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getselectedeventspilecard",{"_index":1768,"title":{},"body":{"components/PhasesComponent.html":{}}}],["getselectedhandcard",{"_index":81,"title":{},"body":{"components/ActionsComponent.html":{}}}],["getshipscount",{"_index":877,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domain.id",{"_index":967,"title":{},"body":{"components/DomainComponent.html":{}}}],["getshipscount(domainid",{"_index":906,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery",{"_index":878,"title":{},"body":{"components/DomainComponent.html":{}}}],["getstrengthmastery(domainid",{"_index":908,"title":{},"body":{"components/DomainComponent.html":{}}}],["getting",{"_index":2038,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettrademastery",{"_index":879,"title":{},"body":{"components/DomainComponent.html":{}}}],["gettrademastery(domainid",{"_index":910,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints",{"_index":880,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domain.id",{"_index":976,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypoints(domainid",{"_index":912,"title":{},"body":{"components/DomainComponent.html":{}}}],["getvictorypointsfordomain",{"_index":1471,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["getvictorypointsfordomain(domainid",{"_index":1485,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["give",{"_index":193,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["givelockedresources",{"_index":82,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["givesknowledge",{"_index":733,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["globally",{"_index":2043,"title":{},"body":{"index.html":{}}}],["goes",{"_index":325,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["gold",{"_index":2000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldmine",{"_index":1994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goldsmith",{"_index":1930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["granted",{"_index":2063,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2126,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":572,"title":{},"body":{"components/CardBackComponent.html":{}}}],["grid",{"_index":986,"title":{},"body":{"components/DomainComponent.html":{}}}],["hamlet",{"_index":1936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hamletentities",{"_index":389,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["hand",{"_index":188,"title":{"interfaces/Hand.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{}}}],["hand'},{'name",{"_index":228,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["hand.color",{"_index":1638,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.css",{"_index":1613,"title":{},"body":{"components/HandComponent.html":{}}}],["hand.component.html",{"_index":1614,"title":{},"body":{"components/HandComponent.html":{}}}],["hand/hand.component",{"_index":1644,"title":{},"body":{"modules/HandModule.html":{}}}],["hand/hand.module",{"_index":540,"title":{},"body":{"modules/BoardModule.html":{}}}],["handcard",{"_index":165,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["handcard.cardid",{"_index":1592,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.cardtype",{"_index":1601,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["handcard.handid",{"_index":1635,"title":{},"body":{"components/HandComponent.html":{}}}],["handcard?.cardtype",{"_index":166,"title":{},"body":{"components/ActionsComponent.html":{}}}],["handcomponent",{"_index":227,"title":{"components/HandComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"overview.html":{}}}],["handid",{"_index":1480,"title":{},"body":{"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{}}}],["handmodule",{"_index":532,"title":{"modules/HandModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/HandModule.html":{},"modules.html":{},"overview.html":{}}}],["hands",{"_index":1610,"title":{},"body":{"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["hands.get(this.handid",{"_index":1631,"title":{},"body":{"components/HandComponent.html":{}}}],["hands_cards_feature_key",{"_index":1682,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards",{"_index":92,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscards.filter((handcard",{"_index":1634,"title":{},"body":{"components/HandComponent.html":{}}}],["handscardsactions",{"_index":1659,"title":{},"body":{"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsactions.addhandscards",{"_index":1651,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardsfailure",{"_index":1657,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.loadhandscardssuccess",{"_index":1656,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsactions.sethandscardsinitialized",{"_index":1654,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["handscardsadapter",{"_index":1684,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.addmany(handscards",{"_index":1695,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.getinitialstate",{"_index":1686,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.removeone(id",{"_index":1700,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsadapter.setall(handscards",{"_index":1691,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardseffects",{"_index":693,"title":{"injectables/HandsCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/HandsCardsEffects.html":{}}}],["handscardsentity",{"_index":131,"title":{"interfaces/HandsCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsfacade",{"_index":93,"title":{"injectables/HandsCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"overview.html":{}}}],["handscardsfeature",{"_index":1673,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardspartialstate",{"_index":1681,"title":{"interfaces/HandsCardsPartialState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsreducer",{"_index":1687,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["handscardsselectors",{"_index":1674,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["handscardsstate",{"_index":1683,"title":{"interfaces/HandsCardsState.html":{}},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["harvest",{"_index":1960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hascolor",{"_index":261,"title":{"interfaces/HasColor.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["hascost",{"_index":263,"title":{"interfaces/HasCost.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{}}}],["hasdomaincommunitycenter",{"_index":1180,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasdomaincommunitycenter(domainid",{"_index":1206,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["hasid",{"_index":12,"title":{"interfaces/HasId.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{}}}],["hasname",{"_index":24,"title":{"interfaces/HasName.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["hasrules",{"_index":26,"title":{"interfaces/HasRules.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["hasvictorypoints",{"_index":267,"title":{"interfaces/HasVictoryPoints.html":{}},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{}}}],["hawker",{"_index":1972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["height",{"_index":570,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["here",{"_index":326,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["hereby",{"_index":2062,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2111,"title":{},"body":{"license.html":{}}}],["html",{"_index":207,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"dependencies.html":{}}}],["hélène",{"_index":2059,"title":{},"body":{"license.html":{}}}],["icon",{"_index":578,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["iconname",{"_index":566,"title":{},"body":{"components/CardBackComponent.html":{}}}],["id",{"_index":15,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/Domain.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"miscellaneous/functions.html":{}}}],["id_agglomeration_hamlet",{"_index":374,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_agglomeration_road",{"_index":375,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{}}}],["id_agglomeration_town",{"_index":376,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["id_clay_pit_blue",{"_index":1147,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_clay_pit_red",{"_index":1148,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_blue",{"_index":517,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_domain_red",{"_index":518,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["id_field_blue",{"_index":1149,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_field_red",{"_index":1150,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_blue",{"_index":1151,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_forest_red",{"_index":1152,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_blue",{"_index":1153,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_gold_mine_red",{"_index":1154,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_1",{"_index":1155,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_blue_2",{"_index":1156,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_1",{"_index":1157,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hamlet_red_2",{"_index":1158,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_hand_blue",{"_index":519,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_hand_red",{"_index":520,"title":{},"body":{"components/BoardComponent.html":{}}}],["id_pasture_blue",{"_index":1159,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_pasture_red",{"_index":1160,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_blue",{"_index":1161,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_road_red",{"_index":1162,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_blue",{"_index":1163,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["id_stone_quarry_red",{"_index":1164,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["ids",{"_index":1836,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["ignore",{"_index":1079,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["ignores",{"_index":2233,"title":{},"body":{"todo.html":{}}}],["implied",{"_index":2102,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["imports",{"_index":252,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["included",{"_index":2095,"title":{},"body":{"license.html":{}}}],["including",{"_index":2076,"title":{},"body":{"license.html":{}}}],["increase",{"_index":985,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["increasefour",{"_index":1087,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseone",{"_index":1084,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresources",{"_index":881,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresources(pivotid",{"_index":914,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["increaseresourcesauspiciousyear",{"_index":999,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increaseresourcesforauspiciousyear",{"_index":1181,"title":{},"body":{"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie",{"_index":1000,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{}}}],["increaseresourcesfordie(value",{"_index":1208,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["increasethree",{"_index":1086,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["increasetwo",{"_index":1085,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["indent",{"_index":2232,"title":{},"body":{"todo.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["initial",{"_index":461,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/enumerations.html":{}}}],["initialagglomerationpilescardsstate",{"_index":458,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["initialdiscardpilecardsstate",{"_index":853,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["initialdomainscards",{"_index":1167,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{}}}],["initialdomainscardsstate",{"_index":1255,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["initialdraw",{"_index":1983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initialeventspilecardsstate",{"_index":1351,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["initialgamestate",{"_index":1450,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["initialhandscardsstate",{"_index":1685,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["initialization",{"_index":403,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initialized",{"_index":451,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initiallandspilecardsstate",{"_index":1749,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["initialstockpilescardsstate",{"_index":1872,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["initialthrow",{"_index":1982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initnewgame",{"_index":303,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["initsavedgame",{"_index":304,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectable",{"_index":296,"title":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["injectables",{"_index":298,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["input",{"_index":564,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inputs",{"_index":556,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{}}}],["inset",{"_index":599,"title":{},"body":{"components/CardBackComponent.html":{}}}],["installed",{"_index":2044,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1830,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"overview.html":{}}}],["interfaces/color",{"_index":262,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/LandCard.html":{}}}],["interfaces/cost",{"_index":264,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["interfaces/entity",{"_index":23,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/name",{"_index":25,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/print",{"_index":266,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/LandCard.html":{}}}],["interfaces/rules",{"_index":27,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{}}}],["interfaces/victory",{"_index":268,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["invention",{"_index":1973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactioncard",{"_index":2010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isactioncard(obj",{"_index":42,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{}}}],["isagglomerationcard",{"_index":2011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isagglomerationcard(obj",{"_index":295,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{}}}],["iscanprint",{"_index":2012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iscanprint(obj",{"_index":545,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{}}}],["isdevelopmentcard",{"_index":2014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdevelopmentcard(obj",{"_index":765,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["isdomaincardselected",{"_index":882,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivot.id",{"_index":978,"title":{},"body":{"components/DomainComponent.html":{}}}],["isdomaincardselected(pivotid",{"_index":917,"title":{},"body":{"components/DomainComponent.html":{}}}],["iseventcard",{"_index":2015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iseventcard(obj",{"_index":1300,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{}}}],["ishasname",{"_index":2016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishasname(obj",{"_index":1705,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{}}}],["islandcard",{"_index":2018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["islandcard(obj",{"_index":1714,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":577,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["jacob",{"_index":1956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["justify",{"_index":573,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["kassandra",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":1166,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["kind",{"_index":2100,"title":{},"body":{"license.html":{}}}],["land",{"_index":192,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{}}}],["land.die",{"_index":980,"title":{},"body":{"components/DomainComponent.html":{}}}],["land.type",{"_index":1052,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["land_card_interface_name",{"_index":143,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"interfaces/LandCard.html":{}}}],["landcard",{"_index":903,"title":{"interfaces/LandCard.html":{}},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["landcards",{"_index":933,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["landcards.get(cardid",{"_index":958,"title":{},"body":{"components/DomainComponent.html":{}}}],["landcards.get(pivot.cardid",{"_index":1144,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["lands",{"_index":1726,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["lands_pile_cards_feature_key",{"_index":1746,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecard",{"_index":1595,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecard.cardid",{"_index":1597,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["landspilecards",{"_index":96,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions",{"_index":1725,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.loadlandspilecardsfailure",{"_index":1723,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsactions.loadlandspilecardssuccess",{"_index":1722,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsactions.selectlandspilecard",{"_index":1743,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsactions.setlandspilecardsinitialized",{"_index":1718,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter",{"_index":1748,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.getinitialstate",{"_index":1750,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.removeone(id",{"_index":1759,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsadapter.setall(landspilecards",{"_index":1754,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardseffects",{"_index":697,"title":{"injectables/LandsPileCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/LandsPileCardsEffects.html":{}}}],["landspilecardsentity",{"_index":132,"title":{"interfaces/LandsPileCardsEntity.html":{}},"body":{"components/ActionsComponent.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsfacade",{"_index":97,"title":{"injectables/LandsPileCardsFacade.html":{}},"body":{"components/ActionsComponent.html":{},"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"overview.html":{}}}],["landspilecardsfeature",{"_index":1739,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardspartialstate",{"_index":1745,"title":{"interfaces/LandsPileCardsPartialState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsreducer",{"_index":1751,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landspilecardsselectors",{"_index":1740,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["landspilecardsstate",{"_index":1747,"title":{"interfaces/LandsPileCardsState.html":{}},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["landtype",{"_index":1710,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{}}}],["laure",{"_index":2058,"title":{},"body":{"license.html":{}}}],["legend",{"_index":206,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["len",{"_index":456,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["liability",{"_index":2115,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2112,"title":{},"body":{"license.html":{}}}],["libs/.../action.ts",{"_index":1918,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../agglomeration.ts",{"_index":1919,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../assets.ts",{"_index":2009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../development.ts",{"_index":1920,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../dice.ts",{"_index":1922,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../domain.ts",{"_index":1923,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../event.ts",{"_index":1924,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["libs/.../land.ts",{"_index":2019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../name.ts",{"_index":2017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../phase.ts",{"_index":1925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../print.ts",{"_index":2013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../resources.ts",{"_index":1926,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/data",{"_index":299,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["libs/feature",{"_index":56,"title":{},"body":{"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"todo.html":{}}}],["libs/shared",{"_index":6,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/Domain.html":{},"interfaces/EventCard.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["libs/ui",{"_index":547,"title":{},"body":{"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"modules/UiCardModule.html":{}}}],["license",{"_index":2053,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["lightgray",{"_index":602,"title":{},"body":{"components/CardBackComponent.html":{}}}],["limitation",{"_index":2077,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2103,"title":{},"body":{"license.html":{}}}],["line",{"_index":37,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["lines",{"_index":2158,"title":{},"body":{"todo.html":{}}}],["literal",{"_index":559,"title":{},"body":{"components/CardBackComponent.html":{},"injectables/DiscardPileCardsFacade.html":{}}}],["load",{"_index":323,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["loaded",{"_index":396,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["lock",{"_index":983,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["locked",{"_index":194,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["lockedresources",{"_index":1058,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{}}}],["lockresource",{"_index":883,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["lockresource(pivotid",{"_index":919,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["logic",{"_index":324,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["login",{"_index":637,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["login(email",{"_index":638,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["loop",{"_index":1986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopactions",{"_index":1987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopdraw",{"_index":1988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopexchange",{"_index":1989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopthrow",{"_index":1985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["low",{"_index":1965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lower",{"_index":1964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["magic",{"_index":276,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["many",{"_index":1068,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map",{"_index":148,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasCost.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/functions.html":{}}}],["map(([_action",{"_index":1129,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["map(([agglomerationpilecard",{"_index":1574,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([landspilecard",{"_index":1594,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map(([min",{"_index":948,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((action",{"_index":1119,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((discardpilecard",{"_index":810,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["map((domaincards",{"_index":159,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["map((domainscards",{"_index":953,"title":{},"body":{"components/DomainComponent.html":{}}}],["map((handcard",{"_index":1598,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["map((handscards",{"_index":1633,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{}}}],["map((ids",{"_index":1834,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["map((phase",{"_index":153,"title":{},"body":{"components/ActionsComponent.html":{}}}],["map((pivot",{"_index":343,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["map((pivots",{"_index":1024,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((pivotsselected",{"_index":1044,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["map((roadcard",{"_index":387,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["map((stockpilecard",{"_index":1558,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((stockpilescards",{"_index":1554,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["map((value",{"_index":1517,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["mapdietoiconnamefront",{"_index":867,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["mapdietoiconnamefront(die",{"_index":2033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortodomainid",{"_index":2020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortodomainid(domaincolor",{"_index":2036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid",{"_index":2021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdomaincolortohandid(domaincolor",{"_index":2037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptypetoiconnamefront",{"_index":868,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/functions.html":{}}}],["maptypetoiconnamefront(type",{"_index":2034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["market",{"_index":1945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mastery",{"_index":973,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterydomainid",{"_index":942,"title":{},"body":{"components/DomainComponent.html":{}}}],["masterypointstype",{"_index":934,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":48,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(...resource_counts",{"_index":1067,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["max",{"_index":455,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["maximum",{"_index":1076,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["merchant",{"_index":1975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":2105,"title":{},"body":{"license.html":{}}}],["merchantshiptravel",{"_index":1974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merge",{"_index":2080,"title":{},"body":{"license.html":{}}}],["mergemap",{"_index":1838,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["mergemap((action",{"_index":1825,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["metareducers",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":66,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["middle",{"_index":1966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mill",{"_index":1941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":949,"title":{},"body":{"components/DomainComponent.html":{}}}],["miscellaneous",{"_index":1916,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":2054,"title":{},"body":{"license.html":{},"properties.html":{}}}],["models",{"_index":145,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["models/src/lib/interfaces/color.ts",{"_index":1701,"title":{},"body":{"interfaces/HasColor.html":{}}}],["models/src/lib/interfaces/cost.ts",{"_index":1702,"title":{},"body":{"interfaces/HasCost.html":{}}}],["models/src/lib/interfaces/entity.ts",{"_index":1703,"title":{},"body":{"interfaces/HasId.html":{}}}],["models/src/lib/interfaces/name.ts",{"_index":1704,"title":{},"body":{"interfaces/HasName.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts",{"_index":543,"title":{},"body":{"interfaces/CanPrint.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/interfaces/print.ts:2",{"_index":544,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["models/src/lib/interfaces/rules.ts",{"_index":1707,"title":{},"body":{"interfaces/HasRules.html":{}}}],["models/src/lib/interfaces/victory.ts",{"_index":1708,"title":{},"body":{"interfaces/HasVictoryPoints.html":{}}}],["models/src/lib/structures/action.ts",{"_index":7,"title":{},"body":{"interfaces/ActionCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/agglomeration.ts",{"_index":254,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/development.ts",{"_index":731,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/domain.ts",{"_index":862,"title":{},"body":{"interfaces/Domain.html":{}}}],["models/src/lib/structures/event.ts",{"_index":1295,"title":{},"body":{"interfaces/EventCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/structures/hand.ts",{"_index":1609,"title":{},"body":{"interfaces/Hand.html":{}}}],["models/src/lib/structures/land.ts",{"_index":1709,"title":{},"body":{"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["models/src/lib/types/action.ts",{"_index":1927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/agglomeration.ts",{"_index":1934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/development.ts",{"_index":1938,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/dice.ts",{"_index":1959,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/domain.ts",{"_index":1961,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["models/src/lib/types/event.ts",{"_index":1969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/phase.ts",{"_index":1981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/src/lib/types/resources.ts",{"_index":1991,"title":{},"body":{"miscellaneous/enumerations.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["modify",{"_index":2079,"title":{},"body":{"license.html":{}}}],["module",{"_index":235,"title":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}},"body":{}}],["modules",{"_index":237,"title":{"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["monastery",{"_index":1949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":406,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["name",{"_index":16,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HasName.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":643,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["needstown",{"_index":734,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["new",{"_index":279,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/AppComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["newcard0",{"_index":1281,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newcard1",{"_index":1284,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["newselectedids",{"_index":1272,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["next",{"_index":36,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["nextproductiondie",{"_index":1396,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["ngmodule",{"_index":248,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{}}}],["ngrx/effects",{"_index":356,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":448,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":357,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"dependencies.html":{}}}],["noduplicate",{"_index":735,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["non",{"_index":2162,"title":{},"body":{"todo.html":{}}}],["noninfringement",{"_index":2109,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2093,"title":{},"body":{"license.html":{}}}],["now",{"_index":327,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["npm@8.13.2",{"_index":2048,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":358,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["null",{"_index":2163,"title":{},"body":{"todo.html":{}}}],["number",{"_index":260,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"components/CardBackComponent.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["numberofcardsbelowfestival",{"_index":1322,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["numbers",{"_index":277,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"todo.html":{}}}],["nx",{"_index":2042,"title":{},"body":{"index.html":{}}}],["nx@14.4.2",{"_index":2049,"title":{},"body":{"index.html":{}}}],["obj",{"_index":43,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{}}}],["obj.interface",{"_index":46,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/EventCard.html":{},"interfaces/LandCard.html":{}}}],["obj.name",{"_index":1706,"title":{},"body":{"interfaces/HasName.html":{}}}],["obj.print",{"_index":546,"title":{},"body":{"interfaces/CanPrint.html":{}}}],["observable",{"_index":110,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["observables",{"_index":432,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["obtaining",{"_index":2067,"title":{},"body":{"license.html":{}}}],["offset",{"_index":627,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["oftype",{"_index":336,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["oftype(agglomerationpilescardsactions.initagglomerationnewgame",{"_index":314,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["oftype(agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":318,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["oftype(discardpilecardsactions.addcardtodiscardpile",{"_index":806,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":814,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":818,"title":{},"body":{"injectables/DiscardPileCardsEffects.html":{}}}],["oftype(domainscardsactions.countandstealunprotectedgoldandwool",{"_index":1012,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.createdomaincard",{"_index":1032,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.givelockedresources",{"_index":1038,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresources",{"_index":1073,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesforauspiciousyear",{"_index":1082,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.increaseavailableresourcesfordie",{"_index":1098,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardsnewgame",{"_index":1106,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.initdomainscardssavedgame",{"_index":1110,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.lockresource",{"_index":1114,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.putcardinpivot",{"_index":1118,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.unlockresources",{"_index":1124,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(domainscardsactions.uselockedresources",{"_index":1128,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1305,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1309,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(eventspilecardsactions.reseteventspile",{"_index":1312,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["oftype(gameactions.throwdice",{"_index":1380,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throweventdie",{"_index":1385,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(gameactions.throwproductiondie",{"_index":1394,"title":{},"body":{"injectables/GameEffects.html":{}}}],["oftype(handscardsactions.addcardstohand",{"_index":1648,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardsnewgame",{"_index":1653,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(handscardsactions.inithandscardssavedgame",{"_index":1655,"title":{},"body":{"injectables/HandsCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardsnewgame",{"_index":1717,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(landspilecardsactions.initlandspilecardssavedgame",{"_index":1721,"title":{},"body":{"injectables/LandsPileCardsEffects.html":{}}}],["oftype(stockpilescardsactions.addcardstostockpilebottom",{"_index":1812,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1816,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1820,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["oftype(stockpilescardsactions.removecardsfromstockpiletop",{"_index":1824,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["on(agglomerationpilescardsactions.initagglomerationnewgame",{"_index":465,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(agglomerationpilescardsactions.initagglomerationsavedgame",{"_index":466,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(agglomerationpilescardsactions.unselectagglomerationpilecard",{"_index":469,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{}}}],["on(discardpilecardsactions.adddiscardpilecard",{"_index":859,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":856,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.initdiscardpilecardssavedgame",{"_index":857,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(discardpilecardsactions.setdiscardpilecardserror",{"_index":861,"title":{},"body":{"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{}}}],["on(domainscardsactions.adddomaincard",{"_index":1267,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.cleardomaincardselection",{"_index":1275,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardsnewgame",{"_index":1258,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.initdomainscardssavedgame",{"_index":1259,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardsfailure",{"_index":1262,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.loaddomainscardssuccess",{"_index":1260,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.removedomaincard",{"_index":1291,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.setdomainscardserror",{"_index":1293,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.swapselectedcards",{"_index":1276,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.toggledomaincardselection",{"_index":1269,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomaincard",{"_index":1263,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(domainscardsactions.updatedomainscards",{"_index":1265,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1354,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1355,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.loadeventspilecardsfailure",{"_index":1357,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.removeselectedeventspilecard",{"_index":1362,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.selectfirsteventspilecard",{"_index":1360,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(eventspilecardsactions.seteventspilecardserror",{"_index":1358,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["on(gameactions.initnewgame",{"_index":1453,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setaction",{"_index":1459,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.seteventdie",{"_index":1456,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setnextproductiondie",{"_index":1455,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setphase",{"_index":1457,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setplayer",{"_index":1458,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(gameactions.setproductiondie",{"_index":1454,"title":{},"body":{"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["on(handscardsactions.addhandscards",{"_index":1694,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardsnewgame",{"_index":1688,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.inithandscardssavedgame",{"_index":1689,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardsfailure",{"_index":1692,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.loadhandscardssuccess",{"_index":1690,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.removehandcard",{"_index":1699,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.selecthandcard",{"_index":1697,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardserror",{"_index":1696,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.sethandscardsinitialized",{"_index":1693,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(handscardsactions.unselecthandcard",{"_index":1698,"title":{},"body":{"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardsnewgame",{"_index":1752,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.initlandspilecardssavedgame",{"_index":1753,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.loadlandspilecardsfailure",{"_index":1755,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.removelandspilecard",{"_index":1758,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.selectlandspilecard",{"_index":1757,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(landspilecardsactions.setlandspilecardserror",{"_index":1756,"title":{},"body":{"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{}}}],["on(stockpilescardsactions.addstockpilescards",{"_index":1881,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1875,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1876,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.loadstockpilescardsfailure",{"_index":1878,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.removestockpilescards",{"_index":1879,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["on(stockpilescardsactions.setstockpilescardserror",{"_index":1883,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["one",{"_index":405,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["onerror",{"_index":330,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["onthrow",{"_index":774,"title":{},"body":{"components/DiceComponent.html":{}}}],["optional",{"_index":103,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":656,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["order",{"_index":2138,"title":{},"body":{"todo.html":{}}}],["originalfn",{"_index":662,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["otherwise",{"_index":2119,"title":{},"body":{"license.html":{}}}],["out",{"_index":244,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"modules/UiCardModule.html":{},"license.html":{},"overview.html":{},"todo.html":{}}}],["outline",{"_index":626,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["overview",{"_index":2127,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":659,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["package",{"_index":1893,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":2045,"title":{},"body":{"index.html":{}}}],["padding",{"_index":587,"title":{},"body":{"components/CardBackComponent.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":647,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["particular",{"_index":2107,"title":{},"body":{"license.html":{}}}],["password",{"_index":639,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["pasture",{"_index":1997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pathfinder",{"_index":1929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":404,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["permission",{"_index":2061,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2087,"title":{},"body":{"license.html":{}}}],["person",{"_index":2066,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2088,"title":{},"body":{"license.html":{}}}],["phase",{"_index":154,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["phase.key",{"_index":1794,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases",{"_index":1761,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases'},{'name",{"_index":230,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["phases.component.css",{"_index":1762,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases.component.html",{"_index":1763,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases/phases.component",{"_index":1801,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phases/phases.module",{"_index":541,"title":{},"body":{"modules/BoardModule.html":{}}}],["phasescomponent",{"_index":229,"title":{"components/PhasesComponent.html":{}},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"overview.html":{}}}],["phasesmodule",{"_index":533,"title":{"modules/PhasesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PhasesModule.html":{},"modules.html":{},"overview.html":{}}}],["pieces",{"_index":427,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["pile",{"_index":177,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"modules/DataAccessGameModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"todo.html":{}}}],["pileid",{"_index":372,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["piles",{"_index":232,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/DataAccessGameModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["piles/piles.component",{"_index":1807,"title":{},"body":{"modules/PilesModule.html":{}}}],["piles/piles.module",{"_index":542,"title":{},"body":{"modules/BoardModule.html":{}}}],["pilescomponent",{"_index":231,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"modules/PilesModule.html":{},"overview.html":{}}}],["pilesmodule",{"_index":534,"title":{"modules/PilesModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/PilesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipe",{"_index":947,"title":{},"body":{"components/DomainComponent.html":{},"injectables/GameRulesService.html":{}}}],["pipe(map((masterydomainid",{"_index":941,"title":{},"body":{"components/DomainComponent.html":{}}}],["pivot",{"_index":344,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["pivot.availableresources",{"_index":981,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.cardid",{"_index":189,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.col",{"_index":184,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.domainid",{"_index":183,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.id",{"_index":351,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.lockedresources",{"_index":982,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["pivot.pileid",{"_index":180,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivot.row",{"_index":185,"title":{},"body":{"components/ActionsComponent.html":{}}}],["pivotid",{"_index":916,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{}}}],["pivots",{"_index":1023,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivots.map((pivot",{"_index":1026,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected.length",{"_index":1059,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotsselected[0",{"_index":1061,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources",{"_index":1041,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.foreach((pivot",{"_index":1050,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.length",{"_index":1045,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources.map((pivot",{"_index":1057,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["pivotswithlockedresources[0",{"_index":1047,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["player",{"_index":1409,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"components/PhasesComponent.html":{}}}],["player.key",{"_index":1793,"title":{},"body":{"components/PhasesComponent.html":{}}}],["plugin",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["point",{"_index":1143,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["points",{"_index":970,"title":{},"body":{"components/DomainComponent.html":{}}}],["portions",{"_index":2097,"title":{},"body":{"license.html":{}}}],["position",{"_index":580,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["prettier",{"_index":1078,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"todo.html":{}}}],["previous",{"_index":1391,"title":{},"body":{"injectables/GameEffects.html":{}}}],["prevsubject",{"_index":654,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["primary",{"_index":381,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/DiscardPileCardsEntity.html":{},"interfaces/Domain.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/Hand.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["print",{"_index":275,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/LandCard.html":{}}}],["private",{"_index":151,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["production",{"_index":794,"title":{},"body":{"components/DiceComponent.html":{},"todo.html":{}}}],["productiondie",{"_index":1410,"title":{},"body":{"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{}}}],["project",{"_index":2040,"title":{},"body":{"index.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"properties.html":{}}}],["provided",{"_index":2098,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":1532,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["providers",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["publish",{"_index":2081,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2108,"title":{},"body":{"license.html":{}}}],["put",{"_index":191,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile",{"_index":1472,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromdomaintostockpile(pileid",{"_index":1488,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile",{"_index":1473,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putbackfromhandtostockpile(pileid",{"_index":1490,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["putcardinpivot",{"_index":1001,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["putcardinslot",{"_index":1182,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putcardinslot(pivotid",{"_index":1212,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["putland",{"_index":83,"title":{},"body":{"components/ActionsComponent.html":{}}}],["putlandspilecardinslot",{"_index":1474,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["quarrel",{"_index":1977,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["radius",{"_index":595,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["randomdicevalue",{"_index":2022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":454,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["red",{"_index":1962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redgoldminesandpastures",{"_index":1019,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["redresourcecount",{"_index":1017,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["relative",{"_index":581,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["relocation",{"_index":1933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["removeagglomerationpilecard",{"_index":398,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["removeagglomerationpilecard(id",{"_index":410,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["removecards",{"_index":1809,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["removecardsfromstockpiletop",{"_index":1857,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removecardsfromstockpiletop(pileid",{"_index":1860,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["removedomaincard",{"_index":1183,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removedomaincard(pivotid",{"_index":1214,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["removehandcard",{"_index":1664,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removehandcard(id",{"_index":1667,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["removelandspilecard",{"_index":1732,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removelandspilecard(id",{"_index":1734,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["removeselected",{"_index":1331,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["removeselectedeventspilecard",{"_index":1769,"title":{},"body":{"components/PhasesComponent.html":{}}}],["required",{"_index":462,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["reset",{"_index":243,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}],["reseteventspile",{"_index":1332,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["reseteventspileonfestival",{"_index":1466,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["resetpileandselectfirst",{"_index":1302,"title":{},"body":{"injectables/EventsPileCardsEffects.html":{}}}],["resource",{"_index":1116,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["resource_counts",{"_index":1131,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resource_values",{"_index":770,"title":{},"body":{"components/DiceComponent.html":{}}}],["resourcecount",{"_index":1029,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"miscellaneous/typealiases.html":{}}}],["resourceincrement",{"_index":1137,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["resources",{"_index":195,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{}}}],["resourcetype",{"_index":271,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resourcetype.clay",{"_index":282,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.stone",{"_index":292,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wheat",{"_index":289,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["resourcetype.wood",{"_index":280,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcetype.wool",{"_index":288,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{}}}],["resourcevalue",{"_index":783,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"interfaces/LandCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ressource",{"_index":585,"title":{},"body":{"components/CardBackComponent.html":{}}}],["ressources",{"_index":557,"title":{},"body":{"components/CardBackComponent.html":{}}}],["restriction",{"_index":2075,"title":{},"body":{"license.html":{}}}],["results",{"_index":47,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":44,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"todo.html":{}}}],["returns",{"_index":106,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":2078,"title":{},"body":{"license.html":{}}}],["rivalry",{"_index":1980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["road",{"_index":1935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roadcard.id",{"_index":388,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["roadentities",{"_index":383,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["root",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameRulesService.html":{}}}],["root'},{'name",{"_index":214,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["route",{"_index":1932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["row",{"_index":1034,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["rowvalue",{"_index":1146,"title":{},"body":{"interfaces/DomainsCardsEntity.html":{},"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{}}}],["rowvalue.lower",{"_index":1588,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rowvalue.upper",{"_index":1589,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["ruleids",{"_index":17,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/EventCard.html":{},"interfaces/HasRules.html":{}}}],["rules.service.spec.ts",{"_index":2135,"title":{},"body":{"todo.html":{}}}],["rules.service.ts",{"_index":1461,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:102",{"_index":1487,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:120",{"_index":1486,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:142",{"_index":1484,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:168",{"_index":1481,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:198",{"_index":1493,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:207",{"_index":1495,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:285",{"_index":1496,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:322",{"_index":1492,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:357",{"_index":1491,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:378",{"_index":1489,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:41",{"_index":1511,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:426",{"_index":1494,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:43",{"_index":1508,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:45",{"_index":1529,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:49",{"_index":1505,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:56",{"_index":1525,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:63",{"_index":1501,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:70",{"_index":1510,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:75",{"_index":1519,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:81",{"_index":1514,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:86",{"_index":1522,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["rules.service.ts:89",{"_index":1478,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["run",{"_index":320,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["runtimechecks",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":146,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["s/shipname.html",{"_index":2025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["same",{"_index":1390,"title":{},"body":{"injectables/GameEffects.html":{}}}],["sawmill",{"_index":1940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["select",{"_index":340,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getagglomerationpilescardsloaded",{"_index":424,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getagglomerationselected",{"_index":435,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(agglomerationpilescardsselectors.getallagglomerationpilescards",{"_index":415,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecards",{"_index":836,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getalldiscardpilecardsreverse",{"_index":838,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsloaded",{"_index":840,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(discardpilecardsselectors.getdiscardpilecardsselected",{"_index":842,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["select(domainscardsselectors.getalldomainscards",{"_index":1220,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsloaded",{"_index":1222,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getdomainscardsselected",{"_index":1043,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["select(domainscardsselectors.getlandcardpivotbyid(id",{"_index":1135,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["select(eventspilecardsselectors.getalleventspilecards",{"_index":1336,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsloaded",{"_index":1338,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(eventspilecardsselectors.geteventspilecardsselected",{"_index":1340,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["select(gameselectors.getgamenextproductiondie",{"_index":1431,"title":{},"body":{"injectables/GameFacade.html":{}}}],["select(handscardsselectors.getallhandscards",{"_index":1670,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(handscardsselectors.gethandscardsselected",{"_index":1672,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["select(landspilecardsselectors.getalllandspilecards",{"_index":1736,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsloaded",{"_index":1737,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(landspilecardsselectors.getlandspilecardsselected",{"_index":1738,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["select(stockpilescardsselectors.getallstockpilescards",{"_index":1861,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsloaded",{"_index":1862,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["select(stockpilescardsselectors.getstockpilescardsselected",{"_index":1863,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selected",{"_index":178,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{}}}],["selectedagglomerationpilescards",{"_index":397,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selecteddiscardpilecards",{"_index":829,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["selecteddomainscards",{"_index":1169,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["selectedeventspilecards",{"_index":1330,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["selectedhandscards",{"_index":1662,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["selectedid",{"_index":450,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["selectedids",{"_index":1253,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["selectedland",{"_index":1062,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedland.type",{"_index":1064,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedlandspilecards",{"_index":1731,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectedpivot",{"_index":1060,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.availableresources",{"_index":1066,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedpivot.id",{"_index":1070,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["selectedstockpilescards",{"_index":1855,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["selectfirst",{"_index":305,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{}}}],["selectfirstcardfromagglomerationpile",{"_index":399,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectfirstcardfromagglomerationpile(pileid",{"_index":412,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{}}}],["selectfirstevent",{"_index":1467,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["selecthandcard",{"_index":1618,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selecthandcard(pivotid",{"_index":1628,"title":{},"body":{"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{}}}],["selection",{"_index":199,"title":{},"body":{"components/ActionsComponent.html":{}}}],["selectlandspilecard",{"_index":1733,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selectlandspilecard(pivotid",{"_index":1735,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["sell",{"_index":2085,"title":{},"body":{"license.html":{}}}],["server",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":322,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["set",{"_index":460,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["setaction",{"_index":1411,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setaction(action",{"_index":1418,"title":{},"body":{"injectables/GameFacade.html":{}}}],["setnextproductiondie",{"_index":775,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setnextproductiondie(value",{"_index":782,"title":{},"body":{"components/DiceComponent.html":{},"injectables/GameFacade.html":{}}}],["setphase",{"_index":1412,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setphase(phase",{"_index":1421,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer",{"_index":1413,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["setplayer(player",{"_index":1423,"title":{},"body":{"injectables/GameFacade.html":{},"components/PhasesComponent.html":{}}}],["shadow",{"_index":598,"title":{},"body":{"components/CardBackComponent.html":{}}}],["shall",{"_index":2094,"title":{},"body":{"license.html":{}}}],["ship",{"_index":757,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["ship.tradepoints",{"_index":759,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname",{"_index":740,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipname.get(type",{"_index":754,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["shipnamekey",{"_index":741,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ships",{"_index":966,"title":{},"body":{"components/DomainComponent.html":{}}}],["shouldn't",{"_index":1125,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["shuffle",{"_index":1320,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["shuffled",{"_index":1323,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.map((cardid",{"_index":1327,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{},"interfaces/LandsPileCardsEntity.html":{}}}],["shuffled.splice",{"_index":1325,"title":{},"body":{"interfaces/EventsPileCardsEntity.html":{}}}],["shuffledcards",{"_index":1845,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards.length",{"_index":1848,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].id",{"_index":1853,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["shuffledcards[cardindex].interface",{"_index":1852,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["sibling",{"_index":1979,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["siblingrivalry",{"_index":1978,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slice(0",{"_index":1557,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slot",{"_index":1577,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["slots",{"_index":182,"title":{},"body":{"components/ActionsComponent.html":{}}}],["software",{"_index":2069,"title":{},"body":{"license.html":{}}}],["solid",{"_index":592,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{}}}],["something",{"_index":1140,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["soothsayer",{"_index":1928,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"modules/ActionsModule.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"modules/CardBackModule.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"modules/CardFrontModule.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"modules/DataAccessGameModule.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"modules/DiceModule.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"modules/DomainModule.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"modules/FeatureEngineModule.html":{},"modules/FeatureGameModule.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"modules/HandModule.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"modules/UiCardModule.html":{}}}],["started",{"_index":2039,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startnewgame",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":428,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"interfaces/GameState.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["state.entities",{"_index":1288,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[0",{"_index":1278,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.entities[state.selectedids[1",{"_index":1280,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.ids[0",{"_index":1361,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedid",{"_index":1364,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["state.selectedids",{"_index":1273,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.filter",{"_index":1274,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state.selectedids.find((selectedid",{"_index":1271,"title":{},"body":{"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["state/agglomeration",{"_index":686,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/discard",{"_index":673,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/domains",{"_index":679,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/events",{"_index":683,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.effects",{"_index":689,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.facade",{"_index":690,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/game/game.reducer",{"_index":692,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/hands",{"_index":694,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/lands",{"_index":698,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["state/stock",{"_index":702,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["steal",{"_index":2139,"title":{},"body":{"todo.html":{}}}],["stock",{"_index":1840,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stock_piles_cards_feature_key",{"_index":1869,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilecard",{"_index":1565,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.cardid",{"_index":1560,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.cardtype",{"_index":1559,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilecard.id",{"_index":1833,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilecard.pileid",{"_index":1556,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpiles",{"_index":1844,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpiles[i",{"_index":1851,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescards",{"_index":1477,"title":{},"body":{"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescards.find",{"_index":1564,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["stockpilescards.push",{"_index":1850,"title":{},"body":{"interfaces/StockPilesCardsEntity.html":{}}}],["stockpilescardsactions",{"_index":1839,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.addcardstostockpilebottom",{"_index":1867,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.addstockpilescards",{"_index":1814,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardsfailure",{"_index":1822,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.loadstockpilescardssuccess",{"_index":1821,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsactions.removecardsfromstockpiletop",{"_index":1866,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsactions.removestockpilescards",{"_index":1835,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsactions.setstockpilescardsinitialized",{"_index":1817,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter",{"_index":1871,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.addmany(stockpilescards",{"_index":1882,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.getinitialstate",{"_index":1873,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.removemany(ids",{"_index":1880,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsadapter.setall(stockpilescards",{"_index":1877,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardseffects",{"_index":701,"title":{"injectables/StockPilesCardsEffects.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsentity",{"_index":1832,"title":{"interfaces/StockPilesCardsEntity.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsfacade",{"_index":669,"title":{"injectables/StockPilesCardsFacade.html":{}},"body":{"modules/DataAccessGameModule.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsFacade.html":{},"overview.html":{}}}],["stockpilescardsfeature",{"_index":1842,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardspartialstate",{"_index":1868,"title":{"interfaces/StockPilesCardsPartialState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsreducer",{"_index":1874,"title":{},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsselectors",{"_index":1843,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["stockpilescardsselectors.getstockpilecardentitybypivot",{"_index":1828,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stockpilescardsstate",{"_index":1870,"title":{"interfaces/StockPilesCardsState.html":{}},"body":{"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["stockpilescardsstore",{"_index":1810,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["stone",{"_index":2002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stonequarry",{"_index":1996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["store",{"_index":308,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"dependencies.html":{}}}],["storedevtoolsmodule",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature",{"_index":708,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forfeature(fromgame.game_feature_key",{"_index":705,"title":{},"body":{"modules/DataAccessGameModule.html":{}}}],["storemodule.forroot",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["storybook/core",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["strength",{"_index":974,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["strengthmasterydomainid",{"_index":1552,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["strengthpoints",{"_index":736,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["strictactionimmutability",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["strictstateimmutability",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/CanPrint.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsEntity.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameRulesService.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":591,"title":{},"body":{"components/CardBackComponent.html":{}}}],["stylelint",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":53,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["styleurls",{"_index":62,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["subject",{"_index":655,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/GameRulesService.html":{},"license.html":{}}}],["sublicense",{"_index":2083,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1593,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((card",{"_index":1568,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["subscribe((cards",{"_index":1561,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["substantial",{"_index":2096,"title":{},"body":{"license.html":{}}}],["success",{"_index":328,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["sumresources",{"_index":1065,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["support",{"_index":2123,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2124,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":196,"title":{},"body":{"components/ActionsComponent.html":{}}}],["swapselectedcards",{"_index":1184,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["swapselecteddomainscards",{"_index":84,"title":{},"body":{"components/ActionsComponent.html":{}}}],["switchmap",{"_index":1381,"title":{},"body":{"injectables/GameEffects.html":{}}}],["switchmap((value",{"_index":1387,"title":{},"body":{"injectables/GameEffects.html":{}}}],["take",{"_index":361,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["take(1",{"_index":349,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["takeonedefinedpivotorthrow",{"_index":1005,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeonedefinedpivotorthrow(id",{"_index":1010,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["takeuntil",{"_index":1531,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["takeuntil(this.gameended",{"_index":1503,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["taormina",{"_index":60,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{},"index.html":{}}}],["taormina/data",{"_index":133,"title":{},"body":{"components/ActionsComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["taormina/feature",{"_index":135,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{}}}],["taormina/shared",{"_index":144,"title":{},"body":{"components/ActionsComponent.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/LandsPileCardsEntity.html":{},"components/PhasesComponent.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["taormina/ui",{"_index":995,"title":{},"body":{"modules/DomainModule.html":{},"modules/PilesModule.html":{}}}],["target=\"_self\">shipnamekey",{"_index":2026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tasks",{"_index":407,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["templateurl",{"_index":64,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["test",{"_index":2137,"title":{},"body":{"todo.html":{}}}],["thieves",{"_index":1468,"title":{},"body":{"injectables/GameRulesService.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["thievesresourcecountthreshold",{"_index":1021,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.actions$.pipe",{"_index":313,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/GameEffects.html":{},"injectables/HandsCardsEffects.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/StockPilesCardsEffects.html":{}}}],["this.agglomerationpilescards.initnewgame",{"_index":1542,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescards.removeagglomerationpilecard",{"_index":1580,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescards.selectedagglomerationpilescards",{"_index":157,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.agglomerationpilescardsstore.pipe",{"_index":339,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{}}}],["this.auspiciousyear$.pipe",{"_index":1512,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.countandsteal$.subscribe",{"_index":1534,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.addcardtodiscardpile",{"_index":1608,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.discardpilecards.initnewgame",{"_index":1546,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards",{"_index":939,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.alldomainscards$.pipe",{"_index":952,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.cleardomaincardselection",{"_index":173,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.domainscards.countandstealunprotectedgoldandwool",{"_index":1504,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.createavailabledomaincard",{"_index":1586,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcardsvictorypointsfordomain(domainid",{"_index":1547,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getcelebrationpointsfordomain(domainid",{"_index":938,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxcol(domainid",{"_index":946,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmaxrow(domainid",{"_index":951,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainmincol(domainid",{"_index":945,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getdomainminrow(domainid",{"_index":950,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.strength",{"_index":1549,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmasterydomainfortype(masterypointstype.trade",{"_index":1548,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.getmerchantshipcountfordomain(domainid",{"_index":937,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.givelockedresources",{"_index":170,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.increaseresources(pivotid",{"_index":964,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.increaseresourcesforauspiciousyear",{"_index":1513,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.increaseresourcesfordie(value",{"_index":1518,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.initnewgame",{"_index":1540,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.lockresource(pivotid",{"_index":962,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.putcardinslot",{"_index":1582,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.removedomaincard(domaincard.id",{"_index":1604,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards",{"_index":1573,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscards.selecteddomainscards$.pipe",{"_index":158,"title":{},"body":{"components/ActionsComponent.html":{},"components/DomainComponent.html":{}}}],["this.domainscards.swapselectedcards",{"_index":174,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.domainscards.toggledomaincardselection(pivotid",{"_index":961,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.unlockresources(pivotid",{"_index":963,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.domainscards.uselockedresources",{"_index":1572,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.domainscardsstore.pipe",{"_index":1042,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.domainscardsstore.select",{"_index":1014,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.event$.pipe",{"_index":1523,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.initnewgame",{"_index":1545,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.removeselected",{"_index":1789,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.reseteventspile",{"_index":1521,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectedeventspilecards",{"_index":1788,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.eventspilecards.selectedeventspilecards$.pipe",{"_index":1497,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.eventspilecards.selectfirst",{"_index":1524,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.festival$.pipe",{"_index":1520,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.action",{"_index":1790,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.eventdie",{"_index":791,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.eventdie$.pipe",{"_index":1526,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.eventdie$.pipe(filter((die",{"_index":1506,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.initnewgame",{"_index":1539,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.nextproductiondie",{"_index":792,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.phase",{"_index":1783,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.phase$.pipe",{"_index":152,"title":{},"body":{"components/ActionsComponent.html":{},"components/DiceComponent.html":{}}}],["this.game.phase$.pipe(take(1)).subscribe((phase",{"_index":1570,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.player",{"_index":1785,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.productiondie",{"_index":790,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.productiondie$.pipe",{"_index":1515,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(action.name",{"_index":1607,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.setaction(undefined",{"_index":1791,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setnextproductiondie(value",{"_index":793,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.game.setphase(phase",{"_index":1784,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.setplayer(player",{"_index":1786,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.game.throweventdie",{"_index":1569,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.game.throwproductiondie",{"_index":1571,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gameended$.next",{"_index":1533,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.gamerules.getvictorypointsfordomain(domainid",{"_index":944,"title":{},"body":{"components/DomainComponent.html":{}}}],["this.gamerules.initnewgame",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gamerules.putlandspilecardinslot",{"_index":169,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.throwdice",{"_index":789,"title":{},"body":{"components/DiceComponent.html":{}}}],["this.gamerules.useactioncard",{"_index":167,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputagglomerationpilecardinslot",{"_index":156,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamerules.useresourcestoputhandcardinslot",{"_index":163,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.gamestore.select(gameselectors.getgamenextproductiondie",{"_index":1395,"title":{},"body":{"injectables/GameEffects.html":{}}}],["this.getlandcardfrompivot(firstpivot",{"_index":1049,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(pivot",{"_index":1051,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.getlandcardfrompivot(selectedpivot",{"_index":1063,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.handscards.addcardstohand(handid",{"_index":1563,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.allhandscards$.pipe",{"_index":1632,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.initnewgame",{"_index":1541,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.removehandcard(handcard.id",{"_index":1591,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards",{"_index":172,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.handscards.selectedhandscards$.pipe",{"_index":164,"title":{},"body":{"components/ActionsComponent.html":{}}}],["this.handscards.selecthandcard(pivotid",{"_index":1637,"title":{},"body":{"components/HandComponent.html":{}}}],["this.handscards.unselecthandcard",{"_index":1599,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesforauspiciousyear$.subscribe",{"_index":1537,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.increaseresourcesfordie$.subscribe",{"_index":1536,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.initnewgame",{"_index":1543,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.removelandspilecard(landspilecard.id",{"_index":1596,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.landspilecards.selectedlandspilecards",{"_index":171,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["this.reseteventspileonfestival$.subscribe",{"_index":1538,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.selectfirstevent$.subscribe",{"_index":1535,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.addcardstostockpilebottom(pileid",{"_index":1600,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.allstockpilescards",{"_index":1553,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.initnewgame",{"_index":1544,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescards.removecardsfromstockpiletop(pileid",{"_index":1562,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.stockpilescardsstore.pipe",{"_index":1827,"title":{},"body":{"injectables/StockPilesCardsEffects.html":{}}}],["this.store.dispatch",{"_index":437,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.addcardtodiscardpile",{"_index":848,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(discardpilecardsactions.initdiscardpilecardsnewgame",{"_index":846,"title":{},"body":{"injectables/DiscardPileCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.cleardomaincardselection",{"_index":1235,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.givelockedresources",{"_index":1233,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardsnewgame",{"_index":1225,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.initdomainscardssavedgame",{"_index":1226,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.lockresource",{"_index":1227,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.removedomaincard",{"_index":1240,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.swapselectedcards",{"_index":1239,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.unlockresources",{"_index":1228,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(domainscardsactions.uselockedresources",{"_index":1232,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardsnewgame",{"_index":1342,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.initeventspilecardssavedgame",{"_index":1343,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.removeselectedeventspilecard",{"_index":1346,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.reseteventspile",{"_index":1344,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(eventspilecardsactions.selectfirsteventspilecard",{"_index":1345,"title":{},"body":{"injectables/EventsPileCardsFacade.html":{}}}],["this.store.dispatch(gameactions.initnewgame",{"_index":1439,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setaction",{"_index":1446,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setnextproductiondie",{"_index":1442,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setphase",{"_index":1444,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.setplayer",{"_index":1445,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwdice",{"_index":1440,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throweventdie",{"_index":1443,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(gameactions.throwproductiondie",{"_index":1441,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.dispatch(handscardsactions.addcardstohand",{"_index":1677,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardsnewgame",{"_index":1675,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.inithandscardssavedgame",{"_index":1676,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.removehandcard",{"_index":1680,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.selecthandcard",{"_index":1678,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(handscardsactions.unselecthandcard",{"_index":1679,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardsnewgame",{"_index":1741,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.initlandspilecardssavedgame",{"_index":1742,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(landspilecardsactions.removelandspilecard",{"_index":1744,"title":{},"body":{"injectables/LandsPileCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardsnewgame",{"_index":1864,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.dispatch(stockpilescardsactions.initstockpilescardssavedgame",{"_index":1865,"title":{},"body":{"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe",{"_index":414,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameaction",{"_index":1428,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameeventdie",{"_index":1429,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgamephase",{"_index":1433,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameplayer",{"_index":1435,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(gameselectors.getgameproductiondie",{"_index":1437,"title":{},"body":{"injectables/GameFacade.html":{}}}],["this.store.pipe(select(handscardsselectors.gethandscardsloaded",{"_index":1671,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["this.store.select",{"_index":417,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxcol(domainid",{"_index":1242,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmaxrow(domainid",{"_index":1244,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainmincol(domainid",{"_index":1241,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.store.select(domainscardsselectors.getdomainminrow(domainid",{"_index":1243,"title":{},"body":{"injectables/DomainsCardsFacade.html":{}}}],["this.takeonedefinedpivotorthrow(action.id).pipe",{"_index":1074,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.thieves$.pipe",{"_index":1502,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["this.updatesavailableresources",{"_index":1089,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increaseone",{"_index":1103,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["this.updatesavailableresources(increasetwo",{"_index":1104,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["through",{"_index":433,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["throw",{"_index":345,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{},"injectables/StockPilesCardsEffects.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["throwdice",{"_index":1375,"title":{},"body":{"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{}}}],["throwdisabled",{"_index":776,"title":{},"body":{"components/DiceComponent.html":{}}}],["throwevent",{"_index":1376,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throweventdie",{"_index":1414,"title":{},"body":{"injectables/GameFacade.html":{}}}],["thrown",{"_index":2144,"title":{},"body":{"todo.html":{}}}],["throwproduction",{"_index":1377,"title":{},"body":{"injectables/GameEffects.html":{}}}],["throwproductiondie",{"_index":1415,"title":{},"body":{"injectables/GameFacade.html":{}}}],["todo",{"_index":1829,"title":{"todo.html":{}},"body":{"injectables/StockPilesCardsEffects.html":{},"todo.html":{}}}],["todos",{"_index":2133,"title":{},"body":{"todo.html":{}}}],["toggledomaincardselection",{"_index":884,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toggledomaincardselection(pivotid",{"_index":921,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["toll",{"_index":1947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tollbridge",{"_index":1946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top",{"_index":623,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["tort",{"_index":2118,"title":{},"body":{"license.html":{}}}],["town",{"_index":1937,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["townentities",{"_index":390,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{}}}],["trade",{"_index":972,"title":{},"body":{"components/DomainComponent.html":{},"miscellaneous/enumerations.html":{}}}],["trademasterydomainid",{"_index":1551,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["tradepoints",{"_index":737,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/functions.html":{}}}],["traderoute",{"_index":1931,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["travel",{"_index":1976,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tree",{"_index":55,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["true",{"_index":468,"title":{},"body":{"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"modules/AppModule.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{}}}],["tslib",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/ActionCard.html":{},"components/ActionsComponent.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"components/AppComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"interfaces/DiscardPileCardsEntity.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"interfaces/Domain.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"injectables/EventsPileCardsEffects.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/EventsPileCardsFacade.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"interfaces/Hand.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/HandsCardsEntity.html":{},"injectables/HandsCardsFacade.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/HasColor.html":{},"interfaces/HasCost.html":{},"interfaces/HasId.html":{},"interfaces/HasName.html":{},"interfaces/HasRules.html":{},"interfaces/HasVictoryPoints.html":{},"interfaces/LandCard.html":{},"injectables/LandsPileCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/LandsPileCardsFacade.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"injectables/StockPilesCardsFacade.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2237,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeiconname",{"_index":558,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["typeof",{"_index":32,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DiscardPileCardsFacade.html":{},"interfaces/EventCard.html":{},"interfaces/HandsCardsEntity.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["types",{"_index":1055,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["types/action",{"_index":28,"title":{},"body":{"interfaces/ActionCard.html":{}}}],["types/agglomeration",{"_index":269,"title":{},"body":{"interfaces/AgglomerationCard.html":{}}}],["types/development",{"_index":743,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["types/dice",{"_index":1711,"title":{},"body":{"interfaces/LandCard.html":{}}}],["types/domain",{"_index":270,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/Domain.html":{},"interfaces/Hand.html":{},"interfaces/HasColor.html":{},"interfaces/LandCard.html":{}}}],["types/event",{"_index":1297,"title":{},"body":{"interfaces/EventCard.html":{}}}],["types/resources",{"_index":272,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasCost.html":{},"interfaces/LandCard.html":{}}}],["typescript",{"_index":38,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"interfaces/CanPrint.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"interfaces/DevelopmentCard.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/EventCard.html":{},"injectables/GameEffects.html":{},"interfaces/HasName.html":{},"interfaces/LandCard.html":{},"todo.html":{}}}],["uicardmodule",{"_index":992,"title":{"modules/UiCardModule.html":{}},"body":{"modules/DomainModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"modules.html":{},"overview.html":{}}}],["unavailable",{"_index":1115,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["undefined",{"_index":45,"title":{},"body":{"interfaces/ActionCard.html":{},"interfaces/AgglomerationCard.html":{},"injectables/AgglomerationPilesCardsEffects.html":{},"interfaces/AgglomerationPilesCardsEntity.html":{},"interfaces/AgglomerationPilesCardsPartialState.html":{},"interfaces/AgglomerationPilesCardsState.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/DiscardPileCardsPartialState.html":{},"interfaces/DiscardPileCardsState.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"injectables/DomainsCardsFacade.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"interfaces/EventCard.html":{},"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"interfaces/HandsCardsPartialState.html":{},"interfaces/HandsCardsState.html":{},"interfaces/LandCard.html":{},"interfaces/LandsPileCardsPartialState.html":{},"interfaces/LandsPileCardsState.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsPartialState.html":{},"interfaces/StockPilesCardsState.html":{},"todo.html":{}}}],["unlock",{"_index":984,"title":{},"body":{"components/DomainComponent.html":{}}}],["unlockresources",{"_index":885,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unlockresources(pivotid",{"_index":923,"title":{},"body":{"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{}}}],["unselect",{"_index":979,"title":{},"body":{"components/DomainComponent.html":{}}}],["unselectedstate",{"_index":1363,"title":{},"body":{"interfaces/EventsPileCardsPartialState.html":{},"interfaces/EventsPileCardsState.html":{}}}],["unselecthandcard",{"_index":1665,"title":{},"body":{"injectables/HandsCardsFacade.html":{}}}],["unsetaction",{"_index":1770,"title":{},"body":{"components/PhasesComponent.html":{}}}],["unused",{"_index":645,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["up",{"_index":1967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update",{"_index":1077,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updateavailable",{"_index":1069,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updates",{"_index":1025,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{}}}],["updatesavailableresources",{"_index":1002,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesfour",{"_index":1095,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updateslocked",{"_index":1056,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesone",{"_index":1088,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatesthree",{"_index":1093,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updatestwo",{"_index":1091,"title":{},"body":{"injectables/DomainsCardsEffects.html":{}}}],["updtr@4.0.0node",{"_index":2050,"title":{},"body":{"index.html":{}}}],["upper",{"_index":1968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url",{"_index":663,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{}}}],["use",{"_index":190,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"license.html":{}}}],["useactioncard",{"_index":85,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/GameRulesService.html":{}}}],["useactioncarddisabled",{"_index":86,"title":{},"body":{"components/ActionsComponent.html":{}}}],["uselockedresources",{"_index":1003,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{}}}],["useresourcestoputagglomerationpilecardinslot",{"_index":1475,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["useresourcestoputhandcardinslot",{"_index":1476,"title":{},"body":{"injectables/GameRulesService.html":{}}}],["using",{"_index":429,"title":{},"body":{"injectables/AgglomerationPilesCardsFacade.html":{},"injectables/DiscardPileCardsFacade.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"injectables/StockPilesCardsFacade.html":{},"index.html":{}}}],["utils",{"_index":565,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DomainComponent.html":{},"injectables/GameEffects.html":{}}}],["utils/src/lib/assets.ts",{"_index":2031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/dice.ts",{"_index":2029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils/src/lib/domain.ts",{"_index":2035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uuid",{"_index":380,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":379,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["v16.16.0",{"_index":2052,"title":{},"body":{"index.html":{}}}],["v4",{"_index":378,"title":{},"body":{"interfaces/AgglomerationPilesCardsEntity.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsEntity.html":{},"interfaces/EventsPileCardsEntity.html":{},"injectables/HandsCardsEffects.html":{},"interfaces/LandsPileCardsEntity.html":{},"injectables/StockPilesCardsEffects.html":{},"interfaces/StockPilesCardsEntity.html":{}}}],["value",{"_index":311,"title":{},"body":{"injectables/AgglomerationPilesCardsEffects.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsEffects.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsEffects.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameEffects.html":{},"injectables/GameFacade.html":{},"interfaces/GamePartialState.html":{},"injectables/GameRulesService.html":{},"interfaces/GameState.html":{},"components/HandComponent.html":{},"injectables/HandsCardsEffects.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsEffects.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsEffects.html":{},"injectables/StockPilesCardsFacade.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":210,"title":{},"body":{"components/ActionsComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CardBackComponent.html":{},"components/CardComponent.html":{},"components/CardFrontComponent.html":{},"components/DiceComponent.html":{},"components/DomainComponent.html":{},"components/HandComponent.html":{},"components/PhasesComponent.html":{}}}],["vars",{"_index":646,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{},"todo.html":{}}}],["version",{"_index":2051,"title":{},"body":{"index.html":{},"properties.html":{}}}],["victory",{"_index":975,"title":{},"body":{"components/DomainComponent.html":{}}}],["victorypoints",{"_index":257,"title":{},"body":{"interfaces/AgglomerationCard.html":{},"interfaces/DevelopmentCard.html":{},"interfaces/HasVictoryPoints.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/ActionsComponent.html":{},"injectables/AgglomerationPilesCardsFacade.html":{},"components/AppComponent.html":{},"interfaces/Chainable.html":{},"interfaces/Chainable-1.html":{},"components/DiceComponent.html":{},"injectables/DiscardPileCardsFacade.html":{},"components/DomainComponent.html":{},"injectables/DomainsCardsFacade.html":{},"injectables/EventsPileCardsFacade.html":{},"injectables/GameFacade.html":{},"injectables/GameRulesService.html":{},"components/HandComponent.html":{},"injectables/HandsCardsFacade.html":{},"injectables/LandsPileCardsFacade.html":{},"components/PhasesComponent.html":{},"injectables/StockPilesCardsFacade.html":{}}}],["warehouse",{"_index":1944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":2104,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2099,"title":{},"body":{"license.html":{}}}],["warrior",{"_index":761,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{}}}],["warrior.celebrationpoints",{"_index":764,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warrior.strengthpoints",{"_index":763,"title":{},"body":{"interfaces/DevelopmentCard.html":{}}}],["warriorname",{"_index":742,"title":{},"body":{"interfaces/DevelopmentCard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["weaving",{"_index":1943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["went",{"_index":1141,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["wheat",{"_index":2001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":2116,"title":{},"body":{"license.html":{}}}],["white",{"_index":589,"title":{},"body":{"components/CardBackComponent.html":{}}}],["width",{"_index":568,"title":{},"body":{"components/CardBackComponent.html":{},"components/CardFrontComponent.html":{}}}],["withlatestfrom",{"_index":1013,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"injectables/GameEffects.html":{}}}],["without",{"_index":2074,"title":{},"body":{"license.html":{}}}],["wood",{"_index":1999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wool",{"_index":2003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["works",{"_index":611,"title":{},"body":{"components/CardComponent.html":{}}}],["wrong",{"_index":1142,"title":{},"body":{"injectables/DomainsCardsEffects.html":{},"interfaces/DomainsCardsPartialState.html":{},"interfaces/DomainsCardsState.html":{},"injectables/GameRulesService.html":{}}}],["year",{"_index":1971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":2024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":624,"title":{},"body":{"components/CardFrontComponent.html":{}}}],["zone.js",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":242,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/BoardModule.html":{},"modules/CardBackModule.html":{},"modules/CardFrontModule.html":{},"modules/DataAccessGameModule.html":{},"modules/DiceModule.html":{},"modules/DomainModule.html":{},"modules/FeatureGameModule.html":{},"modules/HandModule.html":{},"modules/PhasesModule.html":{},"modules/PilesModule.html":{},"modules/UiCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCard.html":{"url":"interfaces/ActionCard.html","title":"interface - ActionCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/action.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Action Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         ActionName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { ActionName } from '../types/action';\n\nexport const ACTION_CARD_INTERFACE_NAME = 'ActionCard';\n\n/**\n * Interface for the Action Cards\n */\nexport interface ActionCard extends HasId, HasName, HasRules {\n  interface: typeof ACTION_CARD_INTERFACE_NAME;\n  id: string;\n  name: ActionName;\n  ruleIds: string[];\n}\n\nexport const createActionCard = (\n  id: string,\n  name: ActionName,\n  ruleIds: string[]\n): ActionCard => ({ interface: ACTION_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isActionCard(obj: any): obj is ActionCard {\n  return obj !== undefined && obj.interface === ACTION_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionsComponent.html":{"url":"components/ActionsComponent.html","title":"component - ActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/actions/actions/actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-actions\n            \n\n            \n                styleUrls\n                ./actions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./actions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyAgglomeration\n                            \n                            \n                                buyDevelopment\n                            \n                            \n                                buyDisabled\n                            \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                getDomainSelectedAgglomerationSlots\n                            \n                            \n                                getDomainSelectedDevelopmentCards\n                            \n                            \n                                getDomainSelectedLandCards\n                            \n                            \n                                getHandSelectedDevelopmentCard\n                            \n                            \n                                getPileSelectedLandCard\n                            \n                            \n                                getSelectedActionCard\n                            \n                            \n                                getSelectedAgglomerationPileCard\n                            \n                            \n                                getSelectedAvailableAgglomerationSlots\n                            \n                            \n                                getSelectedAvailableDevelopmentSlots\n                            \n                            \n                                getSelectedAvailableLandSlots\n                            \n                            \n                                getSelectedHandCard\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                putLand\n                            \n                            \n                                swapSelectedDomainsCards\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useActionCardDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, agglomerationPilesCards: AgglomerationPilesCardsFacade, landsPileCards: LandsPileCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCards\n                                                  \n                                                        \n                                                                        AgglomerationPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyAgglomeration\n                        \n                    \n                \n            \n            \n                \nbuyAgglomeration()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDevelopment\n                        \n                    \n                \n            \n            \n                \nbuyDevelopment()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyDisabled\n                        \n                    \n                \n            \n            \n                \nbuyDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedDevelopmentCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedDevelopmentCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainSelectedLandCards\n                        \n                    \n                \n            \n            \n                \ngetDomainSelectedLandCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandSelectedDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetHandSelectedDevelopmentCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPileSelectedLandCard\n                        \n                    \n                \n            \n            \n                \ngetPileSelectedLandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedActionCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAgglomerationPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedAgglomerationPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableAgglomerationSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableAgglomerationSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableDevelopmentSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableDevelopmentSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedAvailableLandSlots\n                        \n                    \n                \n            \n            \n                \ngetSelectedAvailableLandSlots()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedHandCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLand\n                        \n                    \n                \n            \n            \n                \nputLand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedDomainsCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedDomainsCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCardDisabled\n                        \n                    \n                \n            \n            \n                \nuseActionCardDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/actions/actions/actions.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n  AgglomerationPilesCardsEntity,\n  AgglomerationPilesCardsFacade,\n  GameFacade,\n  HandsCardsEntity,\n  HandsCardsFacade,\n  LandsPileCardsEntity,\n  LandsPileCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-actions',\n  templateUrl: './actions.component.html',\n  styleUrls: ['./actions.component.css'],\n})\nexport class ActionsComponent {\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private agglomerationPilesCards: AgglomerationPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  buyDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => phase !== GamePhase.LoopActions)\n    );\n  }\n\n  buyAgglomeration(): void {\n    this.gameRules.useResourcesToPutAgglomerationPileCardInSlot();\n  }\n\n  getSelectedAgglomerationPileCard(): Observable {\n    return this.agglomerationPilesCards.selectedAgglomerationPilesCards$;\n  }\n\n  getSelectedAvailableAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_AGGLOMERATION_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedAgglomerationSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === AGGLOMERATION_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  buyDevelopment(): void {\n    this.gameRules.useResourcesToPutHandCardInSlot();\n  }\n\n  getHandSelectedDevelopmentCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter(\n        (handCard) => handCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n      )\n    );\n  }\n\n  getSelectedAvailableDevelopmentSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_DEVELOPMENT_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedDevelopmentCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) =>\n            domainCard?.cardType === DEVELOPMENT_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  useActionCardDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map((phase) => {\n        return phase !== GamePhase.LoopActions;\n      })\n    );\n  }\n\n  useActionCard(): void {\n    this.gameRules.useActionCard();\n  }\n\n  getSelectedActionCard(): Observable {\n    return this.handsCards.selectedHandsCards$.pipe(\n      filter((handCard) => handCard?.cardType === ACTION_CARD_INTERFACE_NAME)\n    );\n  }\n\n  putLand(): void {\n    this.gameRules.putLandsPileCardInSlot();\n  }\n\n  giveLockedResources(): void {\n    this.domainsCards.giveLockedResources();\n  }\n\n  getPileSelectedLandCard(): Observable {\n    return this.landsPileCards.selectedLandsPileCards$;\n  }\n\n  getSelectedHandCard(): Observable {\n    return this.handsCards.selectedHandsCards$;\n  }\n\n  getSelectedAvailableLandSlots(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === AVAILABLE_LAND_SLOT\n        )\n      )\n    );\n  }\n\n  getDomainSelectedLandCards(): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainCards) =>\n        domainCards.filter(\n          (domainCard) => domainCard?.cardType === LAND_CARD_INTERFACE_NAME\n        )\n      )\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.domainsCards.clearDomainCardSelection();\n  }\n\n  swapSelectedDomainsCards(): void {\n    this.domainsCards.swapSelectedCards();\n  }\n}\n\n    \n\n    \n        \n  \n    buy agglomeration\n  \n  \n    Pile Selected Agglomeration Card:\n    \n      {{ pivot.pileId }}\n    \n  \n  \n    Selected Available Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Agglomeration Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    buy development\n  \n  \n    Hand Selected Development Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Development Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Development Cards:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    Use action card\n  \n  \n    Selected Action Card:\n    \n      {{ pivot.cardId }}\n    \n  \n\n\n\n  put land\n  \n    Give locked resources\n  \n  \n    Pile Selected Land Card:\n    \n      {{ pivot.cardId }}\n    \n  \n  \n    Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n  \n    Domain Selected Available Land Slots:\n    \n      {{ pivot.domainId }}\n      {{ pivot.col }}\n      {{ pivot.row }}\n    \n  \n\n\n\n  \n    swap selected domains cards\n  \n    clear domain selection\n  \n\n\n    \n\n    \n                \n                    ./actions.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      buy agglomeration        Pile Selected Agglomeration Card:          {{ pivot.pileId }}            Selected Available Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Agglomeration Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            buy development        Hand Selected Development Card:          {{ pivot.cardId }}            Selected Available Development Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Development Cards:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Use action card        Selected Action Card:          {{ pivot.cardId }}        put land      Give locked resources        Pile Selected Land Card:          {{ pivot.cardId }}            Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            Domain Selected Available Land Slots:          {{ pivot.domainId }}      {{ pivot.col }}      {{ pivot.row }}            swap selected domains cards      clear domain selection  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/actions/actions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionsComponent } from './actions/actions.component';\n\n@NgModule({\n  declarations: [ActionsComponent],\n  imports: [CommonModule],\n  exports: [ActionsComponent],\n})\nexport class ActionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationCard.html":{"url":"interfaces/AgglomerationCard.html","title":"interface - AgglomerationCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/agglomeration.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Agglomeration Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         AgglomerationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport { AgglomerationType } from '../types/agglomeration';\nimport { DomainColor } from '../types/domain';\nimport { ResourceType } from '../types/resources';\n\nexport const AGGLOMERATION_CARD_INTERFACE_NAME = 'AgglomerationCard';\n\nexport const AVAILABLE_AGGLOMERATION_SLOT = 'AvailableAgglomerationSlot';\n\n/**\n * Interface for the Agglomeration Cards\n */\nexport interface AgglomerationCard\n  extends HasId,\n    HasCost,\n    HasVictoryPoints,\n    HasColor,\n    CanPrint {\n  interface: typeof AGGLOMERATION_CARD_INTERFACE_NAME;\n  id: string;\n  cost: Map;\n  type: AgglomerationType;\n  victoryPoints?: number;\n  color?: DomainColor;\n}\n\nexport const createAgglomerationCard = (\n  id: string,\n  cost: Map,\n  type: AgglomerationType,\n  victoryPoints?: number,\n  color?: DomainColor\n): AgglomerationCard => ({\n  interface: AGGLOMERATION_CARD_INTERFACE_NAME,\n  id,\n  cost,\n  type,\n  victoryPoints,\n  color,\n  print: (): string => `type: ${type}`,\n});\n\n/* eslint-disable no-magic-numbers */\nexport function createRoad(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 2],\n    ]),\n    AgglomerationType.Road,\n    0,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\nexport function createHamlet(\n  id: string,\n  color?: DomainColor\n): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Clay, 1],\n      [ResourceType.Wool, 1],\n      [ResourceType.Wheat, 1],\n    ]),\n    AgglomerationType.Hamlet,\n    1,\n    color\n  );\n}\n\n/* eslint-disable no-magic-numbers */\nexport function createTown(id: string, color?: DomainColor): AgglomerationCard {\n  return createAgglomerationCard(\n    id,\n    new Map([\n      [ResourceType.Wheat, 2],\n      [ResourceType.Stone, 3],\n    ]),\n    AgglomerationType.Town,\n    2,\n    color\n  );\n}\n/* eslint-enable no-magic-numbers */\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isAgglomerationCard(obj: any): obj is AgglomerationCard {\n  return (\n    obj !== undefined && obj.interface === AGGLOMERATION_CARD_INTERFACE_NAME\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgglomerationPilesCardsEffects.html":{"url":"injectables/AgglomerationPilesCardsEffects.html","title":"injectable - AgglomerationPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgglomerationPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                selectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, agglomerationPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationNewGame),\n      map(() =>\n        AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized({\n          agglomerationPilesCards: createInitialAgglomerationPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess(\n            {\n              agglomerationPilesCards: [],\n            }\n          );\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure(\n            { error }\n          );\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile\n      ),\n      concatMap((action) =>\n        this.agglomerationPilesCardsStore.pipe(\n          select(\n            AgglomerationPilesCardsSelectors.getFirstCardPivotForPile(\n              action.pileId\n            )\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(\n                `Can't get first card in empty agglomeration pile.`\n              );\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            AgglomerationPilesCardsActions.selectAgglomerationPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              AgglomerationPilesCardsActions.setAgglomerationPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, take } from 'rxjs/operators';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { createInitialAgglomerationPilesCards } from './agglomeration-piles-cards.models';\nimport * as AgglomerationPilesCardsFeature from './agglomeration-piles-cards.reducer';\nimport * as AgglomerationPilesCardsSelectors from './agglomeration-piles-cards.selectors';\n\n@Injectable()\nexport class AgglomerationPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationNewGame),\n      map(() =>\n        AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized({\n          agglomerationPilesCards: createInitialAgglomerationPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AgglomerationPilesCardsActions.initAgglomerationSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess(\n            {\n              agglomerationPilesCards: [],\n            }\n          );\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure(\n            { error }\n          );\n        },\n      })\n    )\n  );\n\n  selectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(\n        AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile\n      ),\n      concatMap((action) =>\n        this.agglomerationPilesCardsStore.pipe(\n          select(\n            AgglomerationPilesCardsSelectors.getFirstCardPivotForPile(\n              action.pileId\n            )\n          ),\n          map((pivot) => {\n            if (pivot === undefined) {\n              throw new Error(\n                `Can't get first card in empty agglomeration pile.`\n              );\n            }\n            return pivot;\n          }),\n          take(1),\n          map((pivot) =>\n            AgglomerationPilesCardsActions.selectAgglomerationPileCard({\n              id: pivot.id,\n            })\n          ),\n          catchError((error) =>\n            of(\n              AgglomerationPilesCardsActions.setAgglomerationPilesCardsError({\n                error: error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private agglomerationPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsEntity.html":{"url":"interfaces/AgglomerationPilesCardsEntity.html","title":"interface - AgglomerationPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'AgglomerationPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  agglomerationCards,\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_ROAD,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\nimport { AgglomerationType } from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'AgglomerationPilesCards' data\n */\nexport interface AgglomerationPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string;\n  cardId: string;\n}\n\nexport const createAgglomerationPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardId: string\n): AgglomerationPilesCardsEntity => ({\n  id,\n  pileId,\n  cardId,\n});\n\nexport const createInitialAgglomerationPilesCards =\n  (): AgglomerationPilesCardsEntity[] => {\n    const roadEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Road &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_ROAD,\n          roadCard.id\n        )\n      );\n\n    const hamletEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Hamlet &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_HAMLET,\n          roadCard.id\n        )\n      );\n\n    const townEntities = Array.from(agglomerationCards.values())\n      .filter(\n        (agglomerationCard) =>\n          agglomerationCard.type === AgglomerationType.Town &&\n          agglomerationCard.color === undefined\n      )\n      .map((roadCard) =>\n        createAgglomerationPilesCardsEntity(\n          uuidv4(),\n          ID_AGGLOMERATION_TOWN,\n          roadCard.id\n        )\n      );\n\n    return [...roadEntities, ...hamletEntities, ...townEntities];\n  };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgglomerationPilesCardsFacade.html":{"url":"injectables/AgglomerationPilesCardsFacade.html","title":"injectable - AgglomerationPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgglomerationPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allAgglomerationPilesCards$\n                            \n                            \n                                allHamletPivots$\n                            \n                            \n                                allRoadPivots$\n                            \n                            \n                                allTownPivots$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedAgglomerationPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeAgglomerationPileCard\n                            \n                            \n                                selectFirstCardFromAgglomerationPile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:48\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAgglomerationPileCard\n                        \n                    \n                \n            \n            \n                \nremoveAgglomerationPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstCardFromAgglomerationPile\n                        \n                    \n                \n            \n            \n                \nselectFirstCardFromAgglomerationPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allAgglomerationPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAllAgglomerationPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allHamletPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(\n      ID_AGGLOMERATION_HAMLET\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allRoadPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_ROAD)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTownPivots$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_TOWN)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:19\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAgglomerationPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.facade.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_ROAD,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport * as AgglomerationPilesCardsFeature from './agglomeration-piles-cards.reducer';\nimport * as AgglomerationPilesCardsSelectors from './agglomeration-piles-cards.selectors';\n\n@Injectable()\nexport class AgglomerationPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationPilesCardsLoaded)\n  );\n  allAgglomerationPilesCards$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAllAgglomerationPilesCards)\n  );\n  selectedAgglomerationPilesCards$ = this.store.pipe(\n    select(AgglomerationPilesCardsSelectors.getAgglomerationSelected)\n  );\n  allRoadPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_ROAD)\n  );\n  allHamletPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(\n      ID_AGGLOMERATION_HAMLET\n    )\n  );\n  allTownPivots$ = this.store.select(\n    AgglomerationPilesCardsSelectors.getCardPivotsForPile(ID_AGGLOMERATION_TOWN)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.initAgglomerationNewGame()\n    );\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.initAgglomerationSavedGame()\n    );\n  }\n\n  removeAgglomerationPileCard(id: string): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.removeAgglomerationPileCard({ id })\n    );\n  }\n\n  selectFirstCardFromAgglomerationPile(pileId: string): void {\n    this.store.dispatch(\n      AgglomerationPilesCardsActions.selectFirstCardFromAgglomerationPile({\n        pileId,\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsPartialState.html":{"url":"interfaces/AgglomerationPilesCardsPartialState.html","title":"interface - AgglomerationPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AGGLOMERATION_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AGGLOMERATION_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AGGLOMERATION_PILES_CARDS_FEATURE_KEY:         AgglomerationPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AgglomerationPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { AgglomerationPilesCardsEntity } from './agglomeration-piles-cards.models';\n\nexport const AGGLOMERATION_PILES_CARDS_FEATURE_KEY = 'agglomerationPilesCards';\n\nexport interface AgglomerationPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface AgglomerationPilesCardsPartialState {\n  readonly [AGGLOMERATION_PILES_CARDS_FEATURE_KEY]: AgglomerationPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const agglomerationPilesCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialAgglomerationPilesCardsState: AgglomerationPilesCardsState =\n  agglomerationPilesCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const agglomerationPilesCardsReducer = createReducer(\n  initialAgglomerationPilesCardsState,\n  on(AgglomerationPilesCardsActions.initAgglomerationNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(AgglomerationPilesCardsActions.initAgglomerationSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.selectAgglomerationPileCard,\n    (state, { id }) => ({\n      ...state,\n      selectedId: id,\n    })\n  ),\n  on(AgglomerationPilesCardsActions.unselectAgglomerationPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.removeAgglomerationPileCard,\n    (state, { id }) => agglomerationPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsError,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AgglomerationPilesCardsState.html":{"url":"interfaces/AgglomerationPilesCardsState.html","title":"interface - AgglomerationPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgglomerationPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as AgglomerationPilesCardsActions from './agglomeration-piles-cards.actions';\nimport { AgglomerationPilesCardsEntity } from './agglomeration-piles-cards.models';\n\nexport const AGGLOMERATION_PILES_CARDS_FEATURE_KEY = 'agglomerationPilesCards';\n\nexport interface AgglomerationPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface AgglomerationPilesCardsPartialState {\n  readonly [AGGLOMERATION_PILES_CARDS_FEATURE_KEY]: AgglomerationPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const agglomerationPilesCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialAgglomerationPilesCardsState: AgglomerationPilesCardsState =\n  agglomerationPilesCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const agglomerationPilesCardsReducer = createReducer(\n  initialAgglomerationPilesCardsState,\n  on(AgglomerationPilesCardsActions.initAgglomerationNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(AgglomerationPilesCardsActions.initAgglomerationSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsSuccess,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.loadAgglomerationPilesCardsFailure,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsInitialized,\n    (state, { agglomerationPilesCards }) =>\n      agglomerationPilesCardsAdapter.setAll(agglomerationPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    AgglomerationPilesCardsActions.selectAgglomerationPileCard,\n    (state, { id }) => ({\n      ...state,\n      selectedId: id,\n    })\n  ),\n  on(AgglomerationPilesCardsActions.unselectAgglomerationPileCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(\n    AgglomerationPilesCardsActions.removeAgglomerationPileCard,\n    (state, { id }) => agglomerationPilesCardsAdapter.removeOne(id, state)\n  ),\n  on(\n    AgglomerationPilesCardsActions.setAgglomerationPilesCardsError,\n    (state, { error }) => ({\n      ...state,\n      errorMsg: error,\n    })\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/taormina-duel/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startNewGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in apps/taormina-duel/src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startNewGame\n                        \n                    \n                \n            \n            \n                \nstartNewGame()\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel/src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameRulesService } from '@taormina/feature-engine';\n\n@Component({\n  selector: 'taormina-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(private gameRules: GameRulesService) {}\n\n  startNewGame(): void {\n    this.gameRules.initNewGame();\n  }\n}\n\n    \n\n    \n        New Game !\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                /* stylelint-disable no-empty-source */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New Game !'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/taormina-duel/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            DataAccessGameModule\n                        \n                        \n                            FeatureGameModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { DataAccessGameModule } from '@taormina/data-access-game';\nimport { FeatureGameModule } from '@taormina/feature-game';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(\n      {},\n      {\n        metaReducers: !environment.production ? [] : [],\n        runtimeChecks: {\n          strictActionImmutability: true,\n          strictStateImmutability: true,\n        },\n      }\n    ),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    DataAccessGameModule,\n    FeatureGameModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/board/board/board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ID_DOMAIN_BLUE\n                            \n                            \n                                ID_DOMAIN_RED\n                            \n                            \n                                ID_HAND_BLUE\n                            \n                            \n                                ID_HAND_RED\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_DOMAIN_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_DOMAIN_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_BLUE\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_HAND_RED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ID_HAND_RED\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/board/board/board.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_HAND_BLUE,\n  ID_HAND_RED,\n} from '@taormina/shared-constants';\n\n@Component({\n  selector: 'taormina-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent {\n  ID_HAND_RED = ID_HAND_RED;\n  ID_HAND_BLUE = ID_HAND_BLUE;\n  ID_DOMAIN_RED = ID_DOMAIN_RED;\n  ID_DOMAIN_BLUE = ID_DOMAIN_BLUE;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_BoardModule_imports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/board/board.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DiceModule\n                        \n                        \n                            DomainModule\n                        \n                        \n                            HandModule\n                        \n                        \n                            PhasesModule\n                        \n                        \n                            PilesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardComponent } from './board/board.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DiceModule } from '../dice/dice.module';\nimport { DomainModule } from '../domain/domain.module';\nimport { HandModule } from '../hand/hand.module';\nimport { PhasesModule } from '../phases/phases.module';\nimport { PilesModule } from '../piles/piles.module';\n\n@NgModule({\n  declarations: [BoardComponent],\n  imports: [\n    CommonModule,\n    ActionsModule,\n    DiceModule,\n    DomainModule,\n    HandModule,\n    PhasesModule,\n    PilesModule,\n  ],\n  exports: [BoardComponent],\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanPrint.html":{"url":"interfaces/CanPrint.html","title":"interface - CanPrint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CanPrint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/print.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        print\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        print\n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n            \n                \n                    Defined in libs/shared-models/src/lib/interfaces/print.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface CanPrint {\n  print(): string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isCanPrint(obj: any): obj is CanPrint {\n  return typeof obj.print === 'function';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardBackComponent.html":{"url":"components/CardBackComponent.html","title":"component - CardBackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardBackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card-back/card-back/card-back.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card-back\n            \n\n            \n                styleUrls\n                ./card-back.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card-back.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Array\n                            \n                            \n                                getImgSrc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ressources\n                            \n                            \n                                typeIconName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ressources\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Array\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Array\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getImgSrc\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-back/card-back/card-back.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { getImgSrc } from '@taormina/shared-utils';\n\n@Component({\n  selector: 'taormina-card-back',\n  templateUrl: './card-back.component.html',\n  styleUrls: ['./card-back.component.css'],\n})\nexport class CardBackComponent {\n  @Input() typeIconName!: string;\n  @Input() ressources?: { iconName: string; count: number }[];\n\n  Array = Array;\n  getImgSrc = getImgSrc;\n}\n\n    \n\n    \n        \n  \n\n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./card-back.component.css\n                \n                .card-back {\n  width: 100%;\n  height: 100%;\n  background-color: gray;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.type-icon {\n  width: 50%;\n  height: 50%;\n}\n\n.ressources {\n  position: relative;\n  bottom: 4em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.3em;\n}\n\n.ressource-icon {\n  width: 15%;\n  height: 15%;\n  padding: 2px;\n  background-color: white;\n  border-style: solid;\n  border-color: black;\n  border-width: 1px;\n  border-radius: 20%;\n  box-shadow: inset -0.1em -0.1em 0.5em lightgray;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardBackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardBackModule.html":{"url":"modules/CardBackModule.html","title":"module - CardBackModule","body":"\n                   \n\n\n\n\n    Modules\n    CardBackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardBackModule\n\n\n\ncluster_CardBackModule_declarations\n\n\n\ncluster_CardBackModule_exports\n\n\n\n\nCardBackComponent\n\nCardBackComponent\n\n\n\nCardBackModule\n\nCardBackModule\n\nCardBackModule -->\n\nCardBackComponent->CardBackModule\n\n\n\n\n\nCardBackComponent \n\nCardBackComponent \n\nCardBackComponent  -->\n\nCardBackModule->CardBackComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/card-back/card-back.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardBackComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardBackComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardBackComponent } from './card-back/card-back.component';\n\n@NgModule({\n  declarations: [CardBackComponent],\n  imports: [CommonModule],\n  exports: [CardBackComponent],\n})\nexport class CardBackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card\n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'taormina-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent {}\n\n    \n\n    \n        card works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'card works!'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardFrontComponent.html":{"url":"components/CardFrontComponent.html","title":"component - CardFrontComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardFrontComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-card/src/lib/card-front/card-front/card-front.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-card-front\n            \n\n            \n                styleUrls\n                ./card-front.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card-front.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getImgSrc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dieIconName\n                            \n                            \n                                typeIconName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dieIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeIconName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getImgSrc\n                    \n                \n                    \n                        \n                                Defined in libs/ui-card/src/lib/card-front/card-front/card-front.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { getImgSrc } from '@taormina/shared-utils';\n\n@Component({\n  selector: 'taormina-card-front',\n  templateUrl: './card-front.component.html',\n  styleUrls: ['./card-front.component.css'],\n})\nexport class CardFrontComponent {\n  @Input() typeIconName!: string;\n  @Input() dieIconName?: string;\n\n  getImgSrc = getImgSrc;\n}\n\n    \n\n    \n        \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./card-front.component.css\n                \n                .card-back {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.type-icon {\n  width: 90%;\n  height: 90%;\n}\n\n.die {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  top: -100%;\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.die-icon {\n  width: 30%;\n  height: 30%;\n  border-radius: 20%;\n  outline: 2px solid black;\n  outline-offset: -2px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardFrontComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardFrontModule.html":{"url":"modules/CardFrontModule.html","title":"module - CardFrontModule","body":"\n                   \n\n\n\n\n    Modules\n    CardFrontModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardFrontModule\n\n\n\ncluster_CardFrontModule_exports\n\n\n\ncluster_CardFrontModule_declarations\n\n\n\n\nCardFrontComponent\n\nCardFrontComponent\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nCardFrontModule -->\n\nCardFrontComponent->CardFrontModule\n\n\n\n\n\nCardFrontComponent \n\nCardFrontComponent \n\nCardFrontComponent  -->\n\nCardFrontModule->CardFrontComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/card-front/card-front.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardFrontComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardFrontComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardFrontComponent } from './card-front/card-front.component';\n\n@NgModule({\n  declarations: [CardFrontComponent],\n  imports: [CommonModule],\n  exports: [CardFrontComponent],\n})\nexport class CardFrontModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/taormina-duel-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/taormina-duel-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable-1.html":{"url":"interfaces/Chainable-1.html","title":"interface - Chainable-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ui-card-e2e/src/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ui-card-e2e/src/support/commands.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataAccessGameModule.html":{"url":"modules/DataAccessGameModule.html","title":"module - DataAccessGameModule","body":"\n                   \n\n\n\n\n    Modules\n    DataAccessGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\n\nAgglomerationPilesCardsFacade\n\nAgglomerationPilesCardsFacade\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nDataAccessGameModule -->\n\nAgglomerationPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/data-access-game/src/lib/data-access-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgglomerationPilesCardsFacade\n                        \n                        \n                            DiscardPileCardsFacade\n                        \n                        \n                            DomainsCardsFacade\n                        \n                        \n                            EventsPileCardsFacade\n                        \n                        \n                            GameFacade\n                        \n                        \n                            HandsCardsFacade\n                        \n                        \n                            LandsPileCardsFacade\n                        \n                        \n                            StockPilesCardsFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { DiscardPileCardsEffects } from './+state/discard-pile-cards/discard-pile-cards.effects';\nimport { DiscardPileCardsFacade } from './+state/discard-pile-cards/discard-pile-cards.facade';\nimport * as fromDiscardPileCards from './+state/discard-pile-cards/discard-pile-cards.reducer';\nimport { DomainsCardsEffects } from './+state/domains-cards/domains-cards.effects';\nimport { DomainsCardsFacade } from './+state/domains-cards/domains-cards.facade';\nimport * as fromDomainsCards from './+state/domains-cards/domains-cards.reducer';\nimport { EventsPileCardsEffects } from './+state/events-pile-cards/events-pile-cards.effects';\nimport { EventsPileCardsFacade } from './+state/events-pile-cards/events-pile-cards.facade';\nimport * as fromEventsPileCards from './+state/events-pile-cards/events-pile-cards.reducer';\nimport { AgglomerationPilesCardsEffects } from './+state/agglomeration-piles-cards/agglomeration-piles-cards.effects';\nimport { AgglomerationPilesCardsFacade } from './+state/agglomeration-piles-cards/agglomeration-piles-cards.facade';\nimport * as fromAgglomerationPilesCards from './+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer';\nimport { GameEffects } from './+state/game/game.effects';\nimport { GameFacade } from './+state/game/game.facade';\nimport * as fromGame from './+state/game/game.reducer';\nimport { HandsCardsEffects } from './+state/hands-cards/hands-cards.effects';\nimport { HandsCardsFacade } from './+state/hands-cards/hands-cards.facade';\nimport * as fromHandsCards from './+state/hands-cards/hands-cards.reducer';\nimport { LandsPileCardsEffects } from './+state/lands-pile-cards/lands-pile-cards.effects';\nimport { LandsPileCardsFacade } from './+state/lands-pile-cards/lands-pile-cards.facade';\nimport * as fromLandsPileCards from './+state/lands-pile-cards/lands-pile-cards.reducer';\nimport { StockPilesCardsEffects } from './+state/stock-piles-cards/stock-piles-cards.effects';\nimport { StockPilesCardsFacade } from './+state/stock-piles-cards/stock-piles-cards.facade';\nimport * as fromStockPilesCards from './+state/stock-piles-cards/stock-piles-cards.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromGame.GAME_FEATURE_KEY, fromGame.gameReducer),\n    EffectsModule.forFeature([GameEffects]),\n    StoreModule.forFeature(\n      fromDomainsCards.DOMAINS_CARDS_FEATURE_KEY,\n      fromDomainsCards.domainsCardsReducer\n    ),\n    EffectsModule.forFeature([DomainsCardsEffects]),\n    StoreModule.forFeature(\n      fromHandsCards.HANDS_CARDS_FEATURE_KEY,\n      fromHandsCards.handsCardsReducer\n    ),\n    EffectsModule.forFeature([HandsCardsEffects]),\n    StoreModule.forFeature(\n      fromAgglomerationPilesCards.AGGLOMERATION_PILES_CARDS_FEATURE_KEY,\n      fromAgglomerationPilesCards.agglomerationPilesCardsReducer\n    ),\n    EffectsModule.forFeature([EventsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromLandsPileCards.LANDS_PILE_CARDS_FEATURE_KEY,\n      fromLandsPileCards.landsPileCardsReducer\n    ),\n    EffectsModule.forFeature([AgglomerationPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromStockPilesCards.STOCK_PILES_CARDS_FEATURE_KEY,\n      fromStockPilesCards.stockPilesCardsReducer\n    ),\n    EffectsModule.forFeature([StockPilesCardsEffects]),\n    StoreModule.forFeature(\n      fromEventsPileCards.EVENTS_PILE_CARDS_FEATURE_KEY,\n      fromEventsPileCards.eventsPileCardsReducer\n    ),\n    EffectsModule.forFeature([LandsPileCardsEffects]),\n    StoreModule.forFeature(\n      fromDiscardPileCards.DISCARD_PILE_CARDS_FEATURE_KEY,\n      fromDiscardPileCards.discardPileCardsReducer\n    ),\n    EffectsModule.forFeature([DiscardPileCardsEffects]),\n  ],\n  providers: [\n    GameFacade,\n    DomainsCardsFacade,\n    HandsCardsFacade,\n    AgglomerationPilesCardsFacade,\n    LandsPileCardsFacade,\n    StockPilesCardsFacade,\n    EventsPileCardsFacade,\n    DiscardPileCardsFacade,\n  ],\n})\nexport class DataAccessGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DevelopmentCard.html":{"url":"interfaces/DevelopmentCard.html","title":"interface - DevelopmentCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DevelopmentCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/development.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Development Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            celebrationPoints\n                                        \n                                \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            givesKnowledge\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            needsTown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noDuplicate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strengthPoints\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tradePoints\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        celebrationPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        celebrationPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        givesKnowledge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        givesKnowledge:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsTown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsTown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strengthPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strengthPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tradePoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tradePoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DevelopmentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DevelopmentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasCost } from '../interfaces/cost';\nimport { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasVictoryPoints } from '../interfaces/victory';\nimport {\n  BuildingName,\n  DevelopmentType,\n  ShipName,\n  ShipNameKey,\n  WarriorName,\n} from '../types/development';\nimport { ResourceType } from '../types/resources';\n\nexport const DEVELOPMENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\nexport const AVAILABLE_DEVELOPMENT_SLOT = 'AvailableDevelopmentSlot';\n\n/**\n * Interface for the Development Cards\n */\nexport interface DevelopmentCard\n  extends HasId,\n    HasName,\n    HasCost,\n    HasVictoryPoints {\n  interface: typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: string;\n  cost: Map;\n  type: DevelopmentType;\n  tradePoints?: number;\n  strengthPoints?: number;\n  celebrationPoints?: number;\n  givesKnowledge?: boolean;\n  noDuplicate?: boolean;\n  needsTown?: boolean;\n  victoryPoints?: number;\n}\n\nconst createDevelopmentCard = (\n  id: string,\n  name: string,\n  cost: Map,\n  type: DevelopmentType\n): DevelopmentCard => ({\n  interface: DEVELOPMENT_CARD_INTERFACE_NAME,\n  id,\n  name,\n  cost,\n  type,\n});\n\nexport function createBuilding(\n  id: string,\n  name: BuildingName,\n  cost: Map,\n  tradePoints?: number,\n  givesKnowledge?: boolean,\n  noDuplicate?: boolean,\n  victoryPoints?: number\n): DevelopmentCard {\n  const building = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Building\n  );\n  building.tradePoints = tradePoints;\n  building.givesKnowledge = givesKnowledge;\n  building.noDuplicate = noDuplicate;\n  building.victoryPoints = victoryPoints;\n  return building;\n}\n\nexport function createShip(id: string, type: ShipNameKey): DevelopmentCard {\n  const name = ShipName.get(type);\n  if (name === undefined) {\n    throw new Error(`Can't find ship name for type ${type}`);\n  }\n  const ship = createDevelopmentCard(\n    id,\n    name,\n    new Map([\n      [ResourceType.Wood, 1],\n      [ResourceType.Wool, 1],\n    ]),\n    DevelopmentType.Ship\n  );\n  ship.tradePoints = 1;\n  return ship;\n}\n\nexport function createWarrior(\n  id: string,\n  name: WarriorName,\n  cost: Map,\n  strengthPoints?: number,\n  celebrationPoints?: number\n): DevelopmentCard {\n  const warrior = createDevelopmentCard(\n    id,\n    name,\n    cost,\n    DevelopmentType.Warrior\n  );\n  warrior.strengthPoints = strengthPoints;\n  warrior.celebrationPoints = celebrationPoints;\n  return warrior;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isDevelopmentCard(obj: any): obj is DevelopmentCard {\n  return obj !== undefined && obj.interface === DEVELOPMENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiceComponent.html":{"url":"components/DiceComponent.html","title":"component - DiceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/dice/dice/dice.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-dice\n            \n\n            \n                styleUrls\n                ./dice.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                RESOURCE_VALUES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventDie\n                            \n                            \n                                getNextProductionDie\n                            \n                            \n                                getProductionDie\n                            \n                            \n                                onThrow\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                throwDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEventDie\n                        \n                    \n                \n            \n            \n                \ngetEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextProductionDie\n                        \n                    \n                \n            \n            \n                \ngetNextProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductionDie\n                        \n                    \n                \n            \n            \n                \ngetProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onThrow\n                        \n                    \n                \n            \n            \n                \nonThrow()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDisabled\n                        \n                    \n                \n            \n            \n                \nthrowDisabled()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RESOURCE_VALUES\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/dice/dice/dice.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameFacade } from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  EventValue,\n  GamePhase,\n  ResourceValue,\n  RESOURCE_VALUES,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-dice',\n  templateUrl: './dice.component.html',\n  styleUrls: ['./dice.component.css'],\n})\nexport class DiceComponent {\n  RESOURCE_VALUES = RESOURCE_VALUES;\n\n  constructor(private game: GameFacade, private gameRules: GameRulesService) {}\n\n  throwDisabled(): Observable {\n    return this.game.phase$.pipe(\n      map(\n        (phase) =>\n          phase !== GamePhase.InitialThrow && phase !== GamePhase.LoopThrow\n      )\n    );\n  }\n\n  onThrow(): void {\n    this.gameRules.throwDice();\n  }\n\n  getProductionDie(): Observable {\n    return this.game.productionDie$;\n  }\n\n  getEventDie(): Observable {\n    return this.game.eventDie$;\n  }\n\n  getNextProductionDie(): Observable {\n    return this.game.nextProductionDie$;\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.game.setNextProductionDie(value);\n  }\n}\n\n    \n\n    \n        \n  \n    Next Production Die:\n    \n      \n        {{ value }}\n    \n  \n  \n    throw\n  \n  Production: {{ value }}\n  Event: {{ value }}\n\n\n    \n\n    \n                \n                    ./dice.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Next Production Die:                  {{ value }}            throw    Production: {{ value }}  Event: {{ value }}'\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiceModule.html":{"url":"modules/DiceModule.html","title":"module - DiceModule","body":"\n                   \n\n\n\n\n    Modules\n    DiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_declarations\n\n\n\ncluster_DiceModule_exports\n\n\n\n\nDiceComponent\n\nDiceComponent\n\n\n\nDiceModule\n\nDiceModule\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/dice/dice.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DiceComponent } from './dice/dice.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [DiceComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [DiceComponent],\n})\nexport class DiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsEffects.html":{"url":"injectables/DiscardPileCardsEffects.html","title":"injectable - DiscardPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCard$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { createDiscardPileCardsEntity } from './discard-pile-cards.models';\n\n@Injectable()\nexport class DiscardPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsNewGame),\n      map(() =>\n        DiscardPileCardsActions.setDiscardPileCardsInitialized({\n          discardPileCards: [],\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.initDiscardPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DiscardPileCardsActions.loadDiscardPileCardsSuccess({\n            discardPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DiscardPileCardsActions.loadDiscardPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DiscardPileCardsActions.addCardToDiscardPile),\n      map(({ card }) =>\n        createDiscardPileCardsEntity(uuidv4(), card.type, card.id)\n      ),\n      map((discardPileCard) =>\n        DiscardPileCardsActions.addDiscardPileCard({ discardPileCard })\n      )\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsEntity.html":{"url":"interfaces/DiscardPileCardsEntity.html","title":"interface - DiscardPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DiscardPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DiscardPileCardsEntity {\n  id: string; // Primary ID\n  cardType: string;\n  cardId: string;\n}\n\nexport const createDiscardPileCardsEntity = (\n  id: string,\n  cardType: string,\n  cardId: string\n): DiscardPileCardsEntity => ({\n  id,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscardPileCardsFacade.html":{"url":"injectables/DiscardPileCardsFacade.html","title":"injectable - DiscardPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscardPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDiscardPileCards$\n                            \n                            \n                                allDiscardPileCardsReverse$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDiscardPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardToDiscardPile\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardToDiscardPile\n                        \n                    \n                \n            \n            \n                \naddCardToDiscardPile(card: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:39\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allDiscardPileCardsReverse$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDiscardPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.facade.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport * as DiscardPileCardsFeature from './discard-pile-cards.reducer';\nimport * as DiscardPileCardsSelectors from './discard-pile-cards.selectors';\n\n@Injectable()\nexport class DiscardPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsLoaded)\n  );\n  allDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCards)\n  );\n  allDiscardPileCardsReverse$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getAllDiscardPileCardsReverse)\n  );\n  selectedDiscardPileCards$ = this.store.pipe(\n    select(DiscardPileCardsSelectors.getDiscardPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DiscardPileCardsActions.initDiscardPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(\n      DiscardPileCardsActions.initDiscardPileCardsSavedGame()\n    );\n  }\n\n  addCardToDiscardPile(card: {\n    type:\n      | typeof ACTION_CARD_INTERFACE_NAME\n      | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n    id: string;\n  }): void {\n    this.store.dispatch(DiscardPileCardsActions.addCardToDiscardPile({ card }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsPartialState.html":{"url":"interfaces/DiscardPileCardsPartialState.html","title":"interface - DiscardPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DISCARD_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DISCARD_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DISCARD_PILE_CARDS_FEATURE_KEY:         DiscardPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DiscardPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscardPileCardsState.html":{"url":"interfaces/DiscardPileCardsState.html","title":"interface - DiscardPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscardPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as DiscardPileCardsActions from './discard-pile-cards.actions';\nimport { DiscardPileCardsEntity } from './discard-pile-cards.models';\n\nexport const DISCARD_PILE_CARDS_FEATURE_KEY = 'discardPileCards';\n\nexport interface DiscardPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DiscardPileCardsPartialState {\n  readonly [DISCARD_PILE_CARDS_FEATURE_KEY]: DiscardPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const discardPileCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDiscardPileCardsState: DiscardPileCardsState =\n  discardPileCardsAdapter.getInitialState({\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  });\n\nexport const discardPileCardsReducer = createReducer(\n  initialDiscardPileCardsState,\n  on(DiscardPileCardsActions.initDiscardPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DiscardPileCardsActions.initDiscardPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsSuccess,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        loaded: true,\n      })\n  ),\n  on(\n    DiscardPileCardsActions.loadDiscardPileCardsFailure,\n    (state, { error }) => ({ ...state, errorMsg: error })\n  ),\n  on(\n    DiscardPileCardsActions.setDiscardPileCardsInitialized,\n    (state, { discardPileCards }) =>\n      discardPileCardsAdapter.setAll(discardPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(DiscardPileCardsActions.addDiscardPileCard, (state, { discardPileCard }) =>\n    discardPileCardsAdapter.addOne(discardPileCard, state)\n  ),\n  on(DiscardPileCardsActions.setDiscardPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Domain.html":{"url":"interfaces/Domain.html","title":"interface - Domain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Domain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/domain.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Domains\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Domains\n */\nexport interface Domain extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createDomain = (id: string, color: DomainColor): Domain => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DomainComponent.html":{"url":"components/DomainComponent.html","title":"component - DomainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DomainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/domain/domain/domain.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-domain\n            \n\n            \n                styleUrls\n                ./domain.component.css\n            \n\n\n\n            \n                templateUrl\n                ./domain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AGGLOMERATION_CARD_INTERFACE_NAME\n                            \n                            \n                                AVAILABLE_AGGLOMERATION_SLOT\n                            \n                            \n                                AVAILABLE_DEVELOPMENT_SLOT\n                            \n                            \n                                AVAILABLE_LAND_SLOT\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                            \n                                LAND_CARD_INTERFACE_NAME\n                            \n                            \n                                mapDieToIconNameFront\n                            \n                            \n                                mapTypeToIconNameFront\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAgglomerationCard\n                            \n                            \n                                getCelebrationPoints\n                            \n                            \n                                getColumnsTemplate\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getDomain\n                            \n                            \n                                getDomainsCards\n                            \n                            \n                                getLandCard\n                            \n                            \n                                getRowsTemplate\n                            \n                            \n                                getShipsCount\n                            \n                            \n                                getStrengthMastery\n                            \n                            \n                                getTradeMastery\n                            \n                            \n                                getVictoryPoints\n                            \n                            \n                                increaseResources\n                            \n                            \n                                isDomainCardSelected\n                            \n                            \n                                lockResource\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                domainId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domainsCards: DomainsCardsFacade, gameRules: GameRulesService)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameRules\n                                                  \n                                                        \n                                                                        GameRulesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        domainId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAgglomerationCard\n                        \n                    \n                \n            \n            \n                \ngetAgglomerationCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPoints\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsTemplate\n                        \n                    \n                \n            \n            \n                \ngetColumnsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomain\n                        \n                    \n                \n            \n            \n                \ngetDomain()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Domain | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainsCards\n                        \n                    \n                \n            \n            \n                \ngetDomainsCards(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLandCard\n                        \n                    \n                \n            \n            \n                \ngetLandCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRowsTemplate\n                        \n                    \n                \n            \n            \n                \ngetRowsTemplate(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShipsCount\n                        \n                    \n                \n            \n            \n                \ngetShipsCount(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStrengthMastery\n                        \n                    \n                \n            \n            \n                \ngetStrengthMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTradeMastery\n                        \n                    \n                \n            \n            \n                \ngetTradeMastery(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPoints\n                        \n                    \n                \n            \n            \n                \ngetVictoryPoints(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDomainCardSelected\n                        \n                    \n                \n            \n            \n                \nisDomainCardSelected(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AGGLOMERATION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AGGLOMERATION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_AGGLOMERATION_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_AGGLOMERATION_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_DEVELOPMENT_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_DEVELOPMENT_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AVAILABLE_LAND_SLOT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AVAILABLE_LAND_SLOT\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LAND_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LAND_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDieToIconNameFront\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mapDieToIconNameFront\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapTypeToIconNameFront\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mapTypeToIconNameFront\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/domain/domain/domain.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport {\n  DomainsCardsEntity,\n  DomainsCardsFacade,\n} from '@taormina/data-access-game';\nimport { GameRulesService } from '@taormina/feature-engine';\nimport {\n  agglomerationCards,\n  developmentCards,\n  domains,\n  landCards,\n} from '@taormina/shared-constants';\nimport {\n  AgglomerationCard,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Domain,\n  LandCard,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport {\n  mapDieToIconNameFront,\n  mapTypeToIconNameFront,\n} from '@taormina/shared-utils';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-domain',\n  templateUrl: './domain.component.html',\n  styleUrls: ['./domain.component.css'],\n})\nexport class DomainComponent {\n  @Input() domainId!: string;\n\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n  AGGLOMERATION_CARD_INTERFACE_NAME = AGGLOMERATION_CARD_INTERFACE_NAME;\n  LAND_CARD_INTERFACE_NAME = LAND_CARD_INTERFACE_NAME;\n  AVAILABLE_AGGLOMERATION_SLOT = AVAILABLE_AGGLOMERATION_SLOT;\n  AVAILABLE_DEVELOPMENT_SLOT = AVAILABLE_DEVELOPMENT_SLOT;\n  AVAILABLE_LAND_SLOT = AVAILABLE_LAND_SLOT;\n\n  mapTypeToIconNameFront = mapTypeToIconNameFront;\n  mapDieToIconNameFront = mapDieToIconNameFront;\n\n  constructor(\n    private domainsCards: DomainsCardsFacade,\n    private gameRules: GameRulesService\n  ) {}\n\n  getDomain(): Domain | undefined {\n    return domains.get(this.domainId);\n  }\n\n  getShipsCount(domainId: string): Observable {\n    return this.domainsCards.getMerchantShipCountForDomain(domainId);\n  }\n\n  getCelebrationPoints(domainId: string): Observable {\n    return this.domainsCards.getCelebrationPointsForDomain(domainId);\n  }\n\n  getStrengthMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Strength)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getTradeMastery(domainId: string): Observable {\n    return this.domainsCards\n      .getMasteryDomainForType(MasteryPointsType.Trade)\n      .pipe(map((masteryDomainId) => domainId === masteryDomainId));\n  }\n\n  getVictoryPoints(domainId: string): Observable {\n    return this.gameRules.getVictoryPointsForDomain(domainId);\n  }\n\n  getColumnsTemplate(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getDomainMinCol(domainId),\n      this.domainsCards.getDomainMaxCol(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return combineLatest([\n      this.domainsCards.getDomainMinRow(domainId),\n      this.domainsCards.getDomainMaxRow(domainId),\n    ]).pipe(\n      map(([min, max]) => {\n        let template = '';\n        for (let i = min; i  {\n    return this.domainsCards.allDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.filter((domainCard) => domainCard.domainId === domainId)\n      )\n    );\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  getAgglomerationCard(cardId: string): AgglomerationCard | undefined {\n    return agglomerationCards.get(cardId);\n  }\n\n  getLandCard(cardId: string): LandCard | undefined {\n    return landCards.get(cardId);\n  }\n\n  isDomainCardSelected(pivotId: string): Observable {\n    return this.domainsCards.selectedDomainsCards$.pipe(\n      map((domainsCards) =>\n        domainsCards.map((domainsCard) => domainsCard.id).includes(pivotId)\n      )\n    );\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.domainsCards.toggleDomainCardSelection(pivotId);\n  }\n\n  lockResource(pivotId: string): void {\n    this.domainsCards.lockResource(pivotId);\n  }\n\n  unlockResources(pivotId: string): void {\n    this.domainsCards.unlockResources(pivotId);\n  }\n\n  increaseResources(pivotId: string): void {\n    this.domainsCards.increaseResources(pivotId);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ domain.color }}\n     - Ships count: {{ getShipsCount(domain.id) | async }}\n    \n      - Celebration points: {{ getCelebrationPoints(domain.id) | async }}\n     - Trade Mastery\n    \n      - Strength Mastery\n     - Victory points: {{ getVictoryPoints(domain.id) | async }}\n  \n  \n    \n      \n        \n          {{ development.name }}\n        \n      \n      \n        \n          \n          \n            {{\n              (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select'\n            }}\n           -->\n        \n      \n      \n        \n          \n          \n          {{ land.die }}\n          Available: {{ pivot.availableResources }}\n          locked: {{ pivot.lockedResources }}\n          Lock\n          \n            Unlock\n          \n            Increase\n           -->\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n      \n        \n          {{ (isDomainCardSelected(pivot.id) | async) ? 'Unselect' : 'Select' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./domain.component.css\n                \n                .grid-container {\n  display: grid;\n  grid-gap: 2rem;\n}\n\n.grid-cell {\n  border: 1px solid black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ domain.color }}     - Ships count: {{ getShipsCount(domain.id) | async }}          - Celebration points: {{ getCelebrationPoints(domain.id) | async }}     - Trade Mastery          - Strength Mastery     - Victory points: {{ getVictoryPoints(domain.id) | async }}                                {{ development.name }}                                                            {{              (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\'            }}           -->                                                          {{ land.die }}          Available: {{ pivot.availableResources }}          locked: {{ pivot.lockedResources }}          Lock                      Unlock                      Increase           -->                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                                      {{ (isDomainCardSelected(pivot.id) | async) ? \\'Unselect\\' : \\'Select\\' }}                    '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DomainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DomainModule.html":{"url":"modules/DomainModule.html","title":"module - DomainModule","body":"\n                   \n\n\n\n\n    Modules\n    DomainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_DomainModule_imports\n\n\n\ncluster_DomainModule_declarations\n\n\n\n\nDomainComponent\n\nDomainComponent\n\n\n\nDomainModule\n\nDomainModule\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nDomainModule -->\n\nUiCardModule->DomainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/domain/domain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DomainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomainComponent } from './domain/domain.component';\nimport { UiCardModule } from '@taormina/ui-card';\n\n@NgModule({\n  declarations: [DomainComponent],\n  imports: [CommonModule, UiCardModule],\n  exports: [DomainComponent],\n})\nexport class DomainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsEffects.html":{"url":"injectables/DomainsCardsEffects.html","title":"injectable - DomainsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countStealResources$\n                            \n                            \n                                createCard$\n                            \n                            \n                                giveLockedResources$\n                            \n                            \n                                increaseResources$\n                            \n                            \n                                increaseResourcesAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                lockResource$\n                            \n                            \n                                putCardInPivot$\n                            \n                            \n                                unlockResources$\n                            \n                            \n                                    Private\n                                updatesAvailableResources\n                            \n                            \n                                useLockedResources$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLandCardFromPivot\n                            \n                            \n                                    Private\n                                takeOneDefinedPivotOrThrow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, domainsCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:422\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCardsStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getLandCardFromPivot\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLandCardFromPivot(pivot: DomainsCardsEntity)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:488\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivot\n                                    \n                                                DomainsCardsEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        takeOneDefinedPivotOrThrow\n                        \n                    \n                \n            \n            \n                \n                    \n                    takeOneDefinedPivotOrThrow(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:429\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countStealResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:381\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCard$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:364\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:235\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:317\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInPivot$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:348\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updatesAvailableResources\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:444\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts:212\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { landCards } from '@taormina/shared-constants';\nimport {\n  LandCard,\n  ResourceCount,\n  RESOURCE_COUNTS,\n} from '@taormina/shared-models';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  map,\n  take,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport {\n  createDomainsCardsEntity,\n  createInitialDomainsCards,\n  DomainsCardsEntity,\n} from './domains-cards.models';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsNewGame),\n      map(() =>\n        DomainsCardsActions.setDomainsCardsInitialized({\n          domainsCards: createInitialDomainsCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.initDomainsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return DomainsCardsActions.loadDomainsCardsSuccess({\n            domainsCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return DomainsCardsActions.loadDomainsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  increaseResourcesForDie$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForDie),\n      concatMap((action) => {\n        return forkJoin({\n          increaseOne: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseOneProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n          increaseTwo: this.domainsCardsStore.pipe(\n            select(\n              DomainsCardsSelectors.getLandCardsPivotsIncreaseTwoProduction(\n                action.die\n              )\n            ),\n            take(1)\n          ),\n        });\n      }),\n      map(({ increaseOne, increaseTwo }) => {\n        const updatesOne = this.updatesAvailableResources(increaseOne, 1);\n        // eslint-disable-next-line no-magic-numbers\n        const updatesTwo = this.updatesAvailableResources(increaseTwo, 2);\n        return DomainsCardsActions.updateDomainsCards({\n          updates: [...updatesOne, ...updatesTwo],\n        });\n      })\n    )\n  );\n\n  increaseResourcesAuspiciousYear$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardsPivotsIncreaseAuspiciousYear\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [increaseOne, increaseTwo, increaseThree, increaseFour],\n        ]) => {\n          const updatesOne = this.updatesAvailableResources(\n            increaseOne,\n            DomainsCardsSelectors.COUNT_1\n          );\n          const updatesTwo = this.updatesAvailableResources(\n            increaseTwo,\n            DomainsCardsSelectors.COUNT_2\n          );\n          const updatesThree = this.updatesAvailableResources(\n            increaseThree,\n            DomainsCardsSelectors.COUNT_3\n          );\n          const updatesFour = this.updatesAvailableResources(\n            increaseFour,\n            DomainsCardsSelectors.COUNT_4\n          );\n          return DomainsCardsActions.updateDomainsCards({\n            updates: [\n              ...updatesOne,\n              ...updatesTwo,\n              ...updatesThree,\n              ...updatesFour,\n            ],\n          });\n        }\n      )\n    )\n  );\n\n  lockResource$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.lockResource),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === 0) {\n              throw new Error(\n                `Can't lock unavailable resource for pivot ${pivot.id}.`\n              );\n            }\n            if (pivot.lockedResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't lock more resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources - 1) as ResourceCount,\n                // prettier-ignore\n                lockedResources: (pivot.lockedResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  unlockResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.unlockResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (\n              pivot.availableResources + pivot.lockedResources >\n              Math.max(...RESOURCE_COUNTS)\n            ) {\n              throw new Error(\n                `Shouldn't have been able to lock so many resources for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                availableResources: (pivot.availableResources +\n                  pivot.lockedResources) as ResourceCount,\n                lockedResources: 0 as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  useLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.useLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, pivots]) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              lockedResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  giveLockedResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.giveLockedResources),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getLandCardPivotWithLockedResources\n        )\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      concatMap(([_action, pivotsWithLockedResources]) =>\n        this.domainsCardsStore.pipe(\n          select(DomainsCardsSelectors.getDomainsCardsSelected),\n          take(1),\n          map((pivotsSelected) => {\n            if (pivotsWithLockedResources.length === 0) {\n              throw new Error(\n                `Can't give locked resources if no pivots with locked resources.`\n              );\n            }\n            const firstPivot = pivotsWithLockedResources[0];\n            const firstLand = this.getLandCardFromPivot(firstPivot);\n            let count = 0;\n            pivotsWithLockedResources.forEach((pivot) => {\n              const land = this.getLandCardFromPivot(pivot);\n              if (land.type !== firstLand.type) {\n                throw new Error(\n                  `Can't give locked resources of different types.`\n                );\n              }\n              count += pivot.lockedResources;\n            });\n\n            const updatesLocked = pivotsWithLockedResources.map((pivot) => {\n              return {\n                id: pivot.id,\n                changes: {\n                  lockedResources: 0 as ResourceCount,\n                },\n              };\n            });\n\n            if (pivotsSelected.length !== 1) {\n              throw new Error(\n                `Can't give locked resources if no pivot or more than one pivot selected.`\n              );\n            }\n            const selectedPivot = pivotsSelected[0];\n            const selectedLand = this.getLandCardFromPivot(selectedPivot);\n            if (selectedLand.type !== firstLand.type) {\n              throw new Error(\n                `Can't give locked resources to pivot of different type.`\n              );\n            }\n\n            const sumResources = selectedPivot.availableResources + count;\n            if (sumResources > Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't give so many locked resources to selected pivot.`\n              );\n            }\n\n            const updateAvailable = {\n              id: selectedPivot.id,\n              changes: {\n                availableResources: sumResources as ResourceCount,\n              },\n            };\n\n            return DomainsCardsActions.updateDomainsCards({\n              updates: [...updatesLocked, updateAvailable],\n            });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  increaseResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.increaseAvailableResources),\n      concatMap((action) =>\n        this.takeOneDefinedPivotOrThrow(action.id).pipe(\n          map((pivot) => {\n            if (pivot.availableResources === Math.max(...RESOURCE_COUNTS)) {\n              throw new Error(\n                `Can't increase available resources beyond maximum for pivot ${pivot.id}.`\n              );\n            }\n\n            const update = {\n              id: pivot.id,\n              changes: {\n                // prettier-ignore\n                availableResources: (pivot.availableResources + 1) as ResourceCount,\n              },\n            };\n            return DomainsCardsActions.updateDomainCard({ update });\n          }),\n          catchError((error) =>\n            of(\n              DomainsCardsActions.setDomainsCardsError({ error: error.message })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  putCardInPivot$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.putCardInPivot),\n      map((action) => {\n        const update = {\n          id: action.id,\n          changes: {\n            cardType: action.cardType,\n            cardId: action.cardId,\n          },\n        };\n        return DomainsCardsActions.updateDomainCard({ update });\n      })\n    )\n  );\n\n  createCard$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.createDomainCard),\n      map(({ domainId, cardType, cardId, col, row }) => {\n        const domainCard = createDomainsCardsEntity(\n          uuidv4(),\n          domainId,\n          cardType,\n          cardId,\n          col,\n          row\n        );\n        return DomainsCardsActions.addDomainCard({ domainCard });\n      })\n    )\n  );\n\n  countStealResources$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DomainsCardsActions.countAndStealUnprotectedGoldAndWool),\n      withLatestFrom(\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainResourceCountSeenByThieves\n        ),\n        this.domainsCardsStore.select(\n          DomainsCardsSelectors.getDomainUnprotectedGoldMinesAndPastures\n        )\n      ),\n      map(\n        ([\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _action,\n          [redResourceCount, blueResourceCount],\n          [redGoldMinesAndPastures, blueGoldMinesAndPastures],\n        ]) => {\n          const thievesResourceCountThreshold = 7;\n          let pivots: DomainsCardsEntity[] = [];\n          if (redResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...redGoldMinesAndPastures];\n          }\n          if (blueResourceCount > thievesResourceCountThreshold) {\n            pivots = [...pivots, ...blueGoldMinesAndPastures];\n          }\n          return pivots;\n        }\n      ),\n      map((pivots) => {\n        const updates = pivots.map((pivot) => {\n          return {\n            id: pivot.id,\n            changes: {\n              availableResources: 0 as ResourceCount,\n            },\n          };\n        });\n        return DomainsCardsActions.updateDomainsCards({ updates });\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private domainsCardsStore: Store\n  ) {}\n\n  private takeOneDefinedPivotOrThrow(\n    id: string\n  ): Observable {\n    return this.domainsCardsStore.pipe(\n      select(DomainsCardsSelectors.getLandCardPivotById(id)),\n      map((pivot) => {\n        if (pivot === undefined) {\n          throw new Error(`Couldn't find land card pivot for id.`);\n        }\n        return pivot;\n      }),\n      take(1)\n    );\n  }\n\n  private updatesAvailableResources = (\n    domainsCards: DomainsCardsEntity[],\n    resourceIncrement: number\n  ): {\n    id: string;\n    changes: {\n      availableResources: ResourceCount;\n    };\n  }[] => {\n    const belowMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: (pivot.availableResources +\n              resourceIncrement) as ResourceCount,\n          },\n        };\n      });\n\n    const atMax = domainsCards\n      .filter(\n        (pivot) =>\n          pivot.availableResources >=\n            Math.max(...RESOURCE_COUNTS) - resourceIncrement &&\n          pivot.availableResources  {\n        return {\n          id: pivot.id,\n          changes: {\n            availableResources: Math.max(...RESOURCE_COUNTS) as ResourceCount,\n          },\n        };\n      });\n\n    return [...belowMax, ...atMax];\n  };\n\n  private getLandCardFromPivot(pivot: DomainsCardsEntity): LandCard {\n    if (pivot.cardId === undefined) {\n      throw new Error(\n        `Something went wrong, cardId shouldn't be undefined at this point.`\n      );\n    }\n    const land = landCards.get(pivot.cardId);\n    if (land === undefined) {\n      throw new Error(\n        `Something went wrong, land shouldn't be undefined at this point.`\n      );\n    }\n    return land;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsEntity.html":{"url":"interfaces/DomainsCardsEntity.html","title":"interface - DomainsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'DomainsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            availableResources\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            domainId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lockedResources\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:         DomainCardType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainCardType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        domainId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lockedResources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lockedResources:         ResourceCount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceCount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         RowValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ID_CLAY_PIT_BLUE,\n  ID_CLAY_PIT_RED,\n  ID_DOMAIN_BLUE,\n  ID_DOMAIN_RED,\n  ID_FIELD_BLUE,\n  ID_FIELD_RED,\n  ID_FOREST_BLUE,\n  ID_FOREST_RED,\n  ID_GOLD_MINE_BLUE,\n  ID_GOLD_MINE_RED,\n  ID_HAMLET_BLUE_1,\n  ID_HAMLET_BLUE_2,\n  ID_HAMLET_RED_1,\n  ID_HAMLET_RED_2,\n  ID_PASTURE_BLUE,\n  ID_PASTURE_RED,\n  ID_ROAD_BLUE,\n  ID_ROAD_RED,\n  ID_STONE_QUARRY_BLUE,\n  ID_STONE_QUARRY_RED,\n} from '@taormina/shared-constants';\nimport {\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  DomainCardType,\n  LAND_CARD_INTERFACE_NAME,\n  ResourceCount,\n  RowValue,\n} from '@taormina/shared-models';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'DomainsCards' data\n */\nexport interface DomainsCardsEntity {\n  id: string; // Primary ID\n  domainId: string; // Foreign key to domains\n  cardType: DomainCardType;\n  cardId?: string; // Foreign key to cards\n  col: number;\n  row: RowValue;\n  availableResources: ResourceCount;\n  lockedResources: ResourceCount;\n}\n\nexport const createDomainsCardsEntity = (\n  id: string,\n  domainId: string,\n  cardType: DomainCardType,\n  cardId: string | undefined,\n  col: number,\n  row: RowValue,\n  availableResources = 0 as ResourceCount,\n  lockedResources = 0 as ResourceCount\n): DomainsCardsEntity => ({\n  id,\n  domainId,\n  cardType,\n  cardId,\n  col,\n  row,\n  availableResources,\n  lockedResources,\n});\n\n/* eslint-disable no-magic-numbers */\nexport const createInitialDomainsCards = (): DomainsCardsEntity[] => {\n  const initialDomainsCards: DomainsCardsEntity[] = [\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_RED,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_RED_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_RED,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_RED,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_RED,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_RED,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_RED,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_RED,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_RED,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_ROAD_BLUE,\n      0,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_1,\n      -1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      -2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AGGLOMERATION_CARD_INTERFACE_NAME,\n      ID_HAMLET_BLUE_2,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_AGGLOMERATION_SLOT,\n      undefined,\n      2,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_CLAY_PIT_BLUE,\n      -2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FOREST_BLUE,\n      -2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_GOLD_MINE_BLUE,\n      0,\n      1,\n      0\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_FIELD_BLUE,\n      2,\n      1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_STONE_QUARRY_BLUE,\n      2,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      1,\n      -1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      LAND_CARD_INTERFACE_NAME,\n      ID_PASTURE_BLUE,\n      0,\n      -1,\n      1\n    ),\n    createDomainsCardsEntity(\n      uuidv4(),\n      ID_DOMAIN_BLUE,\n      AVAILABLE_DEVELOPMENT_SLOT,\n      undefined,\n      -1,\n      -1\n    ),\n  ];\n  return initialDomainsCards;\n};\n/* eslint-enable no-magic-numbers */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DomainsCardsFacade.html":{"url":"injectables/DomainsCardsFacade.html","title":"injectable - DomainsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DomainsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allDomainsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedDomainsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDomainCardSelection\n                            \n                            \n                                countAndStealUnprotectedGoldAndWool\n                            \n                            \n                                createAvailableDomainCard\n                            \n                            \n                                getCardsVictoryPointsForDomain\n                            \n                            \n                                getCelebrationPointsForDomain\n                            \n                            \n                                getDomainMaxCol\n                            \n                            \n                                getDomainMaxRow\n                            \n                            \n                                getDomainMinCol\n                            \n                            \n                                getDomainMinRow\n                            \n                            \n                                getMasteryDomainForType\n                            \n                            \n                                getMerchantShipCountForDomain\n                            \n                            \n                                giveLockedResources\n                            \n                            \n                                hasDomainCommunityCenter\n                            \n                            \n                                increaseResources\n                            \n                            \n                                increaseResourcesForAuspiciousYear\n                            \n                            \n                                increaseResourcesForDie\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                lockResource\n                            \n                            \n                                putCardInSlot\n                            \n                            \n                                removeDomainCard\n                            \n                            \n                                swapSelectedCards\n                            \n                            \n                                toggleDomainCardSelection\n                            \n                            \n                                unlockResources\n                            \n                            \n                                useLockedResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDomainCardSelection\n                        \n                    \n                \n            \n            \n                \nclearDomainCardSelection()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndStealUnprotectedGoldAndWool\n                        \n                    \n                \n            \n            \n                \ncountAndStealUnprotectedGoldAndWool()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAvailableDomainCard\n                        \n                    \n                \n            \n            \n                \ncreateAvailableDomainCard(domainId: string, cardType: DomainCardType, col: number, row: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    row\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCardsVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCelebrationPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetCelebrationPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMaxRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMaxRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinCol\n                        \n                    \n                \n            \n            \n                \ngetDomainMinCol(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDomainMinRow\n                        \n                    \n                \n            \n            \n                \ngetDomainMinRow(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMasteryDomainForType\n                        \n                    \n                \n            \n            \n                \ngetMasteryDomainForType(type: MasteryPointsType)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                MasteryPointsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMerchantShipCountForDomain\n                        \n                    \n                \n            \n            \n                \ngetMerchantShipCountForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        giveLockedResources\n                        \n                    \n                \n            \n            \n                \ngiveLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDomainCommunityCenter\n                        \n                    \n                \n            \n            \n                \nhasDomainCommunityCenter(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResources\n                        \n                    \n                \n            \n            \n                \nincreaseResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForAuspiciousYear()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie\n                        \n                    \n                \n            \n            \n                \nincreaseResourcesForDie(value: DiceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:38\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockResource\n                        \n                    \n                \n            \n            \n                \nlockResource(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putCardInSlot\n                        \n                    \n                \n            \n            \n                \nputCardInSlot(pivotId: string, cardType: DomainCardType, cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardType\n                                    \n                                                DomainCardType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeDomainCard\n                        \n                    \n                \n            \n            \n                \nremoveDomainCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swapSelectedCards\n                        \n                    \n                \n            \n            \n                \nswapSelectedCards()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDomainCardSelection\n                        \n                    \n                \n            \n            \n                \ntoggleDomainCardSelection(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockResources\n                        \n                    \n                \n            \n            \n                \nunlockResources(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useLockedResources\n                        \n                    \n                \n            \n            \n                \nuseLockedResources()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDomainsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/domains-cards/domains-cards.facade.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  DiceValue,\n  DomainCardType,\n  MasteryPointsType,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport * as DomainsCardsFeature from './domains-cards.reducer';\nimport * as DomainsCardsSelectors from './domains-cards.selectors';\n\n@Injectable()\nexport class DomainsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsLoaded)\n  );\n  allDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getAllDomainsCards)\n  );\n  selectedDomainsCards$ = this.store.pipe(\n    select(DomainsCardsSelectors.getDomainsCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(DomainsCardsActions.initDomainsCardsSavedGame());\n  }\n\n  lockResource(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.lockResource({ id: pivotId }));\n  }\n\n  unlockResources(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.unlockResources({ id: pivotId }));\n  }\n\n  increaseResources(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResources({ id: pivotId })\n    );\n  }\n\n  increaseResourcesForDie(value: DiceValue): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForDie({ die: value })\n    );\n  }\n\n  increaseResourcesForAuspiciousYear(): void {\n    this.store.dispatch(\n      DomainsCardsActions.increaseAvailableResourcesForAuspiciousYear()\n    );\n  }\n\n  useLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.useLockedResources());\n  }\n\n  giveLockedResources(): void {\n    this.store.dispatch(DomainsCardsActions.giveLockedResources());\n  }\n\n  toggleDomainCardSelection(pivotId: string): void {\n    this.store.dispatch(\n      DomainsCardsActions.toggleDomainCardSelection({ id: pivotId })\n    );\n  }\n\n  clearDomainCardSelection(): void {\n    this.store.dispatch(DomainsCardsActions.clearDomainCardSelection());\n  }\n\n  putCardInSlot(\n    pivotId: string,\n    cardType: DomainCardType,\n    cardId: string\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.putCardInPivot({\n        id: pivotId,\n        cardType,\n        cardId,\n      })\n    );\n  }\n\n  createAvailableDomainCard(\n    domainId: string,\n    cardType: DomainCardType,\n    col: number,\n    row: number\n  ): void {\n    this.store.dispatch(\n      DomainsCardsActions.createDomainCard({\n        domainId,\n        cardType,\n        cardId: undefined,\n        col,\n        row,\n      })\n    );\n  }\n\n  countAndStealUnprotectedGoldAndWool(): void {\n    this.store.dispatch(\n      DomainsCardsActions.countAndStealUnprotectedGoldAndWool()\n    );\n  }\n\n  swapSelectedCards(): void {\n    this.store.dispatch(DomainsCardsActions.swapSelectedCards());\n  }\n\n  removeDomainCard(pivotId: string): void {\n    this.store.dispatch(DomainsCardsActions.removeDomainCard({ id: pivotId }));\n  }\n\n  getDomainMinCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinCol(domainId));\n  }\n\n  getDomainMaxCol(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxCol(domainId));\n  }\n\n  getDomainMinRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMinRow(domainId));\n  }\n\n  getDomainMaxRow(domainId: string): Observable {\n    return this.store.select(DomainsCardsSelectors.getDomainMaxRow(domainId));\n  }\n\n  getMasteryDomainForType(\n    type: MasteryPointsType\n  ): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMasteryDomainForType(type)\n    );\n  }\n\n  getCardsVictoryPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCardsVictoryPointsForDomain(domainId)\n    );\n  }\n\n  getMerchantShipCountForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getMerchantShipCountForDomain(domainId)\n    );\n  }\n\n  getCelebrationPointsForDomain(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.getCelebrationPointsForDomain(domainId)\n    );\n  }\n\n  hasDomainCommunityCenter(domainId: string): Observable {\n    return this.store.select(\n      DomainsCardsSelectors.hasDomainCommunityCenter(domainId)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsPartialState.html":{"url":"interfaces/DomainsCardsPartialState.html","title":"interface - DomainsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DOMAINS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DOMAINS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DOMAINS_CARDS_FEATURE_KEY:         DomainsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DomainsCardsState.html":{"url":"interfaces/DomainsCardsState.html","title":"interface - DomainsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DomainsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/domains-cards/domains-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            selectedIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as DomainsCardsActions from './domains-cards.actions';\nimport { DomainsCardsEntity } from './domains-cards.models';\n\nexport const DOMAINS_CARDS_FEATURE_KEY = 'domainsCards';\n\nexport interface DomainsCardsState extends EntityState {\n  selectedIds: string[];\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface DomainsCardsPartialState {\n  readonly [DOMAINS_CARDS_FEATURE_KEY]: DomainsCardsState;\n}\n\nexport const domainsCardsAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialDomainsCardsState: DomainsCardsState =\n  domainsCardsAdapter.getInitialState({\n    selectedIds: [],\n    initialized: false,\n    loaded: false,\n  });\n\nexport const domainsCardsReducer = createReducer(\n  initialDomainsCardsState,\n  on(DomainsCardsActions.initDomainsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(DomainsCardsActions.initDomainsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(DomainsCardsActions.loadDomainsCardsSuccess, (state, { domainsCards }) =>\n    domainsCardsAdapter.setAll(domainsCards, { ...state, loaded: true })\n  ),\n  on(DomainsCardsActions.loadDomainsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    DomainsCardsActions.setDomainsCardsInitialized,\n    (state, { domainsCards }) =>\n      domainsCardsAdapter.setAll(domainsCards, { ...state, initialized: true })\n  ),\n  on(DomainsCardsActions.updateDomainCard, (state, { update }) =>\n    domainsCardsAdapter.updateOne(update, state)\n  ),\n  on(DomainsCardsActions.updateDomainsCards, (state, { updates }) =>\n    domainsCardsAdapter.updateMany(updates, state)\n  ),\n  on(DomainsCardsActions.addDomainCard, (state, { domainCard }) =>\n    domainsCardsAdapter.addOne(domainCard, state)\n  ),\n  on(DomainsCardsActions.toggleDomainCardSelection, (state, { id }) => {\n    const foundId = state.selectedIds.find((selectedId) => selectedId === id);\n\n    let newSelectedIds;\n    if (foundId === undefined) {\n      newSelectedIds = [...state.selectedIds, id];\n    } else {\n      newSelectedIds = state.selectedIds.filter(\n        (selectedId) => selectedId !== foundId\n      );\n    }\n\n    return {\n      ...state,\n      selectedIds: newSelectedIds,\n    };\n  }),\n  on(DomainsCardsActions.clearDomainCardSelection, (state) => ({\n    ...state,\n    selectedIds: [],\n  })),\n  on(DomainsCardsActions.swapSelectedCards, (state) => {\n    const card0 = state.entities[state.selectedIds[0]];\n    const card1 = state.entities[state.selectedIds[1]];\n    if (card0 === undefined || card1 === undefined) {\n      throw new Error(\n        `Something went wrong, card0 and card1 shouldn't be undefined at this point.`\n      );\n    }\n    const newCard0 = { ...card0, col: card1.col, row: card1.row };\n    const newCard1 = { ...card1, col: card0.col, row: card0.row };\n\n    return {\n      ...state,\n      entities: {\n        ...state.entities,\n        [card0.id]: newCard0,\n        [card1.id]: newCard1,\n      },\n    };\n  }),\n  on(DomainsCardsActions.removeDomainCard, (state, { id }) =>\n    domainsCardsAdapter.removeOne(id, state)\n  ),\n  on(DomainsCardsActions.setDomainsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventCard.html":{"url":"interfaces/EventCard.html","title":"interface - EventCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/event.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Event Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         EventName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasId } from '../interfaces/entity';\nimport { HasName } from '../interfaces/name';\nimport { HasRules } from '../interfaces/rules';\nimport { EventName } from '../types/event';\n\nexport const EVENT_CARD_INTERFACE_NAME = 'DevelopmentCard';\n\n/**\n * Interface for the Event Cards\n */\nexport interface EventCard extends HasId, HasName, HasRules {\n  interface: typeof EVENT_CARD_INTERFACE_NAME;\n  id: string;\n  name: EventName;\n  ruleIds: string[];\n}\n\nexport const createEventCard = (\n  id: string,\n  name: EventName,\n  ruleIds: string[]\n): EventCard => ({ interface: EVENT_CARD_INTERFACE_NAME, id, name, ruleIds });\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isEventCard(obj: any): obj is EventCard {\n  return obj !== undefined && obj.interface === EVENT_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsEffects.html":{"url":"injectables/EventsPileCardsEffects.html","title":"injectable - EventsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                resetPileAndSelectFirst$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, eventsPileCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPileAndSelectFirst$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.effects.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { createInitialEventsPileCards } from './events-pile-cards.models';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\n\n@Injectable()\nexport class EventsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsNewGame),\n      map(() =>\n        EventsPileCardsActions.setEntitiesInitializedEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.initEventsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return EventsPileCardsActions.loadEventsPileCardsSuccess({\n            eventsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return EventsPileCardsActions.loadEventsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  resetPileAndSelectFirst$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(EventsPileCardsActions.resetEventsPile),\n      map(() =>\n        EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards({\n          eventsPileCards: createInitialEventsPileCards(),\n        })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private eventsPileCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsEntity.html":{"url":"interfaces/EventsPileCardsEntity.html","title":"interface - EventsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'EventsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { eventCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'EventsPileCards' data\n */\nexport interface EventsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createEventsPileCardsEntity = (\n  id: string,\n  cardId: string\n): EventsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialEventsPileCards = (): EventsPileCardsEntity[] => {\n  const numberOfCardsBelowFestival = 3;\n  const shuffled = arrayShuffle(Array.from(eventCards.keys()).slice(1));\n  shuffled.splice(-numberOfCardsBelowFestival, 0, 'EVENT_0');\n  const entities = shuffled.map((cardId) =>\n    createEventsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsPileCardsFacade.html":{"url":"injectables/EventsPileCardsFacade.html","title":"injectable - EventsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allEventsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedEventsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeSelected\n                            \n                            \n                                resetEventsPile\n                            \n                            \n                                selectFirst\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPile\n                        \n                    \n                \n            \n            \n                \nresetEventsPile()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirst\n                        \n                    \n                \n            \n            \n                \nselectFirst()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEventsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport * as EventsPileCardsFeature from './events-pile-cards.reducer';\nimport * as EventsPileCardsSelectors from './events-pile-cards.selectors';\n\n@Injectable()\nexport class EventsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsLoaded)\n  );\n  allEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getAllEventsPileCards)\n  );\n  selectedEventsPileCards$ = this.store.pipe(\n    select(EventsPileCardsSelectors.getEventsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(EventsPileCardsActions.initEventsPileCardsSavedGame());\n  }\n\n  resetEventsPile(): void {\n    this.store.dispatch(EventsPileCardsActions.resetEventsPile());\n  }\n\n  selectFirst(): void {\n    this.store.dispatch(EventsPileCardsActions.selectFirstEventsPileCard());\n  }\n\n  removeSelected(): void {\n    this.store.dispatch(EventsPileCardsActions.removeSelectedEventsPileCard());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsPartialState.html":{"url":"interfaces/EventsPileCardsPartialState.html","title":"interface - EventsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            EVENTS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EVENTS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        EVENTS_PILE_CARDS_FEATURE_KEY:         EventsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsPileCardsState.html":{"url":"interfaces/EventsPileCardsState.html","title":"interface - EventsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as EventsPileCardsActions from './events-pile-cards.actions';\nimport { EventsPileCardsEntity } from './events-pile-cards.models';\n\nexport const EVENTS_PILE_CARDS_FEATURE_KEY = 'eventsPileCards';\n\nexport interface EventsPileCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface EventsPileCardsPartialState {\n  readonly [EVENTS_PILE_CARDS_FEATURE_KEY]: EventsPileCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const eventsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialEventsPileCardsState: EventsPileCardsState = eventsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const eventsPileCardsReducer = createReducer(\n  initialEventsPileCardsState,\n  on(EventsPileCardsActions.initEventsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n    selectedId: undefined,\n  })),\n  on(EventsPileCardsActions.initEventsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    EventsPileCardsActions.loadEventsPileCardsSuccess,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, { ...state, loaded: true })\n  ),\n  on(EventsPileCardsActions.loadEventsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(EventsPileCardsActions.setEventsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    EventsPileCardsActions.setEntitiesInitializedEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(\n    EventsPileCardsActions.setEntitiesSelectFirstEventsPileCards,\n    (state, { eventsPileCards }) =>\n      eventsPileCardsAdapter.setAll(eventsPileCards, {\n        ...state,\n        selectedId: eventsPileCards[0].id,\n      })\n  ),\n  on(EventsPileCardsActions.selectFirstEventsPileCard, (state) => ({\n    ...state,\n    selectedId: state.ids[0] as string,\n  })),\n  on(EventsPileCardsActions.removeSelectedEventsPileCard, (state) => {\n    const unselectedState = {\n      ...state,\n      selectedId: undefined,\n    };\n    if (state.selectedId !== undefined) {\n      return eventsPileCardsAdapter.removeOne(\n        state.selectedId,\n        unselectedState\n      );\n    } else {\n      return unselectedState;\n    }\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureEngineModule.html":{"url":"modules/FeatureEngineModule.html","title":"module - FeatureEngineModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureEngineModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-engine/src/lib/feature-engine.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class FeatureEngineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureGameModule.html":{"url":"modules/FeatureGameModule.html","title":"module - FeatureGameModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureGameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_imports\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\n\nBoardModule\n\nBoardModule\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/feature-game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BoardModule } from './board/board.module';\n\n@NgModule({\n  imports: [CommonModule, BoardModule],\n  exports: [BoardModule],\n})\nexport class FeatureGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameEffects.html":{"url":"injectables/GameEffects.html","title":"injectable - GameEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                throwDice$\n                            \n                            \n                                throwEvent$\n                            \n                            \n                                throwProduction$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, gameStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProduction$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport {\n  getRandomEventDieValue,\n  getRandomProductionDieValue,\n} from '@taormina/shared-utils';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameEffects {\n  throwDice$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwDice),\n      switchMap(() => [\n        GameActions.throwEventDie(),\n        GameActions.throwProductionDie(),\n      ])\n    )\n  );\n\n  throwProduction$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwProductionDie),\n      withLatestFrom(\n        this.gameStore.select(GameSelectors.getGameNextProductionDie)\n      ),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map(([_action, nextProductionDie]) => {\n        if (nextProductionDie !== undefined) {\n          return nextProductionDie;\n        } else {\n          return getRandomProductionDieValue();\n        }\n      }),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setProductionDie({ value: undefined }),\n        GameActions.setProductionDie({ value }),\n        GameActions.setNextProductionDie({ value: undefined }),\n      ])\n    )\n  );\n\n  throwEvent$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GameActions.throwEventDie),\n      map(() => getRandomEventDieValue()),\n      switchMap((value) => [\n        // Set undefined to force a change if same value as previous\n        GameActions.setEventDie({ value: undefined }),\n        GameActions.setEventDie({ value }),\n      ])\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private gameStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameFacade.html":{"url":"injectables/GameFacade.html","title":"injectable - GameFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action$\n                            \n                            \n                                eventDie$\n                            \n                            \n                                nextProductionDie$\n                            \n                            \n                                phase$\n                            \n                            \n                                player$\n                            \n                            \n                                productionDie$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                setAction\n                            \n                            \n                                setNextProductionDie\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                throwDice\n                            \n                            \n                                throwEventDie\n                            \n                            \n                                throwProductionDie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:35\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAction\n                        \n                    \n                \n            \n            \n                \nsetAction(action: ActionName | undefined)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionName | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNextProductionDie\n                        \n                    \n                \n            \n            \n                \nsetNextProductionDie(value: ResourceValue)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwEventDie\n                        \n                    \n                \n            \n            \n                \nthrowEventDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwProductionDie\n                        \n                    \n                \n            \n            \n                \nthrowProductionDie()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameAction))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameEventDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextProductionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phase$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePhase))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGamePlayer))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productionDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(GameSelectors.getGameProductionDie))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/game/game.facade.ts:20\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\nimport { GamePartialState } from './game.reducer';\nimport * as GameSelectors from './game.selectors';\n\n@Injectable()\nexport class GameFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  productionDie$ = this.store.pipe(select(GameSelectors.getGameProductionDie));\n  nextProductionDie$ = this.store.pipe(\n    select(GameSelectors.getGameNextProductionDie)\n  );\n  eventDie$ = this.store.pipe(select(GameSelectors.getGameEventDie));\n  phase$ = this.store.pipe(select(GameSelectors.getGamePhase));\n  player$ = this.store.pipe(select(GameSelectors.getGamePlayer));\n  action$ = this.store.pipe(select(GameSelectors.getGameAction));\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(GameActions.initNewGame());\n  }\n\n  throwDice(): void {\n    this.store.dispatch(GameActions.throwDice());\n  }\n\n  throwProductionDie(): void {\n    this.store.dispatch(GameActions.throwProductionDie());\n  }\n\n  setNextProductionDie(value: ResourceValue): void {\n    this.store.dispatch(GameActions.setNextProductionDie({ value }));\n  }\n\n  throwEventDie(): void {\n    this.store.dispatch(GameActions.throwEventDie());\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.store.dispatch(GameActions.setPhase({ phase }));\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.store.dispatch(GameActions.setPlayer({ player }));\n  }\n\n  setAction(action: ActionName | undefined): void {\n    this.store.dispatch(GameActions.setAction({ action }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamePartialState.html":{"url":"interfaces/GamePartialState.html","title":"interface - GamePartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamePartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            GAME_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        GAME_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GAME_FEATURE_KEY:         GameState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameRulesService.html":{"url":"injectables/GameRulesService.html","title":"injectable - GameRulesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameRulesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/feature-engine/src/lib/game-rules.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auspiciousYear$\n                            \n                            \n                                countAndSteal$\n                            \n                            \n                                event$\n                            \n                            \n                                festival$\n                            \n                            \n                                gameEnded$\n                            \n                            \n                                increaseResourcesForAuspiciousYear$\n                            \n                            \n                                increaseResourcesForDie$\n                            \n                            \n                                resetEventsPileOnFestival$\n                            \n                            \n                                selectFirstEvent$\n                            \n                            \n                                thieves$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawCardFromStockToHand\n                            \n                            \n                                drawFirstCardsFromStockToHand\n                            \n                            \n                                getVictoryPointsForDomain\n                            \n                            \n                                initNewGame\n                            \n                            \n                                putBackFromDomainToStockPile\n                            \n                            \n                                putBackFromHandToStockPile\n                            \n                            \n                                putLandsPileCardInSlot\n                            \n                            \n                                throwDice\n                            \n                            \n                                useActionCard\n                            \n                            \n                                useResourcesToPutAgglomerationPileCardInSlot\n                            \n                            \n                                useResourcesToPutHandCardInSlot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, domainsCards: DomainsCardsFacade, handsCards: HandsCardsFacade, agglomerationPilesCards: AgglomerationPilesCardsFacade, landsPileCards: LandsPileCardsFacade, stockPilesCards: StockPilesCardsFacade, eventsPileCards: EventsPileCardsFacade, discardPileCards: DiscardPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domainsCards\n                                                  \n                                                        \n                                                                        DomainsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agglomerationPilesCards\n                                                  \n                                                        \n                                                                        AgglomerationPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        landsPileCards\n                                                  \n                                                        \n                                                                        LandsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCards\n                                                  \n                                                        \n                                                                        StockPilesCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discardPileCards\n                                                  \n                                                        \n                                                                        DiscardPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drawCardFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawCardFromStockToHand(pileId: string, cardId: string, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawFirstCardsFromStockToHand\n                        \n                    \n                \n            \n            \n                \ndrawFirstCardsFromStockToHand(pileId: string, cardsCount: number, handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardsCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVictoryPointsForDomain\n                        \n                    \n                \n            \n            \n                \ngetVictoryPointsForDomain(domainId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromDomainToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromDomainToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:378\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putBackFromHandToStockPile\n                        \n                    \n                \n            \n            \n                \nputBackFromHandToStockPile(pileId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:357\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putLandsPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nputLandsPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwDice\n                        \n                    \n                \n            \n            \n                \nthrowDice()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useActionCard\n                        \n                    \n                \n            \n            \n                \nuseActionCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:426\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutAgglomerationPileCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutAgglomerationPileCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useResourcesToPutHandCardInSlot\n                        \n                    \n                \n            \n            \n                \nuseResourcesToPutHandCardInSlot()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-engine/src/lib/game-rules.service.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countAndSteal$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        event$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(filter((die) => die === EventValue.Event))\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        festival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameEnded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForAuspiciousYear$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseResourcesForDie$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEventsPileOnFestival$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFirstEvent$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thieves$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/feature-engine/src/lib/game-rules.service.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  DiscardPileCardsFacade,\n  DomainsCardsFacade,\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  AgglomerationPilesCardsFacade,\n  GameFacade,\n  HandsCardsFacade,\n  LandsPileCardsFacade,\n  StockPilesCardsFacade,\n} from '@taormina/data-access-game';\nimport {\n  actionCards,\n  eventCards,\n  ID_AGGLOMERATION_HAMLET,\n  ID_AGGLOMERATION_TOWN,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  AGGLOMERATION_CARD_INTERFACE_NAME,\n  AVAILABLE_AGGLOMERATION_SLOT,\n  AVAILABLE_DEVELOPMENT_SLOT,\n  AVAILABLE_LAND_SLOT,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  DiceValue,\n  EventName,\n  EventValue,\n  GamePhase,\n  LAND_CARD_INTERFACE_NAME,\n  MasteryPointsType,\n  RowValue,\n} from '@taormina/shared-models';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameRulesService {\n  gameEnded$ = new Subject();\n\n  event$ = this.game.eventDie$.pipe(filter((die) => die === EventValue.Event));\n\n  thieves$ = this.game.eventDie$.pipe(\n    filter((die) => die === EventValue.Thieves)\n  );\n\n  countAndSteal$ = this.thieves$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.domainsCards.countAndStealUnprotectedGoldAndWool();\n    })\n  );\n\n  selectFirstEvent$ = this.event$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => {\n      this.eventsPileCards.selectFirst();\n    })\n  );\n\n  auspiciousYear$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter(\n      (pivot) => eventCards.get(pivot.cardId)?.name === EventName.AuspiciousYear\n    )\n  );\n\n  festival$ = this.eventsPileCards.selectedEventsPileCards$.pipe(\n    filter((pivot): pivot is EventsPileCardsEntity => pivot !== undefined),\n    filter((pivot) => eventCards.get(pivot.cardId)?.name === EventName.Festival)\n  );\n\n  increaseResourcesForDie$ = this.game.productionDie$.pipe(\n    takeUntil(this.gameEnded$),\n    filter((value): value is DiceValue => value !== undefined),\n    map((value) => this.domainsCards.increaseResourcesForDie(value))\n  );\n\n  increaseResourcesForAuspiciousYear$ = this.auspiciousYear$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.domainsCards.increaseResourcesForAuspiciousYear())\n  );\n\n  resetEventsPileOnFestival$ = this.festival$.pipe(\n    takeUntil(this.gameEnded$),\n    map(() => this.eventsPileCards.resetEventsPile())\n  );\n\n  constructor(\n    private game: GameFacade,\n    private domainsCards: DomainsCardsFacade,\n    private handsCards: HandsCardsFacade,\n    private agglomerationPilesCards: AgglomerationPilesCardsFacade,\n    private landsPileCards: LandsPileCardsFacade,\n    private stockPilesCards: StockPilesCardsFacade,\n    private eventsPileCards: EventsPileCardsFacade,\n    private discardPileCards: DiscardPileCardsFacade\n  ) {}\n\n  initNewGame(): void {\n    this.gameEnded$.next();\n    this.countAndSteal$.subscribe();\n    this.selectFirstEvent$.subscribe();\n    this.increaseResourcesForDie$.subscribe();\n    this.increaseResourcesForAuspiciousYear$.subscribe();\n    this.resetEventsPileOnFestival$.subscribe();\n\n    this.game.initNewGame();\n    this.domainsCards.initNewGame();\n    this.handsCards.initNewGame();\n    this.agglomerationPilesCards.initNewGame();\n    this.landsPileCards.initNewGame();\n    this.stockPilesCards.initNewGame();\n    this.eventsPileCards.initNewGame();\n    this.discardPileCards.initNewGame();\n  }\n\n  getVictoryPointsForDomain(domainId: string): Observable {\n    return combineLatest([\n      this.domainsCards.getCardsVictoryPointsForDomain(domainId),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Trade),\n      this.domainsCards.getMasteryDomainForType(MasteryPointsType.Strength),\n    ]).pipe(\n      map(\n        ([\n          cardsVictoryPoints,\n          tradeMasteryDomainId,\n          strengthMasteryDomainId,\n        ]) => {\n          return (\n            cardsVictoryPoints +\n            (tradeMasteryDomainId === domainId ? 1 : 0) +\n            (strengthMasteryDomainId === domainId ? 1 : 0)\n          );\n        }\n      )\n    );\n  }\n\n  drawFirstCardsFromStockToHand(\n    pileId: string,\n    cardsCount: number,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          return stockPilesCards\n            .filter((stockPileCard) => stockPileCard.pileId === pileId)\n            .slice(0, cardsCount)\n            .map((stockPileCard) => {\n              return {\n                type: stockPileCard.cardType,\n                id: stockPileCard.cardId,\n              };\n            });\n        })\n      )\n      .subscribe((cards) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, cards);\n        this.handsCards.addCardsToHand(handId, cards);\n      });\n  }\n\n  drawCardFromStockToHand(\n    pileId: string,\n    cardId: string,\n    handId: string\n  ): void {\n    this.stockPilesCards.allStockPilesCards$\n      .pipe(\n        take(1),\n        map((stockPilesCards) => {\n          const card = stockPilesCards.find(\n            (stockPileCard) =>\n              stockPileCard.pileId === pileId && stockPileCard.cardId === cardId\n          );\n          if (card === undefined) {\n            throw new Error(\n              `Something went wrong, card shouldn't be undefined at this point.`\n            );\n          }\n          return {\n            type: card.cardType,\n            id: card.cardId,\n          };\n        })\n      )\n      .subscribe((card) => {\n        this.stockPilesCards.removeCardsFromStockPileTop(pileId, [card]);\n        this.handsCards.addCardsToHand(handId, [card]);\n      });\n  }\n\n  throwDice(): void {\n    this.game.throwEventDie();\n    this.game.phase$.pipe(take(1)).subscribe((phase) => {\n      if (phase !== GamePhase.InitialThrow) {\n        this.game.throwProductionDie();\n      }\n    });\n  }\n\n  useResourcesToPutAgglomerationPileCardInSlot(): void {\n    this.domainsCards.useLockedResources();\n\n    combineLatest([\n      this.agglomerationPilesCards.selectedAgglomerationPilesCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([agglomerationPileCard, domainCards]) => {\n          if (agglomerationPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.agglomerationPilesCards.removeAgglomerationPileCard(\n            agglomerationPileCard.id\n          );\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            AGGLOMERATION_CARD_INTERFACE_NAME,\n            agglomerationPileCard.cardId\n          );\n\n          if (agglomerationPileCard.pileId === ID_AGGLOMERATION_TOWN) {\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Lower\n            );\n            this.domainsCards.createAvailableDomainCard(\n              domainCard.domainId,\n              AVAILABLE_DEVELOPMENT_SLOT,\n              domainCard.col,\n              RowValue.Upper\n            );\n          } else {\n            const availableCol =\n              domainCard.col  {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.handsCards.removeHandCard(handCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            DEVELOPMENT_CARD_INTERFACE_NAME,\n            handCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putLandsPileCardInSlot(): void {\n    combineLatest([\n      this.landsPileCards.selectedLandsPileCards$,\n      this.domainsCards.selectedDomainsCards$,\n    ])\n      .pipe(\n        take(1),\n        map(([landsPileCard, domainCards]) => {\n          if (landsPileCard === undefined) {\n            throw new Error(`Can't put card in slot if no card selected.`);\n          }\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in slot if no slot or more than one slot selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n\n          this.landsPileCards.removeLandsPileCard(landsPileCard.id);\n          this.domainsCards.putCardInSlot(\n            domainCard.id,\n            LAND_CARD_INTERFACE_NAME,\n            landsPileCard.cardId\n          );\n          this.domainsCards.clearDomainCardSelection();\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromHandToStockPile(pileId: string): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type: handCard.cardType,\n              id: handCard.cardId,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  putBackFromDomainToStockPile(pileId: string): void {\n    this.domainsCards.selectedDomainsCards$\n      .pipe(\n        take(1),\n        map((domainCards) => {\n          if (domainCards.length !== 1) {\n            throw new Error(\n              `Can't put card in pile if no card or more than one card selected.`\n            );\n          }\n          const domainCard = domainCards[0];\n          if (domainCard === undefined) {\n            throw new Error(\n              `Something went wrong, domainCard shouldn't be undefined at this point.`\n            );\n          }\n          const type = domainCard.cardType;\n          if (type !== DEVELOPMENT_CARD_INTERFACE_NAME) {\n            throw new Error(\n              `Can't put back card of type other than development.`\n            );\n          }\n          const id = domainCard.cardId;\n          if (id === undefined) {\n            throw new Error(\n              `Something went wrong, cardId shouldn't be undefined at this point.`\n            );\n          }\n\n          this.domainsCards.removeDomainCard(domainCard.id);\n          this.domainsCards.createAvailableDomainCard(\n            domainCard.domainId,\n            AVAILABLE_DEVELOPMENT_SLOT,\n            domainCard.col,\n            domainCard.row\n          );\n          this.domainsCards.clearDomainCardSelection();\n          this.stockPilesCards.addCardsToStockPileBottom(pileId, [\n            {\n              type,\n              id,\n            },\n          ]);\n        })\n      )\n      .subscribe();\n  }\n\n  useActionCard(): void {\n    this.handsCards.selectedHandsCards$\n      .pipe(\n        take(1),\n        map((handCard) => {\n          if (handCard === undefined) {\n            throw new Error(`Can't put card in pile if no card selected.`);\n          }\n          if (\n            handCard.cardType !== ACTION_CARD_INTERFACE_NAME ||\n            handCard.cardId === undefined\n          ) {\n            throw new Error(`Can't use card other than action.`);\n          }\n          const action = actionCards.get(handCard.cardId);\n          if (action === undefined) {\n            throw new Error(\n              `Something went wrong, action shouldn't be undefined at this point.`\n            );\n          }\n          this.handsCards.removeHandCard(handCard.id);\n          this.handsCards.unselectHandCard();\n          this.game.setAction(action.name);\n          this.discardPileCards.addCardToDiscardPile({\n            type: handCard.cardType,\n            id: handCard.cardId,\n          });\n        })\n      )\n      .subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/game/game.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            eventDie\n                                        \n                                \n                                \n                                        \n                                            nextProductionDie\n                                        \n                                \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            productionDie\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionName | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionName | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventDie:         EventValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextProductionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextProductionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         GamePhase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GamePhase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productionDie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productionDie:         ResourceValue | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport {\n  ActionName,\n  DomainColor,\n  EventValue,\n  GamePhase,\n  ResourceValue,\n} from '@taormina/shared-models';\n\nimport * as GameActions from './game.actions';\n\nexport const GAME_FEATURE_KEY = 'game';\n\nexport interface GameState {\n  productionDie: ResourceValue | undefined;\n  nextProductionDie: ResourceValue | undefined;\n  eventDie: EventValue | undefined;\n  phase: GamePhase;\n  player: DomainColor;\n  action: ActionName | undefined;\n}\n\nexport interface GamePartialState {\n  readonly [GAME_FEATURE_KEY]: GameState;\n}\n\nexport const initialGameState: GameState = {\n  productionDie: undefined,\n  nextProductionDie: undefined,\n  eventDie: undefined,\n  phase: GamePhase.InitialThrow,\n  player: DomainColor.Red,\n  action: undefined,\n};\n\nexport const gameReducer = createReducer(\n  initialGameState,\n  on(GameActions.initNewGame, () => ({ ...initialGameState })),\n  on(GameActions.setProductionDie, (state, { value }) => ({\n    ...state,\n    productionDie: value,\n  })),\n  on(GameActions.setNextProductionDie, (state, { value }) => ({\n    ...state,\n    nextProductionDie: value,\n  })),\n  on(GameActions.setEventDie, (state, { value }) => ({\n    ...state,\n    eventDie: value,\n  })),\n  on(GameActions.setPhase, (state, { phase }) => ({\n    ...state,\n    phase,\n  })),\n  on(GameActions.setPlayer, (state, { player }) => ({\n    ...state,\n    player,\n  })),\n  on(GameActions.setAction, (state, { action }) => ({\n    ...state,\n    action,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hand.html":{"url":"interfaces/Hand.html","title":"interface - Hand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/hand.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Hands\n\n            \n\n            \n                Extends\n            \n            \n                        HasColor\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { DomainColor } from '../types/domain';\n\n/**\n * Interface for the Hands\n */\nexport interface Hand extends HasColor {\n  id: string; // Primary ID\n  color: DomainColor;\n}\n\nexport const createHand = (id: string, color: DomainColor): Hand => ({\n  id,\n  color,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HandComponent.html":{"url":"components/HandComponent.html","title":"component - HandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/hand/hand/hand.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-hand\n            \n\n            \n                styleUrls\n                ./hand.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hand.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ACTION_CARD_INTERFACE_NAME\n                            \n                            \n                                DEVELOPMENT_CARD_INTERFACE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionCard\n                            \n                            \n                                getDevelopmentCard\n                            \n                            \n                                getHand\n                            \n                            \n                                getHandsCards\n                            \n                            \n                                selectHandCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                handId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(handsCards: HandsCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handsCards\n                                                  \n                                                        \n                                                                        HandsCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        handId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActionCard\n                        \n                    \n                \n            \n            \n                \ngetActionCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDevelopmentCard\n                        \n                    \n                \n            \n            \n                \ngetDevelopmentCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHand\n                        \n                    \n                \n            \n            \n                \ngetHand()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Hand | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandsCards\n                        \n                    \n                \n            \n            \n                \ngetHandsCards(handId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ACTION_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ACTION_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT_CARD_INTERFACE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DEVELOPMENT_CARD_INTERFACE_NAME\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/hand/hand/hand.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { HandsCardsEntity, HandsCardsFacade } from '@taormina/data-access-game';\nimport {\n  actionCards,\n  developmentCards,\n  hands,\n} from '@taormina/shared-constants';\nimport {\n  ActionCard,\n  ACTION_CARD_INTERFACE_NAME,\n  DevelopmentCard,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n  Hand,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'taormina-hand',\n  templateUrl: './hand.component.html',\n  styleUrls: ['./hand.component.css'],\n})\nexport class HandComponent {\n  @Input() handId!: string;\n\n  ACTION_CARD_INTERFACE_NAME = ACTION_CARD_INTERFACE_NAME;\n  DEVELOPMENT_CARD_INTERFACE_NAME = DEVELOPMENT_CARD_INTERFACE_NAME;\n\n  constructor(private handsCards: HandsCardsFacade) {}\n\n  getHand(): Hand | undefined {\n    return hands.get(this.handId);\n  }\n\n  getHandsCards(handId: string): Observable {\n    return this.handsCards.allHandsCards$.pipe(\n      map((handsCards) =>\n        handsCards.filter((handCard) => handCard.handId === handId)\n      )\n    );\n  }\n\n  getActionCard(cardId: string): ActionCard | undefined {\n    return actionCards.get(cardId);\n  }\n\n  getDevelopmentCard(cardId: string): DevelopmentCard | undefined {\n    return developmentCards.get(cardId);\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.handsCards.selectHandCard(pivotId);\n  }\n}\n\n    \n\n    \n        \n  {{ hand.color }}\n  \n    \n      \n        {{ action.name }}\n        Select\n      \n    \n    \n      \n        {{ development.name }}\n        Select\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./hand.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ hand.color }}                    {{ action.name }}        Select                            {{ development.name }}        Select            '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HandModule.html":{"url":"modules/HandModule.html","title":"module - HandModule","body":"\n                   \n\n\n\n\n    Modules\n    HandModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HandModule\n\n\n\ncluster_HandModule_declarations\n\n\n\ncluster_HandModule_exports\n\n\n\n\nHandComponent\n\nHandComponent\n\n\n\nHandModule\n\nHandModule\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/hand/hand.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HandComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HandComponent } from './hand/hand.component';\n\n@NgModule({\n  declarations: [HandComponent],\n  imports: [CommonModule],\n  exports: [HandComponent],\n})\nexport class HandModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsEffects.html":{"url":"injectables/HandsCardsEffects.html","title":"injectable - HandsCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.effects.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { createHandsCardsEntity } from './hands-cards.models';\n\n@Injectable()\nexport class HandsCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsNewGame),\n      map(() => HandsCardsActions.setHandsCardsInitialized({ handsCards: [] }))\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.initHandsCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return HandsCardsActions.loadHandsCardsSuccess({ handsCards: [] });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return HandsCardsActions.loadHandsCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(HandsCardsActions.addCardsToHand),\n      map(({ handId, cards }) =>\n        cards.map((card) =>\n          createHandsCardsEntity(uuidv4(), handId, card.type, card.id)\n        )\n      ),\n      map((handsCards) => HandsCardsActions.addHandsCards({ handsCards }))\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsEntity.html":{"url":"interfaces/HandsCardsEntity.html","title":"interface - HandsCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'HandsCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            handId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\n/**\n * Interface for the 'HandsCards' data\n */\nexport interface HandsCardsEntity {\n  id: string; // Primary ID\n  handId: string; // Foreign key to hands\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createHandsCardsEntity = (\n  id: string,\n  handId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): HandsCardsEntity => ({\n  id,\n  handId,\n  cardType,\n  cardId,\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandsCardsFacade.html":{"url":"injectables/HandsCardsFacade.html","title":"injectable - HandsCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandsCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allHandsCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedHandsCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToHand\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeHandCard\n                            \n                            \n                                selectHandCard\n                            \n                            \n                                unselectHandCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToHand\n                        \n                    \n                \n            \n            \n                \naddCardsToHand(handId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeHandCard\n                        \n                    \n                \n            \n            \n                \nremoveHandCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHandCard\n                        \n                    \n                \n            \n            \n                \nselectHandCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unselectHandCard\n                        \n                    \n                \n            \n            \n                \nunselectHandCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded))\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedHandsCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/hands-cards/hands-cards.facade.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport * as HandsCardsFeature from './hands-cards.reducer';\nimport * as HandsCardsSelectors from './hands-cards.selectors';\n\n@Injectable()\nexport class HandsCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(select(HandsCardsSelectors.getHandsCardsLoaded));\n  allHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getAllHandsCards)\n  );\n  selectedHandsCards$ = this.store.pipe(\n    select(HandsCardsSelectors.getHandsCardsSelected)\n  );\n\n  constructor(private store: Store) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(HandsCardsActions.initHandsCardsSavedGame());\n  }\n\n  addCardsToHand(\n    handId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(HandsCardsActions.addCardsToHand({ handId, cards }));\n  }\n\n  selectHandCard(pivotId: string): void {\n    this.store.dispatch(HandsCardsActions.selectHandCard({ id: pivotId }));\n  }\n\n  unselectHandCard(): void {\n    this.store.dispatch(HandsCardsActions.unselectHandCard());\n  }\n\n  removeHandCard(id: string): void {\n    this.store.dispatch(HandsCardsActions.removeHandCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsPartialState.html":{"url":"interfaces/HandsCardsPartialState.html","title":"interface - HandsCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            HANDS_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HANDS_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HANDS_CARDS_FEATURE_KEY:         HandsCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandsCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandsCardsState.html":{"url":"interfaces/HandsCardsState.html","title":"interface - HandsCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandsCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/hands-cards/hands-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as HandsCardsActions from './hands-cards.actions';\nimport { HandsCardsEntity } from './hands-cards.models';\n\nexport const HANDS_CARDS_FEATURE_KEY = 'handsCards';\n\nexport interface HandsCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface HandsCardsPartialState {\n  readonly [HANDS_CARDS_FEATURE_KEY]: HandsCardsState;\n}\n\nexport const handsCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialHandsCardsState: HandsCardsState = handsCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const handsCardsReducer = createReducer(\n  initialHandsCardsState,\n  on(HandsCardsActions.initHandsCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(HandsCardsActions.initHandsCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(HandsCardsActions.loadHandsCardsSuccess, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, loaded: true })\n  ),\n  on(HandsCardsActions.loadHandsCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.setHandsCardsInitialized, (state, { handsCards }) =>\n    handsCardsAdapter.setAll(handsCards, { ...state, initialized: true })\n  ),\n  on(HandsCardsActions.addHandsCards, (state, { handsCards }) =>\n    handsCardsAdapter.addMany(handsCards, state)\n  ),\n  on(HandsCardsActions.setHandsCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(HandsCardsActions.selectHandCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(HandsCardsActions.unselectHandCard, (state) => ({\n    ...state,\n    selectedId: undefined,\n  })),\n  on(HandsCardsActions.removeHandCard, (state, { id }) =>\n    handsCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasColor.html":{"url":"interfaces/HasColor.html","title":"interface - HasColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/color.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DomainColor } from '../types/domain';\n\nexport interface HasColor {\n  color?: DomainColor;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasCost.html":{"url":"interfaces/HasCost.html","title":"interface - HasCost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasCost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/cost.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResourceType } from '../types/resources';\n\nexport interface HasCost {\n  cost: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasId.html":{"url":"interfaces/HasId.html","title":"interface - HasId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasId {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasName.html":{"url":"interfaces/HasName.html","title":"interface - HasName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/name.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasName {\n  name: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isHasName(obj: any): obj is HasName {\n  return typeof obj.name === 'string';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasRules.html":{"url":"interfaces/HasRules.html","title":"interface - HasRules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasRules\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/rules.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ruleIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ruleIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ruleIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasRules {\n  ruleIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasVictoryPoints.html":{"url":"interfaces/HasVictoryPoints.html","title":"interface - HasVictoryPoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HasVictoryPoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/interfaces/victory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            victoryPoints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        victoryPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        victoryPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVictoryPoints {\n  victoryPoints?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandCard.html":{"url":"interfaces/LandCard.html","title":"interface - LandCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared-models/src/lib/structures/land.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Land Cards\n\n            \n\n            \n                Extends\n            \n            \n                        HasId\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            die\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interface\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         DomainColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DomainColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        die\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        die:         ResourceValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interface\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interface:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         LandType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HasColor } from '../interfaces/color';\nimport { HasId } from '../interfaces/entity';\nimport { CanPrint } from '../interfaces/print';\nimport { ResourceValue } from '../types/dice';\nimport { DomainColor } from '../types/domain';\nimport { LandType } from '../types/resources';\n\nexport const LAND_CARD_INTERFACE_NAME = 'LandCard';\n\nexport const AVAILABLE_LAND_SLOT = 'AvailableLandSlot';\n\n/**\n * Interface for the Land Cards\n */\nexport interface LandCard extends HasId, HasColor, CanPrint {\n  interface: typeof LAND_CARD_INTERFACE_NAME;\n  id: string;\n  type: LandType;\n  die: ResourceValue;\n  color?: DomainColor;\n}\n\nexport const createLandCard = (\n  id: string,\n  type: LandType,\n  die: ResourceValue,\n  color?: DomainColor\n): LandCard => ({\n  interface: LAND_CARD_INTERFACE_NAME,\n  id,\n  type,\n  die,\n  color,\n  print: (): string => `${type}`,\n});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isLandCard(obj: any): obj is LandCard {\n  return obj !== undefined && obj.interface === LAND_CARD_INTERFACE_NAME;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsEffects.html":{"url":"injectables/LandsPileCardsEffects.html","title":"injectable - LandsPileCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.effects.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\nimport { map } from 'rxjs/operators';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { createInitialLandsPileCards } from './lands-pile-cards.models';\n\n@Injectable()\nexport class LandsPileCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsNewGame),\n      map(() =>\n        LandsPileCardsActions.setLandsPileCardsInitialized({\n          landsPileCards: createInitialLandsPileCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(LandsPileCardsActions.initLandsPileCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return LandsPileCardsActions.loadLandsPileCardsSuccess({\n            landsPileCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return LandsPileCardsActions.loadLandsPileCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  constructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsEntity.html":{"url":"interfaces/LandsPileCardsEntity.html","title":"interface - LandsPileCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'LandsPileCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { landCards } from '@taormina/shared-constants';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'LandsPileCards' data\n */\nexport interface LandsPileCardsEntity {\n  id: string; // Primary ID\n  cardId: string;\n}\n\nexport const createLandsPileCardsEntity = (\n  id: string,\n  cardId: string\n): LandsPileCardsEntity => ({\n  id,\n  cardId,\n});\n\nexport const createInitialLandsPileCards = (): LandsPileCardsEntity[] => {\n  const shuffled = arrayShuffle(Array.from(landCards.keys()));\n  const entities = shuffled.map((cardId) =>\n    createLandsPileCardsEntity(uuidv4(), cardId)\n  );\n  return entities;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LandsPileCardsFacade.html":{"url":"injectables/LandsPileCardsFacade.html","title":"injectable - LandsPileCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LandsPileCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allLandsPileCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedLandsPileCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeLandsPileCard\n                            \n                            \n                                selectLandsPileCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:32\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLandsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveLandsPileCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLandsPileCard\n                        \n                    \n                \n            \n            \n                \nselectLandsPileCard(pivotId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pivotId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:14\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLandsPileCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.facade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport * as LandsPileCardsFeature from './lands-pile-cards.reducer';\nimport * as LandsPileCardsSelectors from './lands-pile-cards.selectors';\n\n@Injectable()\nexport class LandsPileCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsLoaded)\n  );\n  allLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getAllLandsPileCards)\n  );\n  selectedLandsPileCards$ = this.store.pipe(\n    select(LandsPileCardsSelectors.getLandsPileCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(LandsPileCardsActions.initLandsPileCardsSavedGame());\n  }\n\n  selectLandsPileCard(pivotId: string): void {\n    this.store.dispatch(\n      LandsPileCardsActions.selectLandsPileCard({ id: pivotId })\n    );\n  }\n\n  removeLandsPileCard(id: string): void {\n    this.store.dispatch(LandsPileCardsActions.removeLandsPileCard({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsPartialState.html":{"url":"interfaces/LandsPileCardsPartialState.html","title":"interface - LandsPileCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            LANDS_PILE_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LANDS_PILE_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LANDS_PILE_CARDS_FEATURE_KEY:         LandsPileCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LandsPileCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LandsPileCardsState.html":{"url":"interfaces/LandsPileCardsState.html","title":"interface - LandsPileCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LandsPileCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/lands-pile-cards/lands-pile-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\n\nimport * as LandsPileCardsActions from './lands-pile-cards.actions';\nimport { LandsPileCardsEntity } from './lands-pile-cards.models';\n\nexport const LANDS_PILE_CARDS_FEATURE_KEY = 'landsPileCards';\n\nexport interface LandsPileCardsState extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface LandsPileCardsPartialState {\n  readonly [LANDS_PILE_CARDS_FEATURE_KEY]: LandsPileCardsState;\n}\n\nexport const landsPileCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialLandsPileCardsState: LandsPileCardsState = landsPileCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const landsPileCardsReducer = createReducer(\n  initialLandsPileCardsState,\n  on(LandsPileCardsActions.initLandsPileCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(LandsPileCardsActions.initLandsPileCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    LandsPileCardsActions.loadLandsPileCardsSuccess,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, { ...state, loaded: true })\n  ),\n  on(LandsPileCardsActions.loadLandsPileCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    LandsPileCardsActions.setLandsPileCardsInitialized,\n    (state, { landsPileCards }) =>\n      landsPileCardsAdapter.setAll(landsPileCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(LandsPileCardsActions.setLandsPileCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(LandsPileCardsActions.selectLandsPileCard, (state, { id }) => ({\n    ...state,\n    selectedId: id,\n  })),\n  on(LandsPileCardsActions.removeLandsPileCard, (state, { id }) =>\n    landsPileCardsAdapter.removeOne(id, state)\n  )\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhasesComponent.html":{"url":"components/PhasesComponent.html","title":"component - PhasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/feature-game/src/lib/phases/phases/phases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                taormina-phases\n            \n\n            \n                styleUrls\n                ./phases.component.css\n            \n\n\n\n            \n                templateUrl\n                ./phases.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DomainColor\n                            \n                            \n                                GamePhase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAction\n                            \n                            \n                                getEventCard\n                            \n                            \n                                getPhase\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getSelectedEventsPileCard\n                            \n                            \n                                removeSelectedEventsPileCard\n                            \n                            \n                                setPhase\n                            \n                            \n                                setPlayer\n                            \n                            \n                                unsetAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(game: GameFacade, eventsPileCards: EventsPileCardsFacade)\n                    \n                \n                        \n                            \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        GameFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsPileCards\n                                                  \n                                                        \n                                                                        EventsPileCardsFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAction\n                        \n                    \n                \n            \n            \n                \ngetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventCard\n                        \n                    \n                \n            \n            \n                \ngetEventCard(cardId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhase\n                        \n                    \n                \n            \n            \n                \ngetPhase()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \ngetSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelectedEventsPileCard\n                        \n                    \n                \n            \n            \n                \nremoveSelectedEventsPileCard()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPhase\n                        \n                    \n                \n            \n            \n                \nsetPhase(phase: GamePhase)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                GamePhase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayer\n                        \n                    \n                \n            \n            \n                \nsetPlayer(player: DomainColor)\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetAction\n                        \n                    \n                \n            \n            \n                \nunsetAction()\n                \n            \n\n\n            \n                \n                    Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DomainColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DomainColor\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GamePhase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GamePhase\n                    \n                \n                    \n                        \n                                Defined in libs/feature-game/src/lib/phases/phases/phases.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  EventsPileCardsEntity,\n  EventsPileCardsFacade,\n  GameFacade,\n} from '@taormina/data-access-game';\nimport { eventCards } from '@taormina/shared-constants';\nimport {\n  ActionName,\n  DomainColor,\n  EventCard,\n  GamePhase,\n} from '@taormina/shared-models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'taormina-phases',\n  templateUrl: './phases.component.html',\n  styleUrls: ['./phases.component.css'],\n})\nexport class PhasesComponent {\n  GamePhase = GamePhase;\n  DomainColor = DomainColor;\n\n  constructor(\n    private game: GameFacade,\n    private eventsPileCards: EventsPileCardsFacade\n  ) {}\n\n  getPhase(): Observable {\n    return this.game.phase$;\n  }\n\n  setPhase(phase: GamePhase): void {\n    this.game.setPhase(phase);\n  }\n\n  getPlayer(): Observable {\n    return this.game.player$;\n  }\n\n  setPlayer(player: DomainColor): void {\n    this.game.setPlayer(player);\n  }\n\n  getEventCard(cardId: string): EventCard | undefined {\n    return eventCards.get(cardId);\n  }\n\n  getSelectedEventsPileCard(): Observable {\n    return this.eventsPileCards.selectedEventsPileCards$;\n  }\n\n  removeSelectedEventsPileCard(): void {\n    this.eventsPileCards.removeSelected();\n  }\n\n  getAction(): Observable {\n    return this.game.action$;\n  }\n\n  unsetAction(): void {\n    this.game.setAction(undefined);\n  }\n}\n\n    \n\n    \n        \n  \n    Current Player:\n    \n      \n        {{ player.key }}\n    \n  \n  \n    Current Phase:\n    \n      \n        {{ phase.key }}\n    \n  \n  \n    Current event:\n    \n      \n        {{ event.name }}\n      \n    \n    \n    \n      Finish event\n    \n  \n  \n    Current action:\n    \n      {{ action }}\n    \n    \n    Finish action\n  \n\n\n    \n\n    \n                \n                    ./phases.component.css\n                \n                .flex-container {\n  display: flex;\n  column-gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Current Player:                  {{ player.key }}            Current Phase:                  {{ phase.key }}            Current event:                  {{ event.name }}                        Finish event            Current action:          {{ action }}            Finish action  '\n    var COMPONENTS = [{'name': 'ActionsComponent', 'selector': 'taormina-actions'},{'name': 'AppComponent', 'selector': 'taormina-root'},{'name': 'BoardComponent', 'selector': 'taormina-board'},{'name': 'CardBackComponent', 'selector': 'taormina-card-back'},{'name': 'CardComponent', 'selector': 'taormina-card'},{'name': 'CardFrontComponent', 'selector': 'taormina-card-front'},{'name': 'DiceComponent', 'selector': 'taormina-dice'},{'name': 'DomainComponent', 'selector': 'taormina-domain'},{'name': 'HandComponent', 'selector': 'taormina-hand'},{'name': 'PhasesComponent', 'selector': 'taormina-phases'},{'name': 'PilesComponent', 'selector': 'taormina-piles'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhasesModule.html":{"url":"modules/PhasesModule.html","title":"module - PhasesModule","body":"\n                   \n\n\n\n\n    Modules\n    PhasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PhasesModule_declarations\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\n\n\nPhasesModule\n\nPhasesModule\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/phases/phases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PhasesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PhasesComponent } from './phases/phases.component';\n\n@NgModule({\n  declarations: [PhasesComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [PhasesComponent],\n})\nexport class PhasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PilesModule.html":{"url":"modules/PilesModule.html","title":"module - PilesModule","body":"\n                   \n\n\n\n\n    Modules\n    PilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_imports\n\n\n\ncluster_PilesModule_declarations\n\n\n\ncluster_PilesModule_exports\n\n\n\n\nPilesComponent\n\nPilesComponent\n\n\n\nPilesModule\n\nPilesModule\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nPilesModule -->\n\nUiCardModule->PilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/feature-game/src/lib/piles/piles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PilesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiCardModule } from '@taormina/ui-card';\nimport { PilesComponent } from './piles/piles.component';\n\n@NgModule({\n  declarations: [PilesComponent],\n  imports: [CommonModule, UiCardModule],\n  exports: [PilesComponent],\n})\nexport class PilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsEffects.html":{"url":"injectables/StockPilesCardsEffects.html","title":"injectable - StockPilesCardsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addCards$\n                            \n                            \n                                initNewGame$\n                            \n                            \n                                initSavedGame$\n                            \n                            \n                                removeCards$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, stockPilesCardsStore: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockPilesCardsStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { fetch } from '@nrwl/angular';\nimport { forkJoin } from 'rxjs';\nimport { map, mergeMap, take } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport {\n  createInitialStockPilesCards,\n  createStockPilesCardsEntity,\n  StockPilesCardsEntity,\n} from './stock-piles-cards.models';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsEffects {\n  initNewGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsNewGame),\n      map(() =>\n        StockPilesCardsActions.setStockPilesCardsInitialized({\n          stockPilesCards: createInitialStockPilesCards(),\n        })\n      )\n    )\n  );\n\n  initSavedGame$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.initStockPilesCardsSavedGame),\n      fetch({\n        run: () => {\n          // Your custom service 'load' logic goes here. For now just return a success action...\n          return StockPilesCardsActions.loadStockPilesCardsSuccess({\n            stockPilesCards: [],\n          });\n        },\n\n        onError: (_action, error) => {\n          console.error('Error', error);\n          return StockPilesCardsActions.loadStockPilesCardsFailure({ error });\n        },\n      })\n    )\n  );\n\n  removeCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.removeCardsFromStockPileTop),\n      mergeMap((action) =>\n        forkJoin(\n          action.cards.map(({ type: cardType, id: cardId }) =>\n            this.stockPilesCardsStore.pipe(\n              select(\n                StockPilesCardsSelectors.getStockPileCardEntityByPivot(\n                  action.pileId,\n                  cardType,\n                  cardId\n                )\n              ),\n              take(1)\n            )\n          )\n        )\n      ),\n      map((stockPilesCards) =>\n        stockPilesCards\n          // TODO: throw error instead of filtering out undefined ?\n          .filter(\n            (stockPileCard): stockPileCard is StockPilesCardsEntity =>\n              stockPileCard !== undefined\n          )\n          .map((stockPileCard) => stockPileCard.id)\n      ),\n      map((ids) => StockPilesCardsActions.removeStockPilesCards({ ids }))\n    )\n  );\n\n  addCards$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockPilesCardsActions.addCardsToStockPileBottom),\n      map(({ pileId, cards }) =>\n        cards.map((card) =>\n          createStockPilesCardsEntity(uuidv4(), pileId, card.type, card.id)\n        )\n      ),\n      map((stockPilesCards) =>\n        StockPilesCardsActions.addStockPilesCards({ stockPilesCards })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private stockPilesCardsStore: Store\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsEntity.html":{"url":"interfaces/StockPilesCardsEntity.html","title":"interface - StockPilesCardsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'StockPilesCards' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardId\n                                        \n                                \n                                \n                                        \n                                            cardType\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pileId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardType:      | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  actionCards,\n  developmentCards,\n  stockPiles,\n} from '@taormina/shared-constants';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\nimport arrayShuffle from 'array-shuffle';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Interface for the 'StockPilesCards' data\n */\nexport interface StockPilesCardsEntity {\n  id: string; // Primary ID\n  pileId: string; // Foreign key to stock piles\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME;\n  cardId: string; // Foreign key to cards\n}\n\nexport const createStockPilesCardsEntity = (\n  id: string,\n  pileId: string,\n  cardType:\n    | typeof ACTION_CARD_INTERFACE_NAME\n    | typeof DEVELOPMENT_CARD_INTERFACE_NAME,\n  cardId: string\n): StockPilesCardsEntity =>\n  ({\n    id,\n    pileId,\n    cardType,\n    cardId,\n  } as StockPilesCardsEntity);\n\nexport const createInitialStockPilesCards = (): StockPilesCardsEntity[] => {\n  const stockPilesCards: StockPilesCardsEntity[] = [];\n\n  const shuffledCards = arrayShuffle([\n    ...Array.from(actionCards.values()),\n    ...Array.from(developmentCards.values()),\n  ]);\n\n  for (let i = 0; i = shuffledCards.length) break;\n      stockPilesCards.push(\n        createStockPilesCardsEntity(\n          uuidv4(),\n          stockPiles[i],\n          shuffledCards[cardIndex].interface,\n          shuffledCards[cardIndex].id\n        )\n      );\n    }\n  }\n\n  return stockPilesCards;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockPilesCardsFacade.html":{"url":"injectables/StockPilesCardsFacade.html","title":"injectable - StockPilesCardsFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockPilesCardsFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allStockPilesCards$\n                            \n                            \n                                loaded$\n                            \n                            \n                                selectedStockPilesCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardsToStockPileBottom\n                            \n                            \n                                initNewGame\n                            \n                            \n                                initSavedGame\n                            \n                            \n                                removeCardsFromStockPileTop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardsToStockPileBottom\n                        \n                    \n                \n            \n            \n                \naddCardsToStockPileBottom(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initNewGame\n                        \n                    \n                \n            \n            \n                \ninitNewGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:36\n                \n            \n\n\n            \n                \n                    Use the initialization action to perform one\nor more tasks in your Effects.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initSavedGame\n                        \n                    \n                \n            \n            \n                \ninitSavedGame()\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCardsFromStockPileTop\n                        \n                    \n                \n            \n            \n                \nremoveCardsFromStockPileTop(pileId: string, cards: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cards\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:18\n                        \n                    \n\n            \n                \n                    Combine pieces of state using createSelector,\nand expose them as observables through the facade.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStockPilesCards$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  )\n                    \n                \n                    \n                        \n                                Defined in libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.facade.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  ACTION_CARD_INTERFACE_NAME,\n  DEVELOPMENT_CARD_INTERFACE_NAME,\n} from '@taormina/shared-models';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport * as StockPilesCardsFeature from './stock-piles-cards.reducer';\nimport * as StockPilesCardsSelectors from './stock-piles-cards.selectors';\n\n@Injectable()\nexport class StockPilesCardsFacade {\n  /**\n   * Combine pieces of state using createSelector,\n   * and expose them as observables through the facade.\n   */\n  loaded$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsLoaded)\n  );\n  allStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getAllStockPilesCards)\n  );\n  selectedStockPilesCards$ = this.store.pipe(\n    select(StockPilesCardsSelectors.getStockPilesCardsSelected)\n  );\n\n  constructor(\n    private store: Store\n  ) {}\n\n  /**\n   * Use the initialization action to perform one\n   * or more tasks in your Effects.\n   */\n  initNewGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsNewGame());\n  }\n\n  initSavedGame(): void {\n    this.store.dispatch(StockPilesCardsActions.initStockPilesCardsSavedGame());\n  }\n\n  removeCardsFromStockPileTop(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.removeCardsFromStockPileTop({ pileId, cards })\n    );\n  }\n\n  addCardsToStockPileBottom(\n    pileId: string,\n    cards: Array\n  ): void {\n    this.store.dispatch(\n      StockPilesCardsActions.addCardsToStockPileBottom({ pileId, cards })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsPartialState.html":{"url":"interfaces/StockPilesCardsPartialState.html","title":"interface - StockPilesCardsPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            STOCK_PILES_CARDS_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        STOCK_PILES_CARDS_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STOCK_PILES_CARDS_FEATURE_KEY:         StockPilesCardsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockPilesCardsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockPilesCardsState.html":{"url":"interfaces/StockPilesCardsState.html","title":"interface - StockPilesCardsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockPilesCardsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                        \n                                            initialized\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as StockPilesCardsActions from './stock-piles-cards.actions';\nimport { StockPilesCardsEntity } from './stock-piles-cards.models';\n\nexport const STOCK_PILES_CARDS_FEATURE_KEY = 'stockPilesCards';\n\nexport interface StockPilesCardsState\n  extends EntityState {\n  selectedId?: string;\n  initialized: boolean;\n  loaded: boolean;\n  errorMsg?: string;\n}\n\nexport interface StockPilesCardsPartialState {\n  readonly [STOCK_PILES_CARDS_FEATURE_KEY]: StockPilesCardsState;\n}\n\n// eslint-disable-next-line max-len\nexport const stockPilesCardsAdapter: EntityAdapter = createEntityAdapter();\n\nexport const initialStockPilesCardsState: StockPilesCardsState = stockPilesCardsAdapter.getInitialState(\n  {\n    // set initial required properties\n    initialized: false,\n    loaded: false,\n  }\n);\n\nexport const stockPilesCardsReducer = createReducer(\n  initialStockPilesCardsState,\n  on(StockPilesCardsActions.initStockPilesCardsNewGame, (state) => ({\n    ...state,\n    initialized: false,\n  })),\n  on(StockPilesCardsActions.initStockPilesCardsSavedGame, (state) => ({\n    ...state,\n    loaded: false,\n    errorMsg: undefined,\n  })),\n  on(\n    StockPilesCardsActions.loadStockPilesCardsSuccess,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, { ...state, loaded: true })\n  ),\n  on(StockPilesCardsActions.loadStockPilesCardsFailure, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  })),\n  on(\n    StockPilesCardsActions.setStockPilesCardsInitialized,\n    (state, { stockPilesCards }) =>\n      stockPilesCardsAdapter.setAll(stockPilesCards, {\n        ...state,\n        initialized: true,\n      })\n  ),\n  on(StockPilesCardsActions.removeStockPilesCards, (state, { ids }) =>\n    stockPilesCardsAdapter.removeMany(ids, state)\n  ),\n  on(StockPilesCardsActions.addStockPilesCards, (state, { stockPilesCards }) =>\n    stockPilesCardsAdapter.addMany(stockPilesCards, state)\n  ),\n  on(StockPilesCardsActions.setStockPilesCardsError, (state, { error }) => ({\n    ...state,\n    errorMsg: error,\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiCardModule.html":{"url":"modules/UiCardModule.html","title":"module - UiCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UiCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_exports\n\n\n\ncluster_UiCardModule_declarations\n\n\n\ncluster_UiCardModule_imports\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardComponent->UiCardModule\n\n\n\n\n\nCardBackModule \n\nCardBackModule \n\nCardBackModule  -->\n\nUiCardModule->CardBackModule \n\n\n\n\n\nCardFrontModule \n\nCardFrontModule \n\nCardFrontModule  -->\n\nUiCardModule->CardFrontModule \n\n\n\n\n\nCardBackModule\n\nCardBackModule\n\nUiCardModule -->\n\nCardBackModule->UiCardModule\n\n\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nUiCardModule -->\n\nCardFrontModule->UiCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui-card/src/lib/ui-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardBackModule\n                        \n                        \n                            CardFrontModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardBackModule\n                        \n                        \n                            CardFrontModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CardComponent } from './card/card.component';\nimport { CardBackModule } from './card-back/card-back.module';\nimport { CardFrontModule } from './card-front/card-front.module';\n\n@NgModule({\n  imports: [CommonModule, CardBackModule, CardFrontModule],\n  declarations: [CardComponent],\n  exports: [CardBackModule, CardFrontModule],\n})\nexport class UiCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 14.0.4\n        \n            @angular/cdk : 14.0.4\n        \n            @angular/common : 14.0.4\n        \n            @angular/compiler : 14.0.4\n        \n            @angular/core : 14.0.4\n        \n            @angular/forms : 14.0.4\n        \n            @angular/material : 14.0.4\n        \n            @angular/platform-browser : 14.0.4\n        \n            @angular/platform-browser-dynamic : 14.0.4\n        \n            @angular/router : 14.0.4\n        \n            @ngrx/effects : 14.0.1\n        \n            @ngrx/entity : 14.0.1\n        \n            @ngrx/router-store : 14.0.1\n        \n            @ngrx/store : 14.0.1\n        \n            @nrwl/angular : 14.4.0\n        \n            @storybook/core-server : 6.4.22\n        \n            array-shuffle : ^2.0.0\n        \n            eslint-plugin-html : ^6.1.1\n        \n            rxjs : ^6.6.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : 0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionName   (libs/.../action.ts)\n                        \n                        \n                            AgglomerationType   (libs/.../agglomeration.ts)\n                        \n                        \n                            BuildingName   (libs/.../development.ts)\n                        \n                        \n                            DevelopmentType   (libs/.../development.ts)\n                        \n                        \n                            DiceId   (libs/.../dice.ts)\n                        \n                        \n                            DomainColor   (libs/.../domain.ts)\n                        \n                        \n                            EventName   (libs/.../event.ts)\n                        \n                        \n                            EventValue   (libs/.../dice.ts)\n                        \n                        \n                            GamePhase   (libs/.../phase.ts)\n                        \n                        \n                            LandType   (libs/.../resources.ts)\n                        \n                        \n                            MasteryPointsType   (libs/.../development.ts)\n                        \n                        \n                            ResourceType   (libs/.../resources.ts)\n                        \n                        \n                            RowValue   (libs/.../domain.ts)\n                        \n                        \n                            WarriorName   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/action.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionName\n                    \n                \n                        \n                            \n                                 Soothsayer\n                            \n                        \n                        \n                            \n                                Value : Soothsayer\n                            \n                        \n                        \n                            \n                                 Pathfinder\n                            \n                        \n                        \n                            \n                                Value : Pathfinder\n                            \n                        \n                        \n                            \n                                 Goldsmith\n                            \n                        \n                        \n                            \n                                Value : Goldsmith\n                            \n                        \n                        \n                            \n                                 TradeRoute\n                            \n                        \n                        \n                            \n                                Value : Trade route\n                            \n                        \n                        \n                            \n                                 Relocation\n                            \n                        \n                        \n                            \n                                Value : Relocation\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/agglomeration.ts\n    \n        \n            \n                \n                    \n                        \n                        AgglomerationType\n                    \n                \n                        \n                            \n                                 Road\n                            \n                        \n                        \n                            \n                                Value : ROAD\n                            \n                        \n                        \n                            \n                                 Hamlet\n                            \n                        \n                        \n                            \n                                Value : HAMLET\n                            \n                        \n                        \n                            \n                                 Town\n                            \n                        \n                        \n                            \n                                Value : TOWN\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/development.ts\n    \n        \n            \n                \n                    \n                        \n                        BuildingName\n                    \n                \n                        \n                            \n                                 Brickyard\n                            \n                        \n                        \n                            \n                                Value : Brickyard\n                            \n                        \n                        \n                            \n                                 Sawmill\n                            \n                        \n                        \n                            \n                                Value : Sawmill\n                            \n                        \n                        \n                            \n                                 Mill\n                            \n                        \n                        \n                            \n                                Value : Mill\n                            \n                        \n                        \n                            \n                                 Foundry\n                            \n                        \n                        \n                            \n                                Value : Foundry\n                            \n                        \n                        \n                            \n                                 Weaving\n                            \n                        \n                        \n                            \n                                Value : Weaving\n                            \n                        \n                        \n                            \n                                 Warehouse\n                            \n                        \n                        \n                            \n                                Value : Warehouse\n                            \n                        \n                        \n                            \n                                 Market\n                            \n                        \n                        \n                            \n                                Value : Market\n                            \n                        \n                        \n                            \n                                 TollBridge\n                            \n                        \n                        \n                            \n                                Value : Toll bridge\n                            \n                        \n                        \n                            \n                                 Monastery\n                            \n                        \n                        \n                            \n                                Value : Monastery\n                            \n                        \n                        \n                            \n                                 CommunityCenter\n                            \n                        \n                        \n                            \n                                Value : Community center\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DevelopmentType\n                    \n                \n                        \n                            \n                                 Building\n                            \n                        \n                        \n                            \n                                Value : BUILDING\n                            \n                        \n                        \n                            \n                                 Ship\n                            \n                        \n                        \n                            \n                                Value : SHIP\n                            \n                        \n                        \n                            \n                                 Warrior\n                            \n                        \n                        \n                            \n                                Value : WARRIOR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MasteryPointsType\n                    \n                \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Strength\n                            \n                        \n                        \n                            \n                                Value : STRENGTH\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        WarriorName\n                    \n                \n                        \n                            \n                                 Altair\n                            \n                        \n                        \n                            \n                                Value : Altaïr\n                            \n                        \n                        \n                            \n                                 Ezio\n                            \n                        \n                        \n                            \n                                Value : Ezio\n                            \n                        \n                        \n                            \n                                 Evie\n                            \n                        \n                        \n                            \n                                Value : Evie\n                            \n                        \n                        \n                            \n                                 Jacob\n                            \n                        \n                        \n                            \n                                Value : Jacob\n                            \n                        \n                        \n                            \n                                 Kassandra\n                            \n                        \n                        \n                            \n                                Value : Kassandra\n                            \n                        \n                        \n                            \n                                 Alexios\n                            \n                        \n                        \n                            \n                                Value : Alexios\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/dice.ts\n    \n        \n            \n                \n                    \n                        \n                        DiceId\n                    \n                \n                        \n                            \n                                 Resource\n                            \n                        \n                        \n                            \n                                Value : RESOURCE\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventValue\n                    \n                \n                        \n                            \n                                 Thieves\n                            \n                        \n                        \n                            \n                                Value : THIEVES\n                            \n                        \n                        \n                            \n                                 Trade\n                            \n                        \n                        \n                            \n                                Value : TRADE\n                            \n                        \n                        \n                            \n                                 Celebration\n                            \n                        \n                        \n                            \n                                Value : CELEBRATION\n                            \n                        \n                        \n                            \n                                 Harvest\n                            \n                        \n                        \n                            \n                                Value : HARVEST\n                            \n                        \n                        \n                            \n                                 Event\n                            \n                        \n                        \n                            \n                                Value : EVENT\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/domain.ts\n    \n        \n            \n                \n                    \n                        \n                        DomainColor\n                    \n                \n                        \n                            \n                                 Red\n                            \n                        \n                        \n                            \n                                Value : RED\n                            \n                        \n                        \n                            \n                                 Blue\n                            \n                        \n                        \n                            \n                                Value : BLUE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RowValue\n                    \n                \n                        \n                            \n                                 Lower\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Middle\n                            \n                        \n                        \n                            \n                                 Up\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Upper\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/event.ts\n    \n        \n            \n                \n                    \n                        \n                        EventName\n                    \n                \n                        \n                            \n                                 Festival\n                            \n                        \n                        \n                            \n                                Value : Festival\n                            \n                        \n                        \n                            \n                                 AuspiciousYear\n                            \n                        \n                        \n                            \n                                Value : Auspicious year\n                            \n                        \n                        \n                            \n                                 Hawker\n                            \n                        \n                        \n                            \n                                Value : Hawker\n                            \n                        \n                        \n                            \n                                 Invention\n                            \n                        \n                        \n                            \n                                Value : Invention\n                            \n                        \n                        \n                            \n                                 MerchantShipTravel\n                            \n                        \n                        \n                            \n                                Value : Merchant ship travel\n                            \n                        \n                        \n                            \n                                 Quarrel\n                            \n                        \n                        \n                            \n                                Value : Quarrel\n                            \n                        \n                        \n                            \n                                 SiblingRivalry\n                            \n                        \n                        \n                            \n                                Value : Sibling rivalry\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/phase.ts\n    \n        \n            \n                \n                    \n                        \n                        GamePhase\n                    \n                \n                        \n                            \n                                 InitialThrow\n                            \n                        \n                        \n                            \n                                Value : INITIAL THROW\n                            \n                        \n                        \n                            \n                                 InitialDraw\n                            \n                        \n                        \n                            \n                                Value : INITIAL DRAW\n                            \n                        \n                        \n                            \n                                 LoopThrow\n                            \n                        \n                        \n                            \n                                Value : LOOP THROW\n                            \n                        \n                        \n                            \n                                 LoopActions\n                            \n                        \n                        \n                            \n                                Value : LOOP ACTIONS\n                            \n                        \n                        \n                            \n                                 LoopDraw\n                            \n                        \n                        \n                            \n                                Value : LOOP DRAW\n                            \n                        \n                        \n                            \n                                 LoopExchange\n                            \n                        \n                        \n                            \n                                Value : LOOP EXCHANGE\n                            \n                        \n            \n        \n\n    libs/shared-models/src/lib/types/resources.ts\n    \n        \n            \n                \n                    \n                        \n                        LandType\n                    \n                \n                        \n                            \n                                 ClayPit\n                            \n                        \n                        \n                            \n                                Value : CLAYPIT\n                            \n                        \n                        \n                            \n                                 Forest\n                            \n                        \n                        \n                            \n                                Value : FOREST\n                            \n                        \n                        \n                            \n                                 GoldMine\n                            \n                        \n                        \n                            \n                                Value : GOLDMINE\n                            \n                        \n                        \n                            \n                                 Field\n                            \n                        \n                        \n                            \n                                Value : FIELD\n                            \n                        \n                        \n                            \n                                 StoneQuarry\n                            \n                        \n                        \n                            \n                                Value : STONEQUARRY\n                            \n                        \n                        \n                            \n                                 Pasture\n                            \n                        \n                        \n                            \n                                Value : PASTURE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 Clay\n                            \n                        \n                        \n                            \n                                Value : CLAY\n                            \n                        \n                        \n                            \n                                 Wood\n                            \n                        \n                        \n                            \n                                Value : WOOD\n                            \n                        \n                        \n                            \n                                 Gold\n                            \n                        \n                        \n                            \n                                Value : GOLD\n                            \n                        \n                        \n                            \n                                 Wheat\n                            \n                        \n                        \n                            \n                                Value : WHEAT\n                            \n                        \n                        \n                            \n                                 Stone\n                            \n                        \n                        \n                            \n                                Value : STONE\n                            \n                        \n                        \n                            \n                                 Wool\n                            \n                        \n                        \n                            \n                                Value : WOOL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBuilding   (libs/.../development.ts)\n                        \n                        \n                            createHamlet   (libs/.../agglomeration.ts)\n                        \n                        \n                            createRoad   (libs/.../agglomeration.ts)\n                        \n                        \n                            createShip   (libs/.../development.ts)\n                        \n                        \n                            createTown   (libs/.../agglomeration.ts)\n                        \n                        \n                            createWarrior   (libs/.../development.ts)\n                        \n                        \n                            eventFromValue   (libs/.../dice.ts)\n                        \n                        \n                            getImgSrc   (libs/.../assets.ts)\n                        \n                        \n                            getRandomEventDieValue   (libs/.../dice.ts)\n                        \n                        \n                            getRandomProductionDieValue   (libs/.../dice.ts)\n                        \n                        \n                            isActionCard   (libs/.../action.ts)\n                        \n                        \n                            isAgglomerationCard   (libs/.../agglomeration.ts)\n                        \n                        \n                            isCanPrint   (libs/.../print.ts)\n                        \n                        \n                            isDevelopmentCard   (libs/.../development.ts)\n                        \n                        \n                            isEventCard   (libs/.../event.ts)\n                        \n                        \n                            isHasName   (libs/.../name.ts)\n                        \n                        \n                            isLandCard   (libs/.../land.ts)\n                        \n                        \n                            mapDieToIconNameFront   (libs/.../assets.ts)\n                        \n                        \n                            mapDomainColorToDomainId   (libs/.../domain.ts)\n                        \n                        \n                            mapDomainColorToHandId   (libs/.../domain.ts)\n                        \n                        \n                            mapTypeToIconNameFront   (libs/.../assets.ts)\n                        \n                        \n                            randomDiceValue   (libs/.../dice.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/structures/development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBuilding\n                        \n                    \n                \n            \n            \n                \ncreateBuilding(id: string, name: BuildingName, cost: Map, tradePoints?: number, givesKnowledge?: boolean, noDuplicate?: boolean, victoryPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                BuildingName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tradePoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    givesKnowledge\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    noDuplicate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    victoryPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShip\n                        \n                    \n                \n            \n            \n                \ncreateShip(id: string, type: s/ShipName.html\" target=\"_self\">ShipNameKey)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                ShipNameKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWarrior\n                        \n                    \n                \n            \n            \n                \ncreateWarrior(id: string, name: WarriorName, cost: Map, strengthPoints?: number, celebrationPoints?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                WarriorName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    strengthPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    celebrationPoints\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDevelopmentCard\n                        \n                    \n                \n            \n            \n                \nisDevelopmentCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DevelopmentCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/agglomeration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createHamlet\n                        \n                    \n                \n            \n            \n                \ncreateHamlet(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRoad\n                        \n                    \n                \n            \n            \n                \ncreateRoad(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTown\n                        \n                    \n                \n            \n            \n                \ncreateTown(id: string, color?: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAgglomerationCard\n                        \n                    \n                \n            \n            \n                \nisAgglomerationCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AgglomerationCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/dice.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eventFromValue\n                        \n                    \n                \n            \n            \n                \neventFromValue(value: DiceValue)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DiceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomEventDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomEventDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         EventValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomProductionDieValue\n                        \n                    \n                \n            \n            \n                \ngetRandomProductionDieValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         ResourceValue\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomDiceValue\n                        \n                    \n                \n            \n            \n                \nrandomDiceValue()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         DiceValue\n\n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/assets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getImgSrc\n                        \n                    \n                \n            \n            \n                \ngetImgSrc(name: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDieToIconNameFront\n                        \n                    \n                \n            \n            \n                \nmapDieToIconNameFront(die: ResourceValue)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    die\n                                    \n                                                ResourceValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapTypeToIconNameFront\n                        \n                    \n                \n            \n            \n                \nmapTypeToIconNameFront(type: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isActionCard\n                        \n                    \n                \n            \n            \n                \nisActionCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/print.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCanPrint\n                        \n                    \n                \n            \n            \n                \nisCanPrint(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CanPrint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/event.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isEventCard\n                        \n                    \n                \n            \n            \n                \nisEventCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EventCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/interfaces/name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isHasName\n                        \n                    \n                \n            \n            \n                \nisHasName(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HasName\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-models/src/lib/structures/land.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLandCard\n                        \n                    \n                \n            \n            \n                \nisLandCard(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LandCard\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/shared-utils/src/lib/domain.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapDomainColorToDomainId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToDomainId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDomainColorToHandId\n                        \n                    \n                \n            \n            \n                \nmapDomainColorToHandId(domainColor: DomainColor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainColor\n                                    \n                                                DomainColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nTaormina\nThis project was generated using Nx.\nEnvironment\nGlobally installed packages\n├── @angular/cli@14.0.5\n├── corepack@0.10.0\n├── npm@8.13.2\n├── nx@14.4.2\n└── updtr@4.0.0Node version\nv16.16.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Laure-Hélène Bruneton\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardBackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardFrontModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataAccessGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DomainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureEngineModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureGameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HandModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_BoardModule_exports\n\n\n\ncluster_CardBackModule\n\n\n\ncluster_CardBackModule_declarations\n\n\n\ncluster_CardBackModule_exports\n\n\n\ncluster_CardFrontModule\n\n\n\ncluster_CardFrontModule_declarations\n\n\n\ncluster_CardFrontModule_exports\n\n\n\ncluster_DataAccessGameModule\n\n\n\ncluster_DataAccessGameModule_providers\n\n\n\ncluster_DiceModule\n\n\n\ncluster_DiceModule_declarations\n\n\n\ncluster_DiceModule_exports\n\n\n\ncluster_DomainModule\n\n\n\ncluster_DomainModule_declarations\n\n\n\ncluster_DomainModule_imports\n\n\n\ncluster_DomainModule_exports\n\n\n\ncluster_FeatureGameModule\n\n\n\ncluster_FeatureGameModule_exports\n\n\n\ncluster_HandModule\n\n\n\ncluster_HandModule_declarations\n\n\n\ncluster_HandModule_exports\n\n\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_declarations\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PilesModule\n\n\n\ncluster_PilesModule_declarations\n\n\n\ncluster_PilesModule_exports\n\n\n\ncluster_UiCardModule\n\n\n\ncluster_UiCardModule_declarations\n\n\n\ncluster_UiCardModule_exports\n\n\n\n\nActionsComponent\n\nActionsComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nActionsComponent->ActionsModule\n\n\n\n\n\nActionsComponent \n\nActionsComponent \n\nActionsComponent  -->\n\nActionsModule->ActionsComponent \n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nActionsModule->BoardModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nDataAccessGameModule\n\nDataAccessGameModule\n\nAppModule -->\n\nDataAccessGameModule->AppModule\n\n\n\n\n\nFeatureGameModule\n\nFeatureGameModule\n\nAppModule -->\n\nFeatureGameModule->AppModule\n\n\n\n\n\nBoardModule \n\nBoardModule \n\nBoardModule  -->\n\nFeatureGameModule->BoardModule \n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\nFeatureGameModule -->\n\nBoardModule->FeatureGameModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nBoardModule->BoardComponent \n\n\n\n\n\nDiceModule\n\nDiceModule\n\nBoardModule -->\n\nDiceModule->BoardModule\n\n\n\n\n\nDiceComponent \n\nDiceComponent \n\nDiceComponent  -->\n\nDiceModule->DiceComponent \n\n\n\n\n\nDomainModule\n\nDomainModule\n\nBoardModule -->\n\nDomainModule->BoardModule\n\n\n\n\n\nDomainComponent \n\nDomainComponent \n\nDomainComponent  -->\n\nDomainModule->DomainComponent \n\n\n\n\n\nHandModule\n\nHandModule\n\nBoardModule -->\n\nHandModule->BoardModule\n\n\n\n\n\nHandComponent \n\nHandComponent \n\nHandComponent  -->\n\nHandModule->HandComponent \n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nBoardModule -->\n\nPhasesModule->BoardModule\n\n\n\n\n\nPhasesComponent \n\nPhasesComponent \n\nPhasesComponent  -->\n\nPhasesModule->PhasesComponent \n\n\n\n\n\nPilesModule\n\nPilesModule\n\nBoardModule -->\n\nPilesModule->BoardModule\n\n\n\n\n\nPilesComponent \n\nPilesComponent \n\nPilesComponent  -->\n\nPilesModule->PilesComponent \n\n\n\n\n\nCardBackComponent\n\nCardBackComponent\n\n\n\nCardBackModule\n\nCardBackModule\n\nCardBackModule -->\n\nCardBackComponent->CardBackModule\n\n\n\n\n\nCardBackComponent \n\nCardBackComponent \n\nCardBackComponent  -->\n\nCardBackModule->CardBackComponent \n\n\n\n\n\nUiCardModule\n\nUiCardModule\n\nUiCardModule -->\n\nCardBackModule->UiCardModule\n\n\n\n\n\nCardFrontComponent\n\nCardFrontComponent\n\n\n\nCardFrontModule\n\nCardFrontModule\n\nCardFrontModule -->\n\nCardFrontComponent->CardFrontModule\n\n\n\n\n\nCardFrontComponent \n\nCardFrontComponent \n\nCardFrontComponent  -->\n\nCardFrontModule->CardFrontComponent \n\n\n\nUiCardModule -->\n\nCardFrontModule->UiCardModule\n\n\n\n\n\nAgglomerationPilesCardsFacade\n\nAgglomerationPilesCardsFacade\n\nDataAccessGameModule -->\n\nAgglomerationPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiscardPileCardsFacade\n\nDiscardPileCardsFacade\n\nDataAccessGameModule -->\n\nDiscardPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nDomainsCardsFacade\n\nDomainsCardsFacade\n\nDataAccessGameModule -->\n\nDomainsCardsFacade->DataAccessGameModule\n\n\n\n\n\nEventsPileCardsFacade\n\nEventsPileCardsFacade\n\nDataAccessGameModule -->\n\nEventsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nGameFacade\n\nGameFacade\n\nDataAccessGameModule -->\n\nGameFacade->DataAccessGameModule\n\n\n\n\n\nHandsCardsFacade\n\nHandsCardsFacade\n\nDataAccessGameModule -->\n\nHandsCardsFacade->DataAccessGameModule\n\n\n\n\n\nLandsPileCardsFacade\n\nLandsPileCardsFacade\n\nDataAccessGameModule -->\n\nLandsPileCardsFacade->DataAccessGameModule\n\n\n\n\n\nStockPilesCardsFacade\n\nStockPilesCardsFacade\n\nDataAccessGameModule -->\n\nStockPilesCardsFacade->DataAccessGameModule\n\n\n\n\n\nDiceComponent\n\nDiceComponent\n\nDiceModule -->\n\nDiceComponent->DiceModule\n\n\n\n\n\nDomainComponent\n\nDomainComponent\n\nDomainModule -->\n\nDomainComponent->DomainModule\n\n\n\nDomainModule -->\n\nUiCardModule->DomainModule\n\n\n\nPilesModule -->\n\nUiCardModule->PilesModule\n\n\n\n\n\nCardBackModule \n\nCardBackModule \n\nCardBackModule  -->\n\nUiCardModule->CardBackModule \n\n\n\n\n\nCardFrontModule \n\nCardFrontModule \n\nCardFrontModule  -->\n\nUiCardModule->CardFrontModule \n\n\n\n\n\nHandComponent\n\nHandComponent\n\nHandModule -->\n\nHandComponent->HandModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nPhasesModule -->\n\nPhasesComponent->PhasesModule\n\n\n\n\n\nPilesComponent\n\nPilesComponent\n\nPilesModule -->\n\nPilesComponent->PilesModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nUiCardModule -->\n\nCardComponent->UiCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0-0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs\n\n\n\nFilename\nline #\nTODO\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n617\ntest actions order: event > steal on thieves > production\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.ts\n71\nthrow error instead of filtering out undefined ?\n\n\n\nFIXMEs\n\n\n\nFilename\nline #\nFIXME\n\n\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n935\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n986\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1054\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1171\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1216\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1321\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1362\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1450\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1552\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1603\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1707\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1755\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1803\nshould test error thrown\n\n\nlibs/feature-engine/src/lib/game-rules.service.spec.ts\n1851\nshould test error thrown\n\n\n\nESLINT-DISABLE-NEXT-LINEs\n\n\n\nFilename\nline #\nESLINT-DISABLE-NEXT-LINE\n\n\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n812\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/test/fixtures/domains-cards.ts\n818\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/shared-models/src/lib/interfaces/name.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/interfaces/print.ts\n5\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/action.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/agglomeration.ts\n95\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/development.ts\n111\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/event.ts\n24\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/structures/land.ts\n37\n@typescript-eslint/no-explicit-any\n\n\nlibs/shared-models/src/lib/types/dice.ts\n1\nno-magic-numbers\n\n\nlibs/shared-models/src/lib/types/resources.ts\n19\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n82\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n116\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.effects.spec.ts\n120\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n53\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n66\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/agglomeration-piles-cards/agglomeration-piles-cards.selectors.ts\n74\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/discard-pile-cards/discard-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n99\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n103\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n125\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n129\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n191\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n195\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n229\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n233\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n258\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n262\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n294\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n298\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n333\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n337\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n371\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n375\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n400\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n404\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n913\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n917\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n951\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n955\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n980\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n984\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1076\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.spec.ts\n1134\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n87\nno-magic-numbers\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n106\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n220\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n243\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n394\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n73\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n85\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n138\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n155\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n165\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n175\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n185\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n195\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n234\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n379\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n391\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n395\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n404\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n413\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n424\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n431\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n443\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.selectors.ts\n452\n@typescript-eslint/no-non-null-assertion\n\n\nlibs/data-access-game/src/lib/+state/events-pile-cards/events-pile-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/game/game.effects.ts\n32\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.effects.spec.ts\n85\n@typescript-eslint/no-unused-vars\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.reducer.ts\n21\nmax-len\n\n\nlibs/data-access-game/src/lib/+state/stock-piles-cards/stock-piles-cards.selectors.ts\n49\n@typescript-eslint/explicit-function-return-type\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n60\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n73\nindent\n\n\nlibs/feature-game/src/lib/actions/actions/actions.component.ts\n99\nindent\n\n\n\nPRETTIER-IGNOREs\n\n\n\nFilename\nline #\nPRETTIER-IGNORE\n\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n159\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n161\n\n\n\nlibs/data-access-game/src/lib/+state/domains-cards/domains-cards.effects.ts\n332\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DiceValue   (libs/.../dice.ts)\n                        \n                        \n                            DomainCardType   (libs/.../domain.ts)\n                        \n                        \n                            ResourceCount   (libs/.../resources.ts)\n                        \n                        \n                            ResourceValue   (libs/.../dice.ts)\n                        \n                        \n                            ShipNameKey   (libs/.../development.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared-models/src/lib/types/dice.ts\n    \n    \n        \n            \n                \n                    \n                    DiceValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceValue\n                \n            \n            \n                \n                            DiceValue\n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/domain.ts\n    \n    \n        \n            \n                \n                    \n                    DomainCardType\n                \n            \n            \n                \n                         |  |  |  |  | \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/resources.ts\n    \n    \n        \n            \n                \n                    \n                    ResourceCount\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared-models/src/lib/types/development.ts\n    \n    \n        \n            \n                \n                    \n                    ShipNameKey\n                \n            \n            \n                \n                            ResourceType | \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
